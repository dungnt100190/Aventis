// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kiss4Web.Infrastructure.Authorization.Test.Rights
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "ref:[KiSS4.DB.Session.Open][Line:933-948]")]
    [Xunit.TraitAttribute("Category", "servicetest")]
    public partial class GetRightsFeature : Xunit.IClassFixture<GetRightsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "GetRights.feature"
#line hidden
        
        public GetRightsFeature(GetRightsFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetRights", null, ProgrammingLanguage.CSharp, new string[] {
                        "ref:[KiSS4.DB.Session.Open][Line:933-948]",
                        "servicetest"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
 #line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserID",
                        "LogonName",
                        "PasswordHash",
                        "FirstName",
                        "LastName",
                        "IsLocked"});
            table1.AddRow(new string[] {
                        "USR1",
                        "tst",
                        "8YQQYCmL9A6bGNbxJkAxS6q/IIQoJx+3OoEP4FJ/7bc=",
                        "Test",
                        "User",
                        "0"});
#line 5
 testRunner.Given("these Benutzer", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserGroupID",
                        "UserGroupName"});
            table2.AddRow(new string[] {
                        "UGR1",
                        "TestUserGroup"});
#line 8
 testRunner.And("these Benutzergruppen", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserGroupID",
                        "UserID"});
            table3.AddRow(new string[] {
                        "UGR1",
                        "USR1"});
#line 11
 testRunner.And("these BenutzerInBenutzergruppen", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "XClassID",
                        "ClassName",
                        "BaseType"});
            table4.AddRow(new string[] {
                        "CLS1",
                        "CtlUnitTest",
                        "KiSS4.Gui.KissUserControl"});
#line 14
 testRunner.And("these Klassen", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RightID",
                        "XClassID",
                        "ClassName",
                        "RightName",
                        "Description",
                        "UserText"});
            table5.AddRow(new string[] {
                        "RGT1",
                        "CLS1",
                        "CtlUnitTest",
                        "TestRightName",
                        "Just a little test right",
                        "And the corresponding UserText"});
#line 17
 testRunner.And("these Rechte", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserGroupID",
                        "RightID",
                        "XClassID",
                        "ClassName",
                        "MayInsert",
                        "MayUpdate",
                        "MayDelete"});
            table6.AddRow(new string[] {
                        "UGR1",
                        "NULL",
                        "CLS1",
                        "CtlUnitTest",
                        "true",
                        "true",
                        "false"});
            table6.AddRow(new string[] {
                        "UGR1",
                        "RGT1",
                        "CLS1",
                        "CtlUnitTest",
                        "false",
                        "false",
                        "false"});
#line 20
 testRunner.And("these RechteInBenutzergruppen", ((string)(null)), table6, "And ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Get rights of logged in user")]
        [Xunit.TraitAttribute("FeatureTitle", "GetRights")]
        [Xunit.TraitAttribute("Description", "Get rights of logged in user")]
        [Xunit.TraitAttribute("Category", "servicetest")]
        public virtual void GetRightsOfLoggedInUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get rights of logged in user", new string[] {
                        "servicetest"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 4
 this.FeatureBackground();
#line 27
 testRunner.When("I get my own rights", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("the call should be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassName",
                        "RightName",
                        "MayInsert",
                        "MayUpdate",
                        "MayDelete"});
            table7.AddRow(new string[] {
                        "CtlUnitTest",
                        "CtlUnitTest",
                        "true",
                        "true",
                        "false"});
            table7.AddRow(new string[] {
                        "CtlUnitTest",
                        "TestRightName",
                        "false",
                        "false",
                        "false"});
#line 29
 testRunner.And("the received rights should be", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GetRightsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GetRightsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
