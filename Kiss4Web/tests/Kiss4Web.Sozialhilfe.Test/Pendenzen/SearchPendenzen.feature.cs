// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Pendenzen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class SearchPendenzenFeature : Xunit.IClassFixture<SearchPendenzenFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "SearchPendenzen.feature"
#line hidden
        
        public SearchPendenzenFeature(SearchPendenzenFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SearchPendenzen", "\tSearch Pendenzen ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
 #line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserID",
                        "PermissionGroupID",
                        "GrantPermGroupID",
                        "LogonName",
                        "PasswordHash",
                        "FirstName",
                        "LastName",
                        "ShortName",
                        "IsLocked",
                        "IsUserAdmin",
                        "IsUserBIAGAdmin",
                        "IsMandatsTraeger",
                        "GenderCode",
                        "KeinBDEExport",
                        "MigUserFix",
                        "VerID"});
            table34.AddRow(new string[] {
                        "USR1",
                        "9",
                        "9",
                        "test_admin_1",
                        "kR9Y+JkxEwo=",
                        "CMC",
                        "Global",
                        "cg",
                        "0",
                        "1",
                        "1",
                        "0",
                        "1",
                        "0",
                        "0",
                        "257000"});
            table34.AddRow(new string[] {
                        "USR2",
                        "9",
                        "9",
                        "test_admin_2",
                        "kR9Y+JkxEwo=",
                        "CMC",
                        "Soft",
                        "cs",
                        "0",
                        "1",
                        "1",
                        "0",
                        "1",
                        "0",
                        "0",
                        "258000"});
#line 4
 testRunner.Given("these UserAdmin for SearchPendenzen feature", ((string)(null)), table34, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "XTaskID",
                        "BaPersonID",
                        "TaskStatusCode",
                        "TaskTypeCode",
                        "Subject",
                        "SenderID",
                        "ReceiverID",
                        "FaFallID",
                        "FaLeistungID",
                        "CreateDate",
                        "ExpirationDate",
                        "StartDate",
                        "DoneDate",
                        "TaskDescription",
                        "ResponseText",
                        "TaskReceiverCode",
                        "TaskSenderCode"});
            table35.AddRow(new string[] {
                        "TSK1",
                        "64807",
                        "1",
                        "4",
                        "Task 20180817-01",
                        "USR2",
                        "USR1",
                        "64807",
                        "98766",
                        "2018-01-10 00:00:00.000",
                        "2020-01-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-1 autotest",
                        "Task 20180817-1 text",
                        "1",
                        ""});
            table35.AddRow(new string[] {
                        "TSK2",
                        "65134",
                        "1",
                        "4",
                        "Task 20180817-02",
                        "USR2",
                        "USR1",
                        "64807",
                        "99137",
                        "2018-01-10 00:00:00.000",
                        "2018-05-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-2 autotest",
                        "Task 20180817-2 text",
                        "1",
                        ""});
            table35.AddRow(new string[] {
                        "TSK3",
                        "64807",
                        "2",
                        "6",
                        "Task 20180817-03",
                        "USR2",
                        "USR1",
                        "65134",
                        "99153",
                        "2018-01-10 00:00:00.000",
                        "2018-10-10 00:00:00.000",
                        "2018-04-10 00:00:00.000",
                        "",
                        "Task 20180817-3 autotest",
                        "Task 20180817-3 text",
                        "1",
                        ""});
            table35.AddRow(new string[] {
                        "TSK4",
                        "65134",
                        "2",
                        "4",
                        "Task 20180817-04",
                        "USR2",
                        "USR1",
                        "64807",
                        "98766",
                        "2018-01-10 00:00:00.000",
                        "2018-07-10 00:00:00.000",
                        "2018-06-10 00:00:00.000",
                        "",
                        "Task 20180817-4 autotest",
                        "Task 20180817-4 text",
                        "1",
                        ""});
            table35.AddRow(new string[] {
                        "TSK5",
                        "65134",
                        "1",
                        "6",
                        "Task 20180817-05",
                        "USR1",
                        "USR2",
                        "65659",
                        "99153",
                        "2018-01-10 00:00:00.000",
                        "2019-02-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-5 autotest",
                        "Task 20180817-5 text",
                        "1",
                        "1"});
            table35.AddRow(new string[] {
                        "TSK6",
                        "65139",
                        "2",
                        "6",
                        "Task 20180817-06",
                        "USR1",
                        "USR2",
                        "65659",
                        "98960",
                        "2018-01-10 00:00:00.000",
                        "2018-06-10 00:00:00.000",
                        "2018-03-10 00:00:00.000",
                        "",
                        "Task 20180817-6 autotest",
                        "Task 20180817-6 text",
                        "1",
                        "1"});
            table35.AddRow(new string[] {
                        "TSK7",
                        "65139",
                        "2",
                        "2",
                        "Task 20180817-07",
                        "USR1",
                        "USR2",
                        "65659",
                        "98960",
                        "2018-01-10 00:00:00.000",
                        "2018-09-10 00:00:00.000",
                        "2018-05-10 00:00:00.000",
                        "",
                        "Task 20180817-7 autotest",
                        "Task 20180817-7 text",
                        "1",
                        "1"});
            table35.AddRow(new string[] {
                        "TSK8",
                        "64807",
                        "2",
                        "4",
                        "Task 20180817-08",
                        "USR1",
                        "USR1",
                        "65134",
                        "99137",
                        "2018-01-10 00:00:00.000",
                        "2018-10-10 00:00:00.000",
                        "2018-05-10 00:00:00.000",
                        "",
                        "Task 20180817-8 autotest",
                        "Task 20180817-8 text",
                        "1",
                        "1"});
            table35.AddRow(new string[] {
                        "TSK9",
                        "64807",
                        "1",
                        "4",
                        "Task 20180817-09",
                        "USR2",
                        "USR1",
                        "65134",
                        "99137",
                        "2018-01-10 00:00:00.000",
                        "2018-11-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-9 autotest",
                        "Task 20180817-9 text",
                        "1",
                        "2"});
            table35.AddRow(new string[] {
                        "TSK10",
                        "65139",
                        "1",
                        "2",
                        "Task 20180817-10",
                        "USR2",
                        "USR1",
                        "64805",
                        "98761",
                        "2018-01-10 00:00:00.000",
                        "2018-12-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-10 autotest",
                        "Task 20180817-10 text",
                        "1",
                        "2"});
#line 24
 testRunner.And("these Tasks for SearchPendenzen feature", ((string)(null)), table35, "And ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Search Pendenzen")]
        [Xunit.TraitAttribute("FeatureTitle", "SearchPendenzen")]
        [Xunit.TraitAttribute("Description", "Search Pendenzen")]
        [Xunit.TraitAttribute("Category", "servicetest")]
        public virtual void SearchPendenzen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search Pendenzen", new string[] {
                        "servicetest"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 3
 this.FeatureBackground();
#line 50
 testRunner.Given("SearchPendenzen client has LogonName is test_admin_1, PasswordHash is 123456", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.And("menu item id for SearchPendenzen is 1_2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "IdStatus",
                        "IdPendenzTyp"});
            table36.AddRow(new string[] {
                        "1",
                        "4"});
#line 52
 testRunner.And("search condition", ((string)(null)), table36, "And ");
#line 58
 testRunner.When("call SearchPendenzen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExpirationDate",
                        "Subject",
                        "LeistungModul",
                        "FaFall",
                        "Fallnummer",
                        "PersonBP",
                        "Sender",
                        "Receiver",
                        "TaskStatusCode",
                        "CreateDate",
                        "StartDate",
                        "DoneDate",
                        "ResponseText"});
            table37.AddRow(new string[] {
                        "2020-01-10 00:00:00.000",
                        "Task 20180817-01",
                        "S",
                        "Sahli, Heidi (64807)",
                        "64807",
                        "Sahli, Heidi",
                        "NULL",
                        "test_admin_1 - Global, CMC",
                        "1",
                        "2018-01-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-1 text"});
            table37.AddRow(new string[] {
                        "2018-05-10 00:00:00.000",
                        "Task 20180817-02",
                        "S",
                        "de Lignie, Ivo (65659)",
                        "65659",
                        "Meier, Hans",
                        "NULL",
                        "test_admin_1 - Global, CMC",
                        "1",
                        "2018-01-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-2 text"});
            table37.AddRow(new string[] {
                        "2018-11-10 00:00:00.000",
                        "Task 20180817-09",
                        "S",
                        "de Lignie, Ivo (65659)",
                        "65659",
                        "Sahli, Heidi",
                        "NULL",
                        "test_admin_1 - Global, CMC",
                        "1",
                        "2018-01-10 00:00:00.000",
                        "",
                        "",
                        "Task 20180817-9 text"});
#line 59
 testRunner.Then("the list of found Task should be", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                SearchPendenzenFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                SearchPendenzenFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
