<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @ZustaendigKA INT;
DECLARE @StatusHeute INT;
DECLARE @HatEinsatz BIT;
DECLARE @SucheDatumVon DATETIME;
DECLARE @SucheDatumBis DATETIME;

--------------------------
-- Default-Werte für Suche
--------------------------
SET @SucheDatumVon = '17530101';
SET @SucheDatumBis = '99991231';
SET @StatusHeute = 3; -- aktiv und abgeschlossen

------------------------
-- Such-Werte übernehmen
------------------------
--- SET @ZustaendigKA = {edtZustaendigKA.LookupID};
--- SET @StatusHeute = {edtStatusHeute};
--- SET @HatEinsatz = {edtEinsatz};
--- SET @SucheDatumVon = {edtDatumVon};
--- SET @SucheDatumBis = {edtDatumBis};

SELECT
  [BaPersonID$] = TMP.BaPersonID,
  [Pers. Nr.] = TMP.BaPersonID,
  [Name] = TMP.NAME,
  [Vorname] = TMP.Vorname,
  [Alter] = TMP.[Alter],
  [KA-Programm] = TMP.KAProgramm,
  [Coach] = TMP.Coach,
  [Kurstyp] = TMP.ExtKurstyp,
  [Bezeichnung] = ISNULL(TMP.ExtBezeichnung, TMP.IntKursname),
  [Kursbeginn] = TMP.Kursbeginn,
  [Kursende] = TMP.Kursende,
  [Anzahl Kurstage] = TMP.Kurstage,
  [geplante Zahlungen] = TMP.GeplanteZahlungen,
  [erfolgte Zahlungen] = TMP.ErfolgteZahlungen,
  [Einsatz] = EIN.Einsatz
FROM (
  SELECT BaPersonID = EXT.BaPersonID,
         ExtBezeichnung = EXT.Bezeichnung,
         ExtKurstyp = dbo.fnLOVText('KaExterneBildungKurstyp', EXT.Kurstyp),
         IntKursname = NULL,
         Kursbeginn = EXT.DatumVon,
         Kursende = EXT.DatumBis,
         Kurstage = EXT.AnzahlKurstage,
         Name = PRS.Name,
         Vorname = PRS.Vorname,
         [Alter] = PRS.[Alter],
         KAProgramm = dbo.fnLOVText('KaVermittlungProgramm', EXT.KaProgrammCode),
         Coach = USR.NameVorname,
         GeplanteZahlungen = EXT.AnteilKA,
         ErfolgteZahlungen = (SELECT SUM(Betrag)
                              FROM dbo.KaExterneBildungZahlung WITH (READUNCOMMITTED)
                              WHERE KaExterneBildungID = EXT.KaExterneBildungID),
         FaLeistungID = LEI.FaLeistungID
  FROM dbo.KaExterneBildung   EXT WITH (READUNCOMMITTED)
    INNER JOIN dbo.FaLeistung LEI WITH (READUNCOMMITTED) ON EXT.FaLeistungID = LEI.FaLeistungID
    LEFT  JOIN dbo.vwPerson   PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
    LEFT  JOIN dbo.vwUser     USR WITH (READUNCOMMITTED) ON USR.UserID = LEI.UserID
  WHERE (LEI.FaLeistungID IS NULL OR LEI.FaProzessCode IN (705, 706))
    AND (@ZustaendigKA IS NULL OR LEI.UserID = @ZustaendigKA)
    AND dbo.fnDatumUeberschneidung(ISNULL(EXT.DatumVon, '17530101'), ISNULL(EXT.DatumBis, '99991231'), @SucheDatumVon, @SucheDatumBis) = 1
    AND (@StatusHeute = 3
         OR (@StatusHeute = 1 AND ISNULL(LEI.DatumBis, '99991231') &gt;= GETDATE())
         OR (@StatusHeute = 2 AND ISNULL(LEI.DatumBis, '99991231') &lt; GETDATE())
        )

  UNION ALL

  SELECT BaPersonID = IBI.BaPersonID,
         ExtBezeichnung = NULL,
         ExtKurstyp = NULL,
         IntKursname = KUE.KursNr + ISNULL(', ' + KUR.Name, ''),
         Kursbeginn = IBI.Eintritt,
         Kursende = IBI.Austritt,
         Kurstage = NULL,	
         Name = PRS.Name,
         Vorname = PRS.Vorname,
         [Alter] = PRS.[Alter],
         KAProgramm = dbo.fnLOVText('KaVermittlungProgramm', IBI.KaProgrammCode),
         Coach = USR.NameVorname,
         GeplanteZahlungen = NULL,
         ErfolgteZahlungen = NULL,
         FaLeistungID = LEI.FaLeistungID
  FROM dbo.KaIntegBildung         IBI WITH (READUNCOMMITTED)
    INNER JOIN dbo.FaLeistung     LEI WITH (READUNCOMMITTED) ON IBI.FaLeistungID = LEI.FaLeistungID
    LEFT JOIN dbo.vwPerson        PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
    LEFT JOIN dbo.vwUser          USR WITH (READUNCOMMITTED) ON USR.UserID = LEI.UserID
    LEFT JOIN dbo.KaKurserfassung KUE WITH (READUNCOMMITTED) ON KUE.KaKurserfassungID = IBI.KaKurserfassungID
    LEFT JOIN dbo.KaKurs          KUR WITH (READUNCOMMITTED) ON KUR.KaKursID = KUE.KursID
  WHERE (LEI.FaLeistungID IS NULL OR LEI.FaProzessCode IN (705, 706))
    AND (@ZustaendigKA IS NULL OR LEI.UserID = @ZustaendigKA)
    AND dbo.fnDatumUeberschneidung(ISNULL(IBI.Eintritt, '17530101'), ISNULL(IBI.Austritt, '99991231'), @SucheDatumVon, @SucheDatumBis) = 1
    AND (@StatusHeute = 3
         OR (@StatusHeute = 1 AND ISNULL(LEI.DatumBis, '99991231') &gt;= GETDATE())
         OR (@StatusHeute = 2 AND ISNULL(LEI.DatumBis, '99991231') &lt; GETDATE())
        )
) TMP
  OUTER APPLY (SELECT Einsatz = CONVERT(BIT, ISNULL((SELECT TOP 1 1
                                                     FROM dbo.KaVermittlungEinsatz KVE
                                                       INNER JOIN dbo.KaVermittlungVorschlag KVV ON KVV.KaVermittlungVorschlagID = KVE.KaVermittlungVorschlagID
                                                     WHERE KVV.FaLeistungID = TMP.FaLeistungID
                                                       AND KVE.EinsatzVon IS NOT NULL), 0))) EIN
WHERE @HatEinsatz IS NULL
   OR EIN.Einsatz = @HatEinsatz
ORDER BY [Name], [Vorname];
</value>
  </data>
  <metadata name="qryExtBildung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>119, 17</value>
  </metadata>
  <data name="qryExtBildung.SelectStatement" xml:space="preserve">
    <value>DECLARE @ZustaendigKA INT;
DECLARE @StatusHeute INT;
DECLARE @HatEinsatz BIT;
DECLARE @SucheDatumVon DATETIME;
DECLARE @SucheDatumBis DATETIME;

--------------------------
-- Default-Werte für Suche
--------------------------
SET @SucheDatumVon = '17530101';
SET @SucheDatumBis = '99991231';
SET @StatusHeute = 3; -- aktiv und abgeschlossen

------------------------
-- Such-Werte übernehmen
------------------------
--- SET @ZustaendigKA = {edtZustaendigKA.LookupID};
--- SET @StatusHeute = {edtStatusHeute};
--- SET @HatEinsatz = {edtEinsatz};
--- SET @SucheDatumVon = {edtDatumVon};
--- SET @SucheDatumBis = {edtDatumBis};

;WITH KaExterneBildung_CTE AS (
  SELECT
    KaExterneBildungID = EXT.KaExterneBildungID,
    AnzahlKurstage     = EXT.AnzahlKurstage,
    AnteilKA           = EXT.AnteilKA
  FROM dbo.KaExterneBildung   EXT WITH (READUNCOMMITTED)
    INNER JOIN dbo.FaLeistung LEI WITH (READUNCOMMITTED) ON LEI.FaLeistungID = EXT.FaLeistungID
  WHERE (@ZustaendigKA IS NULL OR LEI.UserID = @ZustaendigKA)
    AND dbo.fnDatumUeberschneidung(ISNULL(EXT.DatumVon, '17530101'), ISNULL(EXT.DatumBis, '99991231'), @SucheDatumVon, @SucheDatumBis) = 1
    AND (@StatusHeute = 3
         OR (@StatusHeute = 1 AND ISNULL(LEI.DatumBis, '99991231') &gt;= GETDATE()) -- aktive
         OR (@StatusHeute = 2 AND ISNULL(LEI.DatumBis, '99991231') &lt; GETDATE()) -- abgeschlossen
        )
    AND (@HatEinsatz IS NULL
         OR CONVERT(BIT, ISNULL((SELECT TOP 1 1
                                 FROM dbo.KaVermittlungEinsatz KVE
                                   INNER JOIN dbo.KaVermittlungVorschlag KVV ON KVV.KaVermittlungVorschlagID = KVE.KaVermittlungVorschlagID
                                 WHERE KVV.FaLeistungID = LEI.FaLeistungID), 0)) = @HatEinsatz
        )
)
SELECT [Jahr] = YEAR(@SucheDatumVon),
       [Kurstage] = SUM(EXT.AnzahlKurstage),
       [geplante Zahlungen] = SUM(EXT.AnteilKA),
       [erfolgte Zahlungen] = (SELECT SUM(BIL.Betrag)
                               FROM dbo.KaExterneBildungZahlung BIL WITH (READUNCOMMITTED) 
                               WHERE KaExterneBildungID IN (SELECT KaExterneBildungID
                                                            FROM KaExterneBildung_CTE))
FROM KaExterneBildung_CTE EXT;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>57</value>
  </metadata>
</root>