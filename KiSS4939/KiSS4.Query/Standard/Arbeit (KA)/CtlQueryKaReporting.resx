<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @tmp TABLE
(
 ID INT IDENTITY PRIMARY KEY (ID),
 BaPersonID INT,
 KaEinsatzID INT,
 [Name] VARCHAR(100),
 Vorname VARCHAR(100),
 [Arbeitsplatz-Nummer] VARCHAR(50),
 [Art. 59d] BIT,
 [AHV-Nr.] VARCHAR(16),
 [Vers.-Nr.] VARCHAR(20),
 [BG%] VARCHAR(10),
 [Datum Eintritt] DATETIME,
 [Datum verfügt bis] DATETIME,
 [Datum Austritt] DATETIME,
 [Code Austritt] VARCHAR(10),
 [Präsenztage kumuliert] INT,
 Ausweisart VARCHAR(100) 
)

DECLARE @tmp2 TABLE
(
 ID INT IDENTITY PRIMARY KEY (ID),
 BaPersonID INT,
 DatumVon DATETIME,
 DatumBis DATETIME,
 CodeAustritt VARCHAR(10) 
)

INSERT INTO @tmp
  SELECT KAE.BaPersonID,
         KAE.KaEinsatzID,
         Name = PRS.Name,
         Vorname = PRS.Vorname,
         [Arbeitsplatz-Nummer] = dbo.fnLOVText('KaAPV', ESP.APVCode),
         [Art. 59d] = CASE KAE.APVZusatzCode
                        WHEN 2 THEN CONVERT(BIT, 1)
                        ELSE CONVERT(BIT, 0)
                      END,
         [AHV-Nr.] = PRS.AHVNummer,
         [Vers.-Nr.] = PRS.Versichertennummer,
         [BG%] = CONVERT(VARCHAR, KAE.BeschGrad) + '%',
         [Datum Eintritt] = KAE.DatumVon,
         [Datum verfügt bis] = KAE.DatumBis,
         [Datum Austritt] = ISNULL(AUS.AustrittDatum, KAE.DatumBis),
         [Code Austritt] = AUS.AustrittCodeTextKurz,
         [Präsenztage kumuliert] = CONVERT(INT, ROUND(((SELECT COUNT(*)
                                                        FROM dbo.KaArbeitsrapport KAR WITH (READUNCOMMITTED)
                                                        WHERE KAR.BaPersonID = KAE.BaPersonID
                                                          AND KAR.KaEinsatzID = KAE.KaEinsatzID
                                                      --- AND KAR.Datum &gt;= {edtDatumVon}
                                                      --- AND KAR.Datum &lt;= {edtDatumBis}
                                                               AND KAR.AM_AnwCode = 10)
                                                       + (SELECT COUNT(*)
                                                          FROM dbo.KaArbeitsrapport KAR WITH (READUNCOMMITTED)
                                                          WHERE KAR.BaPersonID = KAE.BaPersonID
                                                            AND KAR.KaEinsatzID = KAE.KaEinsatzID
                                                        --- AND KAR.Datum &gt;= {edtDatumVon}
                                                        --- AND KAR.Datum &lt;= {edtDatumBis}
                                                            AND KAR.PM_AnwCode = 10)
                                                       + (SELECT COUNT(*)
                                                          FROM dbo.KaArbeitsrapport KAR WITH (READUNCOMMITTED)
                                                          WHERE KAR.BaPersonID = KAE.BaPersonID
                                                            AND KAR.KaEinsatzID = KAE.KaEinsatzID
                                                        --- AND KAR.Datum &gt;= {edtDatumVon}
                                                        --- AND KAR.Datum &lt;= {edtDatumBis}
                                                            AND KAR.AM_AnwCode = 9)
                                                       + (SELECT COUNT(*)
                                                          FROM dbo.KaArbeitsrapport KAR WITH (READUNCOMMITTED)
                                                          WHERE KAR.BaPersonID = KAE.BaPersonID
                                                            AND KAR.KaEinsatzID = KAE.KaEinsatzID
                                                        --- AND KAR.Datum &gt;= {edtDatumVon}
                                                        --- AND KAR.Datum &lt;= {edtDatumBis}
                                                            AND KAR.PM_AnwCode = 9) + 0.5) / 2, 0)),
         Ausweisart = dbo.fnLOVText('Aufenthaltsstatus', PRS.AuslaenderStatusCode)
  FROM dbo.KaEinsatz              KAE WITH (READUNCOMMITTED)
    LEFT JOIN dbo.vwPerson        PRS                        ON PRS.BaPersonID = KAE.BaPersonID
    LEFT JOIN dbo.KaEinsatzplatz2 ESP WITH (READUNCOMMITTED) ON ESP.KaEinsatzplatzID = KAE.KaEinsatzplatzID
    OUTER APPLY dbo.fnKaGetAustrittDatumCode(KAE.FaLeistungID, KAE.KaEinsatzID) AUS
  WHERE KAE.AnweisungCode &lt;&gt; 1
--- AND KAE.APVZusatzCode = {edtZusatzCode}
--- AND (AUS.AustrittDatum &gt;= {edtDatumVon} OR (AUS.AustrittDatum IS NULL AND (KAE.DatumBis &gt;= {edtDatumVon} OR KAE.DatumBis IS NULL)))
--- AND KAE.DatumVon &lt;= {edtDatumBis}
--- AND KAE.KaEinsatzplatzID IN (SELECT KEP.KaEinsatzplatzID FROM dbo.KaEinsatzplatz2 KEP WITH (READUNCOMMITTED) WHERE KEP.ProfilCode = {edtProfilCode})

SELECT BaPersonID$ = BaPersonID,
       [Name],
       [Vorname],
       [Arbeitsplatz-Nummer],
       [Art. 59d],
       [AHV-Nr.],
       [Vers.-Nr.],
       [BG%],
       [Datum Eintritt],
       [Datum verfügt bis],
       [Datum Austritt],
       [Code Austritt],
       [Präsenztage kumuliert],
       [Ausweisart]
FROM @tmp
ORDER BY [Name], [Vorname], [Datum Eintritt] ASC;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABbSURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2Gc
        GtLSGP4jY5BikEEYmgjZANIAUgO3CZcGZGdi1YDuJBgfpJE6NmALKZjYqJPIijh8KRYmhzXlEhIEANZ8
        ev1ASni6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>