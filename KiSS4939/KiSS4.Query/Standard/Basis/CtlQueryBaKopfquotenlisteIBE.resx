<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @IsAktiveQuote INT
DECLARE @IsPassiveQuote INT
DECLARE @DatumVon datetime
DECLARE @DatumBis datetime

DECLARE @Person TABLE (
    BaPersonId int,
    UserID     int
  )

SET @IsAktiveQuote = 0
--- SET @IsAktiveQuote = {edtNurAktiveQuote}
SET @IsPassiveQuote = 0
--- SET @IsPassiveQuote = {edtNurPassiveQuote}
SET @DatumVon = convert(datetime, '01.01.1900', 104)
--- SET @DatumVon = {edtDatumVon}
SET @DatumBis = convert(datetime, '01.01.9999', 104)
--- SET @DatumBis = {edtDatumBis}

INSERT INTO @Person
  SELECT PRS.BaPersonID, FAL.UserID
  FROM dbo.BaPerson PRS WITH (READUNCOMMITTED)    
    LEFT JOIN  dbo.FaLeistung FAL    WITH (READUNCOMMITTED) ON FAL.BaPersonID = PRS.BaPersonID 
                                                            AND FAL.ModulID = 2
                                                            AND FAL.DatumVon = (SELECT MAX(DatumVon) 
                                                                FROM   dbo.FaLeistung WITH (READUNCOMMITTED)
                                                                WHERE  BaPersonID = PRS.BaPersonID 
                                                                AND    ModulID = 2)
  WHERE (@IsAktiveQuote = 0 OR PRS.AktiveKopfQuote = 1)
  AND (@IsPassiveQuote = 0 OR PRS.PassiveKopfQuote = 1)
  AND (PRS.KopfquoteBisDatum IS NULL OR PRS.KopfquoteBisDatum &gt;= @DatumVon)
  AND (PRS.KopfquoteAbDatum IS NULL OR PRS.KopfquoteAbDatum &lt;= @DatumBis)
--- AND PRS.BaPersonID = {edtBaPersonID.LookupID}
--- AND PRS.NNummer like '%' + {edtNNr} + '%'
--- AND PRS.ZEMISNummer like '%' + {edtZemisNr} + '%'


DECLARE @baPersID INT
DECLARE @userID   INT

DECLARE CursorPersons CURSOR FAST_FORWARD FOR
    SELECT FFP.BaPersonID, FAL.UserID
    FROM FaFallPerson FFP
        INNER JOIN FaFall     LEI ON LEI.FaFallID = FFP.FaFallID
        INNER JOIN FaLeistung FAL ON FAL.BaPersonID = LEI.BaPersonID 
                                      AND FAL.ModulID = 2
                                      AND FAL.DatumVon = (SELECT MAX(DatumVon) 
                                                          FROM   dbo.FaLeistung WITH (READUNCOMMITTED)
                                                          WHERE  BaPersonID = LEI.BaPersonID 
                                                          AND    ModulID = 2)        
    WHERE 1 = 1
--- AND FFP.BaPersonID = {edtBaPersonID.LookupID}

OPEN CursorPersons
  WHILE 1=1 BEGIN
    FETCH NEXT FROM CursorPersons INTO @baPersID, @userID
    IF @@FETCH_STATUS &lt;&gt; 0 BREAK

    UPDATE @Person SET UserID = @userID WHERE BaPersonId = @baPersID

  END
CLOSE CursorPersons
DEALLOCATE CursorPersons


SELECT BaPersonID$      = PRS.BaPersonID,
    [N-Nr]              = PRS.NNummer,
    [Personen-Nr]       = PRS.BaPersonID,
    [ZEMIS-Nr]          = PRS.ZEMISNummer,
    [Klient]            = PRS.Name + IsNull(', ' + PRS.Vorname, ''),
    [aktive Kopfquote]  = CONVERT(BIT, IsNull(PRS.AktiveKopfQuote, 0)),
    [passive Kopfquote] = CONVERT(BIT, IsNull(PRS.PassiveKopfQuote, 0)),
    [zuständiger SAR] = USR.LastName + IsNull(', ' + USR.FirstName, '')
FROM @Person P
    INNER JOIN dbo.BaPerson   PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = P.BaPersonID     
    LEFT JOIN  dbo.XUser      USR WITH (READUNCOMMITTED) ON USR.UserID = P.UserID
WHERE 1 = 1
--- AND P.UserID = {edtUserID.LookupID}
ORDER BY PRS.Name, PRS.Vorname</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>