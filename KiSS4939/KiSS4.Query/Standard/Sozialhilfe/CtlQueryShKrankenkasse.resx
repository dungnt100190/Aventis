<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @DatumVon DATETIME;
DECLARE @DatumBis DATETIME;

SET @DatumVon = GetDate();
SET @DatumBis = GetDate();
--- SET @DatumVon = {edtDatumVon.EditValue}
--- SET @DatumBis = {edtDatumBis.EditValue}

SELECT  
  Sektion      = ORG.ItemName,
  SAR          = USR.LastName + isNull(', ' + USR.FirstName,''),  
  BaPersonID$  = PRS.BaPersonID,
  Titel        = PRS.Titel,
  Person       = PRS.NameVorname,
  Geburtsdatum = PRS.Geburtsdatum,
  [KVG Mitglieder Nr.] = (SELECT TOP 1 KVGMitgliedNr FROM BaGesundheit WHERE BaPersonID = BPO.BaPersonID AND Jahr &lt;= Year(COALESCE(BPO.DatumVon, FPL.DatumVon, FPL.GeplantVon)) ORDER BY Jahr),
  [VVG Mitglieder Nr.] = (SELECT TOP 1 VVGMitgliedNr FROM BaGesundheit WHERE BaPersonID = BPO.BaPersonID AND Jahr &lt;= Year(COALESCE(BPO.DatumVon, FPL.DatumVon, FPL.GeplantVon)) ORDER BY Jahr),
  [KVG Prämie effektiv] = BPO.Betrag,
  [VVG Prämie effektiv] = PUK.Betrag,
  [KVG Kasse]  = KVG.Name,
  [VVG Kasse]  = VVG.Name,
  [VVG Betrag wird durch SD übernommen] = CONVERT(bit, CASE WHEN PUK_POA.BgPositionsartCode = 32022 THEN 1 ELSE 0 END),
  [KVG Red.]   = BPO.Reduktion,
  [VVG Red.]   = PUK.Reduktion,
  [Strasse &amp; Hausnummer] = PRS.WohnsitzStrasseHausNr,
  [Postleitzahl &amp; Ort] = PRS.WohnsitzPLZOrt,
  Versichertennummer   = PRS.Versichertennummer
FROM dbo.BgPosition              BPO     WITH(READUNCOMMITTED)
  INNER JOIN dbo.BgBudget        BDG     WITH(READUNCOMMITTED) ON BDG.BgBudgetID = BPO.BgBudgetID
                                                              AND BDG.Masterbudget = 1
  INNER JOIN dbo.BgFinanzplan    FPL     WITH(READUNCOMMITTED) ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.WhPositionsart  SPT     WITH(READUNCOMMITTED) ON SPT.BgPositionsartID = BPO.BgPositionsartID
  INNER JOIN dbo.FaLeistung      FAL     WITH(READUNCOMMITTED) ON FAL.FaLeistungID = FPL.FaLeistungID
  LEFT  JOIN dbo.XUser           USR     WITH(READUNCOMMITTED) ON USR.UserID = FAL.UserID
  LEFT  JOIN dbo.XOrgUnit_User   OUU     WITH (READUNCOMMITTED) ON OUU.UserID = FAL.UserID
                                                               AND OUU.OrgUnitMemberCode = 2
  LEFT  JOIN dbo.XOrgUnit        ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
  LEFT  JOIN dbo.vwPerson        PRS     WITH(READUNCOMMITTED) ON PRS.BaPersonID = BPO.BaPersonID
  LEFT  JOIN dbo.BgPosition      PUK     WITH(READUNCOMMITTED) ON PUK.BgBudgetID = BPO.BgBudgetID 
                                                              AND PUK.BgPositionID_Parent = BPO.BgPositionID
  LEFT  JOIN dbo.BgPositionsart  PUK_POA WITH(READUNCOMMITTED) ON PUK_POA.BgPositionsartID = PUK.BgPositionsartID
                                                              AND PUK_POA.BgPositionsartCode IN (32021, 32022)
  LEFT  JOIN dbo.BaInstitution   KVG     WITH(READUNCOMMITTED) ON KVG.BaInstitutionID = BPO.BaInstitutionID
  LEFT  JOIN dbo.BaInstitution   VVG     WITH(READUNCOMMITTED) ON VVG.BaInstitutionID = PUK.BaInstitutionID
WHERE 1=1
AND ((PUK.BgPositionID IS NOT NULL AND PUK_POA.BgPositionsartID IS NOT NULL) OR PUK.BgPositionID IS NULL) -- required to have same result as before terminating POAs
AND FAL.DatumBis IS NULL
AND (SPT.BgPositionsartCode = 32020 OR SPT.BgPositionsartCode BETWEEN 32121 AND 32130)
AND (BPO.DatumVon IS NULL OR BPO.DatumBis IS NULL OR BPO.DatumVon &lt; BPO.DatumBis)
AND (BPO.Betrag &lt;&gt; 0.00 OR PUK.Betrag &lt;&gt; 0.00)
AND @DatumBis &gt;= COALESCE(BPO.DatumVon, FPL.DatumVon, FPL.GeplantVon) 
AND @DatumVon &lt;= COALESCE(BPO.DatumBis, FPL.DatumBis, FPL.GeplantBis)
--- AND FAL.UserID = {edtUserID.LookupID}
--- AND (OUU.OrgUnitID = {edtOrgUnitID} OR ORG.ParentID = {edtOrgUnitID})
--- AND (KVG.Name like '%' + {edtKrankenkasse} + '%' OR VVG.Name like '%' + {edtKrankenkasse} + '%')
--- AND PRS.BaPersonID = {edtBaPersonID.LookupID}
ORDER BY PRS.NameVorname, BPO.DatumVon

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>