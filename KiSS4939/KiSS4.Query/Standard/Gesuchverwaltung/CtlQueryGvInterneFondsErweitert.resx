<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @KST VARCHAR(150);
DECLARE @KGS VARCHAR(100);
DECLARE @Mitarbeiter INT;
DECLARE @ValutaVon DATETIME;
DECLARE @ValutaBis DATETIME;
DECLARE @EntscheidVon DATETIME;
DECLARE @EntscheidBis DATETIME;
DECLARE @AbschlussVon DATETIME;
DECLARE @AbschlussBis DATETIME;
DECLARE @ErfassungVon DATETIME;
DECLARE @ErfassungBis DATETIME;
DECLARE @HauptBehinderungsart INT;
DECLARE @BSVBehinderungsart INT;
DECLARE @NurFLB BIT;
DECLARE @FondsID INT;
DECLARE @LanguageCode INT;

--SET @LanguageCode = 1;
SET @LanguageCode = {0};

---SET @KST = {ctlKGSKostenstelleSAR.EdtSucheKostenstelle};
---SET @KGS = {ctlKGSKostenstelleSAR.EdtSucheKGS};
---SET @Mitarbeiter = {ctlKGSKostenstelleSAR.EdtSucheMitarbeiter};
---SET @ValutaVon = {edtSucheZeitraumValutaVon};
---SET @ValutaBis = {edtSucheZeitraumValutaBis};
---SET @EntscheidVon = {edtSucheZeitraumEntscheidVon};
---SET @EntscheidBis = {edtSucheZeitraumEntscheidBis};
---SET @AbschlussVon = {edtSucheZeitraumAbschlussVon};
---SET @AbschlussBis = {edtSucheZeitraumAbschlussBis};
---SET @ErfassungVon = {edtSucheZeitraumErfassungVon};
---SET @ErfassungBis = {edtSucheZeitraumErfassungBis};
---SET @HauptBehinderungsart = {edtSucheHauptbehinderungsart};
---SET @BSVBehinderungsart = {edtSucheBsvBehinderungsart};
SET @NurFLB = 0;
---SET @NurFLB = {chkSucheNurFlb};
---SET @FondsID = {edtSucheFonds};

SELECT 
  [Gesuchs-ID]                 = GGE.GvGesuchID,
  [Gesuchsbezeichnung]         = GGE.Gesuchsgrund,
  [Abklärende Stelle]          = CASE 
                                  WHEN AKS.BeantragendeStelle IS NOT NULL THEN AKS.BeantragendeStelle + ' ' + AKS.Ort + ' '
                                  ELSE ISNULL(CONVERT(VARCHAR, ORG.Kostenstelle) + ' ', '') + ORG.ItemName + ' '
                                 END,
  [Autor]                      = ISNULL(AKS.Kontaktperson, USR.NameVorname),
  [Kostenart]                  = KOA.KontoNr,
  [Positionsart]               = dbo.fnGetMLTextByDefault(GPA.BezeichnungTID, @LanguageCode, GPA.Bezeichnung),
  [Ausbezahlter Betrag]        = BUC.Betrag,
  [Valutadatum Ausbez. Betrag] = BUC.ValutaDatum,
  [Fonds]                      = GFD.NameLang,
  [Status]                     = dbo.fnGetLOVMLText('GvStatus', GGE.GvStatusCode, @LanguageCode),
  [Beantragter Betrag]         = ISNULL((SELECT SUM(Betrag)
                                         FROM dbo.GvAntragPosition GAN WITH (READUNCOMMITTED)
                                         WHERE GAN.GvGesuchID = GGE.GvGesuchID
                                           AND GAN.GvAntragPositionTypCode = 2), 0.0), -- beantragter Betrag
  [Bewilligter Betrag]         = ISNULL(GGE.BetragBewilligt, 0),
  [Entscheiddatum]             = GGE.BewilligtAm,
  [Entscheider]                = BEW.NameVorname,
  [Erfassungsdatum Gesuch]     = GGE.GesuchsDatum,
  [Bearbeitungsdatum]          = GGE.ErfassungAbgeschlossen,
  [Bearbeitungstage]           = DATEDIFF(DAY, GGE.ErfassungAbgeschlossen, GGE.BewilligtAm),
  [Abschlussdatum]             = GGE.AbschlussDatum,
  [Pers.-Nr.]                  = PRS.BaPersonID,
  [Name]                       = PRS.Name,
  [Vorname]                    = PRS.Vorname,
  [PLZ]                        = PRS.WohnsitzPLZ,
  [Ort]                        = PRS.WohnsitzOrt,
  [Bezirk]                     = PRS.WohnsitzBezirk,
  [Kanton]                     = PRS.WohnsitzKanton,
  [Nationalität]               = PRS.Nationalitaet,
  [Geschlecht]                 = dbo.fnLOVMLText('Geschlecht', PRS.GeschlechtCode, @LanguageCode),
  [Geb.Dat.]                   = PRS.Geburtsdatum,
  [Alter]                      = PRS.[Alter],
  [Vers.-Nr.]                  = PRS.VersichertenNummer,
  [Hauptbehinderungsart]       = dbo.fnLOVMLText('BaBehinderungsart', PRS.HauptBehinderungsartCode, @LanguageCode),
  [BSV-Behinderungsart]        = dbo.fnLOVMLText('BaBSVBehinderungsart', PRS.BSVBehinderungsartCode, @LanguageCode),
  [IV Berechtigung]            = dbo.fnGetLOVMLText('BaIVBerechtigung', dbo.fnBaGetIVBerechtigungStatus(PRS.BaPersonID, GGE.GesuchsDatum, 0), @LanguageCode),
  [IV Status]                  = dbo.fnGetLOVMLText('BaIVBerechtigung', dbo.fnBaGetIVBerechtigungStatus(PRS.BaPersonID, GGE.GesuchsDatum, 1), @LanguageCode),--dbo.fnLOVMLText('BaIVBerechtigung', PRS.IVBerechtigungAnfangsStatusCode, @LanguageCode),
  [Rentenstufe]                = dbo.fnLOVMLText('BaRentenstufe', PRS.RentenstufeCode, @LanguageCode),
  [IV-Grad]                    = PRS.IVGrad,
  [Hilflosenentschädigung]     = dbo.fnLOVMLText('BaHilfslosenEntschaedigung', PRS.HilfslosenEntschaedigungCode, @LanguageCode),
  [HELB-Entscheid]             = dbo.fnGetLOVMLText('BaHELBEntscheid', PRS.HELBEntscheidCode, @LanguageCode),
  [Intensevpflegezuschlag]     = dbo.fnLOVMLText('BaIntensivpflegeZuschlag', PRS.IntensivPflegeZuschlagCode, @LanguageCode),
  [Ergänzungsleistungen]       = PRS.ErgaenzungsLeistungen,
  [Haushaltsgrösse]            = (SELECT COUNT(1) + 1
                                  FROM dbo.BaPerson_Relation  BRE  WITH (READUNCOMMITTED)
                                    INNER JOIN dbo.BaPerson   PRS1 WITH (READUNCOMMITTED) ON PRS1.BaPersonID = BRE.BaPersonID_1 
                                                                                          OR PRS1.BaPersonID = BRE.BaPersonID_2
                                  WHERE (BRE.BaPersonID_1 = PRS.BaPersonID OR BRE.BaPersonID_2 = PRS.BaPersonID)
                                    AND PRS1.BaPersonID != PRS.BaPersonID
                                    AND dbo.fnBaGleicheAdresse(PRS.BaPersonID, PRS1.BaPersonID, 1, NULL) = 1),
  [Kostenstelle]               = dbo.fnCombineKSTOrgUnitItemName(ORG.Kostenstelle, ORG.ItemName),
  [KGS]                        = ISNULL(dbo.fnGetHistKGSOfUserOrOrgUnit(NULL, GGE.GesuchsDatum, ORG.OrgUnitID, 0, 1), ''),

  -- Spalten in Spaltenwähler
  [BelegID$]                       = BUC.KbBuchungID,
  [BelegNr$]                       = BUC.BelegNr,
  [Belegdatum$]                    = BUC.BelegDatum,
  [BaPersonID$]                    = PRS.BaPersonID,
  [Anrede$]                        = dbo.fnBaGetAnredeAnschriftBaPerson(NULL, NULL, PRS.Geburtsdatum, PRS.Sterbedatum, PRS.GeschlechtCode, 1, 'geehrte', NULL, PRS.ManuelleAnrede, PRS.Anrede, PRS.Briefanrede),
  [Email$]                         = PRS.Email,
  [Fallverantwortliche SA$]        = (SELECT TOP 1 LEU.NameVorname
                                      FROM dbo.FaLeistung LEI WITH (READUNCOMMITTED)
                                        INNER JOIN dbo.vwUser LEU ON LEU.UserID = LEI.UserID
                                      WHERE LEI.BaPersonID = GGE.BaPersonID
                                        AND LEI.ModulID = 2
                                      ORDER BY LEI.DatumVon DESC),
  [Bemerkungen$]                   = CASE GFD.GvFondsTypCode WHEN 2 THEN GGE.Bemerkung ELSE NULL END,
  [Ausl.-Status$]                  = dbo.fnGetLOVMLText('BaAuslaenderAufenthaltStatus', PRS.AuslaenderStatusCode, @LanguageCode),
  [Zivilstand$]                    = dbo.fnGetLOVMLText('Zivilstand', PRS.ZivilstandCode, @LanguageCode),
  [In Schweiz seit$]               = PRS.InCHSeit,
  [In Schweiz seit Geburt$]        = PRS.InCHSeitGeburt,
  [Ausbildung$]                    = dbo.fnGetLOVMLText('BaAusbildungCode', PRS.AusbildungCode, @LanguageCode),
  [Erwerbssituation$]              = dbo.fnGetLOVMLText('BaErwerbssituation', PRS.ErwerbssituationCode, @LanguageCode),
  [KESB-Massnahmen$]               = dbo.fnGetLOVMLText('BaVormundMassnahmen', PRS.VormundMassnahmenCode, @LanguageCode),
  [Durch PI$]                      = PRS.VormundPI,
  [IV-Taggeld$]                    = PRS.IVTaggeld,
  [Berufliche Massnahme IV$]       = PRS.BeruflicheMassnahmeIV,
  [Medizinische Massnahme IV$]     = PRS.MedizinischeMassnahmeIV,
  [IV-Hilfsmittel$]                = PRS.IVHilfsmittel,
  [Assistenzbeitrag$]              = PRS.Assistenzbeitrag,
  [IV-verfügte Assistenzberatung$] = PRS.IvVerfuegteAssistenzberatung,
  [BVG-Rente$]                     = PRS.BVGRente,
  [UVG-Rente$]                     = PRS.UVGRente,
  [UVG-Taggeld$]                   = PRS.UVGTaggeld,
  [Sozialhilfe$]                   = PRS.Sozialhilfe,
  [ALK$]                           = PRS.ALK,
  [KTG$]                           = PRS.KTG,
  [Witwen-/Witwer-/Waisenrente$]   = PRS.WittwenWittwerWaisenrente,
  [Kantonale Zuschüsse$]           = dbo.fnQryGetKantZuschuesseForBaPerson(GGE.BaPersonID, @LanguageCode)

FROM dbo.GvGesuch                     GGE WITH (READUNCOMMITTED)
  INNER JOIN dbo.GvFonds              GFD WITH (READUNCOMMITTED) ON GFD.GvFondsID = GGE.GvFondsID
  INNER JOIN dbo.vwPerson             PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = GGE.BaPersonID
  INNER JOIN dbo.vwUser               USR WITH (READUNCOMMITTED) ON USR.UserID = GGE.XUserID_Autor
  INNER JOIN dbo.GvAuszahlungPosition GAP WITH (READUNCOMMITTED) ON GAP.GvGesuchID = GGE.GvGesuchID
  INNER JOIN dbo.GvPositionsart       GPA WITH (READUNCOMMITTED) ON GPA.GvPositionsartID = GAP.GvPositionsartID
  INNER JOIN dbo.BgKostenart          KOA WITH (READUNCOMMITTED) ON KOA.BgKostenartID = GPA.BgKostenartID
  INNER JOIN dbo.KbBuchungKostenart   BKO WITH (READUNCOMMITTED) ON BKO.GvAuszahlungPositionID = GAP.GvAuszahlungPositionID
  INNER JOIN dbo.KbBuchung            BUC WITH (READUNCOMMITTED) ON BUC.KbBuchungID = BKO.KbBuchungID
  LEFT JOIN dbo.XOrgUnit              ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = CONVERT(INT, dbo.fnOrgUnitOfUser(GGE.XUserID_Autor, 1))
  LEFT JOIN dbo.GvAbklaerendeStelle   AKS WITH (READUNCOMMITTED) ON AKS.GvGesuchID = GGE.GvGesuchID
  LEFT JOIN dbo.vwUser                BEW WITH (READUNCOMMITTED) ON BEW.UserID = GGE.UserIDBewilligt
WHERE GAP.GvAuszahlungPositionStatusCode IN (5, 7) -- Bewilligung erteilt, Beleg importiert
  AND (ORG.Kostenstelle = @KST OR @KST IS NULL)
  AND (dbo.fnOrgUnitHistoryHierarchyValue(ORG.OrgUnitID, GGE.GesuchsDatum, 'mndnr') = @KGS OR @KGS IS NULL)
  AND (GGE.GesuchsDatum BETWEEN ISNULL(@ErfassungVon, '17530101') AND ISNULL(@ErfassungBis, '99991231'))
  AND (GGE.XUserID_Autor = @Mitarbeiter OR @Mitarbeiter IS NULL)
  AND (PRS.HauptBehinderungsartCode = @HauptBehinderungsart OR @Hauptbehinderungsart IS NULL)
  AND (PRS.BSVBehinderungsartCode = @BSVBehinderungsart OR @BSVBehinderungsart IS NULL)
  AND (GFD.GvFondsTypCode = 1)
  AND ((GGE.BewilligtAm BETWEEN ISNULL(@EntscheidVon, '17530101') AND ISNULL(@EntscheidBis, '99991231')
        AND GGE.BetragBewilligt IS NOT NULL) OR ISNULL(@EntscheidVon, @EntscheidBis) IS NULL)
  AND (GGE.GesuchsDatum BETWEEN ISNULL(@ErfassungVon, '17530101') AND ISNULL(@ErfassungBis, '99991231') OR ISNULL(@ErfassungVon, @ErfassungBis) IS NULL)
  AND (GGE.AbschlussDatum BETWEEN ISNULL(@AbschlussVon, '17530101') AND ISNULL(@AbschlussBis, '99991231') OR ISNULL(@AbschlussVon, @AbschlussBis) IS NULL)
  AND (BUC.ValutaDatum BETWEEN ISNULL(@ValutaVon, '17530101') AND ISNULL(@ValutaBis, '99991231') OR ISNULL(@ValutaVon, @ValutaBis) IS NULL)
  AND ((@NurFLB = 1 AND GFD.KbZahlungsKontoID IS NOT NULL) OR @NurFLB = 0)
  AND ((GFD.GvFondsID = @FondsID) OR @FondsID IS NULL)
ORDER BY BUC.ValutaDatum;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kissDateEdit1.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="kissDateEdit2.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumAbschlussBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumErfassungBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumEntscheidBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumAbschlussVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumErfassungVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumEntscheidVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
</root>