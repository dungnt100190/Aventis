<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @KST VARCHAR(150);
DECLARE @KGS VARCHAR(100);
DECLARE @DatumVon DATETIME;
DECLARE @DatumBis DATETIME;
DECLARE @Mitarbeiter INT;
DECLARE @HauptBehinderungsart INT;
DECLARE @BSVBehinderungsart INT;
DECLARE @NurFLB BIT;
DECLARE @FondsID INT;
DECLARE @NurEntschiedene BIT;
DECLARE @NurAbgeschlossene BIT;
DECLARE @LanguageCode INT;

SET @LanguageCode = {0};

---SET @KST = {ctlKGSKostenstelleSAR.EdtSucheKostenstelle};
---SET @KGS = {ctlKGSKostenstelleSAR.EdtSucheKGS};
---SET @DatumVon = {edtSucheZeitraumDatumVon};
---SET @DatumBis = {edtSucheZeitraumDatumBis};
---SET @Mitarbeiter = {ctlKGSKostenstelleSAR.EdtSucheMitarbeiter};
---SET @HauptBehinderungsart = {edtSucheHauptbehinderungsart};
---SET @BSVBehinderungsart = {edtSucheBsvBehinderungsart};
SET @NurFLB = 1;
---SET @NurFLB = {chkSucheNurFlb};
---SET @FondsID = {edtSucheFonds};
SET @NurEntschiedene = 1;
---SET @NurEntschiedene = {chkSucheEntschiedeneGesuche};
SET @NurAbgeschlossene = 0;
---SET @NurAbgeschlossene = {chkSucheAbgeschlosseneGesuche};

SET @DatumVon = ISNULL(@DatumVon, '17530101');
SET @DatumBis = ISNULL(@DatumBis, '99991231');

SELECT
  BaPersonID                       = GGE.BaPersonID,
  KlientName                       = PRS.Name,
  KlientVorname                    = PRS.Vorname,
  KlientOrt                        = PRS.WohnsitzOrt,
  KlientPLZ                        = PRS.WohnsitzPLZ,
  GvGesuchID                       = GGE.GvGesuchID,
  FondsName                        = GFD.NameLang,
  AbklaerendeStelleMA              = ISNULL(GAS.BeantragendeStelle, USR.NameVorname),
  AbklaerendeStelleKGS             = CONVERT(VARCHAR(10), ISNULL(KGS.Kostenstelle, -1)) + ' ' + KGS.ItemName,
  AbklaerendeStelleKS              = CONVERT(VARCHAR(10), ISNULL(ORG.Kostenstelle, -1)) + ' ' + ORG.ItemName,
  GvStatus                         = dbo.fnGetLOVMLText('GvStatus', GGE.GvStatusCode, @LanguageCode),
  GvAuflageTyp                     = dbo.fnGetLOVMLText('GvAuflageTyp', AUF.GvAuflageTypCode, @LanguageCode),
  AuflageGegenstand                = AUF.Gegenstand,
  AuflageSchriftlicheVerpflichtung = AUF.SchriftlicheVerpflichtung,
  AuflageBemerkung                 = AUF.Bemerkung,
  AuflageBetrag                    = AUF.Betrag,
  AuflageBereitsBezahlt            = NULLIF(AUA.BetragBezahlt, $0),
  AuflageOffenerBetrag             = AUF.Betrag - AUA.BetragBezahlt,
  AuflageDatumLetzteZahlung        = AUA.DatumLetzteZahlung,
  AuflageFaellig                   = AUF.Faellig
FROM dbo.GvGesuch                    GGE WITH(READUNCOMMITTED)
  INNER JOIN dbo.vwPerson            PRS WITH(READUNCOMMITTED) ON PRS.BaPersonID = GGE.BaPersonID
  INNER JOIN dbo.GvFonds             GFD WITH(READUNCOMMITTED) ON GFD.GvFondsID = GGE.GvFondsID
                                                              AND GFD.GvFondsTypCode = 1 -- Intern
  INNER JOIN dbo.vwUserSimple        USR WITH(READUNCOMMITTED) ON USR.UserID = GGE.XUserID_Autor
  INNER JOIN dbo.GvAuflage           AUF WITH(READUNCOMMITTED) ON AUF.GvGesuchID = GGE.GvGesuchID
  LEFT  JOIN dbo.GvAbklaerendeStelle GAS WITH(READUNCOMMITTED) ON GAS.GvGesuchID = GGE.GvGesuchID
  LEFT  JOIN dbo.XOrgUnit            KGS WITH(READUNCOMMITTED) ON KGS.OrgUnitID = CONVERT(INT, dbo.fnGetHistKGSOfUserOrOrgUnit(USR.UserID, GGE.GesuchsDatum, NULL, 1, 1))
  LEFT  JOIN dbo.XOrgUnit            ORG WITH(READUNCOMMITTED) ON ORG.OrgUnitID = CONVERT(INT, dbo.fnOrgUnitOfUser(GGE.XUserID_Autor, 1))
  OUTER APPLY (SELECT
                 BetragBezahlt = CASE WHEN Rate1Datum IS NOT NULL THEN Rate1Betrag ELSE $0 END +
                                 CASE WHEN Rate2Datum IS NOT NULL THEN Rate2Betrag ELSE $0 END +
                                 CASE WHEN Rate3Datum IS NOT NULL THEN Rate3Betrag ELSE $0 END +
                                 CASE WHEN Rate4Datum IS NOT NULL THEN Rate4Betrag ELSE $0 END +
                                 CASE WHEN Rate5Datum IS NOT NULL THEN Rate5Betrag ELSE $0 END +
                                 CASE WHEN Rate6Datum IS NOT NULL THEN Rate6Betrag ELSE $0 END +
                                 CASE WHEN Rate7Datum IS NOT NULL THEN Rate7Betrag ELSE $0 END +
                                 CASE WHEN Rate8Datum IS NOT NULL THEN Rate8Betrag ELSE $0 END,
                 DatumLetzteZahlung = COALESCE(Rate8Datum, Rate7Datum, Rate6Datum, Rate5Datum, Rate4Datum, Rate3Datum, Rate2Datum, Rate1Datum)) AUA
WHERE AUF.Erledigt = 0 
  AND AUF.Erlassen = 0
  AND (ORG.Kostenstelle = @KST OR @KST IS NULL)
  AND (dbo.fnOrgUnitHistoryHierarchyValue(ORG.OrgUnitID, GGE.GesuchsDatum, 'mndnr') = @KGS OR @KGS IS NULL)
  AND (GGE.GesuchsDatum BETWEEN @DatumVon AND @DatumBis)
  AND (GGE.XUserID_Autor = @Mitarbeiter OR @Mitarbeiter IS NULL)
  AND (PRS.HauptBehinderungsartCode = @HauptBehinderungsart OR @Hauptbehinderungsart IS NULL)
  AND (PRS.BSVBehinderungsartCode = @BSVBehinderungsart OR @BSVBehinderungsart IS NULL)
  AND ((GGE.GvStatusCode = 5 AND @NurEntschiedene = 1) OR @NurEntschiedene = 0)
  AND ((GGE.GvStatusCode = 7 AND @NurAbgeschlossene = 1) OR @NurAbgeschlossene = 0)
  AND ((@NurFLB = 1 AND GFD.KbZahlungsKontoID IS NOT NULL) OR @NurFLB = 0);</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSucheZeitraumDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheZeitraumDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
</root>