<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @ZeitraumVon DATETIME;
DECLARE @ZeitraumBis DATETIME;
--- SET @ZeitraumVon = {edtSucheZeitraumDatumVon};
--- SET @ZeitraumBis = {edtSucheZeitraumDatumBis};

SELECT
  Mandant        = PRS.Name + ISNULL(' ' + PRS.Vorname, ''), 
  Geburtsdatum   = PRS.Geburtsdatum,
  Todesdatum     = PRS.Sterbedatum,
  Mandatstraeger = CASE
                     WHEN ERN.UserID IS NOT NULL THEN USR.LastName + ISNULL(' ' + USR.FirstName, '')
                     ELSE PRM.Name + ISNULL(' ' + PRM.Vorname, '')
                   END,
  Privat         = CONVERT(BIT, 0),
  Kontotyp       = TYP.Text,
  Saldogruppe    = KTO.SaldoGruppeName,
  KontoNr        = KTO.KontoNr,
  KontoName      = KTO.KontoName,
  Saldo          = ISNULL(KTO.EroeffnungsSaldo, 0)
                   +
                   (SELECT ISNULL(SUM(Betrag), 0)
                    FROM dbo.FbBuchung WITH (READUNCOMMITTED)
                    WHERE SollKtoNr = KTO.KontoNr
                      AND FbPeriodeID = PER.FbPeriodeID
                      AND BuchungsDatum BETWEEN @ZeitraumVon AND @ZeitraumBis)
                   -
                   (SELECT ISNULL(SUM(Betrag), 0)
                    FROM dbo.FbBuchung WITH (READUNCOMMITTED)
                    WHERE HabenKtoNr = KTO.KontoNr
                      AND FbPeriodeID = PER.FbPeriodeID
                      AND BuchungsDatum BETWEEN @ZeitraumVon AND @ZeitraumBis),
  PeriodeStatus  = STA.Text,
  PeriodeVon     = PER.PeriodeVon,
  PeriodeBis     = PER.PeriodeBis,
  Team           = TEA.Name,
  Depotnummer    = KTO.FbDepotnr,
  BaPersonID$    = PRS.BaPersonID
FROM dbo.FbPeriode           PER WITH (READUNCOMMITTED)
  INNER JOIN dbo.BaPerson    PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = PER.BaPersonID
  INNER JOIN dbo.FbKonto     KTO WITH (READUNCOMMITTED) ON KTO.FbPeriodeID = PER.FbPeriodeID
  INNER JOIN dbo.XLOVCode    STA WITH (READUNCOMMITTED) ON STA.LOVName = 'FbPeriodeStatus'
                                                       AND STA.Code = PER.PeriodeStatusCode
  INNER JOIN dbo.XLOVCode    TYP WITH (READUNCOMMITTED) ON KTO.KontoTypCode = TYP.Code
                                                       AND TYP.LOVName = 'FbKontoTyp'
  LEFT  JOIN dbo.FaLeistung  FAL WITH (READUNCOMMITTED) ON FAL.BaPersonID = PER.BaPersonID
                                                       AND FAL.ModulID = 5
                                                       AND FAL.FaProzessCode = 501
                                                       AND FAL.DatumVon = (SELECT MAX(DatumVon)
                                                                           FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                                                                           WHERE BaPersonID = PER.BaPersonID
                                                                             AND ModulID = 5
                                                                             AND FaProzessCode = 501)
  LEFT  JOIN dbo.VmMassnahme MAS WITH (READUNCOMMITTED) ON MAS.FaLeistungID = FAL.FaLeistungID
                                                       AND MAS.VmMassnahmeID = (SELECT TOP 1 VmMassnahmeID 
                                                                                FROM dbo.VmMassnahme WITH (READUNCOMMITTED) 
                                                                                WHERE FaLeistungID = FAL.FaLeistungID
                                                                                  AND DatumVon &gt;= @ZeitraumVon
                                                                                  AND DatumVon &lt;= @ZeitraumBis
                                                                                ORDER BY DatumVon DESC) 
  LEFT  JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MAS.VmMassnahmeID
                                                       AND ERN.VmErnennungID = (SELECT TOP 1 VmErnennungID
                                                                                FROM dbo.VmErnennung WITH (READUNCOMMITTED)
                                                                                WHERE VmMassnahmeID = MAS.VmMassnahmeID
                                                                                  AND Ernennung BETWEEN @ZeitraumVon AND @ZeitraumBis 
                                                                                 ORDER BY Ernennung DESC)
  LEFT JOIN dbo.XUser        USR WITH (READUNCOMMITTED) ON USR.UserID = ERN.UserID
  LEFT JOIN dbo.VmPriMa      PRM WITH (READUNCOMMITTED) ON PRM.VmPriMaID = ERN.VmPriMaID
  LEFT JOIN dbo.FbTeam       TEA WITH (READUNCOMMITTED) ON TEA.FbTeamID = PER.FbTeamID
WHERE 
  @ZeitraumVon &lt; PER.PeriodeBis AND
  @ZeitraumBis &gt; PER.PeriodeVon 
  AND ((ISNULL(KTO.EroeffnungsSaldo, 0)
        +
        (SELECT ISNULL(SUM(Betrag), 0)
         FROM dbo.FbBuchung WITH (READUNCOMMITTED)
         WHERE SollKtoNr = KTO.KontoNr
           AND FbPeriodeID = PER.FbPeriodeID
           AND BuchungsDatum BETWEEN @ZeitraumVon AND @ZeitraumBis)
        -
        (SELECT ISNULL(SUM(Betrag), 0)
         FROM dbo.FbBuchung WITH (READUNCOMMITTED)
         WHERE HabenKtoNr = KTO.KontoNr
           AND FbPeriodeID = PER.FbPeriodeID
           AND BuchungsDatum BETWEEN @ZeitraumVon AND @ZeitraumBis )) &lt;&gt; 0
       OR KTO.EroeffnungsSaldo &lt;&gt; 0
       OR EXISTS (SELECT TOP 1 1
                  FROM dbo.FbBuchung WITH (READUNCOMMITTED)
                  WHERE SollKtoNr = KTO.KontoNr
                    AND FbPeriodeId = PER.FbPeriodeID
                    AND BuchungsDatum BETWEEN @ZeitraumVon AND @ZeitraumBis)
      )
  --- AND ({edtKontoGruppeCode} &lt;&gt; 1 OR KTO.KontoKlasseCode = 1)
  --- AND ({edtKontoGruppeCode} &lt;&gt; 2 OR KTO.KontoKlasseCode = 2)
  --- AND ({edtKontoGruppeCode} &lt;&gt; 3 OR KTO.KontoKlasseCode in (1,2))
  --- AND ({edtKontoGruppeCode} &lt;&gt; 4 OR KTO.KontoTypCode in (4,5))
  --- AND ({edtKontoGruppeCode} &lt;&gt; 5 OR KTO.KontoTypCode = 7)
  --- AND ({edtKontoGruppeCode} &lt;&gt; 6 OR (KTO.KontoKlasseCode = 1 AND NOT KTO.KontoTypCode in (4,5)))
  --- AND KTO.KontoTypCode = {edtKontotyp}
  --- AND PER.BaPersonID = {edtMandant.LookupID}
  --- AND ERN.UserID = {edtMandatstraeger.LookupID}
  --- AND (({edtPeriodeStatusCode} = 9999 AND PER.PeriodeStatusCode IN (1,2)) OR {edtPeriodeStatusCode} = PER.PeriodeStatusCode)
  --- AND ({chkNurPriMa} = 0 OR ERN.VmPriMaID IS NOT NULL)
  --- AND ({chkNurAmtlich} = 0 OR ERN.VmPriMaID IS NULL)
  --- AND (({edtTeam} = 9999 AND PER.FbTeamID IN(1,2,4,6)) OR {edtTeam} = PER.FbTeamID)
ORDER BY Mandant, Saldogruppe, KontoNr;</value>
  </data>
  <data name="edtMandant.LookupSQL" xml:space="preserve">
    <value> select distinct
  ID = PRS.BaPersonID,
  Mandant = PRS.Name + isNull(', ' + PRS.Vorname,''),
  Strasse = PRS.WohnsitzStrasse + isNull(' ' + PRS.WohnsitzHausNr,''),
  Ort     = isNull(PRS.WohnsitzPLZ + ' ','') + isNull(PRS.WohnsitzOrt,''),
  Mandatstraeger = isNull(BEN.FirstName + ' ','') + isNull(BEN.LastName,'')
from FbPeriode PER
  inner join vwPerson        PRS on PRS.BaPersonID = PER.BaPersonID
  left  join FaLeistung      FAL on FAL.BaPersonID = PER.BaPersonID and
                                     FAL.ModulID = 5 and
                                     FAL.DatumVon  = (select max(DatumVon)
                                                      from   FaLeistung
                                                      where  BaPersonID = PER.BaPersonID and
                                                             FAL.ModulID = 5 and
                                                             FaProzessCode = 501)
  left  join XUser            BEN on BEN.UserID = FAL.UserID
where PRS.Name + isNull(', ' + PRS.Vorname,'') like isNull({0},'') + '%' 
order by Mandant</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSucheZeitraumDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheZeitraumDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>62</value>
  </metadata>
</root>