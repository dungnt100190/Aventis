<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @DatumVon DATETIME
DECLARE @DatumBis DATETIME
DECLARE @Kennzahl INT
DECLARE @Total    DECIMAL

SET @DatumVon = GetDate()
SET @DatumBis = GetDate()
--- SET @DatumVon = {edtDatumVon}
--- SET @DatumBis = {edtDatumBis}

DECLARE @Kennzahlen table (
   Produktegruppe VARCHAR (100),
   Beschreibung   VARCHAR (200),
   Kennzahl       VARCHAR (50),
   Masseinheit    VARCHAR (50),
   SortKey        INT
)
-- 1_1 BEGIN Bericht             --
SET @Kennzahl = (SELECT COUNT(*)
              FROM dbo.VmBericht BER WITH (READUNCOMMITTED)
              LEFT JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.FaLeistungID = BER.FaLeistungID AND
                                            MSN.VmMassnahmeID = 
                                             (SELECT TOP 1 VmMassnahmeID
                                              FROM   dbo.VmMassnahme WITH (READUNCOMMITTED)
                                              WHERE  FaLeistungID = BER.FaLeistungID AND
                                                     BER.BerichtsperiodeBis BETWEEN DatumVon AND
                                                     ISNULL(DatumBis,BER.BerichtsperiodeBis))
              LEFT JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                            ERN.VmErnennungID = 
                                             (SELECT TOP 1 VmErnennungID
                                              FROM   dbo.VmErnennung WITH (READUNCOMMITTED)
                                              WHERE  VmMassnahmeID = MSN.VmMassnahmeID
                                              ORDER BY Ernennung DESC) 
              WHERE BER.Passation1 BETWEEN @DatumVon AND  @DatumBis AND
                    ERN.UserID IS NOT NULL                          AND
                       DATEDIFF(day, BER.Erstellung, BER.Passation1)&lt;=60)

SET @Total = (SELECT COUNT(*)
              FROM dbo.VmBericht BER WITH (READUNCOMMITTED)
              LEFT JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.FaLeistungID = BER.FaLeistungID AND
                                            MSN.VmMassnahmeID = 
                                             (SELECT TOP 1 VmMassnahmeID
                                              FROM   dbo.VmMassnahme WITH (READUNCOMMITTED)
                                              WHERE  FaLeistungID = BER.FaLeistungID AND
                                                     BER.BerichtsperiodeBis BETWEEN DatumVon AND
                                                     ISNULL(DatumBis,BER.BerichtsperiodeBis))
              LEFT JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                            ERN.VmErnennungID = 
                                             (SELECT TOP 1 VmErnennungID
                                              FROM   dbo.VmErnennung WITH (READUNCOMMITTED)
                                              WHERE  VmMassnahmeID = MSN.VmMassnahmeID
                                              ORDER BY Ernennung DESC) 
              WHERE BER.Passation1 BETWEEN @DatumVon AND  @DatumBis AND
                    ERN.UserID IS NOT NULL)
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte SAR', @Total, 'Anzahl',0)
if @Total &gt; 0 
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte SAR', 100*(@Kennzahl/@Total), 'Prozent',1)
else
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte','-', '',1)
SET @Kennzahl = (SELECT COUNT(*)
              FROM dbo.VmBericht BER WITH (READUNCOMMITTED)
              LEFT JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.FaLeistungID = BER.FaLeistungID AND
                                            MSN.VmMassnahmeID = 
                                             (SELECT TOP 1 VmMassnahmeID
                                              FROM   dbo.VmMassnahme WITH (READUNCOMMITTED)
                                              WHERE  FaLeistungID = BER.FaLeistungID AND
                                                     BER.BerichtsperiodeBis BETWEEN DatumVon AND
                                                     ISNULL(DatumBis,BER.BerichtsperiodeBis))
              LEFT JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                            ERN.VmErnennungID = 
                                             (SELECT TOP 1 VmErnennungID
                                              FROM   dbo.VmErnennung WITH (READUNCOMMITTED)
                                              WHERE  VmMassnahmeID = MSN.VmMassnahmeID
                                              ORDER BY Ernennung DESC) 
              WHERE BER.Passation1 BETWEEN @DatumVon AND  @DatumBis AND
                    ERN.VmPrimaID IS NOT NULL                          AND
                       DATEDIFF(day, BER.Erstellung, BER.Passation1)&lt;=60)

SET @Total = (SELECT COUNT(*)
              FROM dbo.VmBericht BER WITH (READUNCOMMITTED)
              LEFT JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.FaLeistungID = BER.FaLeistungID AND
                                            MSN.VmMassnahmeID = 
                                             (SELECT TOP 1 VmMassnahmeID
                                              FROM   dbo.VmMassnahme WITH (READUNCOMMITTED)
                                              WHERE  FaLeistungID = BER.FaLeistungID AND
                                                     BER.BerichtsperiodeBis BETWEEN DatumVon AND
                                                     ISNULL(DatumBis,BER.BerichtsperiodeBis))
              LEFT JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                            ERN.VmErnennungID = 
                                             (SELECT TOP 1 VmErnennungID
                                              FROM   dbo.VmErnennung WITH (READUNCOMMITTED)
                                              WHERE  VmMassnahmeID = MSN.VmMassnahmeID
                                              ORDER BY Ernennung DESC) 
              WHERE BER.Passation1 BETWEEN @DatumVon AND  @DatumBis AND
                    ERN.VmPrimaID IS NOT NULL)
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte PriMa', @Total, 'Anzahl',0)
if @Total &gt; 0 
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte PriMa', 100*(@Kennzahl/@Total), 'Prozent',1)
else
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Berichte','-', '',1)
-- 1_1 END   Bericht              --

-- 1_2 BEGIN Zustimmungsgeschäfte --
DECLARE @EingangBSFldID INT
DECLARE @ZustimmungFldID INT
SET @EingangBSFldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsZustimEingang')
SET @ZustimmungFldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsZustimDatum')
SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.DynaValue ZUS WITH (READUNCOMMITTED) 
                 left join dbo.DynaValue EIN WITH (READUNCOMMITTED) ON EIN.DynaFieldID = @EingangBSFldID AND
                                             EIN.FaLeistungID    = ZUS.FaLeistungID    AND
                                             EIN.GridRowID   = ZUS.GridRowID

                 WHERE ZUS.DynaFieldID = @ZustimmungFldID           AND 
                       ZUS.Value BETWEEN @DatumVon AND @DatumBis AND
                       DATEDIFF(day, CONVERT(DATETIME,EIN.Value), CONVERT(DATETIME, ZUS.Value))&lt;=60
                 )
SET @Total =    (SELECT COUNT(*) 
                 FROM dbo.DynaValue ZUS WITH (READUNCOMMITTED) 
                 left join dbo.DynaValue EIN WITH (READUNCOMMITTED) ON EIN.DynaFieldID = @EingangBSFldID AND
                                             EIN.FaLeistungID    = ZUS.FaLeistungID   AND
                                             EIN.GridRowID   = ZUS.GridRowID

                 WHERE ZUS.DynaFieldID = @ZustimmungFldID       AND 
                       ZUS.Value BETWEEN @DatumVon AND @DatumBis
                 )
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Zustimmungsgeschäfte',@Total , 'Anzahl',2)
if @Total &gt; 0 
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Zustimmungsgeschäfte', 100*(@Kennzahl/@Total), 'Prozent',3)
else
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Zustimmungsgeschäfte', '-', '',3)
-- 1_2 END   Zustimmungsgeschäfte --
-- 1_3 BEGIN Beschwerden          --
DECLARE @BeschwerdeEingangFldID   INT
DECLARE @BeschwerdeAbschlussFldID INT
SET @BeschwerdeEingangFldID   = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsBeschwerdeEingangDat')
SET @BeschwerdeAbschlussFldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsBeschwerdeAbschlussDat')
SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.DynaValue AUS WITH (READUNCOMMITTED) 
                 LEFT JOIN dbo.DynaValue EIN WITH (READUNCOMMITTED) ON  EIN.DynaFieldID = @BeschwerdeEingangFldID AND
                                             EIN.FaLeistungID    = AUS.FaLeistungID    AND
                                             EIN.GridRowID   = AUS.GridRowID

                 WHERE AUS.DynaFieldID = @BeschwerdeAbschlussFldID AND 
                       AUS.Value BETWEEN @DatumVon AND @DatumBis   AND
                       DATEDIFF(day, CONVERT(DATETIME,EIN.Value), CONVERT(DATETIME, AUS.Value))&lt;=60
                )
SET @Total = (SELECT COUNT(*) 
                 FROM dbo.DynaValue AUS WITH (READUNCOMMITTED) 
                 LEFT JOIN dbo.DynaValue EIN WITH (READUNCOMMITTED) ON  EIN.DynaFieldID = @BeschwerdeEingangFldID AND
                                             EIN.FaLeistungID    = AUS.FaLeistungID            AND
                                             EIN.GridRowID   = AUS.GridRowID
                 WHERE AUS.DynaFieldID = @BeschwerdeAbschlussFldID AND 
                       AUS.Value BETWEEN @DatumVon AND @DatumBis 
                )
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Beschwerden',@Total , 'Anzahl',4)
-- zuerst total anzahl beschwerden
-- dann % der nicht rechtzeitig abgeschlossenen
-- für alle 3 machen
if @Total &gt; 0 
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Beschwerden', 100*(@Kennzahl/@Total), 'Prozent',5)
else
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Beschwerden', '-', '',5)
-- 1_3 END   Beschwerden          --

-- a) BEGIN Anzahl vorm. Interventionen Erwachsenenschutz         --
SELECT @Kennzahl = COUNT(distinct VmMassnahmeID)
  FROM   dbo.VmMassnahme MAS WITH (READUNCOMMITTED) 
         INNER JOIN (SELECT Code
                     FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                     WHERE  LOVName = 'VmZGB'
                            -- old version: AND Text in ('369 ZGB','370 ZGB','371 ZGB','372 ZGB','392 ZGB','393 ZGB','394 ZGB','395 ZGB')) ZGB
                            AND Value2 = 'Erwachsene') ZGB
         ON ',' + MAS.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
  WHERE  DatumVon BETWEEN @DatumVon AND @DatumBis  

INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','#Vorm. Interv. Erwachsenenschutz',@Kennzahl , 'Anzahl',6)
-- a) END Anzahl vorm. Interventionen Erwachsenenschutz         --
-- b) BEGIN Anzahl vorm. Interventionen Kindesschutz         --
SELECT @Kennzahl = COUNT(distinct VmMassnahmeID)
  FROM   dbo.VmMassnahme MAS WITH (READUNCOMMITTED) 
         inner join (SELECT Code
                     FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                     WHERE  LOVName = 'VmZGB'
                            --Old version: AND Text in ('308 ZGB','310 ZGB','368 ZGB','392 ad hoc')) ZGB
                            AND Value2 = 'Kinder') ZGB
         ON ',' + MAS.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
  WHERE  DatumVon BETWEEN @DatumVon AND @DatumBis  
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','#Vorm. Interv. Kindesschutz',@Kennzahl , 'Anzahl',7)
-- b) END Anzahl vorm. Interventionen Kindesschutz         --
-- 2 BEGIN Inventar         --
DECLARE @InventarFrist INT
DECLARE @InventarDatum INT
SET @InventarFrist = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsInvFrist')
SET @InventarDatum = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'VmBsInvDatum')
SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.DynaValue IFR WITH (READUNCOMMITTED) 
                 left join dbo.DynaValue IDT WITH (READUNCOMMITTED) ON  IDT.DynaFieldID = @InventarDatum AND
                                             IDT.FaLeistungID    = IFR.FaLeistungID    AND
                                             IDT.GridRowID   = IFR.GridRowID

                 WHERE IFR.DynaFieldID = @InventarFrist     AND 
                       IFR.Value BETWEEN @DatumVon AND @DatumBis                 AND
                      DATEDIFF(day, CONVERT(DATETIME,IDT.Value), CONVERT(DATETIME, IFR.Value))&lt;=30
                 )
SET @Total =    (SELECT COUNT(*) 
                 FROM dbo.DynaValue IFR WITH (READUNCOMMITTED) 
                 left join dbo.DynaValue IDT WITH (READUNCOMMITTED) ON  IDT.DynaFieldID = @InventarDatum AND
                                             IDT.FaLeistungID    = IFR.FaLeistungID    AND
                                             IDT.GridRowID   = IFR.GridRowID

                 WHERE IFR.DynaFieldID = @InventarFrist     AND 
                       IFR.Value BETWEEN @DatumVon AND @DatumBis
                 )
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Inventar Gesamt', @Total, 'Anzahl',8)
if @Total &gt; 0 
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Inventar', 100*(@Kennzahl/@Total), 'Prozent',8)
else
   INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Inventar', '-', '',8)
-- 2 END   Inventar         --

--d) BEGIN                  --
SET @Kennzahl = (SELECT SUM(ISNULL(EroeffnungsSaldo,0)) 
                 FROM dbo.FbPeriode PER WITH (READUNCOMMITTED) 
                 INNER JOIN dbo.FbKonto  KTO WITH (READUNCOMMITTED) ON KTO.FbPeriodeId  = PER.FbPeriodeID AND  
                                            KTO.KontoTypCode in (4,5)  --Depot-Kto 
                 WHERE NOT EXISTS(SELECT * 
                                  FROM dbo.FbPeriode PER1 WITH (READUNCOMMITTED)
                                  WHERE PER1.FbPeriodeID &lt;&gt; PER.FbPeriodeid AND 
                                        PER1.BaPersonID = PER.BaPersonID)    
                 AND PER.PeriodeVon BETWEEN @DatumVon AND @DatumBis)
INSERT INTO @Kennzahlen VALUES('340100 Vormundschaftspflege','Inventarisiertes Vermögen', @Kennzahl, 'SFr',9)
-- genehmigungsdatum ist ausschlaggebend ob in invetar oder nicht. 
--d) END                     --
--e) BEGIN 
SET @Kennzahl = (SELECT SUM(ISNULL(EroeffnungsSaldo,0)) 
                 FROM dbo.FbPeriode PER WITH (READUNCOMMITTED)
                 INNER JOIN dbo.FbKonto KTO WITH (READUNCOMMITTED) ON KTO.FbPeriodeId      = PER.FbPeriodeID AND  
                                           KTO.KontoTypCode IN (4,5) --Depot-Kto und Wertschriften
                 WHERE PER.FbPeriodeID = (SELECT TOP 1 FbPeriodeID FROM dbo.FbPeriode WITH (READUNCOMMITTED) WHERE
                                                                    BaPersonID = PER.BaPersonID AND
                                                                    PeriodeVon &lt;= @DatumBis
                                                                    order by PeriodeVon)
                 )

               + (SELECT ISNULL(SUM(Betrag),0)
                  FROM   dbo.FbBuchung BUC WITH (READUNCOMMITTED)
                         INNER JOIN dbo.FbKonto KTO WITH (READUNCOMMITTED) on KTO.KontoNr = BUC.SollKtoNr and
                                                   KTO.FbPeriodeID = BUC.FbPeriodeID and
                                                   KTO.KontoTypCode in (4,5)
                  WHERE  Buchungsdatum &lt;= @DatumBis)
               - (SELECT ISNULL(SUM(Betrag),0)
                  FROM   dbo.FbBuchung BUC WITH (READUNCOMMITTED)
                         inner join dbo.FbKonto KTO WITH (READUNCOMMITTED) on KTO.KontoNr = BUC.HabenKtoNr and
                                                   KTO.FbPeriodeID = BUC.FbPeriodeID and
                                                   KTO.KontoTypCode in (4,5)
                  WHERE  Buchungsdatum &lt;= @DatumBis)
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Verwaltetes Vermögen', @Kennzahl, 'SFr',10)
--e) END
--f) BEGIN                
SET @Kennzahl = (SELECT isNull(sum(Betrag),0)
                 FROM   dbo.FbBuchung WITH (READUNCOMMITTED) 
                 WHERE  SollKtoNr In(1010,1011,1014)  AND
                        BuchungsDatum between @DatumVon and @DatumBis  
                 )
INSERT INTO @Kennzahlen VALUES ('340100 Vormundschaftspflege','Umsatzzahlen', @Kennzahl, 'SFr',11)
--f) END 
--3 BEGIN  --
DECLARE @ProtokollEroeffnungFldID INT
SET @ProtokollEroeffnungFldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaIntakeprotokollDokument')

-- alle intakeprotokolle finden
-- zurück auf phaseneröffnung +- 60 Tage
-- nur eks intake center
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID      AND
                                                 PHS.FaPhaseCode = 1          AND --intake 
                                                 PHS.DatumVon BETWEEN @DatumVon AND @DatumBis
                 INNER JOIN dbo.DynaValue     VAL WITH (READUNCOMMITTED) ON VAL.DynaFieldID = @ProtokollEroeffnungFldID AND
                                                 VAL.FaPhaseID = PHS.FaPhaseID               AND
                                                 VAL.GridRowID = 1
                 WHERE ORG.ModulID = 5                                AND  --vormundschaft
                       ORG.OrgUnitID = 26                               AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                        AND
                       VAL.CreationDate BETWEEN @DatumVon AND @DatumBis AND
                       DATEDIFF(day, CONVERT(DATETIME,PHS.DatumVon), CONVERT(DATETIME, VAL.CreationDate))&lt;=60
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Gefährdungsmeldungen &lt;= 60 Tage', @Kennzahl, 'Anzahl',12)
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID AND
                                                 PHS.FaPhaseCode = 1     AND --intake
                                                 PHS.DatumVon BETWEEN @DatumVon AND @DatumBis
                 INNER JOIN dbo.DynaValue     VAL WITH (READUNCOMMITTED) ON VAL.DynaFieldID = @ProtokollEroeffnungFldID AND
                                                 VAL.FaPhaseID = PHS.FaPhaseID               AND
                                                 VAL.GridRowID = 1
                 WHERE ORG.ModulID = 5                  AND  --vormundschaft
                       ORG.OrgUnitID = 26                 AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                    AND
                       VAL.CreationDate BETWEEN @DatumVon AND @DatumBis AND
                       DATEDIFF(day, CONVERT(DATETIME,PHS.DatumVon), CONVERT(DATETIME, VAL.CreationDate))&gt;60
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Gefährdungsmeldungen &gt; 60 Tage', @Kennzahl, 'Anzahl',13)
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID AND
                                                 PHS.FaPhaseCode = 1     AND --intake
                                                 PHS.DatumVon BETWEEN @DatumVon AND @DatumBis
                 WHERE ORG.ModulID = 5               AND  --vormundschaft
                       ORG.OrgUnitID = 26              AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                    AND
                       NOT EXISTS (SELECT 1 
                                   FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                   WHERE DynaFieldID = @ProtokollEroeffnungFldID AND
                                         FaPhaseID = PHS.FaPhaseID               AND
                                         GridRowID = 1)
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Gefährdungsmeldungen ohne Protokoll', @Kennzahl, 'Anzahl',13)
--3 END    --
--g) BEGIN    --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID 
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID AND
                                                 PHS.FaPhaseCode = 1     AND
                                                 PHS.DatumVon BETWEEN @DatumVon AND @DatumBis
                 WHERE ORG.ModulID = 5                  AND
                       ORG.OrgUnitID = 26                 AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2 
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Gefährdungsmeldungen', @Kennzahl, 'Anzahl',14)
--g) END      --
--h) BEGIN    --
-- nur erwachsene: 18 jährig
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID
                 INNER JOIN dbo.FaLeistung        FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = PHS.FaLeistungID
                 INNER JOIN dbo.BaPerson     PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = FAL.BaPersonID 
                                          AND dbo.FNGETAGE(PRS.Geburtsdatum, GETDATE()) &gt;= 18
                 WHERE ORG.OrgUnitID = 26                           AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                    AND
                       PHS.DatumBis BETWEEN @DatumVon AND @DatumBis AND
                       PHS.AbschlussGrundCode = 18
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Für Massnahme vorgeschlagene Fälle EKS', @Kennzahl, 'Anzahl',15)
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID
                 INNER JOIN dbo.FaLeistung        FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = PHS.FaLeistungID
                 INNER JOIN dbo.BaPerson     PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = FAL.BaPersonID 
                                          AND dbo.FNGETAGE(PRS.Geburtsdatum, GETDATE()) &gt;= 18
                 WHERE ORG.OrgUnitID = 26                           AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                    AND
                       PHS.DatumBis BETWEEN @DatumVon AND @DatumBis AND
                       PHS.AbschlussGrundCode = 33

                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Für Massnahme vorgeschlagene Fälle PriMa', @Kennzahl, 'Anzahl',15)
--h) END      --
--i) BEGIN    --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.XUser USR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                 INNER JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
                 INNER JOIN dbo.FaPhase       PHS WITH (READUNCOMMITTED) ON PHS.UserID = USR.UserID
                 INNER JOIN dbo.FaLeistung        FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = PHS.FaLeistungID
                 WHERE ORG.OrgUnitID = 26                           AND  --'EKS Intake Center'
                       OUU.OrgUnitMemberCode = 2                    AND
                       PHS.DatumBis BETWEEN @DatumVon AND @DatumBis AND
                       PHS.AbschlussGrundCode NOT IN (18, 33)
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Fälle mit anderweitiger Lösung', @Kennzahl, 'Anzahl',16)
--i) END      --
--4 START      --
SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED) 
                 WHERE FaProzessCode = 502                      AND
                 FAL.DatumBis BETWEEN @DatumVon AND @DatumBis AND
                 DATEDIFF(DAY,FAL.DatumVon, FAL.DatumBis) &lt;= 365  --oder &lt;= datediff(day, @DatumVon, @DatumBis) ?
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Fälle unter 1 Jahr', @Kennzahl, 'Anzahl',17)

SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED) 
                 WHERE FaProzessCode = 502                      AND
                 FAL.DatumBis BETWEEN @DatumVon AND @DatumBis AND
                 DATEDIFF(DAY,FAL.DatumVon, FAL.DatumBis) &gt; 365 --oder &gt; datediff(day, @DatumVon, @DatumBis) ?
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Fälle über 1 Jahr', @Kennzahl, 'Anzahl',18)
--4 END       --
--j) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmVaterschaft VTR WITH (READUNCOMMITTED)
                 INNER JOIN dbo.FaLeistung FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = VTR.FaLeistungID AND
                                          FAL.DatumVon BETWEEN @DatumVon AND @DatumBis  

                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','#Eröffnungen Vaterschaftsabklärung (Anerkennungen)', @Kennzahl, 'Anzahl',19)
--j) END         --
--k) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
                 INNER JOIN dbo.VmVaterschaft VTR WITH (READUNCOMMITTED) ON VTR.FaLeistungID = FAL.FaLeistungID AND
                                                 (VTR.UHVDatum BETWEEN @DatumVon AND @DatumBis     OR
                                                  VTR.VUrteilDatum BETWEEN @DatumVon AND @DatumBis OR
                                                  VTR.UnterhaltsurteilDatum BETWEEN @DatumVon AND @DatumBis
                                                 )
                 WHERE FaProzessCode = 502   --NOT REALLY NECESSARY
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Unterhaltsverträge', @Kennzahl, 'Anzahl',20)
--k) END         --
--l) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
                 INNER JOIN dbo.VmVaterschaft VTR WITH (READUNCOMMITTED) ON VTR.FaLeistungID = FAL.FaLeistungID AND
                                                 VTR.SorgerechtVereinbDatum BETWEEN @DatumVon AND @DatumBis 
                 WHERE FaProzessCode = 502
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Sorgerechtsvereinbarung', @Kennzahl, 'Anzahl',21)
--l) END         --

--m) BEGIN       --
SET @Kennzahl = (SELECT COUNT(DISTINCT(PRM.VmPriMaID))
                 FROM dbo.VmPriMa PRM WITH (READUNCOMMITTED)
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmPriMaID = PRM.VmPriMaID
                 INNER JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.VmMassnahmeID = ERN.VmMassnahmeID AND
                                               MSN.DatumBis IS NULL
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl PriMas', @Kennzahl, 'Anzahl',22)
--m) END         --

--n) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmPriMa PRM WITH (READUNCOMMITTED)
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmPriMaID = PRM.VmPriMaID
                 INNER JOIN dbo.VmMassnahme MSN WITH (READUNCOMMITTED) ON MSN.VmMassnahmeID = ERN.VmMassnahmeID AND
                                               MSN.DatumBis IS NULL
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl aktv. Mandate bei PriMas', @Kennzahl, 'Anzahl',23)
--n) END         --
--o) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*) 
                 FROM dbo.VmErnennung WITH (READUNCOMMITTED)
                 WHERE VmPrimaID IS NOT NULL AND
                 Ernennung BETWEEN @DatumVon AND @DatumBis
                )

INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl Einsetzungen PriMas', @Kennzahl, 'Anzahl',24)
--o) END         --
--p) BEGIN       --
SET @Kennzahl = (SELECT COUNT(DISTINCT(MSN.VmMassnahmeID))
                 FROM   dbo.VmMassnahme MSN WITH (READUNCOMMITTED)
                 INNER JOIN dbo.FaLeistung FAL WITH (READUNCOMMITTED) on FAL.FaLeistungID = MSN.FaLeistungID AND
                           (FAL.DatumBis &gt; @DatumBis OR FAL.DatumBis IS NULL)
                 INNER JOIN (SELECT Code
                             FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                             WHERE  LOVName = 'VmZGB'
                                    AND Value2 = 'Erwachsene') ZGB
                       ON ',' + MSN.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                               ERN.VmPriMaID IS NULL                 AND
                                               ERN.UserID IS NOT NULL
                 WHERE MSN.DatumBis &gt; @DatumBis OR MSN.DatumBis IS NULL
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl Mandate Erwachsenenschutz', @Kennzahl, 'Anzahl',25)
--p) END         --
--q) BEGIN       --
SET @Kennzahl = (SELECT COUNT(DISTINCT(MSN.VmMassnahmeID))
                 FROM   dbo.VmMassnahme MSN WITH (READUNCOMMITTED)
                 INNER JOIN dbo.FaLeistung FAL WITH (READUNCOMMITTED) on FAL.FaLeistungID = MSN.FaLeistungID AND
                           (FAL.DatumBis &gt; @DatumBis OR FAL.DatumBis IS NULL)
                 INNER JOIN (SELECT Code
                             FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                             WHERE  LOVName = 'VmZGB'
                                    AND Value2 = 'Kinder') ZGB
                       ON ',' + MSN.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MSN.VmMassnahmeID AND
                                               ERN.VmPriMaID IS NULL                 AND
                                               ERN.UserID IS NOT NULL
                 WHERE (MSN.DatumBis &gt; @DatumBis OR MSN.DatumBis IS NULL)
                 )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl Mandate Kindesschutz', @Kennzahl, 'Anzahl',26)
--q) END         --
--r) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM   dbo.VmMassnahme MAS WITH (READUNCOMMITTED) 
                 INNER JOIN (SELECT Code
                             FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                             WHERE  LOVName = 'VmZGB'
                                    AND Value2 = 'Erwachsene') ZGB
                       ON ',' + MAS.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MAS.VmMassnahmeID
                 WHERE  DatumBis BETWEEN @DatumVon AND @DatumBis
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl aufgehobene Mandate Erwachsenenschutz', @Kennzahl, 'Anzahl',27)
--r) END         --
--s) BEGIN       --
SET @Kennzahl = (SELECT COUNT(*)
                 FROM   dbo.VmMassnahme MAS WITH (READUNCOMMITTED) 
                 INNER JOIN (SELECT Code
                             FROM   dbo.XLOVCode WITH (READUNCOMMITTED) 
                             WHERE  LOVName = 'VmZGB'
                                    AND Value2 = 'Kinder') ZGB
                       ON ',' + MAS.ZGBCodes + ',' LIKE  '%,' + CONVERT(VARCHAR,Code) + ',%'
                 INNER JOIN dbo.VmErnennung ERN WITH (READUNCOMMITTED) ON ERN.VmMassnahmeID = MAS.VmMassnahmeID
                 WHERE  DatumBis BETWEEN @DatumVon AND @DatumBis
                )
INSERT INTO @Kennzahlen VALUES ('340200 Vormundschaftspflege','Anzahl aufgehobene Mandate Kindesschutz', @Kennzahl, 'Anzahl',28)
--s) END         --

/* Mantis 719: Ergänzungen*/
SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung SIE WITH (READUNCOMMITTED)
                 WHERE SIE.SiegelungsDatum BETWEEN @DatumVon AND @DatumBis
                   AND SIE.SiegelungsFristEingehalten = 1
                 )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Siegelungen innerhalb 14 Tage (Checkbox)', @Kennzahl, 'Anzahl',29)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung SIE WITH (READUNCOMMITTED)
                   LEFT JOIN dbo.VmErblasser ERB WITH (READUNCOMMITTED) on ERB.FaLeistungID = SIE.FaLeistungID
                 WHERE SIE.SiegelungsDatum BETWEEN @DatumVon AND @DatumBis
                   AND Datediff(Day, ERB.Todesdatum, SIE.SiegelungsDatum) &lt; 14
                 )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Siegelungen innerhalb 14 Tage (Todesdatum/Siegelungsdatum)', @Kennzahl, 'Anzahl',300)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung SIE WITH (READUNCOMMITTED)
                 WHERE SIE.SiegelungsDatum BETWEEN @DatumVon AND @DatumBis
                   AND isNull(SIE.SiegelungsFristEingehalten, 0) = 0
                 )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Siegelungen ausserhalb 14 Tage (Checkbox)', @Kennzahl, 'Anzahl',30)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung SIE WITH (READUNCOMMITTED)
                   LEFT JOIN dbo.VmErblasser ERB WITH (READUNCOMMITTED) on ERB.FaLeistungID = SIE.FaLeistungID
                 WHERE SIE.SiegelungsDatum BETWEEN @DatumVon AND @DatumBis
                   AND Datediff(Day, ERB.Todesdatum, SIE.SiegelungsDatum) &gt;= 14
                 )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Siegelungen ausserhalb 14 Tage (Todesdatum/Siegelungsdatum)', @Kennzahl, 'Anzahl',301)



SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung         SIE WITH (READUNCOMMITTED)
                 WHERE SIE.SiegelungsDatum BETWEEN @DatumVon AND @DatumBis
                 )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Anzahl Siegelungen', @Kennzahl, 'Anzahl',31)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmTestament                   TST WITH (READUNCOMMITTED)
                   INNER JOIN dbo.VmTestamentVerfuegung TSV WITH (READUNCOMMITTED) ON TSV.VmTestamentID = TST.VmTestamentID
                 WHERE TSV.Eingangsdatum BETWEEN @DatumVon AND @DatumBis
                   AND DATEDIFF(MONTH, TSV.EingangsDatum, TSV.EroeffnungsDatum)  &lt;= 1)
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Testamentseröffnung innerhalb 1 Monat', @Kennzahl, 'Anzahl',32)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmTestament                   TST WITH (READUNCOMMITTED)
                   INNER JOIN dbo.VmTestamentVerfuegung TSV WITH (READUNCOMMITTED) ON TSV.VmTestamentID = TST.VmTestamentID
                 WHERE TSV.Eingangsdatum BETWEEN @DatumVon AND @DatumBis
                   AND DATEDIFF(MONTH, TSV.EingangsDatum, TSV.EroeffnungsDatum)  &gt; 1)
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Testamentseröffnung ausserhalb 1 Monat', @Kennzahl, 'Anzahl',33)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung              SIE WITH (READUNCOMMITTED)
                   INNER JOIN dbo.VmErbschaftsdienst ERD WITH (READUNCOMMITTED) ON ERD.FaLeistungID = SIE.FaLeistungID 
                                                   AND (ERD.Aktiv = 1 OR VertretungsBeistandschaft = 1)
                 WHERE SIE.TodesmeldungDatum BETWEEN @DatumVon AND @DatumBis )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Erbschaftsinventaranordnungen', @Kennzahl, 'Anzahl',34)

SET @Kennzahl = (SELECT COUNT(*)
                 FROM dbo.VmSiegelung              SIE WITH (READUNCOMMITTED)
                   INNER JOIN dbo.VmErbschaftsdienst ERD WITH (READUNCOMMITTED) ON ERD.FaLeistungID = SIE.FaLeistungID 
                                             AND ERD.LaufNr IS NOT NULL
                 WHERE SIE.TodesmeldungDatum BETWEEN @DatumVon AND @DatumBis )
INSERT INTO @Kennzahlen VALUES ('340300 Siegelungsdienst','Anzahl Erbfälle', @Kennzahl, 'Anzahl',35)


UPDATE @Kennzahlen
SET    Kennzahl = LEFT(Kennzahl,CHARINDEX('.',Kennzahl) + 1)
WHERE  Masseinheit = 'prozent'

SELECT Produktegruppe,
       Beschreibung,
       Kennzahl,
       Masseinheit,
       SortKey$ = SortKey
FROM   @Kennzahlen</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>