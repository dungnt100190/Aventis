<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>/*
Diese Abfrage listet alle Fälle auf, die in den drei Datum-Feldern in den Masken
Fallführung-&gt;Dokumentation-&gt;Besprechung
Fallführung-&gt;Dokumentation-&gt;Abmachungen
Fallführung-&gt;Dokumentation-&gt;Korrespondenz
keinen Eintrag enthalten, der jünger als 2 Wochen alt ist (heutiges Datum)

Idee: es werden zuerst alle einträge in den 3 verlangten feldern gesucht die einen eintrag haben --&gt; @DokuMitEintrag
      der "grösste" (späteste) eintrag pro FaLeistungid wird behalten.
      dann werden alle aktiven fälle, die nicht in der tabelle sind angezeigt
*/

DECLARE @BesprechungenFldID INT
DECLARE @AbmachungenFldID   INT
DECLARE @KorrespondenzFldID INT
SET @BesprechungenFldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaDokBesprDatum')
SET @AbmachungenFldID    = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaDokAbmDatum')
SET @KorrespondenzFldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaDokKorreDatum')

DECLARE @DokuMitEintrag TABLE(
   FaLeistungID     INT,
   EintragDatum DATETIME
)

INSERT @DokuMitEintrag
SELECT FAL.FaLeistungID,
       CASE WHEN SQL_VARIANT_PROPERTY(BSP.Value,'BaseType') IN('datetime', 'smalldatetime') THEN CONVERT(datetime, BSP.Value)
            WHEN SQL_VARIANT_PROPERTY(BSP.Value,'BaseType') = 'nvarchar' THEN CONVERT(datetime, BSP.Value,104)
            ELSE CONVERT(datetime, '18000101') --dann solls erscheinen (--&gt;frühes datum)
       END
FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
INNER JOIN dbo.DynaValue BSP WITH (READUNCOMMITTED) ON BSP.FaLeistungID = FAL.FaLeistungID                               AND
                            BSP.DynaFieldID = @BesprechungenFldID                     AND
                            BSP.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @BesprechungenFldID
                                                   ORDER BY GridRowID DESC)           AND
                            BSP.Value IS NOT NULL
--- AND FAL.UserID =  {edtUserID.LookupID}

INSERT @DokuMitEintrag
SELECT FAL.FaLeistungID,
       CASE WHEN SQL_VARIANT_PROPERTY(ABM.Value,'BaseType') IN('datetime', 'smalldatetime') THEN CONVERT(datetime, ABM.Value)
            WHEN SQL_VARIANT_PROPERTY(ABM.Value,'BaseType') = 'nvarchar' THEN CONVERT(datetime, ABM.Value,104)
            ELSE CONVERT(datetime, '18000101') --dann solls erscheinen (--&gt;frühes datum)
       END
FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
INNER JOIN dbo.DynaValue ABM WITH (READUNCOMMITTED) ON ABM.FaLeistungID = FAL.FaLeistungID                              AND
                            ABM.DynaFieldID = @AbmachungenFldID                      AND
                            ABM.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @AbmachungenFldID
                                                   ORDER BY GridRowID DESC)          AND
                            ABM.Value IS NOT NULL
--- AND FAL.UserID =  {edtUserID.LookupID}

INSERT @DokuMitEintrag
SELECT FAL.FaLeistungID,
       CASE WHEN SQL_VARIANT_PROPERTY(KOR.Value,'BaseType') IN('datetime', 'smalldatetime') THEN CONVERT(datetime, KOR.Value)
            WHEN SQL_VARIANT_PROPERTY(KOR.Value,'BaseType') = 'nvarchar' THEN CONVERT(datetime, KOR.Value,104)
            ELSE CONVERT(datetime, '18000101') --dann solls erscheinen (--&gt;frühes datum)
       END
FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
INNER JOIN dbo.DynaValue KOR WITH (READUNCOMMITTED) ON KOR.FaLeistungID = FAL.FaLeistungID                                  AND
                            KOR.DynaFieldID = @KorrespondenzFldID                        AND
                            KOR.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @KorrespondenzFldID
                                                   ORDER BY GridRowID DESC)              AND
                            KOR.Value IS NOT NULL
--- AND FAL.UserID =  {edtUserID.LookupID}

--löschen der einträge die mehr als 14 Tage alt sind
DELETE @DokuMitEintrag
WHERE DATEDIFF(DAY, EintragDatum, GETDATE()) &gt; 14

SELECT SAR             = BEN.LastName + isNull(', ' + BEN.FirstName,''),
       Person          = PRS.Name + isNull(', ' + PRS.Vorname,''),
       [Letzte Aktion] = CASE WHEN CONVERT(DATETIME, BSP.Value) &gt;= CONVERT(DATETIME, ISNULL(ABM.Value, '17531231')) AND
                                   CONVERT(DATETIME, BSP.Value) &gt;= CONVERT(DATETIME, ISNULL(KOR.Value, '17531231'))
                                   THEN CONVERT(DATETIME, BSP.Value)
                              ELSE CASE WHEN CONVERT(DATETIME, ABM.Value) &gt;= CONVERT(DATETIME, ISNULL(KOR.Value, '17531231'))
                                             THEN CONVERT(DATETIME, ABM.Value)
                                        ELSE CONVERT(DATETIME, KOR.Value)
                                   END
                         END,
       UserID$         = BEN.UserID,
       BaPersonID$    = PRS.BaPersonID
FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
INNER JOIN dbo.XUser BEN WITH (READUNCOMMITTED) ON BEN.UserID = FAL.UserID
INNER JOIN dbo.BaPerson PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = FAL.BaPersonID
LEFT  JOIN dbo.DynaValue BSP WITH (READUNCOMMITTED) ON BSP.FaLeistungID = FAL.FaLeistungID                               AND
                            BSP.DynaFieldID = @BesprechungenFldID                     AND
                            BSP.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @BesprechungenFldID
                                                   ORDER BY GridRowID DESC)
LEFT  JOIN dbo.DynaValue ABM WITH (READUNCOMMITTED) ON ABM.FaLeistungID = FAL.FaLeistungID                              AND
                            ABM.DynaFieldID = @AbmachungenFldID                      AND
                            ABM.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @AbmachungenFldID
                                                   ORDER BY GridRowID DESC)
LEFT  JOIN dbo.DynaValue KOR WITH (READUNCOMMITTED) ON KOR.FaLeistungID = FAL.FaLeistungID                                  AND
                            KOR.DynaFieldID = @KorrespondenzFldID                        AND
                            KOR.GridRowID = (SELECT TOP 1 GridRowID
                                             FROM dbo.DynaValue WITH (READUNCOMMITTED)
                                             WHERE FaLeistungID = FAL.FaLeistungID AND
                                                   DynaFieldID = @KorrespondenzFldID
                                                   ORDER BY GridRowID DESC)

WHERE FAL.FaLeistungID NOT IN (SELECT FaLeistungID From @DokuMitEintrag) AND
      FAL.DatumBis IS NULL AND --nur aktive
      FAL.ModulID = 2 --Fallführung
--- AND BEN.UserID =  {edtUserID.LookupID}
ORDER BY SAR, Person</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>