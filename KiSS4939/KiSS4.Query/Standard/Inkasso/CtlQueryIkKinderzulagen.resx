<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE
  @UserID INT,
  @IkRechtstitelID INT,
  @OldRTID INT,
  @NummerID INT,
  @IkForderungID INT,
  @BaPersonID INT,
  @Betrag_Basis MONEY,
  @VornameName VARCHAR(200),
  @Geburtsdatum DATETIME,
  @Date DATETIME


SET @Date = {0}
SET @UserID = {1}


CREATE TABLE #GLBs (
  ID INT IDENTITY(1,1) NOT NULL,
  IkRechtstitelID INT,
  NummerID INT,
  BaPersonID INT,
  IkForderungID INT,
  Betrag_Basis MONEY,
  VornameName VARCHAR(200),
  Geburtsdatum DATETIME,
  CONSTRAINT [PK_ID] PRIMARY KEY CLUSTERED(ID) 
)

DECLARE CursorChilds CURSOR FAST_FORWARD FOR
  SELECT
    F.IkRechtstitelID, F.IkForderungID, F.BaPersonID, 
    F.Betrag, 
    ISNULL(P.Vorname + ' ', '') + P.Name, P.Geburtsdatum
  FROM dbo.IkForderung F WITH (READUNCOMMITTED)
  INNER JOIN dbo.IkRechtstitel R WITH(READUNCOMMITTED) ON R.IkRechtstitelID = F.IkRechtstitelID
  LEFT JOIN dbo.FaLeistung LST WITH(READUNCOMMITTED) ON LST.FaLeistungID = R.FaLeistungID
  LEFT JOIN dbo.BaPerson P WITH (READUNCOMMITTED) ON P.BaPersonID = F.BaPersonID
  WHERE F.IkForderungPeriodischCode = 3 -- nur Kinderzulagen
    AND (@UserID = 0 OR LST.UserID = @UserID)
    AND LST.DatumBis IS NULL
    --AND F.Betrag &gt; 0
    --AND YEAR(F.DatumAnpassenAb) = @Year
    AND dbo.fnDateOf(F.DatumAnpassenAb) &lt;= @Date
    AND (F.DatumGueltigBis IS NULL OR dbo.fnDateOf(F.DatumGueltigBis) &lt;= @Date)
    AND dbo.fnDateOf(F.DatumGueltigBis) &lt;= @Date
/*
    AND F.IkForderungID = (
      SELECT TOP 1 FF.IkForderungID FROM dbo.IkForderung FF WITH(READUNCOMMITTED)
      WHERE FF.IkRechtstitelID = F.IkRechtstitelID
        AND FF.BaPersonID = F.BaPersonID
        AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
        AND dbo.fnDateOf(F.DatumAnpassenAb) &lt;= @Date

        --AND YEAR(FF.DatumAnpassenAb) = @Year
        --AND (FF.DatumGueltigBis IS NULL OR YEAR(FF.DatumGueltigBis) &gt; @Year)
        AND dbo.fnDateOf(F.DatumAnpassenAb) &lt;= @Date
      ORDER BY FF.DatumAnpassenAb DESC
    )
    AND NOT EXISTS(
      SELECT TOP 1 FF.IkForderungID FROM dbo.IkForderung FF WITH(READUNCOMMITTED)
      WHERE FF.IkRechtstitelID = F.IkRechtstitelID
        AND FF.BaPersonID = F.BaPersonID
        AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
        AND ISNULL(FF.Betrag, 0) = 0
        AND YEAR(FF.DatumAnpassenAb) &lt;= @Year
        AND FF.DatumAnpassenAb &gt; F.DatumAnpassenAb
        AND (FF.DatumGueltigBis IS NULL OR YEAR(FF.DatumGueltigBis) &gt; @Year)
    )
    AND NOT EXISTS(
      SELECT TOP 1 FF.IkForderungID FROM dbo.IkForderung FF WITH(READUNCOMMITTED)
      WHERE FF.IkRechtstitelID = F.IkRechtstitelID
        AND FF.BaPersonID = F.BaPersonID
        AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
        AND YEAR(FF.DatumAnpassenAb) = @Year + 1
    )
*/
  ORDER BY F.IkRechtstitelID ASC, P.Geburtsdatum ASC
OPEN CursorChilds

SET @NummerID = 0
SET @OldRTID = -1
WHILE 1=1 BEGIN
  FETCH NEXT FROM CursorChilds INTO 
    @IkRechtstitelID, @IkForderungID, @BaPersonID, 
    @Betrag_Basis, 
    @VornameName, @Geburtsdatum
  IF @@FETCH_STATUS != 0 BREAK
  SET @NummerID = @NummerID + 1
  IF @OldRTID != @IkRechtstitelID SET @NummerID = 1
  INSERT INTO #GLBs (
    IkRechtstitelID, IkForderungID, NummerID, BaPersonID, 
    Betrag_Basis, 
    VornameName, Geburtsdatum)
  VALUES (
    @IkRechtstitelID, @IkForderungID, @NummerID, @BaPersonID, 
    @Betrag_Basis, 
    @VornameName, @Geburtsdatum)
  SET @OldRTID = @IkRechtstitelID
END
CLOSE CursorChilds
DEALLOCATE CursorChilds

SELECT
  Falltraeger_Name = FT.Name,
  Falltraeger_Vorname = FT.Vorname,
  Falltraeger_PersonenNummer = FT.BaPersonID,
  Falltraeger_FallNummer = FLL.FaFallID,
  -- 1. Gläubiger
  Glb01_BaPersonID = CH01.BaPersonID,
  Glb01_VornameName = CH01.VornameName,
  Glb01_Geburtsdatum = CH01.Geburtsdatum,
  Glb01_IkForderungID = CH01.IkForderungID,
  Glb01_AlteKiZu = CH01.Betrag_Basis,
  -- 2. Gläubiger
  Glb02_BaPersonID = CH02.BaPersonID,
  Glb02_VornameName = CH02.VornameName,
  Glb02_Geburtsdatum = CH02.Geburtsdatum,
  Glb02_IkForderungID = CH02.IkForderungID,
  Glb02_AlteKiZu = CH02.Betrag_Basis,
  -- 3. Gläubiger
  Glb03_BaPersonID = CH03.BaPersonID,
  Glb03_VornameName = CH03.VornameName,
  Glb03_Geburtsdatum = CH03.Geburtsdatum,
  Glb03_IkForderungID = CH03.IkForderungID,
  Glb03_AlteKiZu = CH03.Betrag_Basis,
  -- 4. Gläubiger
  Glb04_BaPersonID = CH04.BaPersonID,
  Glb04_VornameName = CH04.VornameName,
  Glb04_Geburtsdatum = CH04.Geburtsdatum,
  Glb04_IkForderungID = CH04.IkForderungID,
  Glb04_AlteKiZu = CH04.Betrag_Basis,
  -- 5. Gläubiger
  Glb05_BaPersonID = CH05.BaPersonID,
  Glb05_VornameName = CH05.VornameName,
  Glb05_Geburtsdatum = CH05.Geburtsdatum,
  Glb05_IkForderungID = CH05.IkForderungID,
  Glb05_AlteKiZu = CH05.Betrag_Basis,
  -- 6. Gläubiger
  Glb06_BaPersonID = CH06.BaPersonID,
  Glb06_VornameName = CH06.VornameName,
  Glb06_Geburtsdatum = CH06.Geburtsdatum,
  Glb06_IkForderungID = CH06.IkForderungID,
  Glb06_AlteKiZu = CH06.Betrag_Basis,
  -- 7. Gläubiger
  Glb07_BaPersonID = CH07.BaPersonID,
  Glb07_VornameName = CH07.VornameName,
  Glb07_Geburtsdatum = CH07.Geburtsdatum,
  Glb07_IkForderungID = CH07.IkForderungID,
  Glb07_AlteKiZu = CH07.Betrag_Basis,
  -- 8. Gläubiger
  Glb08_BaPersonID = CH08.BaPersonID,
  Glb08_VornameName = CH08.VornameName,
  Glb08_Geburtsdatum = CH08.Geburtsdatum,
  Glb08_IkForderungID = CH08.IkForderungID,
  Glb08_AlteKiZu = CH08.Betrag_Basis,
  -- 9. Gläubiger
  Glb09_BaPersonID = CH09.BaPersonID,
  Glb09_VornameName = CH09.VornameName,
  Glb09_Geburtsdatum = CH09.Geburtsdatum,
  Glb09_IkForderungID = CH09.IkForderungID,
  Glb09_AlteKiZu = CH09.Betrag_Basis,
  -- 10. Gläubiger
  Glb10_BaPersonID = CH10.BaPersonID,
  Glb10_VornameName = CH10.VornameName,
  Glb10_Geburtsdatum = CH10.Geburtsdatum,
  Glb10_IkForderungID = CH10.IkForderungID,
  Glb10_AlteKiZu = CH10.Betrag_Basis,
  -- Selektion
  -- User
  SB_LogonName = USR.LogonName,
  SB_VornameName = USR.VornameName,
  SB_Displayname = USR.DisplayText,
  -- User Sachbearbeiter
  KopieAn = 'Kopie an: ' + SAR.VornameName,
  KopieAn_SZ = SAR.Sozialzentrum,
  KopieAn_QT = SAR.OrgEinheitName

FROM dbo.FaLeistung LST WITH(READUNCOMMITTED)
LEFT JOIN dbo.vwUser USR ON USR.UserID = LST.UserID
LEFT JOIN dbo.vwUser SAR ON SAR.UserID = (
  SELECT TOP 1 LS.UserID FROM dbo.FaLeistung LS WITH(READUNCOMMITTED) 
  WHERE LS.FaProzessCode = 200 AND LS.FaFallID = LST.FaFallID AND LS.DatumBis IS NULL)
LEFT JOIN dbo.FaFall FLL WITH(READUNCOMMITTED) ON FLL.FaFallID = LST.FaFallID
LEFT JOIN dbo.BaPerson FT WITH(READUNCOMMITTED) ON FT.BaPersonID = FLL.BaPersonID
LEFT JOIN dbo.IkRechtstitel RT WITH(READUNCOMMITTED) ON RT.FaLeistungID = LST.FaLeistungID
LEFT JOIN dbo.IkRechtstitelInfos RTI WITH(READUNCOMMITTED) ON RTI.IkRechtstitelInfosID = (
  SELECT TOP 1 R.IkRechtstitelInfosID FROM dbo.IkRechtstitelInfos R WITH(READUNCOMMITTED)
  WHERE R.IkRechtstitelID = RT.IkRechtstitelID
  ORDER BY R.RechtstitelDatumVon DESC )
LEFT JOIN dbo.XLOVCode RTILOV WITH(READUNCOMMITTED) ON RTILOV.LOVName='IkRechtstitel' AND RTILOV.Code = RTI.IkRechtstitelCode
LEFT JOIN #GLBs CH01 ON CH01.IkRechtstitelID = RT.IkRechtstitelID AND CH01.NummerID = 1
LEFT JOIN #GLBs CH02 ON CH02.IkRechtstitelID = RT.IkRechtstitelID AND CH02.NummerID = 2
LEFT JOIN #GLBs CH03 ON CH03.IkRechtstitelID = RT.IkRechtstitelID AND CH03.NummerID = 3
LEFT JOIN #GLBs CH04 ON CH04.IkRechtstitelID = RT.IkRechtstitelID AND CH04.NummerID = 4
LEFT JOIN #GLBs CH05 ON CH05.IkRechtstitelID = RT.IkRechtstitelID AND CH05.NummerID = 5
LEFT JOIN #GLBs CH06 ON CH06.IkRechtstitelID = RT.IkRechtstitelID AND CH06.NummerID = 6
LEFT JOIN #GLBs CH07 ON CH07.IkRechtstitelID = RT.IkRechtstitelID AND CH07.NummerID = 7
LEFT JOIN #GLBs CH08 ON CH08.IkRechtstitelID = RT.IkRechtstitelID AND CH08.NummerID = 8
LEFT JOIN #GLBs CH09 ON CH09.IkRechtstitelID = RT.IkRechtstitelID AND CH09.NummerID = 9
LEFT JOIN #GLBs CH10 ON CH10.IkRechtstitelID = RT.IkRechtstitelID AND CH10.NummerID = 10
WHERE LST.FaProzessCode = 405
  AND RT.IkRechtstitelID IN ( SELECT CH.IkRechtstitelID FROM #GLBs CH )
ORDER BY FT.Name, FT.Vorname

DROP TABLE #GLBs</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>