<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>declare @AyUnterkunftPersonFldID int
declare @AyUnterkunftUnterkunftFldID int
declare @AyUnterkunftEintrittFldID int
declare @AyUnterkunftAustrittFldID int
declare @AyUnterkunftRueckerstattungFldID int
declare @AyUnterkunftBemerkungFldID int

set     @AyUnterkunftPersonFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftPerson')
set     @AyUnterkunftUnterkunftFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftUnterkunft')
set     @AyUnterkunftEintrittFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftEintritt')
set     @AyUnterkunftAustrittFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftAustritt')
set     @AyUnterkunftRueckerstattungFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftRueckerstattung')
set     @AyUnterkunftBemerkungFldID = (select DynaFieldID from dbo.DynaField WITH (READUNCOMMITTED) where FieldName = 'AyUnterkunftBemerkung')

declare @tbl table (
  BaPersonID    int,
  FaLeistungID       int,
  GridRowID      int,
  UnterkunftCode int,
  DatumVon       datetime,
  DatumBis       datetime,
  Rueckerst      bit,
  Bemerkung      varchar(8000) )

insert @tbl (BaPersonID,FaLeistungID,GridRowID)
select convert(int,VAL.Value),
       FAL.FaLeistungID,
       VAL.GridRowID
from   dbo.FaLeistung FAL WITH (READUNCOMMITTED)
       inner join dbo.DynaValue VAL WITH (READUNCOMMITTED) on VAL.FaLeistungID = FAL.FaLeistungID and
                            VAL.DynaFieldID = @AyUnterkunftPersonFldID
where  ModulID = 6
--- AND FAL.UserID =  {edtUserID.LookupID}
--- AND ({edtNurAktive} = 0 or FAL.DatumBis IS NULL)

update TBL
set    UnterkunftCode = convert(int,VAL1.Value),
       DatumVon = convert(datetime,VAL2.Value),
       DatumBis = convert(datetime,VAL3.Value),
       Rueckerst = convert(bit,isNull(VAL4.Value,0)),
       Bemerkung = convert(varchar(8000),VAL5.Value)
from   @tbl TBL
       left join dbo.DynaValue VAL1 WITH (READUNCOMMITTED) on VAL1.FaLeistungID = TBL.FaLeistungID and
                                   VAL1.GridRowID = TBL.GridRowID and
                                   VAL1.DynaFieldID = @AyUnterkunftUnterkunftFldID
       left join dbo.DynaValue VAL2 WITH (READUNCOMMITTED) on VAL2.FaLeistungID = TBL.FaLeistungID and
                                   VAL2.GridRowID = TBL.GridRowID and
                                   VAL2.DynaFieldID = @AyUnterkunftEintrittFldID
       left join dbo.DynaValue VAL3 WITH (READUNCOMMITTED) on VAL3.FaLeistungID = TBL.FaLeistungID and
                                   VAL3.GridRowID = TBL.GridRowID and
                                   VAL3.DynaFieldID = @AyUnterkunftAustrittFldID
       left join dbo.DynaValue VAL4 WITH (READUNCOMMITTED) on VAL4.FaLeistungID = TBL.FaLeistungID and
                                   VAL4.GridRowID = TBL.GridRowID and
                                   VAL4.DynaFieldID = @AyUnterkunftRueckerstattungFldID
       left join dbo.DynaValue VAL5 WITH (READUNCOMMITTED) on VAL5.FaLeistungID = TBL.FaLeistungID and
                                   VAL5.GridRowID = TBL.GridRowID and
                                   VAL5.DynaFieldID = @AyUnterkunftBemerkungFldID

select [Fallträger] = PRS2.Name + ' ' + isnull(PRS2.Vorname,''),
       [Schlüssel] = substring(replace(replace(PRS.NNummer,'N',''),' ',''),1,3) + '''' +
                     substring(replace(replace(PRS.NNummer,'N',''),' ',''),4,3),
       Name = PRS.Name + ' ' + isnull(PRS.Vorname,''),
       Unterkunft = UTK.Text,
       Eintritt = TBL.DatumVon,
       Austritt = TBL.DatumBis,
       [Rückerstattung] = TBL.Rueckerst,
       TBL.Bemerkung,
       BaPersonID$ = PRS2.BaPersonID
from   @tbl TBL
       inner join dbo.BaPerson PRS WITH (READUNCOMMITTED)  on PRS.BaPersonID = TBL.BaPersonID
       inner join dbo.FaLeistung    FAL WITH (READUNCOMMITTED)  on FAL.FaLeistungID = TBL.FaLeistungID
       inner join dbo.BaPerson PRS2 WITH (READUNCOMMITTED) on PRS2.BaPersonID = FAL.BaPersonID
       left  join dbo.XLOVCode  UTK WITH (READUNCOMMITTED)  on UTK.Lovname = 'AyUnterkunft' and
                                    UTK.Code = TBL.UnterkunftCode
where  1=1
--- AND TBL.DatumVon &lt;= {edtDatumBis} AND isNull(TBL.DatumBis,{edtDatumBis}) &gt;= {edtDatumVon}

order by [Schlüssel], Eintritt</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
</root>