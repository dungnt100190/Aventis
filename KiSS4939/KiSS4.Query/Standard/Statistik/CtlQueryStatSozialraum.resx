<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @FaAustattungVerProduktID INT,
        @VmAuftragStatFamFormID INT;
        
DECLARE @DatumVon DATETIME,
        @DatumBis DATETIME;        

SELECT @DatumVon = '19000101',
       @DatumBis = '99990101';
---SET @DatumVon = {edtDatumVon};
---SET @DatumBis = {edtDatumBis};

DECLARE @ModulID      varchar(500);
SET @ModulID  = NULL;
---  set @ModulID  = {edtModulID};

DECLARE @Module TABLE (
  ModulID INT
);

INSERT INTO @Module(ModulID)
  SELECT CONVERT(INT, SplitValue)
  FROM dbo.fnSplitStringToValues(@ModulID, ',', 0);  

DECLARE @ProzessCode  INT;
SET @ProzessCode = NULL;
--- SET @ProzessCode = {edtProzess};


SELECT @FaAustattungVerProduktID = DynaFieldID 
FROM dbo.DynaField WITH (READUNCOMMITTED) 
WHERE FieldName = 'FaAusstattungVerProdukt';

SELECT @VmAuftragStatFamFormID = DynaFieldID 
FROM dbo.DynaField WITH (READUNCOMMITTED) 
WHERE FieldName = 'VmAuftragStatFamForm';

SELECT 
  BaPersonID$         = LEI.BaPersonID,
  Sektion             = XOU.ItemName,
  SAR                 = USR.NameVorname,
  [Name Klient]       = PRS.NameVorname,
  [Alter]             = PRS.[Alter],
  Geschlecht          = GES.Text,
  Nation              = PRS.Nationalitaet,
  Strasse             = ADR.Strasse,
  [Nr.]               = ADR.HausNr,
  Postleitzahl        = ADR.PLZ,
  Ort                 = ADR.Ort,
  Stadtteil           = NULL,
  Statistikkreis      = NULL,
  Schulkreis          = NULL,
  
  Produkt             = CASE PHA.FaPhaseCode
                          WHEN 1 THEN 'Abklärung' --LOV:DynaPhase 1: Intake
                          WHEN 2 THEN dbo.fnLOVText('FaProdukt', CONVERT(INT, VER.Value))--2: Beratung
                          ELSE NULL
                        END,

  [Auftrag Jugendamt] = dbo.fnLOVText('VmAuftrag', VML.VmAuftragCode),
  Familienform        = dbo.fnLOVText('VmStatFamilienform', CONVERT(INT, FAM.Value)),
  Gefährdungsmeldung  = dbo.fnLOVTextListe('FaThema', GME.FaThemaCodes)
  
FROM dbo.FaLeistung             LEI WITH (READUNCOMMITTED)
  INNER JOIN dbo.vwUser         USR WITH (READUNCOMMITTED) ON USR.UserID = LEI.UserID
  INNER JOIN dbo.vwPerson       PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID 
                                                          AND PRS.Testperson = 0
  LEFT  JOIN dbo.BaAdresse      ADR WITH (READUNCOMMITTED) ON ADR.BaAdresseID = (SELECT FCN.BaAdresseID
                                                                                 FROM dbo.fnBaGetBaAdresseID_BaPerson(1, @DatumBis) FCN
                                                                                 WHERE FCN.BaPersonID = PRS.BaPersonID)
  LEFT  JOIN dbo.XOrgUnit_User  OUU WITH (READUNCOMMITTED) ON OUU.UserID = LEI.UserID 
                                                          AND OUU.OrgUnitMemberCode = 2
  LEFT  JOIN dbo.XOrgUnit       XOU WITH (READUNCOMMITTED) ON XOU.OrgUnitID = OUU.OrgUnitID
  LEFT  JOIN dbo.XLOVCode       GES WITH (READUNCOMMITTED) ON GES.Code = PRS.GeschlechtCode
                                                          AND GES.LOVName = 'Geschlecht'
  LEFT  JOIN dbo.BgFinanzplan   FPL WITH (READUNCOMMITTED) ON FPL.FaLeistungID = LEI.FaLeistungID 
                                                          AND FPL.BgFinanzplanID = (SELECT TOP 1 BgFinanzplanID
                                                                                    FROM   dbo.BgFinanzplan WITH (READUNCOMMITTED)
                                                                                    WHERE  FaLeistungID = LEI.FaLeistungID AND
                                                                                           BgBewilligungStatusCode in (5, 9) AND 
                                                                                           dbo.fnDateOf(DatumVon) &lt;= @DatumBis AND
                                                                                           dbo.fnDateOf(DatumBis) &gt;= @DatumVon 
                                                                                    ORDER BY DatumVon DESC)
  OUTER APPLY (SELECT FaLeistungID, VmAuftragCode
               FROM dbo.FaLeistung WITH (READUNCOMMITTED)
               WHERE FaLeistungID = LEI.FaLeistungID
                 AND LEI.ModulID = 5                      --Wenn abgefragte Leistung eine V-Leistung ist, dann gleich Diese nehmen
               UNION ALL
               SELECT TOP 1 FaLeistungID, VmAuftragCode
               FROM dbo.FaLeistung WITH (READUNCOMMITTED) 
               WHERE ModulID = 5
                 AND BaPersonID = LEI.BaPersonID
                 AND dbo.fnDateOf(DatumVon) &lt;= IsNull(dbo.fnDateOf(LEI.DatumBis), @DatumBis)
                 AND IsNull(dbo.fnDateOf(DatumBis), @DatumBis) &gt;= LEI.DatumVon
                 AND LEI.ModulID &lt;&gt; 5                     --Wenn abgefragte Leistung keine V-Leistung ist, dann letzte im Abfragezeitraum nehmen
               ORDER BY DatumVon DESC) VML

  OUTER APPLY (SELECT TOP 1 FaLeistungID
               FROM dbo.FaLeistung WITH (READUNCOMMITTED) 
               WHERE ModulID = 2
                 AND BaPersonID = LEI.BaPersonID
                 AND dbo.fnDateOf(DatumVon) &lt;= IsNull(dbo.fnDateOf(LEI.DatumBis), @DatumBis)
                 AND IsNull(dbo.fnDateOf(DatumBis), @DatumBis) &gt;= LEI.DatumVon
               ORDER BY DatumVon DESC) FAL
                 
  OUTER APPLY (SELECT TOP 1 FaPhaseID, FaPhaseCode
               FROM FaPhase PHA
               WHERE PHA.FaLeistungID = FAL.FaLeistungID
                 AND dbo.fnDateOf(PHA.DatumVon) &lt;= IsNull(dbo.fnDateOf(LEI.DatumBis), @DatumBis)
                 AND IsNull(dbo.fnDateOf(PHA.DatumBis), @DatumBis) &gt;= LEI.DatumVon
               ORDER BY PHA.DatumVon DESC) PHA 

  OUTER APPLY (SELECT TOP 1 FaThemaCodes
               FROM VmGefaehrdungsMeldung 
               WHERE FaLeistungID = VML.FaLeistungID
                 AND IsNull(DatumEingang, @DatumVon) BETWEEN @DatumVon AND @DatumBis
               ORDER BY DatumEingang) GME
               
  LEFT  JOIN dbo.DynaValue FAM WITH (READUNCOMMITTED) ON FAM.DynaFieldID = @VmAuftragStatFamFormID 
                                                     AND FAM.FaLeistungID = VML.FaLeistungID
  LEFT  JOIN dbo.DynaValue VER WITH (READUNCOMMITTED) ON VER.DynaFieldID = @FaAustattungVerProduktID
                                                     AND VER.FaPhaseID = PHA.FaPhaseID
                                                      
WHERE 1 = 1
  AND dbo.fnDateOf(LEI.DatumVon) &lt;= @DatumBis
  AND IsNull(dbo.fnDateOf(LEI.DatumBis), @DatumBis) &gt;= @DatumVon
  AND (@ModulID IS NULL OR LEI.ModulID IN (SELECT ModulID FROM @Module))
  AND (@ProzessCode IS NULL OR LEI.FaProzessCode = @ProzessCode)
---  AND (XOU.OrgUnitID = {edtOrgUnitID} OR XOU.ParentID = {edtOrgUnitID})
---  AND OUU.UserID = {edtUserID.LookupID}

  --Gleiche Bedingungen wie in Abfrage "Fallentwicklung nach Modulen":
  --------------------------------------------------------------------
  --Wenn Suche nach SH-Leistungen, nur solche Fälle mit einem bewilligten Finanzplan in diesem Zeitraum
  AND (LEI.ModulID &lt;&gt; 3 OR FPL.BgFinanzplanID IS NOT NULL) 
  --Wenn Suche nach F-Leistungen, nur solche Fälle ohne anderweitiges Modul (Reine Fallführung)
  AND (LEI.ModulID &lt;&gt; 2 OR NOT EXISTS(SELECT TOP 1 1
                                      FROM dbo.FaLeistung WITH (READUNCOMMITTED) 
                                      WHERE BaPersonID = LEI.BaPersonID 
                                        AND dbo.fnDateOf(DatumVon) &lt;= @DatumBis
                                        AND IsNull(dbo.fnDateOf(DatumBis), @DatumBis) &gt;= @DatumVon
                                        AND ModulID &lt;&gt; 2)) --Wenn Suche nach Fallführung, nur solche Fälle ohne anderes aktives Modul
  --Wenn Suche nach I-,V- oder A-Leistungen: nur solche Fälle ohne Prozesscode und nicht Prozess: Abklärung
  AND (LEI.ModulID NOT IN (4,5,6) OR LEI.FaProzessCode IS NULL OR LEI.FaProzessCode &lt;&gt; 400)

ORDER BY PRS.NameVorname
</value>
  </data>
  <data name="edtUserID.LookupSQL" xml:space="preserve">
    <value>SELECT
  ID = UserID,
  SAR = LastName + ISNULL(', ' + FirstName, ''),
  [Kuerzel] = LogonName
FROM dbo.XUser WITH (READUNCOMMITTED)
WHERE LastName + ISNULL(', ' + FirstName, '') LIKE ISNULL({0}, '') + '%'
ORDER BY SAR;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>