<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @UserID INT;
DECLARE @LanguageCode INT;

SET @UserID = {0};
SET @LanguageCode = {1};

SELECT -- id
       [BaPersonID$]          = PRS.BaPersonID,
 
       -- general data
       [KL]                   = CONVERT(BIT, CASE 
                                               WHEN ISNULL(LEI_FV.FaLeistungID, -1) &gt; 0 THEN 1 
                                               ELSE 0 
                                             END),
       [ID]                   = PRS.BaPersonID,
       [Name]                 = PRS.Name, 
       [Vorname]              = PRS.Vorname,
       [Geb.Dat.]             = PRS.Geburtsdatum,
       [Alter]                = PRS.[Alter], 
       [m/w]                  = dbo.fnGetGenderMLTitleMF(PRS.GeschlechtCode, @LanguageCode), 
       [Vers.-Nr.]            = PRS.VersichertenNummer,
       [Strasse]              = PRS.WohnsitzStrasseHausNr,
       [PLZ]                  = PRS.WohnsitzPLZ,
       [Ort]                  = PRS.WohnsitzOrt,
       [Heimatort]            = PRS.Heimatort,
       [Email]                = PRS.EMail,
       [Kontoführung]         = PRS.KontoFuehrung,
       --
       [KST]                  = CASE
                                  WHEN LEI_FV.UserID IS NULL THEN NULL
                                  ELSE dbo.fnCombineKSTOrgUnitItemName(ORG.Kostenstelle, ORG.ItemName)
                                END,
       [KGS]                  = CASE
                                  WHEN LEI_FV.UserID IS NULL THEN NULL
                                  ELSE dbo.fnGetHistKGSOfUserOrOrgUnit(NULL, GETDATE(), ORG.OrgUnitID, 0, 1)
                                END,
       -- responsibles
       [Verantwortliche/r FV] = dbo.fnGetLastFirstName(LEI_FV.UserID, NULL, NULL),
       [Verantwortliche/r SB] = dbo.fnGetLastFirstName(LEI_SB.UserID, NULL, NULL),
       [Verantwortliche/r CM] = dbo.fnGetLastFirstName(LEI_CM.UserID, NULL, NULL),
       [Verantwortliche/r BW] = dbo.fnGetLastFirstName(LEI_BW.UserID, NULL, NULL),
       [Verantwortliche/r ED] = dbo.fnGetLastFirstName(LEI_ED.UserID, NULL, NULL),
       [Verantwortliche/r IN] = dbo.fnGetLastFirstName(LEI_IN.UserID, NULL, NULL)
FROM dbo.vwPerson           PRS    WITH (READUNCOMMITTED)
  LEFT  JOIN dbo.FaLeistung LEI_FV WITH (READUNCOMMITTED) ON LEI_FV.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 2)
  LEFT  JOIN dbo.FaLeistung LEI_SB WITH (READUNCOMMITTED) ON LEI_SB.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 3)
  LEFT  JOIN dbo.FaLeistung LEI_CM WITH (READUNCOMMITTED) ON LEI_CM.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 4)
  LEFT  JOIN dbo.FaLeistung LEI_BW WITH (READUNCOMMITTED) ON LEI_BW.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 5)
  LEFT  JOIN dbo.FaLeistung LEI_ED WITH (READUNCOMMITTED) ON LEI_ED.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 6)
  LEFT  JOIN dbo.FaLeistung LEI_IN WITH (READUNCOMMITTED) ON LEI_IN.FaLeistungID = dbo.fnFaGetLastFaLeistungID(PRS.BaPersonID, 7)
  
  -- Fallfuehrung
  LEFT  JOIN dbo.XOrgUnit   ORG    WITH (READUNCOMMITTED) ON ORG.OrgUnitID = CONVERT(INT, dbo.fnOrgUnitOfUser(LEI_FV.UserID, 1))
WHERE 1=1
--- AND PRS.Name LIKE {edtSucheName} + '%'
--- AND PRS.Vorname LIKE {edtSucheVorname} + '%'
--- AND PRS.WohnsitzStrasseHausNr LIKE {edtSucheStrasse} + '%'
--- AND PRS.WohnsitzPLZ LIKE {edtSuchePLZ} + '%'
--- AND PRS.WohnsitzOrt LIKE {edtSucheOrt} + '%'
--- AND (PRS.Telefon_P LIKE {edtSucheTelefon} + '%' OR PRS.Telefon_G LIKE {edtSucheTelefon} + '%' OR PRS.MobilTel LIKE {edtSucheTelefon} + '%')
--- AND PRS.Geburtsdatum &gt;= {datSucheGeburtVon}
--- AND PRS.Geburtsdatum &lt;= {datSucheGeburtBis}
--- AND PRS.BaPersonID = {edtSucheBaPersonID}
--- AND PRS.NationalitaetCode = {edtSucheNationalitaet}
--- AND PRS.VersichertenNummer LIKE {edtSucheVersNummer} + '%'
--- AND CONVERT(BIT, CASE WHEN ISNULL(LEI_FV.FaLeistungID, -1) &gt; 0 THEN 1 ELSE 0 END) = CASE WHEN {chkSucheKL} = 1 THEN 1 ELSE CONVERT(BIT, CASE WHEN ISNULL(LEI_FV.FaLeistungID, -1) &gt; 0 THEN 1 ELSE 0 END) END
--- AND ({chkSucheNurSerienbrief} = 0 OR PRS.KeinSerienbrief = 0)
ORDER BY Name, Vorname;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="datSucheGeburtBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="datSucheGeburtVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>42</value>
  </metadata>
</root>