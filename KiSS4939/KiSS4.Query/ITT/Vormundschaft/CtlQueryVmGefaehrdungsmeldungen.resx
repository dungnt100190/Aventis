<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @VmAbklMeldedatumFldID   INT;
DECLARE @VmAbklMeldungDurchFldID INT;
DECLARE @VmAbklSARFldID          INT;
DECLARE @VmAbklBerichtPerFldID   INT;
DECLARE @VmAbklMassnahmenFldID   INT;
DECLARE @VmAbklBemerkungenFldID  INT;
SET @VmAbklMeldedatumFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMeldedatum');
SET @VmAbklMeldungDurchFldID = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMeldungDurch');
SET @VmAbklSARFldID          = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklSAR');
SET @VmAbklBerichtPerFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklBerichtPer');
SET @VmAbklMassnahmenFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMassnahmen');
SET @VmAbklBemerkungenFldID  = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklBemerkungen');

SELECT [BaPersonID$]   = PRS.BaPersonID,
       [Klient]        = PRS.Name + ISNULL(', '+ PRS.Vorname, ''),
       [Meldedatum]    = CONVERT(DATETIME, DV1.Value, 112),
       [Meldung durch] = DV2.Value,
       [SAR]           = USR.LastName + ISNULL(', ' + USR.FirstName, ''),
       [Bericht per]   = CONVERT(DATETIME, DV4.Value, 112),
       [Massnahmen]    = DV5.Value,
       [Bemerkungen]   = DV6.ValueText
FROM dbo.FaLeistung             LEI WITH (READUNCOMMITTED)
  INNER JOIN dbo.BaPerson  PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
  LEFT  JOIN dbo.DynaValue DV1 WITH (READUNCOMMITTED) ON DV1.FaLeistungID = LEI.FaLeistungID
                                                     AND DV1.DynaFieldID = @VmAbklMeldedatumFldID
  LEFT  JOIN dbo.DynaValue DV2 WITH (READUNCOMMITTED) ON DV2.FaLeistungID = LEI.FaLeistungID
                                                     AND DV2.DynaFieldID = @VmAbklMeldungDurchFldID
                                                     AND DV2.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV3 WITH (READUNCOMMITTED) ON DV3.FaLeistungID = LEI.FaLeistungID
                                                     AND DV3.DynaFieldID = @VmAbklSARFldID
                                                     AND DV3.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV4 WITH (READUNCOMMITTED) ON DV4.FaLeistungID = LEI.FaLeistungID
                                                     AND DV4.DynaFieldID = @VmAbklBerichtPerFldID
                                                     AND DV4.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV5 WITH (READUNCOMMITTED) ON DV5.FaLeistungID = LEI.FaLeistungID
                                                     AND DV5.DynaFieldID = @VmAbklMassnahmenFldID
                                                     AND DV5.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV6 WITH (READUNCOMMITTED) ON DV6.FaLeistungID = LEI.FaLeistungID
                                                     AND DV6.DynaFieldID = @VmAbklBemerkungenFldID
                                                     AND DV6.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.XUser     USR WITH (READUNCOMMITTED) ON USR.UserID = DV3.Value
WHERE LEI.ModulID = 5 
  AND LEI.FaProzessCode = 501
  AND (DV1.Value IS NOT NULL OR DV2.Value IS NOT NULL 
       OR DV3.Value IS NOT NULL OR DV4.Value IS NOT NULL
       OR DV5.Value IS NOT NULL OR DV6.ValueText IS NOT NULL)
---  AND YEAR(CONVERT(DATETIME, DV1.Value, 112)) = {edtJahr}
ORDER BY SAR ASC, Klient ASC;
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABbSURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2Gc
        GtLSGP4jY5BikEEYmgjZANIAUgO3CZcGZGdi1YDuJBgfpJE6NmALKZjYqJPIijh8KRYmhzXlEhIEANZ8
        ev1ASni6AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="qryListe2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>119, 17</value>
  </metadata>
  <data name="qryListe2.SelectStatement" xml:space="preserve">
    <value>DECLARE @VmAbklMeldedatumFldID   INT;
DECLARE @VmAbklMeldungDurchFldID INT;
DECLARE @VmAbklSARFldID          INT;
DECLARE @VmAbklBerichtPerFldID   INT;
DECLARE @VmAbklMassnahmenFldID   INT;
DECLARE @VmAbklBemerkungenFldID  INT;
SET @VmAbklMeldedatumFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMeldedatum');
SET @VmAbklMeldungDurchFldID = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMeldungDurch');
SET @VmAbklSARFldID          = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklSAR');
SET @VmAbklBerichtPerFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklBerichtPer');
SET @VmAbklMassnahmenFldID   = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklMassnahmen');
SET @VmAbklBemerkungenFldID  = (SELECT DynaFieldID FROM DynaField WHERE FieldName = 'VmAbklBemerkungen');

-- Total
SELECT [SAR]              = USR.LastName + ISNULL(', ' + USR.FirstName, ''),
       [Anzahl Meldungen] = COUNT(LEI.FaLeistungID)
FROM dbo.FaLeistung        LEI WITH (READUNCOMMITTED)
  INNER JOIN dbo.BaPerson  PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
  LEFT  JOIN dbo.DynaValue DV1 WITH (READUNCOMMITTED) ON DV1.FaLeistungID = LEI.FaLeistungID
                                                     AND DV1.DynaFieldID = @VmAbklMeldedatumFldID                                 
  LEFT  JOIN dbo.DynaValue DV2 WITH (READUNCOMMITTED) ON DV2.FaLeistungID = LEI.FaLeistungID
                                                     AND DV2.DynaFieldID = @VmAbklMeldungDurchFldID
                                                     AND DV2.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV3 WITH (READUNCOMMITTED) ON DV3.FaLeistungID = LEI.FaLeistungID
                                                     AND DV3.DynaFieldID = @VmAbklSARFldID
                                                     AND DV3.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV4 WITH (READUNCOMMITTED) ON DV4.FaLeistungID = LEI.FaLeistungID
                                                     AND DV4.DynaFieldID = @VmAbklBerichtPerFldID
                                                     AND DV4.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV5 WITH (READUNCOMMITTED) ON DV5.FaLeistungID = LEI.FaLeistungID
                                                     AND DV5.DynaFieldID = @VmAbklMassnahmenFldID
                                                     AND DV5.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV6 WITH (READUNCOMMITTED) ON DV6.FaLeistungID = LEI.FaLeistungID
                                                     AND DV6.DynaFieldID = @VmAbklBemerkungenFldID
                                                     AND DV6.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.XUser     USR WITH (READUNCOMMITTED) ON USR.UserID = DV3.Value
WHERE LEI.ModulID = 5
  AND LEI.FaProzessCode = 501
  AND (DV1.Value IS NOT NULL OR DV2.Value IS NOT NULL 
     OR DV3.Value IS NOT NULL OR DV4.Value IS NOT NULL
     OR DV5.Value IS NOT NULL OR DV6.ValueText IS NOT NULL)
---  AND YEAR(CONVERT(DATETIME, DV1.Value, 112)) = {edtJahr}
GROUP BY USR.LastName + ISNULL(', ' + USR.FirstName, '')

UNION ALL

SELECT [SAR]              = 'Total',
       [Anzahl Meldungen] = COUNT(LEI.FaLeistungID)
FROM dbo.FaLeistung        LEI WITH (READUNCOMMITTED)
  INNER JOIN dbo.BaPerson  PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
  LEFT  JOIN dbo.DynaValue DV1 WITH (READUNCOMMITTED) ON DV1.FaLeistungID = LEI.FaLeistungID
                                                     AND DV1.DynaFieldID = @VmAbklMeldedatumFldID                                 
  LEFT  JOIN dbo.DynaValue DV2 WITH (READUNCOMMITTED) ON DV2.FaLeistungID = LEI.FaLeistungID
                                                     AND DV2.DynaFieldID = @VmAbklMeldungDurchFldID
                                                     AND DV2.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV3 WITH (READUNCOMMITTED) ON DV3.FaLeistungID = LEI.FaLeistungID
                                                     AND DV3.DynaFieldID = @VmAbklSARFldID
                                                     AND DV3.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV4 WITH (READUNCOMMITTED) ON DV4.FaLeistungID = LEI.FaLeistungID
                                                     AND DV4.DynaFieldID = @VmAbklBerichtPerFldID
                                                     AND DV4.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV5 WITH (READUNCOMMITTED) ON DV5.FaLeistungID = LEI.FaLeistungID
                                                     AND DV5.DynaFieldID = @VmAbklMassnahmenFldID
                                                     AND DV5.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.DynaValue DV6 WITH (READUNCOMMITTED) ON DV6.FaLeistungID = LEI.FaLeistungID
                                                     AND DV6.DynaFieldID = @VmAbklBemerkungenFldID
                                                     AND DV6.GridRowID = DV1.GridRowID
  LEFT  JOIN dbo.XUser     USR WITH (READUNCOMMITTED) ON USR.UserID = DV3.Value
WHERE LEI.ModulID = 5 
  AND LEI.FaProzessCode = 501
  AND (DV1.Value IS NOT NULL OR DV2.Value IS NOT NULL 
       OR DV3.Value IS NOT NULL OR DV4.Value IS NOT NULL
       OR DV5.Value IS NOT NULL OR DV6.ValueText IS NOT NULL)
---  AND YEAR(CONVERT(DATETIME, DV1.Value, 112)) = {edtJahr}
;</value>
  </data>
</root>