<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @languageCode INT;
SET @languageCode = {0};

SELECT 
       [Selected]           = CONVERT(BIT, 0),
       [FaDokumentID$]      = FDO.FaDokumenteID,
       [DocumentID]         = FDO.DocumentID,
       [FallNummer]         = FLE.FaFallID,
       [Stichwort]          = FDO.Stichwort,
       [Thema]              = dbo.fnGetLOVMLText('FaDokThema',FDO.FaDokThemaCode, @languageCode ) ,
       [BaPersonID$]        = ISNULL(FDO.BaPersonID,FLE.BaPersonID),
       [BetriffPerson]      = ISNULL(BAP.Vorname + ' ', '') + BAP.Name,
       [AbsenderIn]         = COALESCE(AUS.DisplayText, APR.NameVorname, AIN.Name),
       [AdressatIn]         = COALESCE(EUS.DisplayText, EPR.NameVorname, EIN.Name),
       [ErstellerIn_User]   = USR.LogonName,
       [ErstellerIn]        = USR.NameVorname,
       [Erstelldatum]       = CONVERT(VARCHAR(8), FDO.DatumErstellung, 112),
       [ErstellerOE]        = ORG.ItemName,
       [Archiviert]         = FDO.Archiviert
FROM dbo.FaDokumente           FDO WITH(READUNCOMMITTED)
  LEFT JOIN dbo.FaLeistung     FLE WITH(READUNCOMMITTED) ON FLE.FaLeistungID = FDO.FaLeistungID
  LEFT JOIN dbo.BaPerson       BAP WITH(READUNCOMMITTED) ON BAP.BaPersonID = FDO.BaPersonID

  LEFT JOIN dbo.vwUserSimple   AUS WITH(READUNCOMMITTED) ON AUS.UserID = -FDO.Absender
  LEFT JOIN dbo.vwPerson       APR WITH(READUNCOMMITTED) ON APR.BaPersonID = FDO.Absender
  LEFT JOIN dbo.BaInstitution  AIN WITH(READUNCOMMITTED) ON AIN.BaInstitutionID = FDO.Absender

  LEFT JOIN dbo.vwUserSimple   EUS WITH(READUNCOMMITTED) ON EUS.UserID = -FDO.Adressat
  LEFT JOIN dbo.vwPersonSimple EPR WITH(READUNCOMMITTED) ON EPR.BaPersonID = FDO.Adressat
  LEFT JOIN dbo.BaInstitution  EIN WITH(READUNCOMMITTED) ON EIN.BaInstitutionID = FDO.Adressat
  LEFT JOIN dbo.vwUserSimple   USR WITH(READUNCOMMITTED) ON USR.UserID = FDO.ErstelltUserID
  LEFT JOIN dbo.XOrgUnit_User  OUU WITH(READUNCOMMITTED) ON OUU.UserID = USR.UserID
                                                        AND OUU.OrgUnitMemberCode = 2
  LEFT JOIN dbo.XOrgUnit       ORG WITH(READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
WHERE 1=1
--- AND FDO.DatumErstellung &gt;= {edtSucheDatumVon}
--- AND FDO.DatumErstellung &lt;= {edtSucheDatumBis}
--- AND (AUS.DisplayText LIKE '%' + {edtSucheAbsender} + '%' OR APR.NameVorname LIKE '%' + {edtSucheAbsender} + '%' OR AIN.Name LIKE '%' + {edtSucheAbsender} + '%')
--- AND (EUS.DisplayText LIKE '%' + {edtSucheAdressat} + '%' OR EPR.NameVorname LIKE '%' + {edtSucheAdressat} + '%' OR EIN.Name LIKE '%' + {edtSucheAdressat} + '%')
--- AND FDO.Stichwort LIKE '%' + {edtSucheStichwort} + '%'
--- AND FDO.FaDokThemaCode = {edtSucheFaDokThemaCode}
--- AND FDO.Bemerkung LIKE '%' + {edtSucheBemerkung} + '%'
--- AND (USR.LogonName LIKE '%' + {edtSuchenErfasser} + '%' OR USR.NameVorname LIKE '%' + {edtSuchenErfasser} + '%')
--- AND (ORG.ItemName LIKE '%' + {edtSuchenErstellerOE} + '%')
--- AND FDO.FaDokVisumStatusCode = {edtSucheFaDokVisumStatusCode}
--- AND FDO.FaDokStatusCode = {edtSucheFaDokStatusCode}
--- AND FDO.FaDokVerwendungCode = {edtSucheFaDokVerwendungCode}
--- AND FLE.FaFallID = {edtSucheFallNr}
--- AND FDO.BaPersonID = {edtSuchePerson.LookupID}
          --- AND ((FDO.NichtKlibuRelevant = 1 AND {edtSucheNichtKlibuRelevant} = 1)
          ---  OR (FDO.NichtKlibuRelevant = 0 AND {edtSucheKlibuRelevant} = 1))
ORDER BY FLE.FaFallID, FDO.DatumErstellung, FDO.FaDokumenteID;
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSucheDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="kissDocumentButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk02BQAAAAAAADYEAAAoAAAAEAAAABAAAAABAAgAAAAAAAAAAADEDgAAxA4AAAABAAAAAQAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP/A3MD/8Mqm/wQEBP8ICAj/DAwM/xEREf8WFhb/HBwc/yIi
        Iv8pKSn/VVVV/01NTf9CQkL/OTk5/4B8//9QUP//kwDW///szP/G1u//1ufn/5Cprf8AADP/AABm/wAA
        mf8AAMz/ADMA/wAzM/8AM2b/ADOZ/wAzzP8AM///AGYA/wBmM/8AZmb/AGaZ/wBmzP8AZv//AJkA/wCZ
        M/8AmWb/AJmZ/wCZzP8Amf//AMwA/wDMM/8AzGb/AMyZ/wDMzP8AzP//AP9m/wD/mf8A/8z/MwAA/zMA
        M/8zAGb/MwCZ/zMAzP8zAP//MzMA/zMzM/8zM2b/MzOZ/zMzzP8zM///M2YA/zNmM/8zZmb/M2aZ/zNm
        zP8zZv//M5kA/zOZM/8zmWb/M5mZ/zOZzP8zmf//M8wA/zPMM/8zzGb/M8yZ/zPMzP8zzP//M/8z/zP/
        Zv8z/5n/M//M/zP///9mAAD/ZgAz/2YAZv9mAJn/ZgDM/2YA//9mMwD/ZjMz/2YzZv9mM5n/ZjPM/2Yz
        //9mZgD/ZmYz/2ZmZv9mZpn/ZmbM/2aZAP9mmTP/Zplm/2aZmf9mmcz/Zpn//2bMAP9mzDP/ZsyZ/2bM
        zP9mzP//Zv8A/2b/M/9m/5n/Zv/M/8wA////AMz/mZkA/5kzmf+ZAJn/mQDM/5kAAP+ZMzP/mQBm/5kz
        zP+ZAP//mWYA/5lmM/+ZM2b/mWaZ/5lmzP+ZM///mZkz/5mZZv+ZmZn/mZnM/5mZ//+ZzAD/mcwz/2bM
        Zv+ZzJn/mczM/5nM//+Z/wD/mf8z/5nMZv+Z/5n/mf/M/5n////MAAD/mQAz/8wAZv/MAJn/zADM/5kz
        AP/MMzP/zDNm/8wzmf/MM8z/zDP//8xmAP/MZjP/mWZm/8xmmf/MZsz/mWb//8yZAP/MmTP/zJlm/8yZ
        mf/Mmcz/zJn//8zMAP/MzDP/zMxm/8zMmf/MzMz/zMz//8z/AP/M/zP/mf9m/8z/mf/M/8z/zP///8wA
        M///AGb//wCZ/8wzAP//MzP//zNm//8zmf//M8z//zP///9mAP//ZjP/zGZm//9mmf//Zsz/zGb///+Z
        AP//mTP//5lm//+Zmf//mcz//5n////MAP//zDP//8xm///Mmf//zMz//8z/////M//M/2b///+Z////
        zP9mZv//Zv9m/2b/////Zmb//2b/////Zv8hAKX/X19f/3d3d/+Ghob/lpaW/8vLy/+ysrL/19fX/93d
        3f/j4+P/6urq//Hx8f/4+Pj/8Pv//6SgoP+AgID/AAD//wD/AP8A/////wAA//8A/////wD///////T0
        9OwKCgoKCgoKCgoKCgr09PTsBwcHBwcHBwcHBwcK9PT07P////////////8HCvT09Oz//////wcHBwf/
        BwoK/Ar8CvwK/Ar8/////wcK/P//////////CgcHB/8HCgr/Cvz//Ar///z/////Bwr8//wKBwr8B/8K
        BwcH/wcKCv8K/Ar8Cvz//Af/B/8HCvz//P/8Cv8KBwoH/wf/BwoK/Ar/Cvz//Ar8//8H/wcK/Ar8CvwK
        /Ar8CgcHB/8HCgr///////////z//woKCgr8CvwK/Ar8CvwK///s/wr09PT07P//////////7Ar09PT0
        9Ozs7Ozs7Ozs7Oz09PQ=
</value>
  </data>
</root>