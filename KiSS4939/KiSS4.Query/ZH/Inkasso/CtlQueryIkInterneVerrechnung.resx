<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>select [Pers.Nr.]      = PRS.BaPersonID,
       [Gläubiger/in]  = PRS.NameVorname,
       [int. Verr.]    = convert(bit,case when BUC.KbAuszahlungsArtCode = 105 then 1 else 0 end),
       [A-FallNr]      = LEI.FaFallID,
       [W-FallNr]      = LEI2.FaFallID,
       [A-LA]          = BKA.KontoNr + ' ' + BKa.Name,
       [W-LA]          = KOA.KontoNr,
       [A-Betrag  ]    = BUC.Betrag,
       [W-Betrag]      = case when KOA.KontoNr in (760,821) then BUC2.Betrag else BUK2.Betrag end, -- 2 WH-LA sind gequotet!
       [abgetr.]       = convert(bit,isNull(BPO.VerwaltungSD,0)),
       [abgetr. Mst]   = convert(bit,isNull(MST.VerwaltungSD,0)),
       [Betrag Diff.]  = case when BUC.Betrag is not null and BUC2.Betrag is not null 
                         then BUC.Betrag - case when KOA.KontoNr in (760,821) then BUC2.Betrag else BUK2.Betrag end 
                         end,
       [A-Valuta]      = BUC.ValutaDatum,
       [W-Valuta]      = BUC2.ValutaDatum,
       [Valuta Diff.]  = datediff(d,BUC2.ValutaDatum,BUC.ValutaDatum),
       [Monatsbudget]  = dbo.fnXKurzMonat(BDG.Monat) + ' ' + convert(varchar, BDG.Jahr),
       [Verw. von]     = BUK2.VerwPeriodeVon,
       [Verw. bis]     = BUK2.VerwPeriodeBis,
       K               = case when LEIK.FaLeistungID is not null then 'K' end,
       [A-OE]          = USR.OrgUnit,
       [A-MA]          = USR.NameVorname,
       [W-OE]          = USR2.OrgUnit,
       [W-MA]          = USR2.NameVorname,
       FallBaPersonID$ = FAL.BaPersonID
from   KbBuchung BUC
       left join KbBuchungKostenart    BUK  on BUK.KbBuchungID = BUC.KbBuchungID
       left join IkPosition            IPO  on IPO.IkPositionID = BUC.IkPositionID
       left join BgKostenart           BKA  on BKA.Kontonr = BUK.KontoNr
       left join IkGlaeubiger          GLA  on GLA.BaPersonID  = BUK.BaPersonID and
                                               GLA.IkRechtstitelID = IPO.IkRechtstitelID
       left join vwPerson              PRS  on PRS.BaPersonID  = BUK.BaPersonID
       left join FaLeistung            LEI  on LEI.FaLeistungID = BUC.FaLeistungID
       left join vwUser                USR  on USR.UserID = LEI.UserID
       left join FaFall                FAL  on FAL.FaFallID = LEI.FaFallID
       left join KbBuchungBruttoPerson BUK2 on BUK2.BaPersonID = BUK.BaPersonID 
       left join KbBuchungBrutto       BUC2 on BUC2.KbBuchungBruttoID = BUK2.KbBuchungBruttoID
       left join BgKostenart           KOA  on KOA.BgKostenartID = BUC2.BgKostenartID 
       left join BgPosition            BPO  on BPO.BgPositionID = BUK2.BgPositionID
       left join BgPosition            MST  on MST.BgPositionID = BPO.BgPositionID_CopyOf
       left join BgBudget              BDG  on BDG.BgBudgetID = BPO.BgBudgetID
       left join BgFinanzplan          FPL  on FPL.BgFinanzplanID = BDG.BgFinanzplanID
       left join FaLeistung            LEI2 on LEI2.FaLeistungID = FPL.FaLeistungID
       left join FaLeistung            LEIK on LEIK.BaPersonID = BUK.BaPersonID and
                                               LEIK.FaProzessCode = 500 and
                                               LEIK.FaLeistungID = (select top 1 FaLeistungID 
                                                                    from  FaLeistung 
                                                                    where BaPersonID = BUK.BaPersonID and
                                                                          FaProzessCode = 500)
       left join vwUser                USR2 on USR2.UserID = LEI2.UserID
where BUC.KbAuszahlungsArtCode = 105 and
      KOA.KontoNr = case BUK.KontoNr
                    when 600 then 760
                    when 610 then 762
                    when 611 then 761
                    when 620 then 822
                    when 621 then 820
                    when 622 then 821
                    end  
--and
--      (BUC.ValutaDatum is null or 
--       BUC2.ValutaDatum is null)
-- or
--       abs(datediff(d,BUC2.ValutaDatum,BUC.ValutaDatum)) &lt;= 25)
order by [A-LA],[Betrag Diff.] desc</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>