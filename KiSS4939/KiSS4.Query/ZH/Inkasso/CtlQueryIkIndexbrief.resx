<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>-------------------------------------------------------------------------------
-- init vars
-------------------------------------------------------------------------------
DECLARE 
  @Delete BIT,
  @UserID INT,
  @IkRechtstitelID INT,
  @OldRTID INT,
  @NummerID INT,
  @IkForderungID INT,
  @BaPersonID INT,
  @Teuerungseinsprache BIT,
  @Forderungstitel VARCHAR(200),
  @Betrag_Basis MONEY,
  @Betrag_Berechnet MONEY,
  @Betrag_KiZu MONEY,
  @VornameName VARCHAR(200),
  @Geburtsdatum DATETIME,
  @Year INT,
  @Date DATETIME,
  @Basisindex MONEY,
  @NovIndex MONEY,
  @AnpassgIndex INT,
  @Rundung INT,
  @IndexCode INT;

SET @Year = {0};
SET @Date = {1};
SET @AnpassgIndex = {2};
SET @UserID = {3};
SET @Delete = {4};

-------------------------------------------------------------------------------
-- check if delete
-------------------------------------------------------------------------------
IF (@Delete = 0)
BEGIN
  CREATE TABLE #GLBs
  (
    ID INT IDENTITY(1, 1) NOT NULL,
    IkRechtstitelID INT,
    NummerID INT,
    BaPersonID INT,
    IkForderungID INT,
    Teuerungseinsprache BIT,
    Forderungstitel VARCHAR(200),
    Betrag_Basis MONEY,
    Betrag_Berechnet MONEY,
    IndexPunkte MONEY,
    Betrag_KiZu MONEY,
    VornameName VARCHAR(200),
    Geburtsdatum DATETIME,
    CONSTRAINT [PK_ID] PRIMARY KEY CLUSTERED (ID)
  );
  
  DECLARE CursorChilds CURSOR FAST_FORWARD FOR
    SELECT F.IkRechtstitelID,
           F.IkForderungID,
           F.BaPersonID,
           F.TeuerungsEinsprache,
           FLOV.Text,
           F.Betrag,
           R.IndexStandPunkte,
           (SELECT TOP 1
                   FF.Betrag
            FROM dbo.IkForderung FF WITH (READUNCOMMITTED)
            WHERE FF.IkRechtstitelID = F.IkRechtstitelID
              AND FF.BaPersonID = F.BaPersonID
              AND FF.IkForderungPeriodischCode = 3
              AND dbo.fnDateOf(FF.DatumAnpassenAb) &lt;= @Date
            ORDER BY FF.DatumAnpassenAb DESC),
           ISNULL(P.Vorname + ' ', '') + P.Name,
           P.Geburtsdatum,
           R.IkIndexRundenCode,
           R.IkIndexTypCode
    FROM dbo.IkForderung           F    WITH (READUNCOMMITTED)
      INNER JOIN dbo.IkRechtstitel R    WITH (READUNCOMMITTED) ON R.IkRechtstitelID = F.IkRechtstitelID
      LEFT  JOIN dbo.FaLeistung    LST  WITH (READUNCOMMITTED) ON LST.FaLeistungID = R.FaLeistungID
      LEFT  JOIN dbo.XLovCode      FLOV WITH (READUNCOMMITTED) ON FLOV.LOVName = 'IkForderungPeriodisch'
                                                              AND FLOV.Code = F.IkForderungPeriodischCode
      LEFT  JOIN dbo.BaPerson      P    WITH (READUNCOMMITTED) ON P.BaPersonID = F.BaPersonID
    WHERE F.IkForderungPeriodischCode IN (1, 2)
      AND (@UserID = 0 OR LST.UserID = @UserID)
      AND F.Betrag &gt; 0
      AND LST.DatumBis IS NULL
      AND R.IkIndextypCode IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
      AND YEAR(F.DatumAnpassenAb) = @Year
      AND (F.DatumGueltigBis IS NULL OR YEAR(F.DatumGueltigBis) &gt; @Year)
      AND F.IkAnpassungsRegelCode = @AnpassgIndex
      AND F.IkForderungID = (SELECT TOP 1
                                    FF.IkForderungID
                             FROM dbo.IkForderung FF WITH (READUNCOMMITTED)
                             WHERE FF.IkRechtstitelID = F.IkRechtstitelID
                               AND FF.BaPersonID = F.BaPersonID
                               AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
                               AND FF.Betrag &gt; 0
                               AND YEAR(FF.DatumAnpassenAb) = @Year
                               AND (FF.DatumGueltigBis IS NULL OR YEAR(FF.DatumGueltigBis) &gt; @Year)
                               AND FF.IkAnpassungsRegelCode = @AnpassgIndex
                             ORDER BY FF.DatumAnpassenAb DESC)
      AND NOT EXISTS (SELECT TOP 1
                             FF.IkForderungID
                      FROM dbo.IkForderung FF WITH (READUNCOMMITTED)
                      WHERE FF.IkRechtstitelID = F.IkRechtstitelID
                        AND FF.BaPersonID = F.BaPersonID
                        AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
                        AND ISNULL(FF.Betrag, 0) = 0
                        AND FF.DatumAnpassenAb &lt; @Date
                        AND FF.DatumAnpassenAb &gt; F.DatumAnpassenAb
                        AND (FF.DatumGueltigBis IS NULL OR YEAR(FF.DatumGueltigBis) &gt; @Year))
      AND NOT EXISTS (SELECT TOP 1
                             FF.IkForderungID
                       FROM dbo.IkForderung FF WITH (READUNCOMMITTED)
                       WHERE FF.IkRechtstitelID = F.IkRechtstitelID
                         AND FF.BaPersonID = F.BaPersonID
                         AND FF.IkForderungPeriodischCode = F.IkForderungPeriodischCode
                         AND FF.DatumAnpassenAb = @Date
                         AND FF.IkAnpassungsRegelCode = @AnpassgIndex
                         AND FF.IkAnpassungsGrundCode = 2)
    ORDER BY F.IkRechtstitelID ASC, P.Geburtsdatum ASC;
  
  OPEN CursorChilds;

  SET @NummerID = 0;
  SET @OldRTID = -1;
  
  WHILE (1 = 1)
  BEGIN
    FETCH NEXT 
    FROM CursorChilds 
    INTO @IkRechtstitelID, @IkForderungID, @BaPersonID, @Teuerungseinsprache, @Forderungstitel, @Betrag_Basis, 
         @Basisindex, @Betrag_KiZu, @VornameName, @Geburtsdatum, @Rundung, @IndexCode;
    
    IF (@@FETCH_STATUS != 0)
    BEGIN
      BREAK;
    END;
    
    SET @NummerID = @NummerID + 1;
    
    IF (@OldRTID != @IkRechtstitelID)
    BEGIN
      SET @NummerID = 1;
    END;
    
    -- es wird immer der November-Index des Vorjahres genommen
    SET @NovIndex = dbo.fnIkGetLandesindexWert(@IndexCode, (YEAR(@Date) - 1), 11);
    
    SET @Betrag_Berechnet = dbo.fnIkAlimenteRunden(@Rundung, @Betrag_Basis * ISNULL(@NovIndex, 100) / ISNULL(@Basisindex, 100));
    
    INSERT INTO #GLBs (IkRechtstitelID, IkForderungID, NummerID, BaPersonID, Teuerungseinsprache, Forderungstitel,
                       Betrag_Basis, Betrag_Berechnet, IndexPunkte, Betrag_KiZu, VornameName, Geburtsdatum)
    VALUES (@IkRechtstitelID, @IkForderungID, @NummerID, @BaPersonID, @Teuerungseinsprache, @Forderungstitel,
            @Betrag_Basis, @Betrag_Berechnet, @NovIndex, @Betrag_KiZu, @VornameName, @Geburtsdatum);
    
    SET @OldRTID = @IkRechtstitelID;
  END;
  
  CLOSE CursorChilds;
  DEALLOCATE CursorChilds;
  
  -----------------------------------------------------------------------------
  -- output
  -----------------------------------------------------------------------------
  SELECT Schuldner_Anrede           = CASE PRS.GeschlechtCode
                                        WHEN 1 THEN 'Herr'
                                        WHEN 2 THEN 'Frau'
                                        ELSE ''
                                      END,
         Schuldner_Name             = PRS.Name,
         Schuldner_Vorname          = PRS.Vorname,
         Schuldner_Zusatz           = ADR.Zusatz,
         Schuldner_Strasse          = ADR.Strasse + ISNULL(' ' + ADR.HausNr, ''),
         Schuldner_Postfach         = ADR.Postfach,
         Schuldner_PLZ              = ADR.PLZ,
         Schuldner_Ort              = ADR.Ort,
         Schuldner_PersonenNummer   = PRS.BaPersonID,
         Falltraeger_Name           = FT.Name,
         Falltraeger_Vorname        = FT.Vorname,
         Falltraeger_PersonenNummer = FT.BaPersonID,
         Falltraeger_FallNummer     = FLL.FaFallID,
         IkRechtstitelID            = RT.IkRechtstitelID,
         FaLeistungID               = RT.FaLeistungID,
         RT_Typ                     = RTILOV.Text,
         RT_Info                    = RTI.RechtstitelInfo,
         RT_IndexTyp                = RTLOV.Text,
         RT_Datum                   = RTI.RechtstitelDatumVon,
         RT_Teuerungseinsprache     = CASE 
                                        WHEN RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                        ELSE 'Nein'
                                      END,
         RT_IndexStand              = SUBSTRING(CONVERT(VARCHAR(10), RT.IndexStandVom, 104), 4, 7),
         RT_IndexPunkte             = REPLACE(CONVERT(VARCHAR(15), RT.IndexStandPunkte, 1), ',', ''''),
         
         ----------------------------------------------------------------------
         -- 1. Gläubiger
         ----------------------------------------------------------------------
         Glb01_BaPersonID          = CH01.BaPersonID,
         Glb01_VornameName         = CH01.VornameName,
         Glb01_Geburtsdatum        = CH01.Geburtsdatum,
         Glb01_IkForderungID       = CH01.IkForderungID,
         Glb01_Forderungstitel     = CH01.Forderungstitel,
         Glb01_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH01.Betrag_Basis, 1), ',', ''''),
         Glb01_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH01.Betrag_Berechnet, 1), ',', ''''),
         Glb01_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH01.Betrag_KiZu, 1), ',', ''''),
         Glb01_Teuerungseinsprache = CASE 
                                       WHEN CH01.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb01_IndexPunkte         = CONVERT(VARCHAR(15), CH01.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 2. Gläubiger
         ----------------------------------------------------------------------
         Glb02_BaPersonID          = CH02.BaPersonID,
         Glb02_VornameName         = CH02.VornameName,
         Glb02_Geburtsdatum        = CH02.Geburtsdatum,
         Glb02_IkForderungID       = CH02.IkForderungID,
         Glb02_Forderungstitel     = CH02.Forderungstitel,
         Glb02_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH02.Betrag_Basis, 1), ',', ''''),
         Glb02_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH02.Betrag_Berechnet, 1), ',', ''''),
         Glb02_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH02.Betrag_KiZu, 1), ',', ''''),
         Glb02_Teuerungseinsprache = CASE 
                                       WHEN CH02.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb02_IndexPunkte         = CONVERT(VARCHAR(15), CH02.IndexPunkte),
         
         ----------------------------------------------------------------------
         -- 3. Gläubiger
         ----------------------------------------------------------------------
         Glb03_BaPersonID          = CH03.BaPersonID,
         Glb03_VornameName         = CH03.VornameName,
         Glb03_Geburtsdatum        = CH03.Geburtsdatum,
         Glb03_IkForderungID       = CH03.IkForderungID,
         Glb03_Forderungstitel     = CH03.Forderungstitel,
         Glb03_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH03.Betrag_Basis, 1), ',', ''''),
         Glb03_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH03.Betrag_Berechnet, 1), ',', ''''),
         Glb03_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH03.Betrag_KiZu, 1), ',', ''''),
         Glb03_Teuerungseinsprache = CASE 
                                       WHEN CH03.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb03_IndexPunkte         = CONVERT(VARCHAR(15), CH03.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 4. Gläubiger
         ----------------------------------------------------------------------
         Glb04_BaPersonID          = CH04.BaPersonID,
         Glb04_VornameName         = CH04.VornameName,
         Glb04_Geburtsdatum        = CH04.Geburtsdatum,
         Glb04_IkForderungID       = CH04.IkForderungID,
         Glb04_Forderungstitel     = CH04.Forderungstitel,
         Glb04_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH04.Betrag_Basis, 1), ',', ''''),
         Glb04_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH04.Betrag_Berechnet, 1), ',', ''''),
         Glb04_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH04.Betrag_KiZu, 1), ',', ''''),
         Glb04_Teuerungseinsprache = CASE 
                                       WHEN CH04.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb04_IndexPunkte         = CONVERT(VARCHAR(15), CH04.IndexPunkte),
         
         ----------------------------------------------------------------------
         -- 5. Gläubiger
         ----------------------------------------------------------------------
         Glb05_BaPersonID          = CH05.BaPersonID,
         Glb05_VornameName         = CH05.VornameName,
         Glb05_Geburtsdatum        = CH05.Geburtsdatum,
         Glb05_IkForderungID       = CH05.IkForderungID,
         Glb05_Forderungstitel     = CH05.Forderungstitel,
         Glb05_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH05.Betrag_Basis, 1), ',', ''''),
         Glb05_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH05.Betrag_Berechnet, 1), ',', ''''),
         Glb05_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH05.Betrag_KiZu, 1), ',', ''''),
         Glb05_Teuerungseinsprache = CASE 
                                       WHEN CH05.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb05_IndexPunkte         = CONVERT(VARCHAR(15), CH05.IndexPunkte),
          
         ----------------------------------------------------------------------
         -- 6. Gläubiger
         ----------------------------------------------------------------------
         Glb06_BaPersonID          = CH06.BaPersonID,
         Glb06_VornameName         = CH06.VornameName,
         Glb06_Geburtsdatum        = CH06.Geburtsdatum,
         Glb06_IkForderungID       = CH06.IkForderungID,
         Glb06_Forderungstitel     = CH06.Forderungstitel,
         Glb06_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH06.Betrag_Basis, 1), ',', ''''),
         Glb06_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH06.Betrag_Berechnet, 1), ',', ''''),
         Glb06_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH06.Betrag_KiZu, 1), ',', ''''),
         Glb06_Teuerungseinsprache = CASE 
                                       WHEN CH06.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb06_IndexPunkte         = CONVERT(VARCHAR(15), CH06.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 7. Gläubiger
         ----------------------------------------------------------------------
         Glb07_BaPersonID          = CH07.BaPersonID,
         Glb07_VornameName         = CH07.VornameName,
         Glb07_Geburtsdatum        = CH07.Geburtsdatum,
         Glb07_IkForderungID       = CH07.IkForderungID,
         Glb07_Forderungstitel     = CH07.Forderungstitel,
         Glb07_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH07.Betrag_Basis, 1), ',', ''''),
         Glb07_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH07.Betrag_Berechnet, 1), ',', ''''),
         Glb07_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH07.Betrag_KiZu, 1), ',', ''''),
         Glb07_Teuerungseinsprache = CASE 
                                       WHEN CH07.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb07_IndexPunkte         = CONVERT(VARCHAR(15), CH07.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 8. Gläubiger
         ----------------------------------------------------------------------
         Glb08_BaPersonID          = CH08.BaPersonID,
         Glb08_VornameName         = CH08.VornameName,
         Glb08_Geburtsdatum        = CH08.Geburtsdatum,
         Glb08_IkForderungID       = CH08.IkForderungID,
         Glb08_Forderungstitel     = CH08.Forderungstitel,
         Glb08_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH08.Betrag_Basis, 1), ',', ''''),
         Glb08_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH08.Betrag_Berechnet, 1), ',', ''''),
         Glb08_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH08.Betrag_KiZu, 1), ',', ''''),
         Glb08_Teuerungseinsprache = CASE 
                                       WHEN CH08.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb08_IndexPunkte         = CONVERT(VARCHAR(15), CH08.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 9. Gläubiger
         ----------------------------------------------------------------------
         Glb09_BaPersonID          = CH09.BaPersonID,
         Glb09_VornameName         = CH09.VornameName,
         Glb09_Geburtsdatum        = CH09.Geburtsdatum,
         Glb09_IkForderungID       = CH09.IkForderungID,
         Glb09_Forderungstitel     = CH09.Forderungstitel,
         Glb09_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH09.Betrag_Basis, 1), ',', ''''),
         Glb09_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH09.Betrag_Berechnet, 1), ',', ''''),
         Glb09_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH09.Betrag_KiZu, 1), ',', ''''),
         Glb09_Teuerungseinsprache = CASE 
                                       WHEN CH09.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb09_IndexPunkte         = CONVERT(VARCHAR(15), CH09.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- 10. Gläubiger
         ----------------------------------------------------------------------
         Glb10_BaPersonID          = CH10.BaPersonID,
         Glb10_VornameName         = CH10.VornameName,
         Glb10_Geburtsdatum        = CH10.Geburtsdatum,
         Glb10_IkForderungID       = CH10.IkForderungID,
         Glb10_Forderungstitel     = CH10.Forderungstitel,
         Glb10_BetragBasis         = REPLACE(CONVERT(VARCHAR(15), CH10.Betrag_Basis, 1), ',', ''''),
         Glb10_BetragBerechnet     = REPLACE(CONVERT(VARCHAR(15), CH10.Betrag_Berechnet, 1), ',', ''''),
         Glb10_BetragKiZu          = REPLACE(CONVERT(VARCHAR(15), CH10.Betrag_KiZu, 1), ',', ''''),
         Glb10_Teuerungseinsprache = CASE 
                                       WHEN CH10.Teuerungseinsprache = 1 OR RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                       ELSE 'Nein'
                                     END,
         Glb10_IndexPunkte         = CONVERT(VARCHAR, CH10.IndexPunkte),
  
         ----------------------------------------------------------------------
         -- Selektion
         ----------------------------------------------------------------------
         LaufendesJahr      = @Year + 1,
         VorhergehendesJahr = @Year,
         DatumPer           = @Date,
  
         ----------------------------------------------------------------------
         -- User
         ----------------------------------------------------------------------
         SB_LogonName   = USR.LogonName,
         SB_VornameName = USR.VornameName,
         SB_Displayname = USR.DisplayText,
          
         ----------------------------------------------------------------------
         -- User Sachbearbeiter
         ----------------------------------------------------------------------
         KopieAn      = 'Kopie an: ' + SAR.VornameName,
         KopieAn_SZ   = SAR.Sozialzentrum,
         KopieAn_QT   = SAR.OrgEinheitName,
         Summe_Betrag = REPLACE(CONVERT(VARCHAR(15), 
                                  ISNULL(CH01.Betrag_Berechnet, 0.00) + ISNULL(CH01.Betrag_KiZu, 0.00)
                                + ISNULL(CH02.Betrag_Berechnet, 0.00) + ISNULL(CH02.Betrag_KiZu, 0.00)
                                + ISNULL(CH03.Betrag_Berechnet, 0.00) + ISNULL(CH03.Betrag_KiZu, 0.00)
                                + ISNULL(CH04.Betrag_Berechnet, 0.00) + ISNULL(CH04.Betrag_KiZu, 0.00)
                                + ISNULL(CH05.Betrag_Berechnet, 0.00) + ISNULL(CH05.Betrag_KiZu, 0.00)
                                + ISNULL(CH06.Betrag_Berechnet, 0.00) + ISNULL(CH06.Betrag_KiZu, 0.00)
                                + ISNULL(CH07.Betrag_Berechnet, 0.00) + ISNULL(CH07.Betrag_KiZu, 0.00)
                                + ISNULL(CH08.Betrag_Berechnet, 0.00) + ISNULL(CH08.Betrag_KiZu, 0.00)
                                + ISNULL(CH09.Betrag_Berechnet, 0.00) + ISNULL(CH09.Betrag_KiZu, 0.00)
                                + ISNULL(CH10.Betrag_Berechnet, 0.00) + ISNULL(CH10.Betrag_KiZu, 0.00), 1), ',', '''')
  FROM dbo.FaLeistung               LST     WITH (READUNCOMMITTED)
    LEFT JOIN dbo.vwUser            USR     WITH (READUNCOMMITTED) ON USR.UserID = LST.UserID
    LEFT JOIN dbo.vwUser            SAR     WITH (READUNCOMMITTED) ON SAR.UserID = (SELECT TOP 1
                                                                                           LS.UserID
                                                                                    FROM dbo.FaLeistung LS WITH (READUNCOMMITTED)
                                                                                    WHERE LS.FaProzessCode = 200
                                                                                      AND LS.FaFallID = LST.FaFallID
                                                                                      AND LS.DatumBis IS NULL)
    LEFT JOIN dbo.FaFall             FLL    WITH (READUNCOMMITTED) ON FLL.FaFallID = LST.FaFallID
    LEFT JOIN dbo.BaPerson           FT     WITH (READUNCOMMITTED) ON FT.BaPersonID = FLL.BaPersonID
    LEFT JOIN dbo.BaPerson           PRS    WITH (READUNCOMMITTED) ON PRS.BaPersonID = LST.SchuldnerBaPersonID
    LEFT JOIN dbo.BaAdresse          ADR    WITH (READUNCOMMITTED) ON ADR.BaAdresseID = (SELECT TOP 1
                                                                                                A.BaAdresseID
                                                                                         FROM dbo.BaAdresse A WITH (READUNCOMMITTED)
                                                                                         WHERE A.BaPersonID = PRS.BaPersonID
                                                                                           AND A.AdresseCode = 1 -- Wohnsitz
                                                                                           AND GETDATE() BETWEEN ISNULL(A.DatumVon, GETDATE()) AND ISNULL(A.DatumBis, GETDATE())
                                                                                         ORDER BY A.DatumVon DESC)
    LEFT JOIN dbo.IkRechtstitel      RT     WITH (READUNCOMMITTED) ON RT.FaLeistungID = LST.FaLeistungID
    LEFT JOIN dbo.XLOVCode           RTLOV  WITH (READUNCOMMITTED) ON RTLOV.LOVName = 'IkIndexTyp'
                                                                  AND RTLOV.Code = RT.IkIndexTypCode
    LEFT JOIN dbo.IkRechtstitelInfos RTI    WITH (READUNCOMMITTED) ON RTI.IkRechtstitelInfosID = (SELECT TOP 1
                                                                                                         R.IkRechtstitelInfosID
                                                                                                  FROM dbo.IkRechtstitelInfos R WITH (READUNCOMMITTED)
                                                                                                  WHERE R.IkRechtstitelID = RT.IkRechtstitelID
                                                                                                  ORDER BY R.RechtstitelDatumVon DESC)
    LEFT JOIN dbo.XLOVCode           RTILOV WITH (READUNCOMMITTED) ON RTILOV.LOVName = 'IkRechtstitel'
                                                                  AND RTILOV.Code = RTI.IkRechtstitelCode
    --
    LEFT JOIN #GLBs CH01 ON CH01.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH01.NummerID = 1
    LEFT JOIN #GLBs CH02 ON CH02.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH02.NummerID = 2
    LEFT JOIN #GLBs CH03 ON CH03.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH03.NummerID = 3
    LEFT JOIN #GLBs CH04 ON CH04.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH04.NummerID = 4
    LEFT JOIN #GLBs CH05 ON CH05.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH05.NummerID = 5
    LEFT JOIN #GLBs CH06 ON CH06.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH06.NummerID = 6
    LEFT JOIN #GLBs CH07 ON CH07.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH07.NummerID = 7
    LEFT JOIN #GLBs CH08 ON CH08.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH08.NummerID = 8
    LEFT JOIN #GLBs CH09 ON CH09.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH09.NummerID = 9
    LEFT JOIN #GLBs CH10 ON CH10.IkRechtstitelID = RT.IkRechtstitelID
                        AND CH10.NummerID = 10
    --
  WHERE LST.FaProzessCode IN (405, 406, 407)
    AND RT.IkRechtstitelID IN (SELECT CH.IkRechtstitelID
                               FROM   #GLBs CH)
  ORDER BY FT.Name, FT.Vorname;
  
  DROP TABLE #GLBs;
END
-------------------------------------------------------------------------------
-- case: @Delete = 1
-------------------------------------------------------------------------------
ELSE 
BEGIN
  SELECT Schuldner_Anrede           = CASE PRS.GeschlechtCode
                                        WHEN 1 THEN 'Herr'
                                        WHEN 2 THEN 'Frau'
                                        ELSE ''
                                      END,
         Schuldner_Name             = PRS.Name,
         Schuldner_Vorname          = PRS.Vorname,
         Schuldner_Zusatz           = ADR.Zusatz,
         Schuldner_Strasse          = ADR.Strasse + ISNULL(' ' + ADR.HausNr, ''),
         Schuldner_Postfach         = ADR.Postfach,
         Schuldner_PLZ              = ADR.PLZ,
         Schuldner_Ort              = ADR.Ort,
         Schuldner_PersonenNummer   = PRS.BaPersonID,
         Falltraeger_Name           = FT.Name,
         Falltraeger_Vorname        = FT.Vorname,
         Falltraeger_PersonenNummer = FT.BaPersonID,
         Falltraeger_FallNummer     = FLL.FaFallID,
         IkRechtstitelID            = RT.IkRechtstitelID,
         FaLeistungID               = RT.FaLeistungID,
         RT_Typ                     = RTILOV.Text,
         RT_IndexTyp                = RTLOV.Text,
         RT_Datum                   = RTI.RechtstitelDatumVon,
         RT_Teuerungseinsprache     = CASE 
                                        WHEN RTI.Teuerungseinsprache = 1 THEN 'Ja'
                                        ELSE 'Nein'
                                      END,
         RT_IndexStand              = SUBSTRING(CONVERT(VARCHAR(10), RT.IndexStandVom, 104), 4, 7),
         RT_IndexPunkte             = RT.IndexStandPunkte,
         
         ----------------------------------------------------------------------
         -- Angaben Forderung
         ----------------------------------------------------------------------
         Frdrg_IkForderungID   = F.IkForderungID,
         Frdrg_BaPersonID      = F.BaPersonID,
         Frdrg_VornameName     = ISNULL(GLB.Vorname + ' ', '') + GLB.Name,
         Frdrg_Geburtsdatum    = GLB.Geburtsdatum,
         Frdrg_IkForderungID   = F.IkForderungID,
         Frdrg_Forderungstitel = FLOV.Text,
         Frdrg_BetragBasis     = F.Betrag,
         Frdrg_DatumAb         = F.DatumAnpassenAb,
         Frdrg_Gueltigbis      = F.DatumGueltigBis,
         
         ----------------------------------------------------------------------
         -- User
         ----------------------------------------------------------------------
         SB_LogonName   = USR.LogonName,
         SB_VornameName = USR.VornameName,
         SB_Displayname = USR.DisplayText,
         
         ----------------------------------------------------------------------
         -- User Sachbearbeiter
         ----------------------------------------------------------------------
         KopieAn    = 'Kopie an: ' + SAR.VornameName,
         KopieAn_SZ = SAR.Sozialzentrum,
         KopieAn_QT = SAR.OrgEinheitName
  
  FROM dbo.IkForderung                F      WITH (READUNCOMMITTED)
    INNER JOIN dbo.IkRechtstitel      RT     WITH (READUNCOMMITTED) ON RT.IkRechtstitelID = F.IkRechtstitelID
    LEFT  JOIN dbo.XLOVCode           FLOV   WITH (READUNCOMMITTED) ON FLOV.LOVName = 'IkForderungPeriodisch'
                                                                   AND FLOV.Code = F.IkForderungPeriodischCode
    LEFT  JOIN dbo.XLOVCode           RTLOV  WITH (READUNCOMMITTED) ON RTLOV.LOVName = 'IkIndexTyp'
                                                                   AND RTLOV.Code = RT.IkIndexTypCode
    LEFT  JOIN dbo.IkRechtstitelInfos RTI    WITH (READUNCOMMITTED) ON RTI.IkRechtstitelInfosID = (SELECT TOP 1
                                                                                                          R.IkRechtstitelInfosID
                                                                                                   FROM dbo.IkRechtstitelInfos R WITH (READUNCOMMITTED)
                                                                                                   WHERE R.IkRechtstitelID = RT.IkRechtstitelID
                                                                                                   ORDER BY R.RechtstitelDatumVon DESC)
    LEFT  JOIN dbo.XLOVCode           RTILOV WITH (READUNCOMMITTED) ON RTILOV.LOVName = 'IkRechtstitel'
                                                            AND RTILOV.Code = RTI.IkRechtstitelCode
    LEFT  JOIN dbo.FaLeistung         LST    WITH (READUNCOMMITTED) ON LST.FaLeistungID = RT.FaLeistungID
    LEFT  JOIN dbo.vwUser             USR    WITH (READUNCOMMITTED) ON USR.UserID = LST.UserID
    LEFT  JOIN dbo.vwUser             SAR    WITH (READUNCOMMITTED) ON SAR.UserID = (SELECT TOP 1
                                                      LS.UserID
                                              FROM    dbo.FaLeistung LS WITH (READUNCOMMITTED)
                                              WHERE   LS.FaProzessCode = 200
                                                      AND LS.FaFallID = LST.FaFallID
                                                      AND LS.DatumBis IS NULL)
    LEFT  JOIN dbo.FaFall             FLL    WITH (READUNCOMMITTED) ON FLL.FaFallID = LST.FaFallID
    LEFT  JOIN dbo.BaPerson           FT     WITH (READUNCOMMITTED) ON FT.BaPersonID = FLL.BaPersonID
    LEFT  JOIN dbo.BaPerson           PRS    WITH (READUNCOMMITTED) ON PRS.BaPersonID = LST.SchuldnerBaPersonID
    LEFT  JOIN dbo.BaPerson           GLB    WITH (READUNCOMMITTED) ON GLB.BaPersonID = F.BaPersonID
    LEFT  JOIN dbo.BaAdresse          ADR    WITH (READUNCOMMITTED) ON ADR.BaAdresseID = (SELECT TOP 1
                                                                                                 A.BaAdresseID
                                                                                          FROM dbo.BaAdresse A WITH (READUNCOMMITTED)
                                                                                          WHERE A.BaPersonID = PRS.BaPersonID
                                                                                            AND A.AdresseCode = 1 -- Wohnsitz
                                                                                            AND GETDATE() BETWEEN ISNULL(A.DatumVon, GETDATE()) AND ISNULL(A.DatumBis, GETDATE())
                                                                                          ORDER BY A.DatumVon DESC)
  WHERE LST.FaProzessCode IN (405, 406, 407)
    AND F.DatumAnpassenAb = @Date
    AND LST.DatumBis IS NULL
    AND F.IkForderungPeriodischCode IN (1, 2)
    AND (@UserID = 0 OR LST.UserID = @UserID)
    AND F.IkAnpassungsRegelCode = @AnpassgIndex
    AND F.IkAnpassungsGrundCode = 2
  ORDER BY FT.Name, FT.Vorname;
END;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABbSURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2Gc
        GtLSGP4jY5BikEEYmgjZANIAUgO3CZcGZGdi1YDuJBgfpJE6NmALKZjYqJPIijh8KRYmhzXlEhIEANZ8
        ev1ASni6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtDatumPer.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>57</value>
  </metadata>
</root>