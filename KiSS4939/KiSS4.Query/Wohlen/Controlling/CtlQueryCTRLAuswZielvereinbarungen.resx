<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>--Cockpit Auswertung Zielvereinbarungen
DECLARE @DatumVon DATETIME
DECLARE @DatumBis DATETIME
DECLARE @Kennzahl INT
DECLARE @Total INT

--DynaValueIds
DECLARE @ZielAuswDatumFieldID INT
DECLARE @ZielAuswThemaFieldID INT
DECLARE @ZielAuswGradFieldID  INT
DECLARE @ZielAuswBegrFieldID  INT

SET @ZielAuswDatumFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaAuswertungZielAuswDatum')
SET @ZielAuswThemaFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaZielvereinZielThema')
SET @ZielAuswGradFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaAuswertungZielGrad')
SET @ZielAuswBegrFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaAuswertungZielBegruendung')

SET @DatumVon = {edtDatumVon}
SET @DatumBis = {edtDatumBis}

DECLARE @Zielvereinbarungen TABLE
(
   ZielThema      VARCHAR(100),
   ZielBewertung  VARCHAR(100),
   ZielBegründung VARCHAR(100)
)
DECLARE @Kennzahlen table (
   Beschreibung   VARCHAR (200),
   Kennzahl       VARCHAR (100),
   Masseinheit    VARCHAR (100),
   SortKey$        INT
)

INSERT @Zielvereinbarungen
SELECT CONVERT(VARCHAR, XTHM.Text),
       CONVERT(VARCHAR, XGRD.Text),
       CONVERT(VARCHAR, XBEG.Text)
FROM dbo.FaPhase PHS WITH (READUNCOMMITTED)
     LEFT JOIN dbo.DynaValue THM WITH (READUNCOMMITTED) ON THM.FaPhaseID = PHS.FaPhaseID AND
                                THM.DynaFieldID = @ZielAuswThemaFieldID
     LEFT JOIN dbo.XLOVCode XTHM WITH (READUNCOMMITTED) ON XTHM.LOVName = 'FaThema' AND
                                   XTHM.Code = THM.Value
     LEFT JOIN dbo.DynaValue GRD WITH (READUNCOMMITTED) ON GRD.FaPhaseID = PHS.FaPhaseID AND
                                GRD.GridRowID = THM.GridRowID AND
                                GRD.DynaFieldID = @ZielAuswGradFieldID
     LEFT JOIN dbo.XLOVCode XGRD WITH (READUNCOMMITTED) ON XGRD.LOVName = 'FaZielErreichungsgrad' AND
                                      XGRD.Code = GRd.Value
     LEFT JOIN dbo.DynaValue BEG WITH (READUNCOMMITTED) ON BEG.FaPhaseID = PHS.FaPhaseID AND
                                BEG.GridRowID = THM.GridRowID AND
                                BEG.DynaFieldID = @ZielAuswBegrFieldID
     LEFT JOIN dbo.XLOVCode XBEG WITH (READUNCOMMITTED) ON XBEG.LOVName = 'FaHindernisseZielerreichung' AND
                                      XBEG.Code = BEG.Value

WHERE --DAT.DynaFieldID = @ZielAuswDatumFieldID AND
      PHS.DatumBis BETWEEN @DatumVon AND @DatumBis
     AND PHS.FaPhaseCode = 2 --Beratunsphase
SET @Kennzahl = (SELECT COUNT(*) FROM @Zielvereinbarungen)


INSERT @Kennzahlen VALUES ('Anzahl Ausgewertete Ziele', @Kennzahl, 'Anzahl', 1)

DECLARE @bewertung  VARCHAR(100)
DECLARE @begründung VARCHAR(100)
DECLARE cursorZiele CURSOR STATIC FOR
    SELECT ZielBewertung
    FROM   @Zielvereinbarungen
    GROUP BY Zielbewertung

  OPEN cursorZiele
  FETCH NEXT FROM cursorZiele INTO @bewertung
  --Problem mit NULL VALUEs, werden nicht(richtig) gezählt!
  WHILE @@fetch_status = 0 BEGIN
   DECLARE cursorBegründung CURSOR STATIC FOR
       SELECT ZielBegründung
       FROM @Zielvereinbarungen
       GROUP BY ZielBegründung
INSERT @Kennzahlen VALUES ('', '','',1)--layout
    INSERT @Kennzahlen
    SELECT  'Zielbewertung: ' + ISNULL(@bewertung, 'Keine Angaben'), COUNT(*), 'Anzahl',1
    FROM @Zielvereinbarungen
    WHERE Zielbewertung = @bewertung OR (Zielbewertung IS NULL AND @bewertung IS NULL)

INSERT @Kennzahlen VALUES ('Zielbegründung:', '','',1)--layout
    OPEN cursorBegründung
    FETCH NEXT FROM cursorBegründung INTO @begründung
    WHILE @@fetch_status = 0 BEGIN

       INSERT @Kennzahlen
       SELECT '   '+ISNULL(@begründung, 'Keine Angaben'), COUNT(*), 'Anzahl', 1
       FROM @Zielvereinbarungen
       WHERE (Zielbewertung = @bewertung OR (Zielbewertung IS NULL AND @bewertung IS NULL)) AND
             (ZielBegründung = @begründung OR (ZielBegründung is NULL AND @begründung IS NULL))
       FETCH NEXT FROM cursorBegründung INTO @begründung
    END
    CLOSE cursorBegründung
    DEALLOCATE cursorBegründung

    FETCH NEXT FROM cursorZiele INTO @bewertung
  END
  CLOSE cursorZiele
  DEALLOCATE cursorZiele


SELECT Beschreibung, Kennzahl, Masseinheit 
FROM @Kennzahlen

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
</root>