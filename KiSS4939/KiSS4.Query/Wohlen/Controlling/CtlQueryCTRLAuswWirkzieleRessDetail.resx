<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>--Cockpit Auswertung Wirkungsziele und Ressourcenaktivierung
DECLARE @DatumVon DATETIME
DECLARE @DatumBis DATETIME
DECLARE @Kennzahl INT
DECLARE @Total INT

--DynaValueIds
DECLARE @TeilnahmeFieldID    INT
DECLARE @MenschenFieldID     INT
DECLARE @EigenverFieldID     INT
DECLARE @BeteiligungFieldID  INT
DECLARE @EinschSDFieldID     INT
DECLARE @EinschKlientFieldID INT
DECLARE @EinschDritteFieldID INT
DECLARE @IntegrationFieldID  INT
DECLARE @PersoenlichFieldID  INT
DECLARE @SozInteFieldID      INT
DECLARE @StabiFieldID        INT
DECLARE @RechtFieldID        INT
DECLARE @Abh채ngigFieldID     INT
DECLARE @GrundangebotFldID   INT
DECLARE @IntTeilnahmeFieldID    INT
DECLARE @IntMenschenFieldID     INT
DECLARE @IntEigenverFieldID     INT
DECLARE @IntBeteiligungFieldID  INT
DECLARE @IntEinschSDFieldID     INT
DECLARE @IntEinschKlientFieldID INT
DECLARE @IntEinschDritteFieldID INT
DECLARE @IntIntegrationFieldID  INT
DECLARE @IntPersoenlichFieldID  INT
DECLARE @IntSozInteFieldID      INT
DECLARE @IntStabiFieldID        INT
DECLARE @IntRechtFieldID        INT
DECLARE @IntAbh채ngigFieldID     INT
DECLARE @IntGrundangebotFldID   INT

SET @GrundangebotFldID   = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaBeratungsplanGrundangebot')
SET @TeilnahmeFieldID    = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepTeilnahme')
SET @MenschenFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepMenschen')
SET @EigenverFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepEigenver')
SET @BeteiligungFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepBeteiligung')
SET @EinschSDFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepEinschSD')
SET @EinschKlientFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepEinschKlient')
SET @EinschDritteFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepEinschDritte')
SET @IntegrationFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepIntegration')
SET @PersoenlichFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepPersoenlich')
SET @SozInteFieldID      = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepSozInte')
SET @StabiFieldID        = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepStabi')
SET @RechtFieldID        = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepRecht')
SET @Abh채ngigFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaKantRepAbh채ngig')

SET @IntGrundangebotFldID   = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE FieldName = 'FaIntBeratungsplanGrundangebot')
SET @IntTeilnahmeFieldID    = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepTeilnahme')
SET @IntMenschenFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepMenschen')
SET @IntEigenverFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepEigenver')
SET @IntBeteiligungFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepBeteiligung')
SET @IntEinschSDFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepEinschSD')
SET @IntEinschKlientFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepEinschKlient')
SET @IntEinschDritteFieldID = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepEinschDritte')
SET @IntIntegrationFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepIntegration')
SET @IntPersoenlichFieldID  = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepPersoenlich')
SET @IntSozInteFieldID      = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepSozInte')
SET @IntStabiFieldID        = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepStabi')
SET @IntRechtFieldID        = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepRecht')
SET @IntAbh채ngigFieldID     = (SELECT DynaFieldID FROM dbo.DynaField WITH (READUNCOMMITTED) WHERE fieldname = 'FaIntKantRepAbh채ngig')

SET @DatumVon = {edtDatumVon}--'20050101'--
SET @DatumBis = {edtDatumBis}--'20051231'--

DECLARE @Zielauswertung TABLE
(  
   Grundangebot VARCHAR(100), 
   Teilnahme    VARCHAR(100),
   Menschen     VARCHAR(100),
   Eigenver     VARCHAR(100),
   Beteiligung  VARCHAR(100),
   EinschSD     VARCHAR(100),
   EinschKlient VARCHAR(100),
   EinschDritte VARCHAR(100),
   Integration  VARCHAR(100),
   Pers철nlichk  VARCHAR(100),
   SozInte      VARCHAR(100),
   Stabi        VARCHAR(100),
   Recht        VARCHAR(100),
   Abh채ngig     VARCHAR(100)
)
DECLARE @Kennzahlen table (
   Beschreibung   VARCHAR (200),
   Auswertung     VARCHAR (100),
   Kennzahl       VARCHAR (100),
   Masseinheit    VARCHAR (100),
   SortKey$        INT
)

INSERT @Zielauswertung

SELECT Grundangebot = CASE when PHS.FaPhaseCode = 1
                          then 'Assessment'
                          else ISNULL(XGRA.Text, 'Keine Angabe')
                      end,
       Teilnahme    = ISNULL(XTNM.Text, 'Keine Angabe'),
       Menschen     = ISNULL(XMEN.Text, 'Keine Angabe'),
       Eigenver     = ISNULL(XEIG.Text, 'Keine Angabe'),
       Beteilig     = ISNULL(XBET.Text, 'Keine Angabe'),
       EinschSD     = ISNULL(XESD.Text, 'Keine Angabe'),
       EinschKL     = ISNULL(XEKL.Text, 'Keine Angabe'),
       EinschDR     = ISNULL(XEDR.Text, 'Keine Angabe'),
       Integration  = ISNULL(XITG.Text, 'Keine Angabe'),
       Pers철nlichk  = ISNULL(XPER.Text, 'Keine Angabe'),
       sozIntegrat  = ISNULL(XSOZ.Text, 'Keine Angabe'),
       Stabilisier  = ISNULL(XSTA.Text, 'Keine Angabe'),
       Recht        = ISNULL(XREC.Text, 'Keine Angabe'),
       Abh채ngig     = ISNULL(XABH.Text, 'Keine Angabe')
       
FROM dbo.FaPhase PHS WITH (READUNCOMMITTED)
LEFT JOIN dbo.DynaValue GRA WITH (READUNCOMMITTED) ON GRA.FaPhaseID = PHS.FaPhaseID AND
                            GRA.DynaFieldID = @GrundangebotFldID AND
                            GRA.GridRowID = 1 AND
                            GRA.Value IS NOT NULL AND
                            SQL_VARIANT_PROPERTY(GRA.Value,'BaseType')='int'
LEFT JOIN dbo.XLOVCode XGRA WITH (READUNCOMMITTED) ON XGRA.LovName  = 'FaGrundangebot' AND XGRA.Code = GRA.Value

--zuerst jeweils eigenes Feld Beratung    (code 2) 
LEFT JOIN dbo.DynaValue TNM  WITH (READUNCOMMITTED) ON TNM.FaPhaseID  = PHS.FaPhaseID AND TNM.DynaFieldID = @TeilnahmeFieldID
--dann eigenes Feld Assesment (intake; i) (code 1)
LEFT JOIN dbo.DynaValue TNMI WITH (READUNCOMMITTED) ON TNMI.FaPhaseID = PHS.FaPhaseID AND TNMI.DynaFieldID = @IntTeilnahmeFieldID
--die beiden felder greifen jeweils auf dieselbe werteleiste zu!
LEFT JOIN dbo.XLOVCode  XTNM WITH (READUNCOMMITTED) ON XTNM.LOVName   = 'FaJaNeinKantRep' AND XTNM.Code IN(TNM.Value, TNMI.Value)

LEFT JOIN dbo.DynaValue MEN  WITH (READUNCOMMITTED) ON MEN.FaPhaseID = PHS.FaPhaseID AND  MEN.DynaFieldID = @MenschenFieldID
LEFT JOIN dbo.DynaValue MENI WITH (READUNCOMMITTED) ON MENI.FaPhaseID = PHS.FaPhaseID AND  MENI.DynaFieldID = @IntMenschenFieldID
LEFT JOIN dbo.XLOVCode  XMEN WITH (READUNCOMMITTED) ON XMEN.LOVName  = 'FaJaNeinKantRep' AND XMEN.Code in(MEN.Value, MENI.Value)

LEFT JOIN dbo.DynaValue EIG  WITH (READUNCOMMITTED) ON EIG.FaPhaseID = PHS.FaPhaseID AND EIG.DynaFieldID = @EigenverFieldID
LEFT JOIN dbo.DynaValue EIGI WITH (READUNCOMMITTED) ON EIGI.FaPhaseID = PHS.FaPhaseID AND EIGI.DynaFieldID = @IntEigenverFieldID
LEFT JOIN dbo.XLOVCode  XEIG WITH (READUNCOMMITTED) ON XEIG.LOVName  = 'FaJaNeinKantRep' AND XEIG.Code in(EIG.Value, EIGI.Value)

LEFT JOIN dbo.DynaValue BET  WITH (READUNCOMMITTED) ON BET.FaPhaseID = PHS.FaPhaseID AND  BET.DynaFieldID = @BeteiligungFieldID
LEFT JOIN dbo.DynaValue BETI WITH (READUNCOMMITTED) ON BETI.FaPhaseID = PHS.FaPhaseID AND  BETI.DynaFieldID = @IntBeteiligungFieldID
LEFT JOIN dbo.XLOVCode  XBET WITH (READUNCOMMITTED) ON XBET.LOVName  = 'FaJaNeinKantRep' AND XBET.Code IN(BET.Value, BETI.Value)

LEFT JOIN dbo.DynaValue ESD  WITH (READUNCOMMITTED) ON ESD.FaPhaseID = PHS.FaPhaseID AND ESD.DynaFieldID = @EinschSDFieldID
LEFT JOIN dbo.DynaValue ESDI WITH (READUNCOMMITTED) ON ESDI.FaPhaseID = PHS.FaPhaseID AND ESDI.DynaFieldID = @IntEinschSDFieldID
LEFT JOIN dbo.XLOVCode  XESD WITH (READUNCOMMITTED) ON XESD.LOVName  = 'FaJaNeinTeilweise' AND XESD.Code IN(ESD.Value, ESDI.Value)

LEFT JOIN dbo.DynaValue EKL  WITH (READUNCOMMITTED) ON EKL.FaPhaseID = PHS.FaPhaseID AND EKL.DynaFieldID = @EinschKlientFieldID
LEFT JOIN dbo.DynaValue EKLI WITH (READUNCOMMITTED) ON EKLI.FaPhaseID = PHS.FaPhaseID AND EKLI.DynaFieldID = @IntEinschKlientFieldID
LEFT JOIN dbo.XLOVCode  XEKL WITH (READUNCOMMITTED) ON XEKL.LOVName  = 'FaJaNeinTeilweise' AND XEKL.Code IN(EKL.Value, EKLI.Value)

LEFT JOIN dbo.DynaValue EDR  WITH (READUNCOMMITTED) ON EDR.FaPhaseID = PHS.FaPhaseID AND EDR.DynaFieldID = @EinschDritteFieldID
LEFT JOIN dbo.DynaValue EDRI WITH (READUNCOMMITTED) ON EDRI.FaPhaseID = PHS.FaPhaseID AND EDRI.DynaFieldID = @IntEinschDritteFieldID
LEFT JOIN dbo.XLOVCode  XEDR WITH (READUNCOMMITTED) ON XEDR.LOVName  = 'FaJaNeinTeilweise' AND XEDR.Code IN(EDR.Value, EDRI.Value)

LEFT JOIN dbo.DynaValue ITG  WITH (READUNCOMMITTED) ON ITG.FaPhaseID = PHS.FaPhaseID AND ITG.DynaFieldID = @IntegrationFieldID
LEFT JOIN dbo.DynaValue ITGI WITH (READUNCOMMITTED) ON ITGI.FaPhaseID = PHS.FaPhaseID AND ITGI.DynaFieldID = @IntIntegrationFieldID
LEFT JOIN dbo.XLOVCode  XITG WITH (READUNCOMMITTED) ON XITG.LOVName  = 'FaRessourcen' AND XITG.Code IN(ITG.Value, ITGI.Value)

LEFT JOIN dbo.DynaValue PER  WITH (READUNCOMMITTED) ON PER.FaPhaseID = PHS.FaPhaseID AND PER.DynaFieldID = @PersoenlichFieldID
LEFT JOIN dbo.DynaValue PERI WITH (READUNCOMMITTED) ON PERI.FaPhaseID = PHS.FaPhaseID AND PERI.DynaFieldID = @IntPersoenlichFieldID
LEFT JOIN dbo.XLOVCode  XPER WITH (READUNCOMMITTED) ON XPER.LOVName  = 'FaRessourcen' AND XPER.Code IN(PER.Value, PERI.Value)

LEFT JOIN dbo.DynaValue SOZ WITH (READUNCOMMITTED) ON SOZ.FaPhaseID = PHS.FaPhaseID AND SOZ.DynaFieldID = @SozInteFieldID
LEFT JOIN dbo.DynaValue SOZI WITH (READUNCOMMITTED) ON SOZI.FaPhaseID = PHS.FaPhaseID AND SOZI.DynaFieldID = @IntSozInteFieldID
LEFT JOIN dbo.XLOVCode XSOZ WITH (READUNCOMMITTED) ON XSOZ.LOVName  = 'FaRessourcen' AND  XSOZ.Code IN(SOZ.Value, SOZI.Value)

LEFT JOIN dbo.DynaValue STA  WITH (READUNCOMMITTED) ON STA.FaPhaseID = PHS.FaPhaseID AND STA.DynaFieldID = @StabiFieldID
LEFT JOIN dbo.DynaValue STAI WITH (READUNCOMMITTED) ON STAI.FaPhaseID = PHS.FaPhaseID AND STAI.DynaFieldID = @IntStabiFieldID
LEFT JOIN dbo.XLOVCode  XSTA WITH (READUNCOMMITTED) ON XSTA.LOVName  = 'FaRessourcen' AND XSTA.Code IN(STA.Value, STA.Value)

LEFT JOIN dbo.DynaValue REC  WITH (READUNCOMMITTED) ON REC.FaPhaseID = PHS.FaPhaseID AND REC.DynaFieldID = @RechtFieldID
LEFT JOIN dbo.DynaValue RECI WITH (READUNCOMMITTED) ON RECI.FaPhaseID = PHS.FaPhaseID AND RECI.DynaFieldID = @IntRechtFieldID
LEFT JOIN dbo.XLOVCode  XREC WITH (READUNCOMMITTED) ON XREC.LOVName  = 'FaRessourcen' AND XREC.Code IN(REC.Value, RECI.Value)

LEFT JOIN dbo.DynaValue ABH  WITH (READUNCOMMITTED) ON ABH.FaPhaseID = PHS.FaPhaseID AND ABH.DynaFieldID = @Abh채ngigFieldID
LEFT JOIN dbo.DynaValue ABHI WITH (READUNCOMMITTED) ON ABHI.FaPhaseID = PHS.FaPhaseID AND ABHI.DynaFieldID = @IntAbh채ngigFieldID
LEFT JOIN dbo.XLOVCode  XABH WITH (READUNCOMMITTED) ON XABH.LOVName  = 'FaJaNeinKantRep' AND XABH.Code IN(ABH.Value, ABHI.Value)

WHERE PHS.DatumBis BETWEEN @DatumVon AND @DatumBis

SET @Kennzahl = (SELECT COUNT(*) FROM @Zielauswertung)
INSERT INTO @Kennzahlen VALUES('Total ausgewertete Beratungspl채ne', null, @Kennzahl, 'Anzahl', 1)
INSERT INTO @Kennzahlen VALUES(null, null, null, null, 1)

DECLARE @grundAngebot VARCHAR(200)
DECLARE @auswertungen INT

DECLARE cursorGrundAngebot CURSOR STATIC FOR
   SELECT GrundAngebot, COUNT(*)
   FROM @Zielauswertung
   GROUP BY GrundAngebot
   OPEN cursorGrundAngebot
   FETCH NEXT FROM cursorGrundAngebot INTO @grundAngebot, @auswertungen
   WHILE @@fetch_status = 0 BEGIN
      INSERT INTO @Kennzahlen VALUES(@grundAngebot, null, @auswertungen, null, 1)
      INSERT INTO @Kennzahlen VALUES('Kann die Klientin, der Klient angemessen am sozialen Leben teilnehmen?', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Teilnahme, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Teilnahme

      INSERT INTO @Kennzahlen VALUES('F체hrt die Klientin, der Klient insgesamt ein menschenw체rdiges Leben?', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Menschen, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Menschen

      INSERT INTO @Kennzahlen VALUES('F체hrt die Klientin, der Klient ein eigenverantwortliches + selbstbestimmtes Leben?', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Eigenver, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Eigenver

      INSERT INTO @Kennzahlen VALUES('Hat sich die Klientin, der Klient am Entwicklungsprozess beteiligt?', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Beteiligung, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Beteiligung

      INSERT INTO @Kennzahlen VALUES('Hat sich die Situation w채hrend der Beratung verbessert?', '', '','' , 1)
      INSERT INTO @Kennzahlen VALUES('Einsch채tzung SD', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', EinschSD, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY EinschSD

      INSERT INTO @Kennzahlen VALUES('Einsch채tzung Klient', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', EinschKlient, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY EinschKlient

      INSERT INTO @Kennzahlen VALUES('Einsch채tzung Dritte', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', EinschDritte, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY EinschDritte

      INSERT INTO @Kennzahlen VALUES('zur Integration in den Arbeitsmarkt', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Integration, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Integration

      INSERT INTO @Kennzahlen VALUES('zur St채rkung der Pers철nlichkeit', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Pers철nlichk, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Pers철nlichk

      INSERT INTO @Kennzahlen VALUES('zur Sozialen Integration', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', SozInte, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY SozInte

      INSERT INTO @Kennzahlen VALUES('zur Stabilisierung/Verbesserung der Gesundheit', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Stabi, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Stabi

      INSERT INTO @Kennzahlen VALUES('zur Wahrnehmung rechtlicher Anspr체che', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Recht, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Recht

      INSERT INTO @Kennzahlen VALUES('Konnte eine drohende oder zus채tzliche Abh채ngigkeit (Sozialhilfe) vermieden werden?', '', '','' , 1)
      INSERT @Kennzahlen
      SELECT '', Abh채ngig, Anzahl=COUNT(*), 'Anzahl', 1
      FROM @Zielauswertung WHERE GrundAngebot = @grundangebot
      GROUP BY Abh채ngig

      FETCH NEXT FROM cursorGrundAngebot INTO @grundAngebot, @auswertungen
   END
CLOSE cursorGrundAngebot
DEALLOCATE cursorGrundAngebot

SELECT Beschreibung, Auswertung, Kennzahl, Masseinheit 
FROM @Kennzahlen</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
</root>