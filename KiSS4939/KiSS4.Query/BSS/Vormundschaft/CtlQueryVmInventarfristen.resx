<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>/*
*  Es werden nur die Einträge angezeigt, die einen Eintrag im Eröffnungsfeld haben!
*  Frist eingehalten: ja/nein/null
*                     ja:   Eröffnung bis Erstkontakt weniger als 7 Tage
*                     nein: Eröffnung bis Erstkontakt mehr als 7 Tage
*                     null: kein Eintrag in Erstkontakt
*  wenn nichts drin steht wird das aktuelle Tagesdatum verwendet (dito 30 Tage frist)
*/

DECLARE @Frist7Tage INT
DECLARE @Frist30Tage INT
DECLARE @Bemerkungen INT

SET @Frist7Tage = 0
SET @Frist30Tage = 0
SET @Bemerkungen = 0
---SET @Frist7Tage = {edtFrist7Tage}
---SET @Frist30Tage = {edtFrist30Tage}
---SET @Bemerkungen = {edtBemerkungen}

DECLARE @Result TABLE
(
   VmFaLeistungID$  INT,
   BaPersonID$      INT,
   SAR              VARCHAR(255),
   Person           VARCHAR(255),
   Eröffnung        DATETIME,
   Erstkontakt      DATETIME,
   Aufgenommen      DATETIME,
   Bemerkungen      VARCHAR(MAX),
   Mahnung          DATETIME,
   Genehmigung      DATETIME,
   Versand          DATETIME,
   InventarVorlage  DATETIME,
   Autor            VARCHAR(MAX)
)

-- collect data
INSERT @Result
  SELECT VmFaLeistungID$ = FAL.FaLeistungID,
         BaPersonID$     = PRS.BaPersonID,
         SAR             = BEN.LastName + isNull(', ' + BEN.FirstName,''),
         Person          = PRS.Name + isNull(', ' + PRS.Vorname,''),
         Eröffnung       = INV.Eroeffnung, 
         Erstkontakt     = INV.ErstKontakt, 
         Aufgenommen     = INV.InventarAufgenommen,
         Bemerkungen     = CASE WHEN @Bemerkungen = 1 THEN INV.Bemerkung
                                ELSE '-'
                           END,
         Mahnung         = INV.Mahnung,
         Genehmigung     = INV.Genehmigung,
         Versand         = INV.Versand,
         InventarVorlage = DOC.DateLastSave,
         Autor           = AUT.LastName + isNull(', ' + AUT.FirstName,'')
  FROM dbo.FaLeistung FAL WITH (READUNCOMMITTED)
    INNER JOIN dbo.BaPerson         PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = FAL.BaPersonID
    INNER JOIN dbo.XUser            BEN WITH (READUNCOMMITTED) ON BEN.UserID = FAL.UserID
    INNER JOIN dbo.VmInventar       INV WITH (READUNCOMMITTED) ON INV.FaLeistungID = FAL.FaLeistungID
    LEFT JOIN dbo.XUser             AUT WITH (READUNCOMMITTED) ON AUT.UserID = INV.UserID
    LEFT JOIN dbo.XDocument         DOC WITH (READUNCOMMITTED) ON DOC.DocumentID = INV.DocumentID
    LEFT  JOIN dbo.FaLeistungArchiv ARC WITH (READUNCOMMITTED) ON ARC.FaLeistungID = FAL.FaLeistungID AND
                                                                  ARC.CheckOut IS NULL
  WHERE FAL.ModulID       = 5 AND      -- Vormundschaft
        FAL.FaProzessCode = 501 AND    -- Vormundschaftliche Massnahme (evtl. weglassen kann null sein)
        INV.IsDeleted = 0              -- logisch gelöschte Datensätze sollen nicht angezeigt werden
  --- AND BEN.UserID =  {edtUserID.LookupID} 
  --- AND INV.Eroeffnung &gt;= {edtEroeffnungVon}
  --- AND INV.Eroeffnung &lt;= {edtEroeffnungBis}
  --- AND INV.Genehmigung &gt;= {edtGenehmigungVon}
  --- AND INV.Genehmigung &lt;= {edtGenehmigungBis}
  --- AND ({edtFallstatus} &lt;&gt; 1 OR FAL.DatumBis IS NULL)
  --- AND ({edtFallstatus} &lt;&gt; 2 OR FAL.DatumBis IS NOT NULL AND ARC.FaLeistungID IS NULL)
  --- AND ({edtFallstatus} &lt;&gt; 3 OR ARC.FaLeistungID IS NOT NULL)
  --- AND ({edtFallstatus} &lt;&gt; 4 OR FAL.DatumBis IS NOT NULL)

-- output:
IF (@Frist7Tage = 1)
BEGIN
  SELECT -- VmFaFallID$,
         BaPersonID$,
         SAR,
         Person,
         Eröffnung,
         Erstkontakt,
         Mahnung,
         [7 Tage Frist]             = CASE WHEN Erstkontakt IS NOT NULL THEN DATEDIFF(DAY, Erstkontakt, DATEADD(DAY, 7, Eröffnung))
                                           ELSE DATEDIFF(DAY, GETDATE(), DATEADD(DAY, 7, Eröffnung))
                                      END,
         [7 Tage Frist eingehalten] = CASE WHEN Erstkontakt IS NULL THEN NULL
                                           WHEN DATEDIFF(DAY, Erstkontakt, DATEADD(DAY, 7, Eröffnung)) &gt;= 0 THEN 'ja'
                                           ELSE 'nein'
                                      END,
         Bemerkungen
  FROM @Result
  WHERE Erstkontakt IS NULL
END
ELSE IF @Frist30Tage = 1
BEGIN
  SELECT -- VmFaFallID$,
         BaPersonID$,
         SAR,
         Person,
         Eröffnung,
         Aufgenommen,
         [30 Tage Frist]             = CASE WHEN Aufgenommen IS NOT NULL THEN DATEDIFF(DAY, Aufgenommen, DATEADD(DAY, 30, Eröffnung))
                                            ELSE DATEDIFF(DAY, GETDATE(), DATEADD(DAY, 30, Eröffnung))
                                       END,
         [30 Tage Frist eingehalten] = CASE WHEN Aufgenommen IS NULL THEN NULL
                                            WHEN DATEDIFF(DAY, Aufgenommen, DATEADD(DAY, 30, Eröffnung)) &gt;= 0 THEN 'ja'
                                            ELSE 'nein'
                                       END,
         Bemerkungen
  FROM @Result
  WHERE Aufgenommen IS NULL
END
ELSE
BEGIN
  SELECT -- VmFaFallID$,
         BaPersonID$,
         SAR,
         Person,
         Eröffnung,
         Erstkontakt,
         [7 Tage Frist]              = CASE WHEN Erstkontakt IS NOT NULL THEN DATEDIFF(DAY, Erstkontakt, DATEADD(DAY, 7, Eröffnung))
                                            ELSE DATEDIFF(DAY, GETDATE(), DATEADD(DAY, 7, Eröffnung))
                                       END,
         [7 Tage Frist eingehalten]  = CASE WHEN Erstkontakt IS NULL THEN NULL
                                            WHEN DATEDIFF(DAY, Erstkontakt, DATEADD(DAY, 7, Eröffnung)) &gt;= 0 THEN 'ja'
                                            ELSE 'nein'
                                       END,
         Aufgenommen,
         [30 Tage Frist]             = CASE WHEN Aufgenommen IS NOT NULL THEN DATEDIFF(DAY, Aufgenommen, DATEADD(DAY, 30, Eröffnung))
                                            ELSE DATEDIFF(DAY, GETDATE(), DATEADD(DAY, 30, Eröffnung))
                                       END,
         [30 Tage Frist eingehalten] = CASE WHEN Aufgenommen IS NULL THEN NULL
                                            WHEN DATEDIFF(DAY, Aufgenommen, DATEADD(DAY, 30, Eröffnung)) &gt;= 0 THEN 'ja'
                                            ELSE 'nein'
                                       END,
         Mahnung,
         Genehmigung,
         Versand,
         InventarVorlage,
         Autor,
         Bemerkungen
  FROM @Result
END</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABbSURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2Gc
        GtLSGP4jY5BikEEYmgjZANIAUgO3CZcGZGdi1YDuJBgfpJE6NmALKZjYqJPIijh8KRYmhzXlEhIEANZ8
        ev1ASni6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtGenehmigungBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtGenehmigungVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtEroeffnungBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtEroeffnungVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>