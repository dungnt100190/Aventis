<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>select BaPersonID$                  = PRS.BaPersonID,
       Mandatsträger = case when USR.UserID is not null
                    then USR.LastName + isnull(', ' + USR.FirstName,'')
                    else VPM.Name + isnull(', ' + VPM.Vorname,'')
                    end,
       [Mandant/-in]                 = PRS.Name + isnull(', ' + PRS.Vorname,''),
       [Berichtsperiode von]         = VBR.BerichtsperiodeVon,
       [Berichtsperiode bis]         = VBR.BerichtsperiodeBis,
       Berichterstellung             = (SELECT TOP 1 MBE.ErstellungDatum FROM dbo.VmMandBericht MBE WITH (READUNCOMMITTED)
                                          WHERE MBE.FaLeistungID = FAL.FaLeistungID AND MBE.VmBerichtID = VBR.VmBerichtID),
       [Ausgang SC]                  = (SELECT TOP 1 MBE.BsDatum FROM dbo.VmMandBericht MBE WITH (READUNCOMMITTED) 
                                          WHERE MBE.FaLeistungID = FAL.FaLeistungID AND MBE.VmBerichtID = VBR.VmBerichtID),
       [Eingang Revisionen]          = VBR.Erstellung,
       Mahnung                       = VBR.Mahnung,
       [Genehmigung erstinstanzlich] = VBR.Passation1,
       [Genehmigung oberinstanzlich] = VBR.Passation2,
       [Rücklauf Belege SC]          = (SELECT TOP 1 MBE.BelegeZurueckRevision FROM dbo.VmMandBericht MBE WITH (READUNCOMMITTED) 
                                          WHERE MBE.FaLeistungID = FAL.FaLeistungID AND MBE.VmBerichtID = VBR.VmBerichtID),
       Versand                       = Versand,
       [Rücklauf Bericht SC]         = (SELECT TOP 1 MBE.ZurueckVomBS FROM dbo.VmMandBericht MBE WITH (READUNCOMMITTED) 
                                          WHERE MBE.FaLeistungID = FAL.FaLeistungID AND MBE.VmBerichtID = VBR.VmBerichtID)
from   dbo.VmBericht VBR WITH (READUNCOMMITTED)
       inner join dbo.FaLeistung       FAL WITH (READUNCOMMITTED)  on FAL.FaLeistungID = VBR.FaLeistungID and
                                           FAL.DatumBis is null
       inner join dbo.BaPerson         PRS WITH (READUNCOMMITTED)  on PRS.BaPersonID = FAL.BaPersonID
       inner join dbo.VmMassnahme      VMN WITH (READUNCOMMITTED)  on VMN.FaLeistungID = FAL.FaLeistungID and
                                           VMN.VmMassnahmeID =
                                             (select top 1 VmMassnahmeID
                                              from   dbo.VmMassnahme WITH (READUNCOMMITTED)
                                              where  FaLeistungID = FAL.FaLeistungID and
                                                     VBR.BerichtsperiodeBis between DatumVon and
                                                     isNull(DatumBis,VBR.BerichtsperiodeBis)
                                                     and IsDeleted=0)
       left  join dbo.VmErnennung      VEN WITH (READUNCOMMITTED)  on VEN.VmMassnahmeID = VMN.VmMassnahmeID and
                                           VEN.VmErnennungID =
                                             (select top 1 VmErnennungID
                                              from   dbo.VmErnennung WITH (READUNCOMMITTED)
                                              where  VmMassnahmeID = VMN.VmMassnahmeID
                                                      and IsDeleted=0
                                              order by Ernennung desc)
       left  join dbo.XUser            USR WITH (READUNCOMMITTED)  on USR.UserID = VEN.UserID
       left  join dbo.VmPriMa          VPM WITH (READUNCOMMITTED)  on VPM.VmPriMaID = VEN.VmPriMaID
       left  join dbo.VmMandBericht    MBE WITH (READUNCOMMITTED)  on MBE.FaLeistungID = FAL.FaLeistungID and                                          
                                           MBE.VmBerichtID = VBR.VmBerichtID
       left  join dbo.FbPeriode        PER WITH (READUNCOMMITTED)  on PER.BaPersonID = FAL.BaPersonID and
                                           PER.FbPeriodeID =
                                             (select top 1 FbPeriodeID
                                              from   dbo.FbPeriode WITH (READUNCOMMITTED)
                                              where  BaPersonID = FAL.BaPersonID
                                              order by PeriodeVon desc)
       left  join dbo.FbTeam           TEA WITH (READUNCOMMITTED)  on TEA.FbTeamID = PER.FbTeamID

where 1=1
--- and VBR.BerichtsperiodeBis &gt;= {edtDatumVon}
--- and VBR.BerichtsperiodeBis &lt;= {edtDatumBis}
--- and ({edtaktuell} = 0 or (getdate() between BerichtsperiodeVon and BerichtsperiodeBis))
--- and USR.UserID = {edtUserID.LookupID}
--- and PRS.BaPersonID = {edtBaPersonID.LookupID}
--- and PER.FbTeamID = {edtFbTeamID}
--- AND({edtUserType}= 0 OR ({edtUserType}=1 AND VEN.VmPriMaID IS NULL) OR ({edtUserType}=2 AND VEN.UserID IS NULL))
order by Mandatsträger, [Mandant/-in]</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>