<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryQuery.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryQuery.SelectStatement" xml:space="preserve">
    <value>DECLARE @Abgelehnte VARCHAR(50)
DECLARE @NeueF VARCHAR(50)
DECLARE @NeueU VARCHAR(50)

SET @Abgelehnte = 'Abgelehnte Fälle'
SET @NeueF = 'Neue Fälle'
SET @NeueU = 'Neue UnterPers'

DECLARE @Jahr INT

SET @Jahr = {edtJahr}

DECLARE @Tmp TABLE(
   Abfrage   VARCHAR(100),
   Abteilung VARCHAR(100),
   Monat     INT,
   Anzahl    INT
)

DECLARE @Result TABLE(
   Abfrage VARCHAR(100),
   Abteilung VARCHAR(100),
   Jan       INT,
   Feb       INT,
   März      INT,
   Apr       INT,
   Mai       INT,
   Juni      INT,
   Juli      INT,
   Aug       INT,
   Sep       INT,
   Okt       INT,
   Nov       INT,
   Dez       INT,
   Total     INT,
   Sortkey$  INT
)

INSERT @Tmp
--abgelehnte Fälle
SELECT @Abgelehnte,
       XOU.ItemName,
       MAX(MONTH(PHS.DatumBis)),
       COUNT(*)
FROM FaPhase PHS
INNER JOIN XUser USR ON USR.UserID = PHS.UserID
INNER JOIN XOrgUnit_User OUU ON OUU.UserID = USR.UserID
                            AND OUU.OrgUnitMemberCode = 2
INNER JOIN XOrgUnit XOU on XOU.OrgUnitID = OUU.OrgUnitID
WHERE PHS.FaPhaseCode = 1
  AND PHS.AbschlussGrundCode = 10
  AND YEAR(PHS.DatumBis) = @Jahr
GROUP BY XOU.ItemName, MONTH(PHS.DatumBis)

INSERT @Tmp
--neue Sozialhilfe Fälle
SELECT @NeueF,
       XOU.ItemName,
       MAX(MONTH(LEI.DatumVon)),
       COUNT(*)
FROM FaLeistung LEI
INNER JOIN dbo.XUser         USR WITH (READUNCOMMITTED) ON USR.UserID = LEI.UserID
INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                             AND OUU.OrgUnitMemberCode = 2
INNER JOIN dbo.XOrgUnit      XOU WITH (READUNCOMMITTED) ON XOU.OrgUnitID = OUU.OrgUnitID
WHERE LEI.ModulID = 3
  AND YEAR(LEI.DatumVon) = @Jahr
GROUP BY XOU.ItemName, MONTH(LEI.DatumVon)


INSERT @Tmp
--neue Unterst. Personen
SELECT @NeueU,
       XOU.ItemName,
       MAX(MONTH(LEI.DatumVon)),
       COUNT(*)
FROM dbo.BgFinanzPlan                    SFP WITH (READUNCOMMITTED)
INNER JOIN dbo.BgFinanzPlan_BaPerson     SDP WITH (READUNCOMMITTED) ON SDP.BgFinanzPlanID = SFP.BgFinanzPlanID AND SDP.IstUnterstuetzt = 1
INNER JOIN dbo.FaLeistung                LEI WITH (READUNCOMMITTED) ON LEI.FaLeistungID = SFP.FaLeistungID AND YEAR(LEI.DatumVon) = @Jahr
INNER JOIN dbo.XUser USR ON USR.UserID = LEI.UserID
INNER JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                            AND OUU.OrgUnitMemberCode = 2
INNER JOIN dbo.XOrgUnit XOU WITH (READUNCOMMITTED) ON XOU.OrgUnitID = OUU.OrgUnitID
WHERE SFP.DatumVon IS NOT NULL
  AND NOT EXISTS (SELECT *
                  FROM dbo.BgFinanzPlan                    SFP2 WITH (READUNCOMMITTED)
                    INNER JOIN dbo.BgFinanzPlan_BaPerson   SDP2 WITH (READUNCOMMITTED) ON SDP2.BgFinanzPlanID = SFP2.BgFinanzPlanID AND SDP2.IstUnterstuetzt = 1
                  WHERE SFP2.DatumVon IS NOT NULL AND DateDiff(d, SFP2.DatumBis, SFP.DatumVon) BETWEEN 0 AND 32
                    AND SDP2.BaPersonID = SDP.BaPersonID AND SFP2.BgFinanzPlanID != SFP.BgFinanzPlanID)
GROUP BY XOU.ItemName, MONTH(LEI.DatumVon)

INSERT @Result (Abfrage, Abteilung) SELECT @NeueF, ItemName FROM XOrgUnit
INSERT @Result (Abfrage, Abteilung) SELECT @Abgelehnte, ItemName FROM XOrgUnit
INSERT @Result (Abfrage, Abteilung) SELECT @NeueU, ItemName FROM XOrgUnit

UPDATE @Result SET Jan   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 1

UPDATE @Result SET Feb   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 2

UPDATE @Result SET März   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 3

UPDATE @Result SET Apr   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 4

UPDATE @Result SET Mai   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 5

UPDATE @Result SET Juni   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 6

UPDATE @Result SET Juli   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 7

UPDATE @Result SET Aug   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 8

UPDATE @Result SET Sep   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 9

UPDATE @Result SET Okt   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 10

UPDATE @Result SET Nov   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 11

UPDATE @Result SET Dez   = TMP.Anzahl
FROM @Tmp TMP
INNER JOIN @Result RES ON TMP.Abteilung = RES.Abteilung
                      AND TMP.Abfrage = RES.Abfrage
WHERE TMP.Monat = 12

UPDATE @Result SET TOTAL = (SELECT ISNULL(JAN, 0) + ISNULL(FEB, 0) + ISNULL(MÄRZ, 0) + ISNULL(APR, 0) + ISNULL(MAI, 0) + ISNULL(JUNI, 0) + ISNULL(JULI, 0)
                                 + ISNULL(AUG, 0) + ISNULL(SEP, 0) + ISNULL(OKT, 0) + ISNULL(NOV, 0) + ISNULL(DEZ, 0))

UPDATE @RESULT SET Sortkey$ = 1 WHERE Abfrage = @NeueF
UPDATE @RESULT SET Sortkey$ = 3 WHERE Abfrage = @Abgelehnte
UPDATE @RESULT SET Sortkey$ = 5 WHERE Abfrage = @NeueU

INSERT @Result (Sortkey$) SELECT 2
INSERT @Result (Sortkey$) SELECT 4

SELECT * FROM @Result
ORDER BY Sortkey$</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>