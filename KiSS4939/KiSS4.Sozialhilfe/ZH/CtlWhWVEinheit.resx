<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryWVEinheit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>328, 17</value>
  </metadata>
  <data name="qryWVEinheit.SelectStatement" xml:space="preserve">
    <value>SELECT FAL.FaFallID,
       FPP.BgFinanzplanIDs,
       WVE.*,
       UT = PRS.NameVorname,
       PRS.Geburtsdatum,
       WeitereMitglieder,
       AnzahlEinzelposten = IsNull(EPO.Count,0),
       Status = CASE WHEN WVE.Ungueltig = 1 THEN 'X' END,
       CodeKuerzel = WVC.ShortText
FROM FaFall              PFL
  LEFT  JOIN FaFall      FAL ON FAL.BaPersonID = PFL.BaPersonID
  INNER JOIN WhWVEinheit WVE ON WVE.FaFallID   = FAL.FaFallID
  LEFT  JOIN vwPerson    PRS ON PRS.BaPersonID = WVE.BaPersonID
  LEFT  JOIN (SELECT WVM.WhWVEinheitID, Count = Count(*)
              FROM KbWVEinzelposten            EPO
                INNER JOIN WhWVEinheitMitglied WVM ON WVM.WhWVEinheitMitgliedID = EPO.WhWVEinheitMitgliedID 
              GROUP BY WVM.WhWVEinheitID) EPO ON EPO.WhWVEinheitID = WVE.WhWVEinheitID
  LEFT  JOIN (SELECT WVM.WhWVEinheitID, WeitereMitglieder = REPLACE(dbo.ConcDistinct(PRS.VornameName),',',', ')
              FROM WhWVEinheitMitglied WVM
                INNER JOIN WhWVEinheit WVE ON WVE.WhWVEinheitID= WVM.WhWVEinheitID
                INNER JOIN vwPerson    PRS ON PRS.BaPersonID = WVM.BaPersonID
              WHERE WVM.BaPersonID &lt;&gt; WVE.BaPersonID
              GROUP BY WVM.WhWVEinheitID) WVM ON WVM.WhWVEinheitID = WVE.WhWVEinheitID
  LEFT JOIN (SELECT WVMI.WhWVEinheitID, BgFinanzplanIDs = dbo.ConcDistinctOrder(BFPI.bgFinanzplanID)
             FROM WhWVEinheitMitglied            WVMI
                INNER JOIN WhWVEinheit           WVEI ON WVEI.WhWVEinheitID = WVMI.WhWVEinheitID
                INNER JOIN BgFinanzplan_BaPerson FPPI ON FPPI.BaPersonID = WVMI.BaPersonID AND FPPI.IstUnterstuetzt = 1
                INNER JOIN BgFinanzplan          BFPI ON BFPI.BgFinanzplanID = FPPI.BgFinanzplanID AND
                                                         dbo.fnDatumUeberschneidung(BFPI.DatumVon, ISNULL(BFPI.DatumBis,'9999-12-31'), WVEI.DatumVon, ISNULL(WVEI.DatumBis,'9999-12-31')) = 1
                INNER JOIN FaLeistung            LEII ON LEII.FaLeistungID = BFPI.FaLeistungID
              WHERE LEII.FaFallID = {0}
              GROUP BY WVMI.WhWVEinheitID) FPP ON FPP.WhWVEinheitID = WVE.WhWVEinheitID
  INNER JOIN XLOVCode WVC ON WVC.LOVName = 'BaWVCode' AND WVC.Code = WVE.WVCode
WHERE PFL.FaFallID = {0}
ORDER BY FAL.FaFallID, Ungueltig, WVCode, DatumVon</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtRekursAbgeschlossen.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtRekurs.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="datBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="datVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryBaWVCode.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryBaWVCode.SelectStatement" xml:space="preserve">
    <value>SELECT NameVorname = PRS.Name + ',  ' + PRS.Vorname, WVC.*
FROM FaFallPerson                FAP
  INNER  JOIN FaLeistung             LEI ON LEI.FaFallID       = FAP.FaFallID
  INNER  JOIN BgFinanzplan           BFP ON BFP.FaLeistungID   = LEI.FaLeistungID
  INNER  JOIN BgFinanzplan_BaPerson  FPP ON FPP.BgFinanzplanID = BFP.BgFinanzplanID
  INNER JOIN BaPerson            PRS ON PRS.BaPersonID = FPP.BaPersonID
  INNER JOIN BaWVCode            WVC ON WVC.BaPersonID = PRS.BaPersonID
WHERE FAP.FaFallID = {0} AND WVC.BaWVStatusCode = 1 AND FPP.IstUnterstuetzt = 1</value>
  </data>
  <metadata name="qryBaWVCodeUngueltig.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>143, 17</value>
  </metadata>
  <data name="qryBaWVCodeUngueltig.SelectStatement" xml:space="preserve">
    <value>SELECT NameVorname = PRS.Name + IsNull(',  ' + PRS.Vorname,''), WVC.BaWVCodeID, WVC.BaPersonID, WVC.DatumVon, WVC.DatumBis, WVC.WVCode
FROM WhWVEinheit                 WVE
  INNER JOIN WhWVEinheitMitglied WVM ON WVE.WhWVEinheitID = WVM.WhWVEinheitID
  INNER JOIN BaWVCode            WVC ON WVC.BaWVCodeID = WVM.BaWVCodeID
  INNER JOIN BaPerson            PRS ON PRS.BaPersonID = WVC.BaPersonID
WHERE WVE.FaFallID = {0} AND WVE.Ungueltig = 1</value>
  </data>
  <metadata name="qryWVMitglied.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>454, 17</value>
  </metadata>
  <data name="qryWVMitglied.SelectStatement" xml:space="preserve">
    <value>SELECT WVM.WhWVEinheitMitgliedID, PRS.BaPersonID, PersonName = PRS.Name + ',  ' + PRS.Vorname, WVM.WhWVEinheitID, WVM.BaWVCodeID, Buchungen = IsNull(EPO.Count,0)
FROM WhWVEinheit WVE
  INNER JOIN WhWVEinheitMitglied WVM ON WVM.WhWVEinheitID = WVE.WhWVEinheitID
  INNER JOIN BaPerson            PRS ON PRS.BaPersonID = WVM.BaPersonID
  LEFT  JOIN (SELECT WhWVEinheitMitgliedID, Count = Count(*)
              FROM KbWVEinzelposten
              GROUP BY WhWVEinheitMitgliedID ) EPO ON EPO.WhWVEinheitMitgliedID = WVM.WhWVEinheitMitgliedID
WHERE WVE.WhWVEinheitID = {0}</value>
  </data>
</root>