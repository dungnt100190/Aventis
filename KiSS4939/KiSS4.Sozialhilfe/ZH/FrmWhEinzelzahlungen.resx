<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryBgPosition.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>243, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
  <data name="qryBgPosition.SelectStatement" xml:space="preserve">
    <value>DECLARE @tmp TABLE (
  BgPositionID        INT, 
  [Status]            INT,
  AnzahlBelege        INT,
  BelegDatum          DATETIME,
  Belegnr             BIGINT,
  HauptPos            VARCHAR(1),
  Kontrolle_UserID    INT,
  Kontrolle_LogonName VARCHAR(255),
  Kontrolle_Datum     VARCHAR(10)
);

DECLARE @KontrolleUserID INT;
--- SET @KontrolleUserID = {edtSucheKontrolleMA.LookupID};
DECLARE @KontrolleDatumVon DATETIME;
--- SET @KontrolleDatumVon = {edtSucheKontrolleVon};
DECLARE @KontrolleDatumBis DATETIME;
--- SET @KontrolleDatumBis = {edtSucheKontrolleBis};

INSERT @tmp
SELECT BPO.BgPositionID,
       [Status]     = ISNULL(STA.[Status],
                             CASE BPO.BgBewilligungStatusCode
                               WHEN 1 THEN 1   -- grau
                               WHEN 2 THEN 15  -- abgelehnt
                               WHEN 3 THEN 12  -- angefragt
                               WHEN 5 THEN 14  -- bewilligt
                               WHEN 9 THEN 7   -- gesperrt
                             END),
       AnzahlBelege = STA.AnzahlBelege,
       BelegDatum   = STA.BelegDatum,
       Belegnr      = STA.Belegnr,
       HauptPos     = CASE WHEN EXISTS(SELECT TOP 1 1
                                       FROM dbo.BgPosition POS WITH (READUNCOMMITTED) 
                                       WHERE POS.BgPositionID_Parent = BPO.BgPositionID
                                         AND POS.BgKategorieCode &lt;&gt; 3)
                        THEN '*' 
                      END,
       Kontrolle_UserID      = KTL.UserID,
       Kontrolle_LogonName   = KTL.LogonName,
       Kontrolle_Datum       = KTL.DatumText
FROM dbo.BgPosition                 BPO WITH (READUNCOMMITTED)
  INNER JOIN      dbo.BgBudget   BDG WITH (READUNCOMMITTED) ON BDG.BgBudgetID = BPO.BgBudgetID and BDG.MasterBudget = 0
  LEFT OUTER JOIN (SELECT BUC.BgBudgetID, 
                          BUK.BgPositionID, 
                          [Status]     = MAX(BUC.KbBuchungStatusCode), 
                          StatusMin    = MIN(BUC.KbBuchungStatusCode), 
                          AnzahlBelege = COUNT(DISTINCT BUC.KbBuchungID),
                          BelegDatum   = MIN(BUC.BelegDatum),
                          BelegNr      = MIN(BUC.BelegNr)
                   FROM dbo.KbBuchungKostenart     BUK WITH (READUNCOMMITTED)
                     LEFT OUTER JOIN dbo.KbBuchung BUC WITH (READUNCOMMITTED) ON BUC.KbBuchungID = BUK.KbBuchungID
---                WHERE 1 &lt;&gt; {edtSucheStatus} -- Graue Positionen haben nie Belege -&gt; Bedingung führt zu Performancegewinn
                   GROUP  BY BUC.BgBudgetID, BUK.BgPositionID) STA ON STA.BgBudgetID = BPO.BgBudgetID AND STA.BgPositionID = BPO.BgPositionID
  OUTER APPLY (SELECT ID,
                      UserID,
                      LogonName,
                      Datum,
                      DatumText,
                      BgBewilligungCode
               FROM dbo.fnWhGetPositionKontrolle(BPO.BgPositionID, {1})
               WHERE COALESCE(@KontrolleUserID, @KontrolleDatumVon, @KontrolleDatumBis) IS NOT NULL) KTL -- Kontrolle holen nur wenn es für die Suche nötig ist
WHERE BPO.BgKategorieCode IN (100,101) 
  AND BPO.BgPositionID_Parent IS NULL
  AND (COALESCE(@KontrolleUserID, @KontrolleDatumVon, @KontrolleDatumBis) IS NULL -- Kontrolle holen nur wenn es für die Suche nötig ist
    OR EXISTS(SELECT TOP 1 1 -- Wurde die Position irgend einmal kontrolliert?
              FROM dbo.BgBewilligung BGB WITH (READUNCOMMITTED)
              WHERE BGB.BgPositionID = BPO.BgPositionID
                AND BGB.BgBewilligungCode IN (1, 2, 11) -- Anfrage zur Bewilligung, Bewilligung erteilt, Position zur Zahlung freigegeben
                AND (@KontrolleUserID IS NULL OR ISNULL(BGB.UserID_Erstellt, BGB.UserID) = @KontrolleUserID)
                AND (@KontrolleDatumVon IS NULL OR BGB.Datum &gt;= @KontrolleDatumVon)
                AND (@KontrolleDatumBis IS NULL OR BGB.Datum &lt;= dateadd(ms,-10,dateadd(d,1,@KontrolleDatumBis)))
              ))
--- AND (1 &lt;&gt; {edtSucheStatus} OR NOT EXISTS (SELECT KbBuchungID FROM KbBuchungKostenart BKA WHERE BKA.BgPositionID = BPO.BgPositionID ))
--- AND BPO.ErstelltUserID = {edtSucheErfassungMA.LookupID}
--- AND BPO.ErstelltDatum &gt;= {edtSucheErfassungVon}
--- AND BPO.ErstelltDatum &lt;= dateadd(ms,-10,dateadd(d,1,{edtSucheErfassungBis}))  
--- AND BPO.MutiertUserID = {edtSucheMutationMA.LookupID}
--- AND BPO.MutiertDatum &gt;= {edtSucheMutationVon}
--- AND BPO.MutiertDatum &lt;= dateadd(ms,-10,dateadd(d,1,{edtSucheMutationBis}))  
--- AND KTL.UserID = {edtSucheKontrolleMA.LookupID}
--- AND KTL.Datum &gt;= {edtSucheKontrolleVon}
--- AND KTL.Datum &lt;= dateadd(ms,-10,dateadd(d,1,{edtSucheKontrolleBis}))  
--- AND BPO.BgPositionID = {edtSucheBelegID}
  AND {0} = 1
GROUP BY BPO.BgPositionID, BPO.BgBewilligungStatusCode, STA.[Status], STA.AnzahlBelege, STA.BelegDatum, STA.BelegNr, 
         KTL.UserID, KTL.LogonName, KTL.DatumText

SELECT
--- TOP {edtSucheSelectTop} 
       BPO.*,
       BAP.BgAuszahlungPersonID,
       BAP.KbAuszahlungsArtCode,
       BAP.BgAuszahlungsTerminCode,
       BAP.BgWochentagCodes,BAP.BaZahlungswegID,
       BAP.MitteilungZeile1,
       BAP.MitteilungZeile2,
       BAP.MitteilungZeile3,
       BAP.MitteilungZeile4,
       BAP.ReferenzNummer,
       BetragSpezial         = BPO.Betrag + 
                               CASE WHEN T.HauptPos IS NULL
                                 THEN 0
                                 ELSE (SELECT ISNULL(SUM(Betrag), 0.0)
                                       FROM dbo.BgPosition POS WITH (READUNCOMMITTED) 
                                       WHERE BgPositionID_Parent = BPO.BgPositionID
                                         AND POS.BgKategorieCode &lt;&gt; 3)
                               END, 
       WeitereKOA            = CASE WHEN T.HauptPos IS NULL
                                 THEN 0
                                 ELSE (SELECT COUNT(*) 
                                       FROM dbo.BgPosition POS WITH (READUNCOMMITTED) 
                                       WHERE BgPositionID_Parent = BPO.BgPositionID
                                         AND POS.BgKategorieCode &lt;&gt; 3)
                               END, 
       HauptPos              = T.HauptPos,
       ValutaDatum           = VAL.Datum,
       [Text]                = BPO.Buchungstext,
       Doc                   = (SELECT CASE WHEN COUNT(*) &gt; 0 THEN COUNT(*) END 
                                FROM dbo.BgDokument WITH (READUNCOMMITTED) 
                                WHERE BgPositionID = BPO.BgPositionID),
       KOA                   = BKA.KontoNr,
       Kreditor              = KRE.Kreditor,
       ZusatzInfo            = KRE.ZusatzInfo,
       EinzahlungsscheinCode = KRE.EinzahlungsscheinCode,
       Klient                = PRS.NameVorname,
       KlientID              = PRS.BaPersonID,
       Adresse               = PRS.Wohnsitz,
       MA                    = USR.LogonName,
       [Status]              = T.[Status],
       BelegDatum            = T.BelegDatum,
       BelegNr               = T.BelegNr,
       Sel                   = CASE WHEN T.[Status] IS NULL AND BDG.BgBewilligungStatusCode = 5 
                                 THEN CONVERT(BIT,0) 
                                 ELSE NULL 
                               END,
       Jahr                  = BDG.Jahr,
       Monat                 = BDG.Monat,
       Quoting               = BKA.Quoting,
       BgKostenartID         = BKA.BgKostenartID,
       LeistungBaPersonID    = LEI.BaPersonID,
       FallBaPersonID        = FAL.BaPersonID,
       FaLeistungID          = LEI.FaLeistungID,
       FaFallID              = LEI.FaFallID,
       WhGrundbedarfTypCode  = FPL.WhGrundbedarfTypCode,
       BgSplittingartCode    = BKA.BgSplittingartCode,
       Kostenart             = BKA.KontoNr + ' ' + ISNULL(BPA.Name,BKA.Name),
       GruppeFilter          = CONVERT(VARCHAR(50),GRP.Value3),
       Monatsbudget_EditMask = BPA.Monatsbudget_EditMask,
       BaZahlungswegIDFix    = BKA.BaZahlungswegIDFix,
       TeamZustaendig        = LUS.OrgEinheitName,
       Kontrolle_UserID      = T.Kontrolle_UserID,
       Kontrolle_LogonName   = T.Kontrolle_LogonName,
       Kontrolle_Datum       = T.Kontrolle_Datum,
       Kontrolle_Loaded      = CASE WHEN COALESCE(@KontrolleUserID, @KontrolleDatumVon, @KontrolleDatumBis) IS NOT NULL
                                 THEN CONVERT(BIT, 1) -- Kontrolle ist geladen nur wenn es für die Suche nötig war
                                 ELSE CONVERT(BIT, 0)
                               END
FROM @tmp T
  INNER JOIN dbo.vwBgPosition                  BPO WITH (READUNCOMMITTED) ON BPO.BgPositionID = T.BgPositionID
  INNER JOIN dbo.BgBudget                      BDG WITH (READUNCOMMITTED) ON BDG.BgBudgetID = BPO.BgBudgetID
  INNER JOIN dbo.BgFinanzplan                  FPL WITH (READUNCOMMITTED) ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.FaLeistung                    LEI WITH (READUNCOMMITTED) ON LEI.FaLeistungID = FPL.FaLeistungID
  INNER JOIN dbo.vwUser                        LUS WITH (READUNCOMMITTED) ON LUS.UserID = LEI.UserID
  INNER JOIN dbo.FaFall                        FAL WITH (READUNCOMMITTED) ON FAL.FaFallID = LEI.FaFallID

  LEFT OUTER JOIN dbo.BgSpezkonto              BSK WITH (READUNCOMMITTED) ON BSK.BgSpezkontoID = BPO.BgSpezkontoID
  LEFT OUTER JOIN dbo.BgPositionsart           BPA WITH (READUNCOMMITTED) ON BPA.BgPositionsartID = COALESCE(BPO.BgPositionsartID,BSK.BgPositionsartID)
  LEFT OUTER JOIN dbo.vwPerson                 PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
  LEFT OUTER JOIN dbo.BgPositionsart           GBL WITH (READUNCOMMITTED) ON GBL.BgPositionsartID = FPL.WhGrundbedarfTypCode
  LEFT OUTER JOIN dbo.BgKostenart              BKA WITH (READUNCOMMITTED) ON BKA.BgKostenartID = COALESCE(BPA.BgKostenartID, BSK.BgKostenartID, GBL.BgKostenartID)
  LEFT OUTER JOIN dbo.BgAuszahlungPerson       BAP WITH (READUNCOMMITTED) ON BAP.BgPositionID = BPO.BgPositionID 
                                                                         AND BAP.BgAuszahlungPersonID = (SELECT TOP 1 BgAuszahlungPersonID
                                                                                                         FROM dbo.BgAuszahlungPerson  WITH (READUNCOMMITTED)
                                                                                                         WHERE BgPositionID = BPO.BgPositionID
                                                                                                         ORDER BY 
                                                                                                           CASE WHEN BaPersonID IS NULL THEN 1
                                                                                                                WHEN BaPersonID = BPO.BaPersonID THEN 2
                                                                                                                ELSE 3
                                                                                                           END)
  LEFT OUTER JOIN dbo.vwKreditor               KRE WITH (READUNCOMMITTED) ON KRE.BaZahlungswegID = BAP.BaZahlungswegID
  LEFT OUTER JOIN dbo.XLOVCode                 AZA WITH (READUNCOMMITTED) ON AZA.LOVName = 'KbAuszahlungsart' 
                                                                         AND AZA.Code = BAP.KbAuszahlungsArtCode
  LEFT OUTER JOIN dbo.XLOVCode                 AZT WITH (READUNCOMMITTED) ON AZT.LOVName = 'BgAuszahlungsTermin' 
                                                                         AND AZT.Code = BAP.BgAuszahlungsTerminCode
  LEFT OUTER JOIN dbo.XLOVCode                 SPT WITH (READUNCOMMITTED) ON SPT.LOVName = 'BgSpezkontoTyp' 
                                                                         AND SPT.Code = BSK.BgSpezkontoTypCode
  LEFT OUTER JOIN dbo.XLOVCode                 GRP WITH (READUNCOMMITTED) ON GRP.LOVName = 'BgGruppe' 
                                                                         AND GRP.Code = BPA.BgGruppeCode
  LEFT OUTER JOIN dbo.XUser                    USR WITH (READUNCOMMITTED) ON USR.UserID = BPO.ErstelltUserID 
  LEFT OUTER JOIN dbo.BgAuszahlungPersonTermin VAL WITH (READUNCOMMITTED) ON VAL.BgAuszahlungPersonID = BAP.BgAuszahlungPersonID 
                                                                         AND VAL.Datum = (SELECT TOP 1 Datum
                                                                                          FROM dbo.BgAuszahlungPersonTermin  WITH (READUNCOMMITTED)
                                                                                          WHERE BgAuszahlungPersonID = BAP.BgAuszahlungPersonID
                                                                                          ORDER BY Datum)

---                                                                      AND VAL.Datum &gt;= {edtSucheValutaVon}
---                                                                      AND VAL.Datum &lt;= {edtSucheValutaBis}
WHERE 1 = 1
--- AND LEI.FaFallID = {edtSucheFallNr}
--- AND T.Status = {edtSucheStatus}
ORDER BY ErstelltDatum, BgPositionID;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSucheErfassungVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheErfassungBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheKontrolleVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheKontrolleBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheValutaVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheValutaBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheMutationVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtSucheMutationBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="qryBgBewilligung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>520, 17</value>
  </metadata>
  <data name="qryBgBewilligung.SelectStatement" xml:space="preserve">
    <value>SELECT BBW.*,
       Absender       = ABS.NameVorname,
       Empfaenger     = EMP.NameVorname,
       AbsenderText   = ABS.LogonNameVornameOrgUnit,
       EmpfaengerText = EMP.LogonNameVornameOrgUnit,
       Herkunft       = CLS.MaskName
FROM dbo.BgBewilligung   BBW WITH (READUNCOMMITTED)
  INNER JOIN dbo.vwUser  ABS ON ABS.UserID = BBW.UserID
  LEFT  JOIN dbo.vwUser  EMP ON EMP.UserID = BBW.UserID_An
  LEFT  JOIN dbo.XClass  CLS ON CLS.ClassName = BBW.ClassName
WHERE BBW.BgPositionID = {0}
ORDER BY BBW.Datum;</value>
  </data>
  <metadata name="qryBgDokumente.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>666, 17</value>
  </metadata>
  <data name="qryBgDokumente.SelectStatement" xml:space="preserve">
    <value>SELECT
       BgDokumentID,
       BgFinanzplanID,
       BgBudgetID,
       BgPositionID,
       BgDokumentTypCode,
       DocumentID,
       Stichwort,
       BgDocumentTS,
       DateCreation,
       UserID_Creator,
       DateLastSave,
       UserID_LastSave,
--       FileBinary,
       DocFormatCode,
       FileExtension
FROM [dbo].[fnBgGetDokumente] ({0})
ORDER BY Stichwort
</value>
  </data>
  <data name="edtDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABfSURBVDhPrY7RDYAwCESZgkXYqTs5LeYqRFsBNfaS98W9
        cISIiGb0whwcVLcbzNyx2hkXWqMBlF206pGnD2CYlwlXQmGe5KRCxRohmgNSoWKNEM0BqVDxX3iD1b+E
        aAfWfHr9nSYTxgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDocument.Properties.Buttons1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABYSURBVDhPnY3BDQAgCAPZyf1nw6DWGC2gXuID2wMxtIja
        a8MNEL6kMR4cGQQmuYuY4C2ZrIW0bKB0VQZPZePpwlpOhb0USix0BQQspP9eGUQZJVtI6YJIBeu5cfV3
        tfQcAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtDocument.Properties.Buttons2" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABBSURBVDhPYwABY2Pj/7gwWAE6AEn8/z8TA4uJiYExVBkC
        4NMAo6FKIYCQDSCM4jxcGpDxqIbhooEYDFVOCmBgAADnY6JvpgSjlwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDocument.Properties.Buttons3" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABdSURBVDhPxY6LCcAwCESdwkWcNtNaLlUam5oPBHrwCJJ7
        KCEiohm18A4+VEsHM1es9mQk+GvVO7MNIJyXCS1nhSIUZpAKKC8LXh4RhFby2UlPAtvCFz8IK1h9J0QX
        DTKNHhU9EmkAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="qryLetzte10Buchungen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>813, 17</value>
  </metadata>
  <data name="qryLetzte10Buchungen.SelectStatement" xml:space="preserve">
    <value>SELECT TOP 10 
  Buchungsdatum = VAL.Datum,
  Buchungstext  = BPO.Buchungstext,
  Betrag        = BPO.Betrag,
  Kreditor      = KRE.Kreditor
FROM dbo.vwBgPosition                          BPO WITH (READUNCOMMITTED)
  INNER JOIN dbo.BgBudget                      BDG WITH (READUNCOMMITTED) ON BDG.BgBudgetID = BPO.BgBudgetID
  INNER JOIN dbo.BgFinanzplan                  FPL WITH (READUNCOMMITTED) ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.FaLeistung                    LEI WITH (READUNCOMMITTED) ON LEI.FaLeistungID = FPL.FaLeistungID
  LEFT OUTER JOIN dbo.BgSpezkonto              BSK WITH (READUNCOMMITTED) ON BSK.BgSpezkontoID = BPO.BgSpezkontoID
  LEFT OUTER JOIN dbo.BgPositionsart           BPA WITH (READUNCOMMITTED) ON BPA.BgPositionsartID = COALESCE(BPO.BgPositionsartID,BSK.BgPositionsartID)
  LEFT OUTER JOIN dbo.BgPositionsart           GBL WITH (READUNCOMMITTED) ON GBL.BgPositionsartID = FPL.WhGrundbedarfTypCode
  LEFT OUTER JOIN dbo.vwPerson                 PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = LEI.BaPersonID
  LEFT OUTER JOIN dbo.BgKostenart              BKA WITH (READUNCOMMITTED) ON BKA.BgKostenartID = COALESCE(BPA.BgKostenartID, BSK.BgKostenartID, GBL.BgKostenartID)
  LEFT OUTER JOIN dbo.BgAuszahlungPerson       BAP WITH (READUNCOMMITTED) ON BAP.BgPositionID = BPO.BgPositionID 
                                                                         AND BAP.BgAuszahlungPersonID = (SELECT TOP 1 BgAuszahlungPersonID
                                                                                                         FROM dbo.BgAuszahlungPerson  WITH (READUNCOMMITTED)
                                                                                                         WHERE BgPositionID = BPO.BgPositionID
                                                                                                         ORDER BY 
                                                                                                           CASE WHEN BaPersonID IS NULL THEN 1
                                                                                                                WHEN BaPersonID = BPO.BaPersonID THEN 2
                                                                                                                ELSE 3
                                                                                                           END)
  LEFT OUTER JOIN dbo.vwKreditor               KRE WITH (READUNCOMMITTED) ON KRE.BaZahlungswegID = BAP.BaZahlungswegID
  LEFT OUTER JOIN dbo.BgAuszahlungPersonTermin VAL WITH (READUNCOMMITTED) ON VAL.BgAuszahlungPersonID = BAP.BgAuszahlungPersonID 
                                                                         AND VAL.Datum = (SELECT TOP 1 Datum
                                                                                          FROM dbo.BgAuszahlungPersonTermin  WITH (READUNCOMMITTED)
                                                                                          WHERE BgAuszahlungPersonID = BAP.BgAuszahlungPersonID
                                                                                          ORDER BY Datum)
WHERE BKA.KontoNr = {0}
  AND PRS.BaPersonID = {1}
ORDER BY VAL.Datum DESC</value>
  </data>
  <data name="btnPositionBewilligung.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAY0lEQVQ4T+2MUQoAIQhEPbpH82Zuo01I
        FNR+LvtAXmqj/FzhUx0TATNzQPd5wGZZCKzCdKts5k87M9SdB7CkdwVo/KVxALiqxgCub5hBUI9h12rA
        pi6GGaIxy9U5DL0KfxeRB7rvy3FcjJQ6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtVerwPeriodeBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtVerwPeriodeVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtValutaDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="qryMonatsbudget.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>370, 17</value>
  </metadata>
  <data name="qryMonatsbudget.SelectStatement" xml:space="preserve">
    <value>select BDG.BgBudgetID,
       BDG.Jahr, 
       BDG.Monat, 
       BDG.BgBewilligungStatusCode,
       [Status]   = CASE BDG.BgBewilligungStatusCode
                    WHEN 1 THEN 1   -- grau
                    WHEN 5 THEN 2   -- freigegeben
                    WHEN 9 THEN 7   -- gesperrt
                    END,
       MonatText  = dbo.fnXMonat(BDG.Monat),
       EZ         = (SELECT COUNT(*) FROM dbo.BgPosition WITH (READUNCOMMITTED) 
                     WHERE  BgBudgetID = BDG.BgBudgetID and
                            BgKategorieCode = 101), -- Einzahlungen
       ZL         = (SELECT COUNT(*) FROM dbo.BgPosition WITH (READUNCOMMITTED) 
                     WHERE  BgBudgetID = BDG.BgBudgetID and
                            BgKategorieCode = 100), -- Zusätzliche Leistung
       aktiv      = CONVERT(BIT, CASE WHEN LEI.DatumBis IS NULL THEN 1 ELSE 0 END),
       FPL.BgFinanzplanID,
       FPL.WhGrundbedarfTypCode,
       LEI.FaLeistungID,
       FallBaPersonID     = FAL.BaPersonID,
       LeistungBaPersonID = LEI.BaPersonID,
       LeistungDatumBis   = LEI.DatumBis,
       LT                 = LEI.UserID,
       FAL.FaFallID,
       TeamZustaendig     = USR.OrgEinheitName
FROM   dbo.BgBudget           BDG WITH (READUNCOMMITTED)
  INNER JOIN dbo.BgFinanzplan FPL WITH (READUNCOMMITTED) ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.FaLeistung   LEI WITH (READUNCOMMITTED) ON LEI.FaLeistungID   = FPL.FaLeistungID
  INNER JOIN dbo.FaFall       FAL WITH (READUNCOMMITTED) ON FAL.FaFallID       = LEI.FaFallID
  INNER JOIN dbo.vwUser       USR WITH (READUNCOMMITTED) ON USR.UserID         = LEI.UserID
where  LEI.BaPersonID = {0} and
       BDG.MasterBudget = 0 and
       BDG.BgBudgetID = isnull({1},BDG.BgBudgetID)
order by BDG.Jahr, BDG.Monat</value>
  </data>
  <metadata name="qryBgAuszahlungPersonTermin.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>