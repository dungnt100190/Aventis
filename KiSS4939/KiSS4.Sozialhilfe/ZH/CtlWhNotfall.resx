<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="qryHeader.SelectStatement" xml:space="preserve">
    <value>SELECT
  SFP.BgFinanzplanID, SFP.BgBewilligungStatusCode,
  FinanzPlanVon = IsNull(SFP.DatumVon, SFP.GeplantVon),
  FinanzPlanBis = IsNull(SFP.DatumBis, SFP.GeplantBis),
  PRS.NameVorname,
  PRS.WohnsitzStrasseHausNr,
  PRS.WohnsitzPLZOrt,
  Geburtsdatum = CONVERT(varchar, PRS.Geburtsdatum, 104),
  Heimatort = BGM.Name
FROM vwPerson            PRS
  LEFT  JOIN BaGemeinde  BGM ON BGM.BaGemeindeID = PRS.HeimatgemeindeCode
  , BgFinanzplan         SFP
WHERE SFP.BgFinanzplanID = {0} AND PRS.BaPersonID = {1}</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qryWhKennzahlen.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>317, 54</value>
  </data>
  <data name="qryBgBudget.SelectStatement" xml:space="preserve">
    <value>SELECT FPL.FaLeistungID, 
       LEI.FaFallID,
       BDG.*,
       LeistungBaPersonID = LEI.BaPersonID,
       LeistungDatumBis   = LEI.DatumBis,
       FallBaPersonID     = FAL.BaPersonID,
       FPL.WhGrundbedarfTypCode
FROM   BgFinanzplan           FPL
       INNER JOIN BgBudget    BDG ON BDG.BgFinanzplanID = FPL.BgFinanzplanID AND BDG.MasterBudget = 0
       INNER JOIN FaLeistung  LEI ON LEI.FaLeistungID = FPL.FaLeistungID
       INNER JOIN FaFall      FAL ON FAL.FaFallID = LEI.FaFallID
WHERE  FPL.BgFinanzplanID = {0}</value>
  </data>
  <data name="qryKlientensystem.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>173, 54</value>
  </data>
  <data name="qryHeader.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>367, 17</value>
  </data>
  <data name="edtVerwPeriodeVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryKbBuchungBrutto.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 54</value>
  </data>
  <data name="qryKbBuchung.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>471, 17</value>
  </data>
  <data name="qryBgPosition.SelectStatement" xml:space="preserve">
    <value>SELECT BPO.*,
  BAP.BgAuszahlungPersonID, BAP.KbAuszahlungsArtCode,
  BgAuszahlungsTerminCode = IsNull(BAP.BgAuszahlungsTerminCode, 4), BAP.BgWochentagCodes, BAP.BaZahlungswegID,
  BAP.MitteilungZeile1, MitteilungZeile2, BAP.MitteilungZeile3, BAP.MitteilungZeile4, BAP.ReferenzNummer,
  Kategorie             = CONVERT(bit, 0),
  Gruppe                = CONVERT(bit, 0),
  Status                = CASE WHEN BDG.MasterBudget = 0 
                          THEN CASE WHEN STA.Status IS NULL
                               THEN CASE BPO.BgBewilligungStatusCode
                                    WHEN 1 THEN 1
                                    WHEN 2 THEN 1
                                    WHEN 3 THEN 12
                                    WHEN 5 THEN 14
                                    WHEN 9 THEN 7
                                    END
                               ELSE STA.Status
                               END
                          END, 
  StatusMin             = CASE WHEN BDG.MasterBudget = 0 AND STA.Status &lt;&gt; STA.StatusMin THEN STA.StatusMin END,
  M                     = CASE WHEN BDG.MasterBudget = 0 AND BPO.BgPositionID_CopyOf IS NOT NULL THEN 'M' END,
  Kostenart             = BKA.KontoNr + ' ' + BKA.Name,
  BPA.Masterbudget_EditMask,
  BPA.Monatsbudget_EditMask,
  BgSplittingartCode    = BKA.BgSplittingartCode,
  Kreditor              = KRE.Kreditor,
  ZusatzInfo            = CASE 
                            WHEN BAP.BaZahlungswegID IS NOT NULL THEN KRE.ZusatzInfo
                          END,
  PscdFehlermeldung     = NULL,
  EffektivText          = NULL, --TODO
  ValutaDatum           = case when BAP.BgAuszahlungsTerminCode = 4 then VAL.Datum end,
  EinzahlungsscheinCode = KRE.EinzahlungsscheinCode
FROM BgBudget                         BDG
  INNER JOIN vwBgPosition             BPO ON BPO.BgBudgetID = BDG.BgBudgetID
  LEFT  JOIN BgPositionsart           BPA ON BPA.BgPositionsartID = BPO.BgPositionsartID
  LEFT  JOIN BgKostenart              BKA  ON BKA.BgKostenartID = BPA.BgKostenartID
  LEFT  JOIN BgAuszahlungPerson       BAP  ON BAP.BgPositionID = BPO.BgPositionID
  LEFT  JOIN vwKreditor               KRE  ON KRE.BaZahlungswegID = BAP.BaZahlungswegID
  LEFT  JOIN BgAuszahlungPersonTermin VAL  ON VAL.BgAuszahlungPersonID = BAP.BgAuszahlungPersonID
  LEFT  JOIN (SELECT BUK.BgPositionID, 
                Status       = MAX(BUC.KbBuchungStatusCode), 
                StatusMin    = MIN(BUC.KbBuchungStatusCode), 
                AnzahlBelege = COUNT(DISTINCT BUC.KbBuchungID)
              FROM   KbBuchungKostenart BUK 
                LEFT JOIN KbBuchung BUC ON BUC.KbBuchungID = BUK.KbBuchungID
              GROUP  BY BUK.BgPositionID) STA ON STA.BgPositionID = BPO.BgPositionID
WHERE BDG.BgBudgetID = {0}</value>
  </data>
  <data name="qryKbBuchungBrutto.SelectStatement" xml:space="preserve">
    <value>SELECT *
FROM KbBuchungBrutto
WHERE BgBudgetID = {0}
  AND KbBuchungTypCode IN (1,2) AND KbBuchungStatusCode NOT IN (8)

SELECT BKA.*, PersonName = PRS.NameVorname
FROM KbBuchungBruttoPerson  BKA
  INNER JOIN KbBuchungBrutto   BUC ON BUC.KbBuchungBruttoID = BKA.KbBuchungBruttoID
  LEFT  JOIN vwPerson          PRS ON PRS.BaPersonID        = BKA.BaPersonID
WHERE BUC.BgBudgetID = {0}
  AND BUC.KbBuchungTypCode IN (1,2) AND BUC.KbBuchungStatusCode NOT IN (8)</value>
  </data>
  <data name="qryBgPosition.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>134, 17</value>
  </data>
  <data name="edtVerwPeriodeBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryKbBuchung.SelectStatement" xml:space="preserve">
    <value>SELECT *, BetragTotal = -Betrag, Zahlungsempfaenger = IsNull(ZPR.NameVorname, ZIN.Name)
FROM KbBuchung KBU
  LEFT JOIN BaZahlungsweg      ZAL ON ZAL.BaZahlungswegID   = KBU.BaZahlungswegID
  LEFT JOIN vwPerson           ZPR ON ZPR.BaPersonID        = ZAL.BaPersonID
  LEFT JOIN vwInstitution      ZIN ON ZIN.BaInstitutionID   = ZAL.BaInstitutionID
WHERE BgBudgetID = {0}
  AND KbBuchungTypCode IN (1,2) AND KbBuchungStatusCode NOT IN (8)

SELECT BKA.*, PersonName = PRS.NameVorname
FROM KbBuchungKostenart  BKA
  INNER JOIN KbBuchung   BUC ON BUC.KbBuchungID = BKA.KbBuchungID
  LEFT  JOIN vwPerson    PRS ON PRS.BaPersonID  = BKA.BaPersonID
WHERE BUC.BgBudgetID = {0}
  AND BUC.KbBuchungTypCode IN (1,2) AND BUC.KbBuchungStatusCode NOT IN (8)</value>
  </data>
  <data name="qryKlientensystem.SelectStatement" xml:space="preserve">
    <value>SELECT PRS.BaPersonID,
  NamePerson   = PRS.NameVorname,
  PRS.Geburtsdatum,
  [Alter]      = dbo.fnGetAge(PRS.Geburtsdatum, IsNull(BFP.DatumVon, BFP.GeplantVon)),
  Beziehung    = CASE WHEN PRS.BaPersonID = FLE.BaPersonID
                   THEN 'Leistungsträger/-in'
                   ELSE dbo.fnBaRelation(FLE.BaPersonID, PRS.BaPersonID)
                 END
FROM FaFallPerson                   FAP
  INNER JOIN BgFinanzplan           BFP ON BFP.BgFinanzplanID = {0}
  INNER JOIN FaLeistung             FLE ON FLE.FaLeistungID = BFP.FaLeistungID AND FLE.FaFallID = FAP.FaFallID
  INNER JOIN vwPerson               PRS ON PRS.BaPersonID = FAP.BaPersonID
  LEFT  JOIN BgFinanzplan_BaPerson  BFB ON BFB.BgFinanzplanID = {0} AND BFB.BaPersonID = FAP.BaPersonID
WHERE BFB.BgFinanzplanID IS NULL
  AND IsNull(BFP.DatumVon, BFP.GeplantVon) BETWEEN IsNull(FAP.DatumVon, '17530101') AND IsNull(FAP.DatumBis, '99991212')</value>
  </data>
  <data name="qryHaushalt.SelectStatement" xml:space="preserve">
    <value>SELECT BFB.*,
  NamePerson   = PRS.NameVorname,
  PRS.Geburtsdatum,
  [Alter]      = dbo.fnGetAge(PRS.Geburtsdatum, IsNull(BFP.DatumVon, BFP.GeplantVon)),
  Beziehung    = CASE WHEN PRS.BaPersonID = FLE.BaPersonID
                   THEN 'Leistungsträger/-in'
                   ELSE dbo.fnBaRelation(FLE.BaPersonID, PRS.BaPersonID)
                 END
FROM BgFinanzplan_BaPerson    BFB
  INNER JOIN vwPerson         PRS ON PRS.BaPersonID = BFB.BaPersonID
  INNER JOIN BgFinanzplan     BFP ON BFP.BgFinanzplanID = BFB.BgFinanzplanID
  INNER JOIN FaLeistung       FLE ON FLE.FaLeistungID = BFP.FaLeistungID
WHERE BFB.BgFinanzplanID = {0}</value>
  </data>
  <data name="qryBgBudget.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="qryHaushalt.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>255, 17</value>
  </data>
  <data name="edtValutaDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
</root>