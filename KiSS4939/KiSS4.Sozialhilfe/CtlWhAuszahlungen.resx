<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryBgPosition.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>430, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>42</value>
  </metadata>
  <data name="qryBgPosition.SelectStatement" xml:space="preserve">
    <value>SELECT * 
FROM 
(SELECT
--- TOP {edtSucheSelectTop} 
       BPO.*,
       BAP.BgAuszahlungPersonID,
       BAP.KbAuszahlungsArtCode,
       BAP.BgAuszahlungsTerminCode,
       BAP.BgWochentagCodes,
       BAP.BaZahlungswegID,
       BAP.MitteilungZeile1,
       BAP.MitteilungZeile2,
       BAP.MitteilungZeile3,
       BAP.MitteilungZeile4,
       BAP.ReferenzNummer,
       BetragSpezial         = BPO.Betrag + ISNULL(POS.Summing, 0.0), 
       WeitereKOA            = ISNULL(POS.Counting, 0), 
       HauptPos              = CASE 
                                 WHEN DET.BgPositionID IS NOT NULL THEN '*' 
                                 ELSE NULL
                               END,
       ValutaDatum           = VAL.Datum,
       [Text]                = BPO.Buchungstext,
       Doc                   = (SELECT dbo.fnMAX(0, COUNT(1)) 
                                FROM dbo.BgBudget           SBDG WITH (READUNCOMMITTED)
                                  INNER JOIN dbo.BgDokument SBDO WITH (READUNCOMMITTED) ON SBDO.BgPositionID = BPO.BgPositionID 
                                                                                        OR SBDO.BgBudgetID = BPO.BgBudgetID 
                                                                                        OR SBDO.BgFinanzplanID = SBDG.BgFinanzplanID
                                WHERE SBDG.BgBudgetID = BPO.BgBudgetID),
       KOA                   = BKA.KontoNr,
       Kreditor              = KRE.Kreditor,
       ZusatzInfo            = KRE.ZusatzInfo,
       EinzahlungsscheinCode = KRE.EinzahlungsscheinCode,
       Klient                = PRS.NameVorname,
       KlientID              = PRS.BaPersonID,
       Adresse               = PRS.Wohnsitz,
       MA                    = USR.LogonName,
       [Status]              = dbo.fnWhGetPositionStatus(BPO.BgPositionID, 0, 0, 1),
       BelegDatum            = STA.BelegDatum,
       BelegNr               = STA.BelegNr,
       Sel                   = CONVERT(BIT, CASE 
                                              WHEN STA.Status IS NULL AND BDG.BgBewilligungStatusCode = 5 THEN 0 
                                              ELSE NULL 
                                            END),
       Jahr                  = BDG.Jahr,
       Monat                 = BDG.Monat,
       ProPerson             = ISNULL(BPA.ProPerson, CONVERT(BIT, 0)),
       ProUE                 = ISNULL(BPA.ProUE, CONVERT(BIT, 0)),
       BgKostenartID         = BKA.BgKostenartID,
       LeistungBaPersonID    = LEI.BaPersonID,
       FallBaPersonID        = FAL.BaPersonID,
       FaLeistungID          = LEI.FaLeistungID,
       FaFallID              = LEI.FaFallID,
       WhGrundbedarfTypCode  = FPL.WhGrundbedarfTypCode,
       BgSplittingartCode    = BKA.BgSplittingartCode,
       Kostenart             = ISNULL(BKA.KontoNr, '') + ' ' + COALESCE(BPA.Name, GBL.Name, ''),
       GruppeFilter          = CONVERT(VARCHAR(50), GRP.Value3),
       Monatsbudget_EditMask = BPA.Monatsbudget_EditMask,
       KreditorEingeschraenkt  = BPA.KreditorEingeschraenkt,

       -- used for concurrency checks
       BDG.BgBudgetTS,
       FPL.BgFinanzplanTS,
       LEI.FaLeistungTS,
       STA.KbBuchungTS
FROM dbo.vwBgPosition                     BPO
  -- required joins
  INNER JOIN dbo.BgBudget                 BDG ON BDG.BgBudgetID = BPO.BgBudgetID
                                             AND BDG.MasterBudget = 0
  INNER JOIN dbo.BgFinanzplan             FPL ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.FaLeistung               LEI ON LEI.FaLeistungID = FPL.FaLeistungID
  INNER JOIN dbo.FaFall                   FAL ON FAL.FaFallID = LEI.FaFallID
  
  -- optional joins
  LEFT  JOIN dbo.BgSpezkonto              BSK ON BSK.BgSpezkontoID = BPO.BgSpezkontoID
  LEFT  JOIN dbo.BgPositionsart           BPA ON BPA.BgPositionsartID = COALESCE(BPO.BgPositionsartID, BSK.BgPositionsartID)
  LEFT  JOIN dbo.vwPerson                 PRS ON PRS.BaPersonID = LEI.BaPersonID
  LEFT  JOIN dbo.BgPositionsart           GBL ON GBL.BgPositionsartID = FPL.WhGrundbedarfTypCode
  LEFT  JOIN dbo.BgKostenart              BKA ON BKA.BgKostenartID = COALESCE(BPA.BgKostenartID, BSK.BgKostenartID, GBL.BgKostenartID)
  LEFT  JOIN dbo.BgAuszahlungPerson       BAP ON BAP.BgPositionID = BPO.BgPositionID 
                                             AND BAP.BgAuszahlungPersonID = (SELECT TOP 1 BgAuszahlungPersonID
                                                                             FROM dbo.BgAuszahlungPerson
                                                                             WHERE BgPositionID = BPO.BgPositionID
                                                                             ORDER BY CASE 
                                                                                        WHEN BaPersonID IS NULL THEN 1
                                                                                        WHEN BaPersonID = BPO.BaPersonID THEN 2
                                                                                        ELSE 3
                                                                                      END)
  LEFT  JOIN dbo.vwKreditor               KRE ON KRE.BaZahlungswegID = BAP.BaZahlungswegID
  LEFT  JOIN dbo.XLOVCode                 GRP ON GRP.LOVName = 'BgGruppe' 
                                             AND GRP.Code = BPA.BgGruppeCode
  LEFT  JOIN dbo.XUser                    USR ON USR.UserID = BPO.ErstelltUserID 
  LEFT  JOIN dbo.BgPosition               DET ON DET.BgPositionID_Parent = BPO.BgPositionID 
                                             AND DET.BgPositionID = (SELECT TOP 1 BgPositionID 
                                                                     FROM dbo.BgPosition
                                                                     WHERE BgPositionID_Parent = BPO.BgPositionID)
  LEFT  JOIN BgAuszahlungPersonTermin     VAL ON VAL.BgAuszahlungPersonID = BAP.BgAuszahlungPersonID 
                                             AND VAL.DATUM = (SELECT TOP 1 Datum
                                                              FROM dbo.BgAuszahlungPersonTermin
                                                              WHERE BgAuszahlungPersonID = BAP.BgAuszahlungPersonID
                                                             ORDER BY Datum)
  -- optional joined queries                                                           
  LEFT  JOIN (SELECT BUC.BgBudgetID, 
                     BKO.BgPositionID, 
                     [Status]     = MAX(BUC.KbBuchungStatusCode), 
                     BelegDatum   = MIN(BUC.BelegDatum),
                     BelegNr      = MIN(BUC.BelegNr),
                     KbBuchungTS  = MIN(BUC.KbBuchungTS)
              FROM dbo.KbBuchungKostenart BKO 
                INNER JOIN dbo.KbBuchung  BUC ON BUC.KbBuchungID = BKO.KbBuchungID
              GROUP  BY BUC.BgBudgetID, BKO.BgPositionID) STA ON STA.BgBudgetID = BPO.BgBudgetID 
                                                             AND STA.BgPositionID = BPO.BgPositionID
  LEFT  JOIN (SELECT Counting = COUNT(1), 
                     Summing  = SUM(SBGP.Betrag),
                     ID       = SBGP.BgPositionID_Parent
              FROM dbo.BgPosition SBGP
              GROUP BY SBGP.BgPositionID_Parent)          POS ON DET.BgPositionID IS NOT NULL
                                                             AND POS.ID = BPO.BgPositionID
WHERE BPO.BgKategorieCode IN (100, 101) 
  AND BPO.BgPositionID_Parent IS NULL
  AND ISNULL(BAP.KbAuszahlungsArtCode, -1) &lt;&gt; 103 -- #6053 Keine Barauszahlungen anzeigen
  -- dynamic search params
--- AND BPO.ErstelltUserID = (SELECT UserID FROM dbo.XUser WITH (READUNCOMMITTED) WHERE LogonName = {edtSucheErfassungMA})
--- AND BPO.ErstelltDatum &gt;= {edtSucheErfassungVon}
--- AND BPO.ErstelltDatum &lt;= DATEADD(ms, -10, DATEADD(d, 1, {edtSucheErfassungBis}))  
--- AND BPO.MutiertUserID = (SELECT UserID FROM dbo.XUser WITH (READUNCOMMITTED) WHERE LogonName = {edtSucheMutationMA})
--- AND BPO.MutiertDatum &gt;= {edtSucheMutationVon}
--- AND BPO.MutiertDatum &lt;= DATEADD(ms, -10, DATEADD(d, 1, {edtSucheMutationBis}))  
--- AND VAL.Datum &gt;= {edtSucheValutaVon}
--- AND VAL.Datum &lt;= {edtSucheValutaBis}
--- AND LEI.FaFallID = {edtSucheFallNr}
--- AND BPO.BgPositionID = {edtSucheBelegID}
--- ORDER BY BPO.ErstelltDatum DESC, BPO.BgPositionID DESC --{edtSucheSelectTop} (Nur wenn TOP x eingeschränkt; Lösung für Ticket 2838 "verschwinden" von Erfassten Buchungen)
) TBL
WHERE 1 = 1
--- AND TBL.Status = {edtSucheStatus}
ORDER BY TBL.ErstelltDatum ASC, TBL.BgPositionID ASC</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSucheErfassungVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheErfassungBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheMutationVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheMutationBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheValutaVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheValutaBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryBgBewilligung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryBgBewilligung.SelectStatement" xml:space="preserve">
    <value>DECLARE @BgPositionID INT;
SET @BgPositionID = {0};

SELECT Grouper        = CONVERT(VARCHAR(50), BBW.BgPositionID) + 
                        ISNULL(' - ' + POS.Buchungstext, '') + 
                        CASE
                          WHEN POS.BgPositionID_Parent IS NULL THEN ''  -- main-pos
                          ELSE ' [+]'                                   -- detail-pos
                        END,
       BBW.*,
       Absender       = ABS.NameVorname,
       Empfaenger     = EMP.NameVorname,
       AbsenderText   = ABS.LogonNameVornameOrgUnit,
       EmpfaengerText = EMP.LogonNameVornameOrgUnit
FROM dbo.BgBewilligung      BBW
  INNER JOIN dbo.vwUser     ABS WITH (READUNCOMMITTED) ON ABS.UserID = BBW.UserID
  LEFT  JOIN dbo.vwUser     EMP WITH (READUNCOMMITTED) ON EMP.UserID = BBW.UserID_An
  INNER JOIN dbo.BgPosition POS WITH (READUNCOMMITTED) ON POS.BgPositionID = BBW.BgPositionID
                                                      AND (POS.BgPositionID = @BgPositionID 
                                                        OR POS.BgPositionID_Parent = @BgPositionID)
ORDER BY CASE 
           WHEN POS.BgPositionID_Parent IS NULL THEN 0
           ELSE 1
         END ASC,
         BBW.Datum ASC;</value>
  </data>
  <metadata name="qryBgDokumente.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>284, 17</value>
  </metadata>
  <data name="qryBgDokumente.SelectStatement" xml:space="preserve">
    <value>SELECT BDO.BgDokumentID,
       BDO.BgFinanzplanID,
       BDO.BgBudgetID,
       BDO.BgPositionID,
       BDO.BgDokumentTypCode,
       BDO.DocumentID,
       BDO.Stichwort,
       BDO.BgDocumentTS,
       DOC.DateCreation,
       DOC.UserID_Creator,
       DOC.DateLastSave,
       DOC.UserID_LastSave,
       DOC.FileBinary,
       DOC.DocFormatCode,
       DOC.FileExtension
FROM dbo.BgPosition         POS WITH (READUNCOMMITTED)
  INNER JOIN dbo.BgBudget   BDG WITH (READUNCOMMITTED) ON BDG.BgBudgetID = POS.BgBudgetID
  INNER JOIN dbo.BgDokument BDO WITH (READUNCOMMITTED) ON BDO.BgPositionID = POS.BgPositionID 
                                                       OR BDO.BgBudgetID = POS.BgBudgetID 
                                                       OR BDO.BgFinanzplanID = BDG.BgFinanzplanID
  LEFT JOIN dbo.XDocument   DOC WITH (READUNCOMMITTED) ON DOC.DocumentID = BDO.DocumentID
WHERE POS.BgPositionID = {0}
ORDER BY Stichwort</value>
  </data>
  <data name="edtDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABbSURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2Gc
        GtLSGP4jY5BikEEYmgjZANIAUgO3CZcGZGdi1YDuJBgfpJE6NmALKZjYqJPIijh8KRYmhzXlEhIEANZ8
        ev1ASni6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtDocument.Properties.Buttons1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABYSURBVDhPY2AAgv/GDP9BGMQmCsA0kKUJlw0YhuGzBafN
        2PxC0H/ICggqRg4xohTDPEySYnRbCMYLcmgRjBd0p+B1GklBSijScMYy0cmCUEiQHMywoAbRAOu5cfWb
        3MWkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtDocument.Properties.Buttons2" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABESURBVDhPY2AAAmNj4/+4MEgeA4AU//8/EwOLiYn9B2GS
        NIAMwtBEyAaQBpAauE24NCA7c1TDcAklfCkWJoc15RISBADnY6JvWzLnEAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDocument.Properties.Buttons3" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABmSURBVDhPrVILCkAhCPMUXsTTdlprD3wE0z6QIIFuTk2R
        YWbmlSNPBrB7I1dVh18RUIhIOwUQgPmVKsLc5ltCM6EFlAoAHxMCvHq/weehrxRiK8ctZb8dsbdrzZRI
        YXWxkUsvdxfsDTKNHjjMKwAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnPositionBewilligung.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGxJREFUOE/tkV0K
        wDAIg3t0j+bNukUalsroXN8GE4oWzOdfa7+92UA/k/WVtSFy9w6jH7CAZPL0h+BODBghEzknLypfACSx
        TVbMPrevHcQYZhYQeI11foWwqG4SAN0J4/BP4spJts9YgX855wC678tx5FbaTwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtVerwPeriodeBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtVerwPeriodeVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtBelegDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtValutaDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryBgBudget.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>162, 17</value>
  </metadata>
  <data name="qryBgBudget.SelectStatement" xml:space="preserve">
    <value>SELECT BDG.BgBudgetID,
       BDG.Jahr, 
       BDG.Monat, 
       BDG.BgBewilligungStatusCode,
       BDG.BgBudgetTS,
       Status     = CASE BDG.BgBewilligungStatusCode
                      WHEN 1 THEN 1   -- grau
                      WHEN 5 THEN 2   -- freigegeben
                      WHEN 9 THEN 7   -- gesperrt
                    END,
       MonatText  = dbo.fnXMonat(BDG.Monat),
       EZ         = (SELECT COUNT(1) 
                     FROM dbo.BgPosition WITH (READUNCOMMITTED)
                     WHERE BgBudgetID = BDG.BgBudgetID 
                       AND BgKategorieCode = 101), -- Einzahlungen
       ZL         = (SELECT COUNT(1) 
                     FROM dbo.BgPosition WITH (READUNCOMMITTED)
                     WHERE BgBudgetID = BDG.BgBudgetID 
                       AND BgKategorieCode = 100), -- Zusätzliche Leistung
       FPL.BgFinanzplanID,
       FPL.WhGrundbedarfTypCode,
       LEI.FaLeistungID,
       LEI.DatumBis,
       FallBaPersonID = FAL.BaPersonID,
       LeistungBaPersonID = LEI.BaPersonID,
       FAL.FaFallID
FROM dbo.BgBudget         BDG
  INNER JOIN BgFinanzplan FPL ON FPL.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN FaLeistung   LEI ON LEI.FaLeistungID = FPL.FaLeistungID
  INNER JOIN FaFall       FAL ON FAL.FaFallID = LEI.FaFallID
WHERE LEI.BaPersonID = {0} 
  AND BDG.MasterBudget = 0 
  AND BDG.BgBudgetID = ISNULL({1}, BDG.BgBudgetID)
ORDER BY BDG.Jahr, BDG.Monat</value>
  </data>
</root>