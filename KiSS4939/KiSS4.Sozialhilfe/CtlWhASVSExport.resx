<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryASVS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="qrySektion.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>473, 17</value>
  </metadata>
  <metadata name="qryASVSEintrag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>218, 17</value>
  </metadata>
  <data name="qryASVSEintrag.SelectStatement" xml:space="preserve">
    <value>IF {1} = 1 BEGIN
  -- Finde die zu exportierende Einträge
  SELECT
    PRS.BaPersonID,
    PRS.NameVorname,
    WAE.DatumVon,
    WAE.DatumBis,
    Widerruf = CONVERT(Bit, CASE WHEN WAE.ASVSEintragStatusCode = 4 THEN 1 ELSE 0 END),
    Problem =
      CASE WHEN PRS.Versichertennummer IS NULL THEN 'Versichertennummer fehlt. '
           WHEN LEN(PRS.Versichertennummer) &lt;&gt; 16 OR PRS.Versichertennummer NOT LIKE '[0123456789][0123456789][0123456789].[0123456789][0123456789][0123456789][0123456789].[0123456789][0123456789][0123456789][0123456789].[0123456789][0123456789]' THEN 'Ungültige Versichertennummer'
           ELSE '' END +
      CASE WHEN NOT EXISTS (SELECT TOP 1 ADR.BaAdresseID FROM dbo.BaAdresse ADR WHERE ADR.BaPersonID = PRS.BaPersonID AND AdresseCode = 1 AND ADR.PLZ IS NOT NULL) THEN 'Keine oder unvollständige Adresse vorhanden. ' ELSE '' END,
    Org.ItemName
  FROM dbo.WhASVSEintrag         WAE WITH (READUNCOMMITTED)
    LEFT JOIN dbo.VwPersonSimple PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = WAE.BaPersonID
    INNER JOIN FaLeistung        FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = WAE.FaLeistungID
    INNER JOIN dbo.XUser         BEN WITH (READUNCOMMITTED) ON FAL.UserID = BEN.UserID
    LEFT  JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = FAL.UserID AND
                                OUU.OrgUnitMemberCode = 2
    LEFT  JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
  WHERE (WAE.ASVSEintragStatusCode = 2 OR WAE.ASVSEintragStatusCode = 4) -- 2 = Export pendent, 4 = Löschung pendent
    AND (OUU.OrgUnitID = {2} OR ORG.ParentID = {2} OR {2} IS NULL)
END
ELSE BEGIN
  -- Finde die exportierten Einträge
  SELECT
    PRS.BaPersonID,
    PRS.NameVorname,
    WAE.DatumVon,
    WAE.DatumBis,
    Widerruf = CONVERT(Bit, CASE WHEN SAE.ASVSExportCode = 2 THEN 1 ELSE 0 END),
    Problem = '',
    ORG.ItemName
  FROM dbo.SstASVSExport ASV
    LEFT JOIN dbo.SstASVSExport_Eintrag SAE WITH (READUNCOMMITTED) ON SAE.SstASVSExportID = ASV.SstASVSExportID
    LEFT JOIN dbo.WhASVSEintrag         WAE WITH (READUNCOMMITTED) ON WAE.WhASVSEintragID = SAE.WhASVSEintragID
    LEFT JOIN dbo.VwPersonSimple        PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = WAE.BaPersonID
    INNER JOIN FaLeistung        FAL WITH (READUNCOMMITTED) ON FAL.FaLeistungID = WAE.FaLeistungID
    INNER JOIN dbo.XUser         BEN WITH (READUNCOMMITTED) ON FAL.UserID = BEN.UserID
    LEFT  JOIN dbo.XOrgUnit_User OUU WITH (READUNCOMMITTED) ON OUU.UserID = FAL.UserID AND
                                OUU.OrgUnitMemberCode = 2
    LEFT  JOIN dbo.XOrgUnit      ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
  WHERE ASV.SstASVSExportID = {0}
END
</value>
  </data>
  <data name="qryASVS.SelectStatement" xml:space="preserve">
    <value>SELECT
  ASV.SstASVSExportID,
  ASV.Bemerkung,
  ASV.DatumExport,
  Anzahl = ISNULL((SELECT COUNT(AEE.WhASVSEintragID) FROM SstASVSExport_Eintrag AEE WHERE AEE.SstASVSExportID = ASV.SstASVSExportID), 0),
  ASV.DocumentID,
  ASV.SstASVSExportTS,
  ASV.Modifier,
  ASV.Creator,
  ASV.Modified,
  ASV.Created
FROM dbo.SstASVSExport ASV
</value>
  </data>
  <metadata name="qryDokCorr.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>110, 17</value>
  </metadata>
  <data name="qryDokCorr.SelectStatement" xml:space="preserve">
    <value>SELECT
  DOC.DocumentID,
  DOC.FileBinary,
  DOC.DateCreation,
  DOC.UserID_Creator,
  DOC.DateLastSave,
  DOC.UserID_LastSave,
  DOC.XDocumentTS
FROM SstASVSExport ASV
  LEFT JOIN XDocument DOC ON DOC.DocumentID = ASV.DocumentID
WHERE ASV.SstASVSExportID = {0}</value>
  </data>
  <metadata name="dlgFileSave.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>366, 17</value>
  </metadata>
</root>