<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryBgAuszahlungPerson.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryBgAuszahlungPerson.SelectStatement" xml:space="preserve">
    <value>select 
    BAP.BgAuszahlungPersonID, 
    BAP.BgPositionID, 
    BAP.BaPersonID, 
    BAP.BgZahlungsmodusID, 
    BAP.KbAuszahlungsArtCode, 
    BAP.BgAuszahlungsTerminCode, 
    BAP.BgWochentagCodes, 
    BAP.BaZahlungswegID, 
    BAP.Zahlungsgrund, 
    BAP.ReferenzNummer, 
    BAP.MitteilungZeile1, 
    BAP.MitteilungZeile2, 
    BAP.MitteilungZeile3, 
    BAP.MitteilungZeile4, 
    BAP.BgAuszahlungPersonTS,
    TempID = CONVERT(integer, NULL),
    LT = CONVERT(BIT, case when LEI.BaPersonID = FPP.BaPersonID then 1 else 0 end),
    UEPersonID = FPP.BaPersonID,
    Person = PRS.NameVorname + ' (' + isNull(convert(varchar,PRS.AlterMortal),'-') + isNull(',' + GES.ShortText,'') + ')',
    Kreditor = KRE.Kreditor,
    ZusatzInfo = KRE.ZusatzInfo,
    ValutaDatum = case when BAP.BgAuszahlungsTerminCode = 4 then VAL.Datum end,
    ValutaTermine = dbo.fnBgGetValutaTermine(BAP.BgAuszahlungPersonID),
    EinzahlungsscheinCode = KRE.EinzahlungsscheinCode,
    LeistungBaPersonID = LEI.BaPersonID,
    BudgetJahr = BDG.Jahr,
    BudgetMonat = BDG.Monat,
    FaFallID = LEI.FaFallID,
    BgKategorieCode = BPO.BgKategorieCode,
    PersonVornameName = PRS.NameVorname,
    PersonWohnsitzStrasse = PRS.WohnsitzStrasseHausNr, 
    PersonWohnsitzOrt = PRS.WohnsitzPLZOrt

from dbo.BgPosition BPO
    left join dbo.BgBudget                 BDG on BDG.BgBudgetID = BPO.BgBudgetID
    left join dbo.BgFinanzplan             FPL on FPL.BgFinanzplanID = BDG.BgFinanzplanID
    left join dbo.BgFinanzplan_BaPerson FPP on          FPL.BgFinanzplanID = FPP.BgFinanzplanID
        AND FPP.IstUnterstuetzt = 1
    left join dbo.vwPerson                 PRS on PRS.BaPersonID = FPP.BaPersonID
    left join dbo.FaLeistung               LEI on LEI.FaLeistungID = FPL.FaLeistungID
    left join dbo.BgAuszahlungPerson       BAP on BAP.BgPositionID = BPO.BgPositionID and ISNULL(BAP.BaPersonID, LEI.BaPersonID) = FPP.BaPersonID
    left join dbo.XLOVCode                 GES on GES.LOVName = 'BaGeschlecht' and GES.Code = PRS.GeschlechtCode
    left join dbo.vwKreditor               KRE on KRE.BaZahlungswegID = BAP.BaZahlungswegID
    left join dbo.BgAuszahlungPersonTermin VAL on VAL.BgAuszahlungPersonTerminID = (
        select top 1 T.BgAuszahlungPersonTerminID 
        from dbo.BgAuszahlungPersonTermin T
        where T.BgAuszahlungPersonID = BAP.BgAuszahlungPersonID
        order by T.Datum)

where BPO.BgPositionID = {0}
order by LT desc, PRS.[Alter] desc</value>
  </data>
  <data name="edtKreditor.SearchStringWhitelist" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAEAQAAAH9TeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5
        c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
        bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24GAAAI
        CAkCAAAAAwAAAAMAAAARAgAAAAQAAAAGAwAAAAEuBgQAAAABKgYFAAAAASUKCw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtValutaDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryBgAuszahlungPersonTermin.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>205, 17</value>
  </metadata>
  <data name="qryBgAuszahlungPersonTermin.SelectStatement" xml:space="preserve">
    <value>select 
  T.BgAuszahlungPersonTerminID, 
  T.BgAuszahlungPersonID, 
  T.Datum,
  T.BgAuszahlungPersonTerminTS
from dbo.BgAuszahlungPersonTermin T
left join dbo.BgAuszahlungPerson P on P.BgAuszahlungPersonID = T.BgAuszahlungPersonID
where P.BgPositionID = {0}
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>431, 17</value>
  </metadata>
</root>