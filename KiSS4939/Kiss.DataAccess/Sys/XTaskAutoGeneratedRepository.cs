using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;

using Kiss.DbContext;

namespace Kiss.DataAccess.Sys
{
    public class XTaskAutoGeneratedRepository : Repository<XTaskAutoGenerated>
    {
        /// <summary>
        /// Only for testing purpose
        /// </summary>
        public XTaskAutoGeneratedRepository()
        {
        }

        public XTaskAutoGeneratedRepository(IDbContext dbContext)
            : base(dbContext)
        {
        }

        public virtual XTaskAutoGenerated GetByReferenceTableAndID(string tableName, int referenceID)
        {
            return DbSet
                .Where(tsk => tsk.ReferenceTable.Equals(tableName)
                                       && tsk.ReferenceID == referenceID)
                .Include(tsk => tsk.XTask)
                .FirstOrDefault();
        }

        public virtual XTaskAutoGenerated GetByReferenceTableAndID(string tableName, int referenceID, int taskTypeCode)
        {
            return DbSet
                .Where(tsk => tsk.ReferenceTable.Equals(tableName)
                                       && tsk.ReferenceID == referenceID)
                .Include(tsk => tsk.XTask)
                .FirstOrDefault(tsk => tsk.XTask.TaskTypeCode == taskTypeCode);
        }

        public override EntityState InsertOrUpdateEntity(XTaskAutoGenerated entity)
        {
            AddNewDependendEntities(new List<XTask> { entity.XTask });
            return base.InsertOrUpdateEntity(entity);
        }
    }
}