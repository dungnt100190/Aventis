//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaPerson))]
    public partial class BaPerson_Relation : PocoEntity, IAutoIdentityEntity<int>
    {
        public int AutoIdentityID 
        {
            get{ return BaPerson_RelationID; } 
        }
    
        [DataMember]
        private int _baPerson_RelationID;
        public int BaPerson_RelationID
        {
            get { return _baPerson_RelationID; }
            set
            {
                if (_baPerson_RelationID != value)
                {
                    _baPerson_RelationID = value;
                    RaisePropertyChanged("BaPerson_RelationID");
                }
            }
        }
    
        [DataMember]
        private int _baPersonID_1;
        public int BaPersonID_1
        {
            get { return _baPersonID_1; }
            set
            {
                if (_baPersonID_1 != value)
                {
                    _baPersonID_1 = value;
                    RaisePropertyChanged("BaPersonID_1");
                    if (BaPerson1 != null && BaPerson1.BaPersonID != value)
                    {
                        BaPerson1 = null;
                    }
                }
            }
        }
    
        [DataMember]
        private int _baPersonID_2;
        public int BaPersonID_2
        {
            get { return _baPersonID_2; }
            set
            {
                if (_baPersonID_2 != value)
                {
                    _baPersonID_2 = value;
                    RaisePropertyChanged("BaPersonID_2");
                    if (BaPerson2 != null && BaPerson2.BaPersonID != value)
                    {
                        BaPerson2 = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _baRelationID;
        public Nullable<int> BaRelationID
        {
            get { return _baRelationID; }
            set
            {
                if (_baRelationID != value)
                {
                    _baRelationID = value;
                    RaisePropertyChanged("BaRelationID");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumVon;
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    RaisePropertyChanged("DatumVon");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumBis;
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    RaisePropertyChanged("DatumBis");
                }
            }
        }
    
        [DataMember]
        private string _bemerkung;
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    RaisePropertyChanged("Bemerkung");
                }
            }
        }
    
        [DataMember]
        private byte[] _baPerson_RelationTS;
        public byte[] BaPerson_RelationTS
        {
            get { return _baPerson_RelationTS; }
            set
            {
                if (_baPerson_RelationTS != value)
                {
                    _baPerson_RelationTS = value;
                    RaisePropertyChanged("BaPerson_RelationTS");
                }
            }
        }
    
    
        [DataMember]
        private BaPerson _baPerson1;
        public virtual BaPerson BaPerson1
        {
            get { return _baPerson1; }
            set
            {
                if (_baPerson1 != value)
                {
                    _baPerson1 = value;
                    RaisePropertyChanged("BaPerson1");
    
                    if (value != null)
                    {
                        BaPersonID_1 = value.BaPersonID;
                    }
                }
            }
        }
        [DataMember]
        private BaPerson _baPerson2;
        public virtual BaPerson BaPerson2
        {
            get { return _baPerson2; }
            set
            {
                if (_baPerson2 != value)
                {
                    _baPerson2 = value;
                    RaisePropertyChanged("BaPerson2");
    
                    if (value != null)
                    {
                        BaPersonID_2 = value.BaPersonID;
                    }
                }
            }
        }
    }
    
}
