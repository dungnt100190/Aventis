//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaInstitution))]
    [KnownType(typeof(BaPerson))]
    public partial class BaPerson_BaInstitution : PocoEntity, IAutoIdentityEntity<int>, IAuditableEntity
    {
        public int AutoIdentityID 
        {
            get{ return BaPerson_BaInstitutionID; } 
        }
    
        [DataMember]
        private int _baPerson_BaInstitutionID;
        public int BaPerson_BaInstitutionID
        {
            get { return _baPerson_BaInstitutionID; }
            set
            {
                if (_baPerson_BaInstitutionID != value)
                {
                    _baPerson_BaInstitutionID = value;
                    RaisePropertyChanged("BaPerson_BaInstitutionID");
                }
            }
        }
    
        [DataMember]
        private int _baPersonID;
        public int BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    _baPersonID = value;
                    RaisePropertyChanged("BaPersonID");
                    if (BaPerson != null && BaPerson.BaPersonID != value)
                    {
                        BaPerson = null;
                    }
                }
            }
        }
    
        [DataMember]
        private int _baInstitutionID;
        public int BaInstitutionID
        {
            get { return _baInstitutionID; }
            set
            {
                if (_baInstitutionID != value)
                {
                    _baInstitutionID = value;
                    RaisePropertyChanged("BaInstitutionID");
                    if (BaInstitution != null && BaInstitution.BaInstitutionID != value)
                    {
                        BaInstitution = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _baInstitutionKontaktID;
        public Nullable<int> BaInstitutionKontaktID
        {
            get { return _baInstitutionKontaktID; }
            set
            {
                if (_baInstitutionKontaktID != value)
                {
                    _baInstitutionKontaktID = value;
                    RaisePropertyChanged("BaInstitutionKontaktID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _baInstitutionTypID;
        public Nullable<int> BaInstitutionTypID
        {
            get { return _baInstitutionTypID; }
            set
            {
                if (_baInstitutionTypID != value)
                {
                    _baInstitutionTypID = value;
                    RaisePropertyChanged("BaInstitutionTypID");
                }
            }
        }
    
        [DataMember]
        private string _bemerkung;
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    RaisePropertyChanged("Bemerkung");
                }
            }
        }
    
        [DataMember]
        private string _creator;
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    RaisePropertyChanged("Creator");
                }
            }
        }
    
        [DataMember]
        private System.DateTime _created;
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    RaisePropertyChanged("Created");
                }
            }
        }
    
        [DataMember]
        private string _modifier;
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    RaisePropertyChanged("Modifier");
                }
            }
        }
    
        [DataMember]
        private System.DateTime _modified;
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    RaisePropertyChanged("Modified");
                }
            }
        }
    
        [DataMember]
        private byte[] _baPerson_BaInstitutionTS;
        public byte[] BaPerson_BaInstitutionTS
        {
            get { return _baPerson_BaInstitutionTS; }
            set
            {
                if (_baPerson_BaInstitutionTS != value)
                {
                    _baPerson_BaInstitutionTS = value;
                    RaisePropertyChanged("BaPerson_BaInstitutionTS");
                }
            }
        }
    
    
        [DataMember]
        private BaInstitution _baInstitution;
        public virtual BaInstitution BaInstitution
        {
            get { return _baInstitution; }
            set
            {
                if (_baInstitution != value)
                {
                    _baInstitution = value;
                    RaisePropertyChanged("BaInstitution");
    
                    if (value != null)
                    {
                        BaInstitutionID = value.BaInstitutionID;
                    }
                }
            }
        }
        [DataMember]
        private BaPerson _baPerson;
        public virtual BaPerson BaPerson
        {
            get { return _baPerson; }
            set
            {
                if (_baPerson != value)
                {
                    _baPerson = value;
                    RaisePropertyChanged("BaPerson");
    
                    if (value != null)
                    {
                        BaPersonID = value.BaPersonID;
                    }
                }
            }
        }
    }
    
}
