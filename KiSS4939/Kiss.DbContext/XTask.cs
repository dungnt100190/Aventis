//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(FaWeisung))]
    [KnownType(typeof(XUser))]
    [KnownType(typeof(FaPendenzgruppe))]
    [KnownType(typeof(XTaskAutoGenerated))]
    public partial class XTask : PocoEntity, IAutoIdentityEntity<int>
    {
        public XTask()
        {
            this.FaWeisung = new HashSet<FaWeisung>();
            this.XTaskAutoGenerated = new HashSet<XTaskAutoGenerated>();
        }
    
        public int AutoIdentityID 
        {
            get{ return XTaskID; } 
        }
    
        [DataMember]
        private int _xTaskID;
        public int XTaskID
        {
            get { return _xTaskID; }
            set
            {
                if (_xTaskID != value)
                {
                    _xTaskID = value;
                    RaisePropertyChanged("XTaskID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _baPersonID;
        public Nullable<int> BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    _baPersonID = value;
                    RaisePropertyChanged("BaPersonID");
                    if (BaPerson != null && BaPerson.BaPersonID != value)
                    {
                        BaPerson = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _faFallID;
        public Nullable<int> FaFallID
        {
            get { return _faFallID; }
            set
            {
                if (_faFallID != value)
                {
                    _faFallID = value;
                    RaisePropertyChanged("FaFallID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _faLeistungID;
        public Nullable<int> FaLeistungID
        {
            get { return _faLeistungID; }
            set
            {
                if (_faLeistungID != value)
                {
                    _faLeistungID = value;
                    RaisePropertyChanged("FaLeistungID");
                    if (FaLeistung != null && FaLeistung.FaLeistungID != value)
                    {
                        FaLeistung = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _userID_Erledigt;
        public Nullable<int> UserID_Erledigt
        {
            get { return _userID_Erledigt; }
            set
            {
                if (_userID_Erledigt != value)
                {
                    _userID_Erledigt = value;
                    RaisePropertyChanged("UserID_Erledigt");
                    if (XUser_Erledigt != null && XUser_Erledigt.UserID != value)
                    {
                        XUser_Erledigt = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _userID_InBearbeitung;
        public Nullable<int> UserID_InBearbeitung
        {
            get { return _userID_InBearbeitung; }
            set
            {
                if (_userID_InBearbeitung != value)
                {
                    _userID_InBearbeitung = value;
                    RaisePropertyChanged("UserID_InBearbeitung");
                    if (XUser_Bearbeitung != null && XUser_Bearbeitung.UserID != value)
                    {
                        XUser_Bearbeitung = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _faAktennotizID;
        public Nullable<int> FaAktennotizID
        {
            get { return _faAktennotizID; }
            set
            {
                if (_faAktennotizID != value)
                {
                    _faAktennotizID = value;
                    RaisePropertyChanged("FaAktennotizID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _faDokumenteID;
        public Nullable<int> FaDokumenteID
        {
            get { return _faDokumenteID; }
            set
            {
                if (_faDokumenteID != value)
                {
                    _faDokumenteID = value;
                    RaisePropertyChanged("FaDokumenteID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _taskTypeCode;
        public Nullable<int> TaskTypeCode
        {
            get { return _taskTypeCode; }
            set
            {
                if (_taskTypeCode != value)
                {
                    _taskTypeCode = value;
                    RaisePropertyChanged("TaskTypeCode");
                }
            }
        }
    
        [DataMember]
        private int _taskStatusCode;
        public int TaskStatusCode
        {
            get { return _taskStatusCode; }
            set
            {
                if (_taskStatusCode != value)
                {
                    _taskStatusCode = value;
                    RaisePropertyChanged("TaskStatusCode");
                }
            }
        }
    
        [DataMember]
        private System.DateTime _createDate;
        public System.DateTime CreateDate
        {
            get { return _createDate; }
            set
            {
                if (_createDate != value)
                {
                    _createDate = value;
                    RaisePropertyChanged("CreateDate");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _startDate;
        public Nullable<System.DateTime> StartDate
        {
            get { return _startDate; }
            set
            {
                if (_startDate != value)
                {
                    _startDate = value;
                    RaisePropertyChanged("StartDate");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _expirationDate;
        public Nullable<System.DateTime> ExpirationDate
        {
            get { return _expirationDate; }
            set
            {
                if (_expirationDate != value)
                {
                    _expirationDate = value;
                    RaisePropertyChanged("ExpirationDate");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _doneDate;
        public Nullable<System.DateTime> DoneDate
        {
            get { return _doneDate; }
            set
            {
                if (_doneDate != value)
                {
                    _doneDate = value;
                    RaisePropertyChanged("DoneDate");
                }
            }
        }
    
        [DataMember]
        private string _subject;
        public string Subject
        {
            get { return _subject; }
            set
            {
                if (_subject != value)
                {
                    _subject = value;
                    RaisePropertyChanged("Subject");
                }
            }
        }
    
        [DataMember]
        private string _taskDescription;
        public string TaskDescription
        {
            get { return _taskDescription; }
            set
            {
                if (_taskDescription != value)
                {
                    _taskDescription = value;
                    RaisePropertyChanged("TaskDescription");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _senderID;
        public Nullable<int> SenderID
        {
            get { return _senderID; }
            set
            {
                if (_senderID != value)
                {
                    _senderID = value;
                    RaisePropertyChanged("SenderID");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _taskSenderCode;
        public Nullable<int> TaskSenderCode
        {
            get { return _taskSenderCode; }
            set
            {
                if (_taskSenderCode != value)
                {
                    _taskSenderCode = value;
                    RaisePropertyChanged("TaskSenderCode");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _receiverID;
        public Nullable<int> ReceiverID
        {
            get { return _receiverID; }
            set
            {
                if (_receiverID != value)
                {
                    _receiverID = value;
                    RaisePropertyChanged("ReceiverID");
                    if (XUser_Receiver != null && XUser_Receiver.UserID != value)
                    {
                        XUser_Receiver = null;
                    }
                    if (FaPendenzgruppe_Receiver != null && FaPendenzgruppe_Receiver.FaPendenzgruppeID != value)
                    {
                        FaPendenzgruppe_Receiver = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _taskReceiverCode;
        public Nullable<int> TaskReceiverCode
        {
            get { return _taskReceiverCode; }
            set
            {
                if (_taskReceiverCode != value)
                {
                    _taskReceiverCode = value;
                    RaisePropertyChanged("TaskReceiverCode");
                }
            }
        }
    
        [DataMember]
        private string _responseText;
        public string ResponseText
        {
            get { return _responseText; }
            set
            {
                if (_responseText != value)
                {
                    _responseText = value;
                    RaisePropertyChanged("ResponseText");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _taskResponseCode;
        public Nullable<int> TaskResponseCode
        {
            get { return _taskResponseCode; }
            set
            {
                if (_taskResponseCode != value)
                {
                    _taskResponseCode = value;
                    RaisePropertyChanged("TaskResponseCode");
                }
            }
        }
    
        [DataMember]
        private string _jumpToPath;
        public string JumpToPath
        {
            get { return _jumpToPath; }
            set
            {
                if (_jumpToPath != value)
                {
                    _jumpToPath = value;
                    RaisePropertyChanged("JumpToPath");
                }
            }
        }
    
        [DataMember]
        private byte[] _xTaskTS;
        public byte[] XTaskTS
        {
            get { return _xTaskTS; }
            set
            {
                if (_xTaskTS != value)
                {
                    _xTaskTS = value;
                    RaisePropertyChanged("XTaskTS");
                }
            }
        }
    
    
        [DataMember]
        private BaPerson _baPerson;
        public virtual BaPerson BaPerson
        {
            get { return _baPerson; }
            set
            {
                if (_baPerson != value)
                {
                    _baPerson = value;
                    RaisePropertyChanged("BaPerson");
    
                    if (value != null)
                    {
                        BaPersonID = value.BaPersonID;
                    }
                }
            }
        }
        [DataMember]
        private FaLeistung _faLeistung;
        public virtual FaLeistung FaLeistung
        {
            get { return _faLeistung; }
            set
            {
                if (_faLeistung != value)
                {
                    _faLeistung = value;
                    RaisePropertyChanged("FaLeistung");
    
                    if (value != null)
                    {
                        FaLeistungID = value.FaLeistungID;
                    }
                }
            }
        }
        [DataMember]
        private ICollection<FaWeisung> _faWeisung;
        public virtual ICollection<FaWeisung> FaWeisung
        {
            get { return _faWeisung; }
            set
            {
                if (_faWeisung != value)
                {
                    _faWeisung = value;
                    RaisePropertyChanged("FaWeisung");
                }
            }
        }
        [DataMember]
        private XUser _xUser_Bearbeitung;
        public virtual XUser XUser_Bearbeitung
        {
            get { return _xUser_Bearbeitung; }
            set
            {
                if (_xUser_Bearbeitung != value)
                {
                    _xUser_Bearbeitung = value;
                    RaisePropertyChanged("XUser_Bearbeitung");
    
                    if (value != null)
                    {
                        UserID_InBearbeitung = value.UserID;
                    }
                }
            }
        }
        [DataMember]
        private XUser _xUser_Erledigt;
        public virtual XUser XUser_Erledigt
        {
            get { return _xUser_Erledigt; }
            set
            {
                if (_xUser_Erledigt != value)
                {
                    _xUser_Erledigt = value;
                    RaisePropertyChanged("XUser_Erledigt");
    
                    if (value != null)
                    {
                        UserID_Erledigt = value.UserID;
                    }
                }
            }
        }
        [DataMember]
        private XUser _xUser_Receiver;
        public virtual XUser XUser_Receiver
        {
            get { return _xUser_Receiver; }
            set
            {
                if (_xUser_Receiver != value)
                {
                    _xUser_Receiver = value;
                    RaisePropertyChanged("XUser_Receiver");
    
                    if (value != null)
                    {
                        ReceiverID = value.UserID;
                    }
                }
            }
        }
        [DataMember]
        private FaPendenzgruppe _faPendenzgruppe_Receiver;
        public virtual FaPendenzgruppe FaPendenzgruppe_Receiver
        {
            get { return _faPendenzgruppe_Receiver; }
            set
            {
                if (_faPendenzgruppe_Receiver != value)
                {
                    _faPendenzgruppe_Receiver = value;
                    RaisePropertyChanged("FaPendenzgruppe_Receiver");
    
                    if (value != null)
                    {
                        ReceiverID = value.FaPendenzgruppeID;
                    }
                }
            }
        }
        [DataMember]
        private ICollection<XTaskAutoGenerated> _xTaskAutoGenerated;
        public virtual ICollection<XTaskAutoGenerated> XTaskAutoGenerated
        {
            get { return _xTaskAutoGenerated; }
            set
            {
                if (_xTaskAutoGenerated != value)
                {
                    _xTaskAutoGenerated = value;
                    RaisePropertyChanged("XTaskAutoGenerated");
                }
            }
        }
    }
    
}
