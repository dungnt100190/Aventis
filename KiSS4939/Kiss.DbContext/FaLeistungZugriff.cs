//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(XUser))]
    public partial class FaLeistungZugriff : PocoEntity, IAutoIdentityEntity<int>
    {
        public int AutoIdentityID 
        {
            get{ return FaLeistungZugriffID; } 
        }
    
        [DataMember]
        private int _faLeistungZugriffID;
        public int FaLeistungZugriffID
        {
            get { return _faLeistungZugriffID; }
            set
            {
                if (_faLeistungZugriffID != value)
                {
                    _faLeistungZugriffID = value;
                    RaisePropertyChanged("FaLeistungZugriffID");
                }
            }
        }
    
        [DataMember]
        private int _faLeistungID;
        public int FaLeistungID
        {
            get { return _faLeistungID; }
            set
            {
                if (_faLeistungID != value)
                {
                    _faLeistungID = value;
                    RaisePropertyChanged("FaLeistungID");
                    if (FaLeistung != null && FaLeistung.FaLeistungID != value)
                    {
                        FaLeistung = null;
                    }
                }
            }
        }
    
        [DataMember]
        private int _userID;
        public int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    _userID = value;
                    RaisePropertyChanged("UserID");
                    if (XUser != null && XUser.UserID != value)
                    {
                        XUser = null;
                    }
                }
            }
        }
    
        [DataMember]
        private bool _darfMutieren;
        public bool DarfMutieren
        {
            get { return _darfMutieren; }
            set
            {
                if (_darfMutieren != value)
                {
                    _darfMutieren = value;
                    RaisePropertyChanged("DarfMutieren");
                }
            }
        }
    
        [DataMember]
        private byte[] _faLeistungZugriffTS;
        public byte[] FaLeistungZugriffTS
        {
            get { return _faLeistungZugriffTS; }
            set
            {
                if (_faLeistungZugriffTS != value)
                {
                    _faLeistungZugriffTS = value;
                    RaisePropertyChanged("FaLeistungZugriffTS");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumVon;
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    RaisePropertyChanged("DatumVon");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumBis;
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    RaisePropertyChanged("DatumBis");
                }
            }
        }
    
    
        [DataMember]
        private FaLeistung _faLeistung;
        public virtual FaLeistung FaLeistung
        {
            get { return _faLeistung; }
            set
            {
                if (_faLeistung != value)
                {
                    _faLeistung = value;
                    RaisePropertyChanged("FaLeistung");
    
                    if (value != null)
                    {
                        FaLeistungID = value.FaLeistungID;
                    }
                }
            }
        }
        [DataMember]
        private XUser _xUser;
        public virtual XUser XUser
        {
            get { return _xUser; }
            set
            {
                if (_xUser != value)
                {
                    _xUser = value;
                    RaisePropertyChanged("XUser");
    
                    if (value != null)
                    {
                        UserID = value.UserID;
                    }
                }
            }
        }
    }
    
}
