//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(XClass))]
    [KnownType(typeof(XRight))]
    [KnownType(typeof(XUserGroup))]
    public partial class XUserGroup_Right : PocoEntity, IAutoIdentityEntity<int>
    {
        public int AutoIdentityID 
        {
            get{ return UserGroup_RightID; } 
        }
    
        [DataMember]
        private int _userGroup_RightID;
        public int UserGroup_RightID
        {
            get { return _userGroup_RightID; }
            set
            {
                if (_userGroup_RightID != value)
                {
                    _userGroup_RightID = value;
                    RaisePropertyChanged("UserGroup_RightID");
                }
            }
        }
    
        [DataMember]
        private int _userGroupID;
        public int UserGroupID
        {
            get { return _userGroupID; }
            set
            {
                if (_userGroupID != value)
                {
                    _userGroupID = value;
                    RaisePropertyChanged("UserGroupID");
                    if (XUserGroup != null && XUserGroup.UserGroupID != value)
                    {
                        XUserGroup = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _rightID;
        public Nullable<int> RightID
        {
            get { return _rightID; }
            set
            {
                if (_rightID != value)
                {
                    _rightID = value;
                    RaisePropertyChanged("RightID");
                    if (XRight != null && XRight.RightID != value)
                    {
                        XRight = null;
                    }
                }
            }
        }
    
        [DataMember]
        private string _maskName;
        public string MaskName
        {
            get { return _maskName; }
            set
            {
                if (_maskName != value)
                {
                    _maskName = value;
                    RaisePropertyChanged("MaskName");
                }
            }
        }
    
        [DataMember]
        private bool _mayInsert;
        public bool MayInsert
        {
            get { return _mayInsert; }
            set
            {
                if (_mayInsert != value)
                {
                    _mayInsert = value;
                    RaisePropertyChanged("MayInsert");
                }
            }
        }
    
        [DataMember]
        private bool _mayUpdate;
        public bool MayUpdate
        {
            get { return _mayUpdate; }
            set
            {
                if (_mayUpdate != value)
                {
                    _mayUpdate = value;
                    RaisePropertyChanged("MayUpdate");
                }
            }
        }
    
        [DataMember]
        private bool _mayDelete;
        public bool MayDelete
        {
            get { return _mayDelete; }
            set
            {
                if (_mayDelete != value)
                {
                    _mayDelete = value;
                    RaisePropertyChanged("MayDelete");
                }
            }
        }
    
        [DataMember]
        private byte[] _xUserGroup_RightTS;
        public byte[] XUserGroup_RightTS
        {
            get { return _xUserGroup_RightTS; }
            set
            {
                if (_xUserGroup_RightTS != value)
                {
                    _xUserGroup_RightTS = value;
                    RaisePropertyChanged("XUserGroup_RightTS");
                }
            }
        }
    
        [DataMember]
        private string _queryName;
        public string QueryName
        {
            get { return _queryName; }
            set
            {
                if (_queryName != value)
                {
                    _queryName = value;
                    RaisePropertyChanged("QueryName");
                }
            }
        }
    
        [DataMember]
        private string _className;
        public string ClassName
        {
            get { return _className; }
            set
            {
                if (_className != value)
                {
                    _className = value;
                    RaisePropertyChanged("ClassName");
                }
            }
        }
    
        [DataMember]
        private Nullable<int> _xClassID;
        public Nullable<int> XClassID
        {
            get { return _xClassID; }
            set
            {
                if (_xClassID != value)
                {
                    _xClassID = value;
                    RaisePropertyChanged("XClassID");
                    if (XClass != null && XClass.XClassID != value)
                    {
                        XClass = null;
                    }
                }
            }
        }
    
    
        [DataMember]
        private XClass _xClass;
        public virtual XClass XClass
        {
            get { return _xClass; }
            set
            {
                if (_xClass != value)
                {
                    _xClass = value;
                    RaisePropertyChanged("XClass");
    
                    if (value != null)
                    {
                        XClassID = value.XClassID;
                    }
                }
            }
        }
        [DataMember]
        private XRight _xRight;
        public virtual XRight XRight
        {
            get { return _xRight; }
            set
            {
                if (_xRight != value)
                {
                    _xRight = value;
                    RaisePropertyChanged("XRight");
    
                    if (value != null)
                    {
                        RightID = value.RightID;
                    }
                }
            }
        }
        [DataMember]
        private XUserGroup _xUserGroup;
        public virtual XUserGroup XUserGroup
        {
            get { return _xUserGroup; }
            set
            {
                if (_xUserGroup != value)
                {
                    _xUserGroup = value;
                    RaisePropertyChanged("XUserGroup");
    
                    if (value != null)
                    {
                        UserGroupID = value.UserGroupID;
                    }
                }
            }
        }
    }
    
}
