//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Kiss.DbContext
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(FaFall))]
    public partial class FaFallPerson : PocoEntity
    {
        [DataMember]
        private int _faFallPersonID;
        public int FaFallPersonID
        {
            get { return _faFallPersonID; }
            set
            {
                if (_faFallPersonID != value)
                {
                    _faFallPersonID = value;
                    RaisePropertyChanged("FaFallPersonID");
                }
            }
        }
    
        [DataMember]
        private int _faFallID;
        public int FaFallID
        {
            get { return _faFallID; }
            set
            {
                if (_faFallID != value)
                {
                    _faFallID = value;
                    RaisePropertyChanged("FaFallID");
                    if (FaFall != null && FaFall.FaFallID != value)
                    {
                        FaFall = null;
                    }
                }
            }
        }
    
        [DataMember]
        private int _baPersonID;
        public int BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    _baPersonID = value;
                    RaisePropertyChanged("BaPersonID");
                    if (BaPerson != null && BaPerson.BaPersonID != value)
                    {
                        BaPerson = null;
                    }
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumVon;
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    RaisePropertyChanged("DatumVon");
                }
            }
        }
    
        [DataMember]
        private Nullable<System.DateTime> _datumBis;
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    RaisePropertyChanged("DatumBis");
                }
            }
        }
    
    
        [DataMember]
        private BaPerson _baPerson;
        public virtual BaPerson BaPerson
        {
            get { return _baPerson; }
            set
            {
                if (_baPerson != value)
                {
                    _baPerson = value;
                    RaisePropertyChanged("BaPerson");
    
                    if (value != null)
                    {
                        BaPersonID = value.BaPersonID;
                    }
                }
            }
        }
        [DataMember]
        private FaFall _faFall;
        public virtual FaFall FaFall
        {
            get { return _faFall; }
            set
            {
                if (_faFall != value)
                {
                    _faFall = value;
                    RaisePropertyChanged("FaFall");
    
                    if (value != null)
                    {
                        FaFallID = value.FaFallID;
                    }
                }
            }
        }
    }
    
}
