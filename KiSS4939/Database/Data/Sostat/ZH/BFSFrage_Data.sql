SET NOCOUNT ON
BEGIN TRANSACTION
GO
DELETE FROM [BFSFrage]
GO
SET IDENTITY_INSERT [BFSFrage] ON
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (1, 20080714, N'1.00', N'Leistungstyp', N'1,2,3,4,5,6,7,8', 1, 0, 8, NULL, N'Leistungsart', N'BFSLeistungsart', 1, NULL, 1, 1, N'<4><sozruh>', N'SELECT @value = @BFSLeistungsartCode', N'BFSDossier', N'BFSLeistungsartCode', NULL, 0, N'/dossier/z:row', N'sh_leistungsart_id', NULL, N'Leistungart', N'Erlaubt die Gliederung der Dossiers nach Art der Sozialhilfeleistung (regulärer Fall mit oder ohne Vertrag, einmalige Zahlung mit oder ohne Budget, Bevorschussung ALV, Zuschuss nach Dekret, Zusatzleistungen zur AHV/IV, Alimentenbevorschussung, etc.).

Es können auch reine Beratungsfälle definiert und erfasst werden. Diese Fälle werden jedoch nicht an das BFS übermittelt.
Ein Dossier lässt sich nur einer einzigen Leistungskategorie zuordnen, kann jedoch im Laufe der Zeit den Status wechseln.
Ist ein Dossier Gegenstand einer regelmässigen Zahlung, handelt es sich dabei um einen "regulären Fall".
Für die Leistungsarten "einmalige Zahlung" mit oder ohne Budget oder "Bevorschussung ALV" muss lediglich der reduzierte Fragenkatalog ausgefüllt werden.


Erläuterungen

Beispiele für einmalige Zahlungen:
Zahnarztrechnung / Umzugskosten / Kosten aus Wohnungsliquidation / Begräbniskosten / Mietkaution / Vorschuss für ungedeckte Krankheitskosten für Empfänger von Ergänzungsleistungen (EL).

Mit oder ohne Budget:
Wird eine einmalige Zahlung ohne detaillierte Erfassung des Einkommens der antragstellenden Person gewährt (z.B. bei EL-Empfängern), "einmalige Zahlung ohne Budget" wählen.

Bevorschussung ALV:
Wird ausgewählt,
- falls Arbeitslosenunterstützung zugesprochen wurde, aber erst später entrichtet wird,
- falls Arbeitslosenunterstützung auf Grund temporärer Vermittlungsunfähigkeit storniert wurde.

Zuschuss nach Dekret
In den Kantonen Bern und Jura werden für die Statistik auch die Zuschüsse per Dekret erfasst.', 10, NULL, 1, NULL, N'001.0000a', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (3, 20080714, N'1.02', N'Aufnahmedatum', N'1,2,3,4,5,6,7,8', 1, 0, 5, N'dd.mm.yyyy', NULL, NULL, 1, NULL, 1, 1, N'<2><sozgns><sozruh><ZH><prov><09-06-18>
Dat_Aufnahme wird gleich Datum erste Zahlung gesetzt. Aus FaLeistung.DatumVon lässt sich das Dat_Aufnahme nicht berechnen. Bei Unterbruch von mehr als 6 Monaten würde ebenfalls die allererste FaLeistung gefunden.', N'SELECT @value = @DatumVon', N'FaLeistung', N'DatumVon', NULL, 1, N'/dossier/z:row', N'dat_aufnahme', NULL, N'Aufnahmedatum', N'Datum, an dem das Dossier eröffnet wurde, d.h. Datum des ersten Kontakts. Dieser kann auch telefonisch oder schriftlich erfolgen.

Format: Tag.Monat.Jahr, z.B. 23.01.2001', 90, NULL, 1, NULL, N'001.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (4, 20080714, N'1.03', N'Kennnummer des Antragstellers (AHV-Nummer)', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns>', N'SELECT @value = AHVNummer
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AHVNummer', NULL, 1, N'/dossier/antragsteller/z:row', N'ahv_nr', NULL, NULL, N'Die AHV-Nummer des Antragstellers/der Antragstellerin wenn möglich anhand eines amtlichen Dokuments eintragen.

Format: Name.Geburtsjahr.Geschlecht/Geburtstag/Geburtsmonat.Ordnungsnummer/Prüfziffer', 100, NULL, 1, NULL, N'001.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (5, 20080714, N'2.01', N'Name', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh>
Direktübernahme aus der Fallführung: 
BaPerson.Name', N'SELECT @value = Name 
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'Name', N'BaPersonID', 1, N'/dossier/antragsteller/z:row', N'nachname', NULL, N'Name', N'Name des Antragstellers/der Antragstellerin.
Im Zweifelsfall einen Ausweis verlangen', 160, NULL, 1, NULL, N'002.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (6, 20080714, N'2.02', N'Vorname(n)', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh>', N'SELECT @value = Vorname + IsNull('', '' + Vorname2,'''') 
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'vorname', NULL, N'Vorname', N'Vorname des Antragstellers/der Antragstellerin.
Im Zweifelsfall einen Ausweis verlangen.', 170, NULL, 1, NULL, N'002.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (7, 20080714, N'2.03', N'Früherer Name', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh>', N'SELECT @value = FruehererName
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'FruehererName', NULL, 1, N'/dossier/antragsteller/z:row', N'frueherer_name', NULL, N'Früherer Name', N'Z.B. bei Verheirateten: lediger Name.

Falls nichts erfasst, gilt: kein früherer Name.', 180, NULL, 1, NULL, N'002.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (8, 20080714, N'2.04', N'Strasse', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh>', N'SELECT @value = WohnsitzStrasse
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'WohnsitzStrasse', NULL, 1, N'/dossier/antragsteller/z:row', N'zvr_strasse', NULL, N'Wohnsitz (zivilrechtlich)', N'Zivilrechtlicher Wohnsitz des Antragstellers/der Antragstellerin gemäss Zivilgesetzbuch.
In der Regel der Wohnsitz, in welchem die antragstellende Person gemeldet ist, ihre Papiere hinterlegt hat und die Steuern bezahlt.
Verlegt die antragstellende Person ihren Wohnsitz in eine Gemeinde, die demselben regionalen Sozialdienst angeschlossen ist wie die Zuzugsgemeinde, muss das Dossier abgeschlossen und ein neues eröffnet werden.', 190, NULL, 1, NULL, N'002.0400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (9, 20080714, N'2.05', N'Nummer', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh>', N'SELECT @value = WohnsitzHausNr
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'WohnsitzHausNr', NULL, 1, N'/dossier/antragsteller/z:row', N'zvr_haus_nr', NULL, N'Strassennummer', N'Geben Sie die Strassennummer an!', 200, NULL, 1, NULL, N'002.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (10, 20080714, N'2.06', N'Zivilrechtlicher Wohnsitz: PLZ', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<2><sozruh><ZH><09-05-26>

ZVR-Wohnsitz ist immer identisch mit Unterstützungswohnsitz', N'SELECT @value = 8000', N'vwPerson', N'WohnsitzPLZ', NULL, 1, N'/dossier/antragsteller/z:row', N'zvr_plz', NULL, N'Wohnsitz (zivilrechtlich)', N'Zivilrechtlicher Wohnsitz des Antragstellers/der Antragstellerin gemäss Zivilgesetzbuch.
In der Regel der Wohnsitz, in welchem die antragstellende Person gemeldet ist, ihre Papiere hinterlegt hat und die Steuern bezahlt.
Verlegt die antragstellende Person ihren Wohnsitz in eine Gemeinde, die demselben regionalen Sozialdienst angeschlossen ist wie die Zuzugsgemeinde, muss das Dossier abgeschlossen und ein neues eröffnet werden.', 210, N'$getvalue("3.01") == null && $getvalue("3.03") == null', 1, NULL, N'002.0600', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (11, 20080714, N'2.07', N'Zivilrechtlicher Wohnsitz:Ort/Gemeinde', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<2><sozruh><ZH><09-05-26>

ZVR-Wohnsitz ist immer identisch mit Unterstützungswohnsitz', N'SELECT @value = ''Zürich''', N'vwPerson', N'WohnsitzOrt', NULL, 1, N'/dossier/antragsteller/z:row', N'zvr_ort', NULL, N'Wohnsitz (zivilrechtlich)', N'Zivilrechtlicher Wohnsitz des Antragstellers/der Antragstellerin gemäss Zivilgesetzbuch.
In der Regel der Wohnsitz, in welchem die antragstellende Person gemeldet ist, ihre Papiere hinterlegt hat und die Steuern bezahlt.
Verlegt die antragstellende Person ihren Wohnsitz in eine Gemeinde, die demselben regionalen Sozialdienst angeschlossen ist wie die Zuzugsgemeinde, muss das Dossier abgeschlossen und ein neues eröffnet werden.', 230, N'$getvalue("3.02") == null && $getvalue("3.04") == null', 1, NULL, N'002.0700b', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (12, 20080714, N'3.01', N'Unterstützungswohnsitz: PLZ', N'1,2,3,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH><09-05-26>

Unterstützungswohnsitz ist identisch mit ZVR-Wohnsitz', N'SELECT @value = ''''', N'vwPerson', N'UntWohnsitzPLZ', NULL, 1, N'/dossier/antragsteller/z:row', N'ust_plz', NULL, N'Unterstützungswohnsitz (PLZ und Gemeinde)', N'Die Gemeinde, die eine Unterstützung leistet. Muss nur ausgefüllt werden, falls sie sich vom zivilrechtlichen Wohnsitz unterscheidet!

Eine Person hat zum Beispiel:
1) einen zivilrechtlichen Wohnsitz, an dem sie ihre Papiere hinterlegt hat und Steuern zahlt sowie
2) einen zweiten Wohnsitz in der Gemeinde, in der sie sich unter der Woche arbeits- oder studienhalber aufhält und in der sie auch gemeldet ist.
In diesem Fall kann sie an den Sozialdienst dieses zweiten Wohnorts einen Unterstützungsantrag stellen, womit dieser zum Unterstützungswohnsitz wird.', 240, N'$getvalue("2.06") == null && $getvalue("3.03") == null', 1, NULL, N'003.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (13, 20080714, N'3.02', N'Unterstützungswohnsitz: Ort/Gemeinde', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH><09-05-26>

Unterstützungswohnsitz ist identisch mit ZVR-Wohnsitz', N'SELECT @value = ''''', N'vwPerson', N'UntWohnsitzOrt', NULL, 1, N'/dossier/antragsteller/z:row', N'ust_ort', NULL, N'Unterstützungswohnsitz (PLZ und Gemeinde)', N'Die Gemeinde, die eine Unterstützung leistet.
Muss nur ausgefüllt werden, falls sie sich vom zivilrechtlichen Wohnsitz unterscheidet!

Eine Person hat zum Beispiel:
1) einen zivilrechtlichen Wohnsitz, an dem sie ihre Papiere hinterlegt hat und Steuern zahlt sowie
2) einen zweiten Wohnsitz in der Gemeinde, in der sie sich unter der Woche arbeits- oder studienhalber aufhält und in der sie auch gemeldet ist .
In diesem Fall kann sie an den Sozialdienst dieses zweiten Wohnorts einen Unterstützungsantrag stellen, womit dieser zum Unterstützungswohnsitz wird.', 260, N'$getvalue("2.07") == null && $getvalue("3.04") == null', 1, NULL, N'003.0200b', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (14, 20080714, N'3.03', N'Aufenthaltsort: PLZ', N'1,2,3,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><sozgns><09-05-19><ZH>
BaAdresse.AdresseCode=3 (hier verwendet für Aufenthalt) gibt es nicht in Zürich
alt:
SELECT @value = AufenthaltPLZ
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'SELECT @value = (
select top 1 PLZ FROM BaAdresse WITH(READUNCOMMITTED)
where AdresseCode = 2
and (datumBis >= dbo.fnDateSerial(@jahr,12,31) or datumBis is null) 
and BaPersonID = @BaPersonID
order by datumVon desc)', N'vwPerson', N'AufenthaltPLZ', NULL, 1, N'/dossier/antragsteller/z:row', N'auf_plz', NULL, N'Aufenthaltsort (PLZ und Gemeinde)', N'Gemeinde, in der sich der Antragsteller/die Antragstellerin tatsächlich aufhält. Muss nur ausgefüllt werden, falls sie sich vom zivilrechtlichen Wohnsitz unterscheidet!
Dies kann z.B. bei Wochenaufenthaltern und Wochenaufenthalterinnen oder bei Personen vorkommen, welche vorübergehend in einem Heim sind und ihren zivilrechtlichen Wohnsitz in einer anderen Gemeinde haben.', 270, N'$getvalue("2.06") == null && $getvalue("3.01") == null', 1, NULL, N'003.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (15, 20080714, N'3.04', N'Aufenthaltsort: Ort/Gemeinde', N'1,2,3,8', 1, 0, 2, NULL, N'Gemeinde', NULL, 1, NULL, 1, 1, N'<4><sozruh><sozgns><09-05-19><ZH>
BaAdresse.AdresseCode=3 (hier verwendet für Aufenthalt) gibt es nicht in Zürich

alt
AufenthaltOrt
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'SELECT @value = (SELECT TOP 1 Name FROM BaPLZ where PLZ = 
  (SELECT top 1 PLZ FROM BaAdresse WITH(READUNCOMMITTED)
  WHERE AdresseCode = 2
  AND (datumBis >= dbo.fnDateSerial(2008,12,31) OR datumBis is null)
  AND PLZ >=''1000'' AND PLZ <=''9999''
  ORDER BY datumVon DESC)
ORDER BY Name)', N'vwPerson', N'AufenthaltOrt', NULL, 1, N'/dossier/antragsteller/z:row', N'auf_ort', NULL, N'Aufenthaltsort (PLZ und Gemeinde)', N'Gemeinde, in der sich der Antragsteller/die Antragstellerin tatsächlich aufhält. Muss nur ausgefüllt werden, falls sie sich vom zivilrechtlichen Wohnsitz unterscheidet!
Dies kann z.B. bei Wochenaufenthaltern und Wochenaufenthalterinnen oder bei Personen vorkommen, welche vorübergehend in einem Heim sind und ihren zivilrechtlichen Wohnsitz in einer anderen Gemeinde haben.', 290, N'$getvalue("2.07") == null && $getvalue("3.02") == null', 1, NULL, N'003.0400b', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (16, 20080714, N'3.05', N'Bürgerort bzw. Ausländer', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns><ZH><09-05-26>', N'SELECT @value = CASE 
                  WHEN NationalitaetCode IS NOT NULL AND NationalitaetCode <> 147
                  THEN LND.Iso3Code 
                  ELSE GDE.Text
                END
FROM dbo.BaPerson PRS
     LEFT JOIN XLOVCode GDE ON GDE.LOVName = ''Gemeinde'' AND GDE.Code = PRS.HeimatgemeindeCode
     LEFT JOIN BaLand   LND ON LND.BaLandID = PRS.NationalitaetCode', N'BaGemeinde', NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'buerger_gemeinde_id', NULL, N'Bürgerort / Nationalität / Ausland', N'Bei Schweizerinnen und Schweizern ist der Bürgerort zu erfassen. Bei mehreren Bürgerorten nur letztes Bürgerrecht erwähnen.

Bei Ausländerinnen und Ausländern das entsprechende Land auswählen.

Tipp: Wenn Sie bei die ersten zwei/drei Anfangsbuchstaben des gesuchten Landes eingeben, wird die Auswahl auf wenige Länder eingeschränkt.

z.B.: "It" bei "Italien" eingeben und dann auf das Kästchen drücken. Es stehen nur noch Länder die mit "It" beginnen zur Auswahl.', 300, N'$getvalue("3.06") == null || $getyears($getvalue("3.06"), $getstichtag()) < 2', 1, NULL, N'003.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (17, 20080714, N'3.06', N'Wohnhaft in der Gemeinde seit', N'1,2,3,8', 1, 0, 5, N'yyyy', NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns><sozruh><ZH>
Neu in ZH: Test auf ZuzugGdeSeitGeburt', N'SELECT
   @value = CASE 
   WHEN ZuzugGdeSeitGeburt = 1 -- wenn in Gemeinde geboren
   THEN Geburtsdatum
   ELSE ZuzugGdeDatum                                    
   END 
FROM BaPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'InGemeindeSeit', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_in_gemeinde_seit_jahr', NULL, N'Wohnhaft in der Gemeinde seit / In der Gemeinde seit Geburt / Tag und Monat des Zuzugs', N'Zuzugsjahr in die Gemeinde erfassen.
Lebt der Antragsteller/die Antragstellerin seit Geburt in der Gemeinde, das entsprechende Feld "in Gemeinde seit Geburt" ankreuzen.

Format: Jahr, z.B. 2001

Lebt der Antragsteller/die Antragstellerin seit Geburt in der Gemeinde, dieses Feld ("in Gemeinde seit Geburt") ankreuzen.

Falls die antragstellende Person weniger als 2 Jahre in der Gemeinde wohnhaft ist, Tag und Monat der Ankunft in der Gemeinde erfassen.
Zuzugstag und -monat können bei Bedarf jedoch auch dann erfasst werden, wenn der Antragsteller/die Antragstellerin bereits länger als 2 Jahre in der Gemeinde wohnt.

Format: Tag.Monat, z.B. 12.06', 310, NULL, 1, NULL, N'003.0600', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (19, 20080714, N'3.08', N'Zuzug in die Gemeinde von (Gemeinde)', N'1,2,3,8', 1, 0, 8, NULL, N'PLZ', N'BaGemeinde', 1, NULL, 1, 1, N'<4><sozruh><ZH>
Anpassung 8100 statt 147', N'SELECT @value = CASE 
	WHEN 
	ZuzugGdeOrtCode IS NOT NULL AND ZuzugGdeOrtCode <> 261
                     THEN (SELECT GDE.BFSCode FROM dbo.BaGemeinde GDE WITH (READUNCOMMITTED)  WHERE GDE.BaGemeindeID = PRS.ZuzugGdeOrtCode)
                     ELSE 
NULL
                   END
FROM dbo.vwPerson PRS
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'zuzug_gem_gemeinde_id', NULL, N'Zuzug in die Gemeinde aus (Schweizer Gemeinde) / Zuzug aus dem Ausland / Zuzug in die Gemeinde aus (Land)', N'Falls die antragstellende Person innerhalb der letzten 5 Jahre in die Gemeinde
zugezogen ist, Gemeinde eintragen, aus der der Zuzug erfolgte (ansonsten ist die Frage fakultativ).
Bei Zuzug aus dem Ausland die Option "Zuzug aus Ausland" wählen und anschliessend das Land eintragen, aus dem der Zuzug erfolgte. Bei Zuzug aus dem Ausland innerhalb der letzten 5 Jahre dieses Feld ("Zuzug aus Ausland") ankreuzen. Anschliessend im nächsten Feld das Land eintragen, aus dem der Zuzug erfolgte.

Falls die antragstellende Person innerhalb der letzten 5 Jahre aus dem Ausland in die Gemeinde zugezogen ist, Land eintragen, aus dem der Zuzug erfolgte (ansonsten ist die Frage fakultativ).', 330, N'$getyears($getvalue("3.06"), $getstichtag()) < 5', 1, NULL, N'003.0800', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (20, 20080714, N'3.09', N'Zuzug in die Gemeinde von (Land)', N'1,2,3,8', 1, 0, 2, NULL, N'BaLand', NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH>', N'SELECT
  @value = CASE 
             WHEN ZuzugGdeLandCode IS NULL -- Zuzug von Unbekannt
               THEN NULL     
             ELSE (SELECT XLO.shortText FROM dbo.XLOVCode XLO WITH (READUNCOMMITTED) WHERE XLO.Code = ZuzugGdeLandCode AND XLO.LOVName = ''BaLand'')
           END 
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'zuzug_gem_land_id', NULL, N'Zuzug in die Gemeinde aus (Schweizer Gemeinde) / Zuzug aus dem Ausland / Zuzug in die Gemeinde aus (Land)', N'Falls die antragstellende Person innerhalb der letzten 5 Jahre in die Gemeinde zugezogen ist, Gemeinde eintragen, aus der der Zuzug erfolgte (ansonsten ist die Frage fakultativ).
Bei Zuzug aus dem Ausland die Option "Zuzug aus Ausland" wählen und anschliessend das Land eintragen, aus dem der Zuzug erfolgte. Bei Zuzug aus dem Ausland innerhalb der letzten 5 Jahre dieses Feld ("Zuzug aus Ausland") ankreuzen. Anschliessend im nächsten Feld das Land eintragen, aus dem der Zuzug erfolgte.

Falls die antragstellende Person innerhalb der letzten 5 Jahre aus dem Ausland in die Gemeinde zugezogen ist, Land eintragen, aus dem der Zuzug erfolgte (ansonsten ist die Frage fakultativ).', 340, N'$getvalue("3.08") == 9999', 1, NULL, N'003.0900', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (21, 20080714, N'3.10', N'Wohnhaft im Kanton seit', N'1,2,3,8', 1, 0, 5, N'yyyy', NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns><sozruh>', N'SELECT
   @value = CASE 
   WHEN ZuzugKtSeitGeburt = 1 -- wenn im kanton geboren
   THEN Geburtsdatum
   ELSE ZuzugKtDatum                                    
   END 
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'ImKantonSeit', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_im_kanton_seit_jahr', NULL, N'Wohnhaft im Kanton seit / Wohnhaft im Kanton seit Geburt / Tag und Monat', N'Zuzugsjahr in den Kanton erfassen.
Lebt der Antragsteller/die Antragstellerin seit Geburt im Kanton, das Feld "im Kanton seit Geburt" ankreuzen.

Format: Jahr, z.B. 2001

Lebt der Antragsteller/die Antragstellerin seit Geburt im Kanton, dieses Feld ("im Kanton seit Geburt") ankreuzen.

Falls die antragstellende Person weniger als 2 Jahre im Kanton wohnhaft ist, Tag und Monat der Ankunft im Kanton erfassen.
Zuzugstag und -monat können bei Bedarf jedoch auch dann erfasst werden, wenn der Antragsteller/die Antragstellerin bereits länger als 2 Jahre im Kanton wohnt.

Format: Tag.Monat, z.B. 12.06', 350, NULL, 1, NULL, N'003.1000', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (23, 20080714, N'3.12', N'Zuzug in den Kanton von', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH>', N'SELECT
  @value = CASE 
             WHEN ZuzugKtLandCode IS NOT NULL and ZuzugKtLandCode <> 8100
               THEN (SELECT ShortText FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZuzugKtLandCode AND LOVName = ''BaLand'') 
             WHEN ZuzugKtKanton is not NULL and ZuzugKtKanton <> ''ZH''
               THEN ZuzugKtKanton
             ELSE 
	NULL        
           END 
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'zuzug_kant_land_id', NULL, N'Zuzug in den Kanton von', N'Falls die antragstellende Person innerhalb der letzten 2 Jahre in den Kanton
zugezogen ist, Kanton bzw. Land eintragen, aus dem der Zuzug erfolgte (ansonsten
ist die Frage fakultativ).', 370, N'$getyears($getvalue("3.10"), $getstichtag()) < 2', 1, NULL, N'003.1200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (24, 20080714, N'4.01', N'Geburtsdatum', N'1,2,3,4,5,6,7,8', 1, 0, 5, N'dd.mm.yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozruh>', N'SELECT @value = Geburtsdatum
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'Geburtsdatum', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_geburt', NULL, N'Geburtsdatum', N'Geburtsdatum der antragstellenden Person erfassen.
Der Antragsteller/die Antragstellerin ist die Referenzperson der Unterstützungseinheit, d.h. die Person, mit welcher der Sozialarbeiter/die Sozialarbeiterin normalerweise zu tun hat.

Format: Tag.Monat.Jahr, z.B. 05.06.1952  (tt.mm.jjjj)', 380, NULL, 1, NULL, N'004.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (25, 20080714, N'4.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 1, 0, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozruh><ZH>
''BaGeschlecht'' anstelle von ''Geschlecht''', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) 
WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')  
FROM dbo.vwPerson  
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'GeschlechtCode', NULL, 1, N'/dossier/antragsteller/z:row', N'geschlecht_id', NULL, N'Geschlecht', N'Geschlecht der antragstellenden Person erfassen.
Der Antragsteller/die Antragstellerin ist die Referenzperson der Unterstützungseinheit, d.h. die Person, mit welcher der Sozialarbeiter/die Sozialarbeiterin normalerweise zu tun hat.', 390, NULL, 1, NULL, N'004.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (26, 20080714, N'4.03', N'Zivilstand', N'1,2,3,4,5,6,7,8', 1, 0, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozruh><ZH>
''BaZivilstand'' statt ''Zivilstand''', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'ZivilstandCode', NULL, 1, N'/dossier/antragsteller/z:row', N'zivilstand_id', NULL, N'Zivilstand', N'Zivilstand der antragstellenden Person erfassen.
Der Antragsteller/die Antragstellerin ist die Referenzperson der Unterstützungseinheit, d.h. die Person, mit welcher der Sozialarbeiter/die Sozialarbeiterin normalerweise zu tun hat.', 400, NULL, 1, NULL, N'004.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (27, 20080714, N'4.04', N'Nationalität', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozruh><ZH>
ShortText wird gelesen statt BFSCode (eher Standard)', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'NationalitaetCode', NULL, 1, N'/dossier/antragsteller/z:row', N'nationalitaet_land_id', NULL, N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität ,Schweiz" erfassen.

Bei Ausländerinnen und Ausländern das entsprechende Land auswählen.

Tipp: Wenn Sie bei die ersten zwei/drei Anfangsbuchstaben des gesuchten Landes eingeben, wird die Auswahl auf wenige Länder eingeschränkt.

z.B.: "It" bei "Italien" eingeben und dann auf das Kästchen drücken. Es stehen nur noch Länder die mit "It" beginnen zur Auswahl.', 410, NULL, 1, NULL, N'004.0400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (28, 20080714, N'4.05', N'Aufenthaltsstatus', N'1,2,3,4,5,6,7,8', 1, 0, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozruh><ZH>
''BaAufenthaltstatus'' statt ''Aufenthaltstatus''', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.vwPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/antragsteller/z:row', N'aufenthaltsstatus_id', NULL, N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 420, N'$getvalue("4.04") != 131', 1, NULL, N'004.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (29, 20080714, N'4.06', N'In der Schweiz seit wann', N'1,2,3,8', 1, 0, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/antragsteller/z:row', N'in_ch_seit_jahr', NULL, N'In der Schweiz seit', N'Zuzugsjahr in die Schweiz eintragen.

Lebt der Antragsteller/die Antragstellerin seit Geburt in der Schweiz, so ist der Wert 1 einzutragen.
Ist die Person erst nach der Geburt in die Schweiz zugezogen, so ist nur das Einreisejahr anzugeben.

Format: jjjj, (z.B. 1978)', 430, NULL, 1, NULL, N'004.0600', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (30, 20080714, N'4.07', N'Lebt im Haushalt allein', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns><sozruh>', N'SELECT @value = CASE WHEN 1 = (SELECT COUNT(*)
                               FROM dbo.BFSDossierPerson WITH (READUNCOMMITTED)
                               WHERE BFSDossierID = @BFSDossierID ) THEN 1
                          ELSE 2
                 END', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_allein_im_hh', NULL, N'Lebt im Haushalt allein', N'Lebt der Antragsteller/die Antragstellerin allein im Haushalt?
Bei Ehepaaren, welche in einem Heim leben ist die Antwort "nein". Bei einer einzelnen Person, die in einem Heim lebt ist die Antwort "ja".

Wird die Frage mit "ja" beantwortet, kann direkt zu Frage 6a. "Wohnstatus" (Kapitel Wohnsituation) weitergegangen werden. Alle Fragen zu den anderen Mitgliedern der Unterstützungseinheit werden dann übersprungen.

Format: ja/nein', 440, NULL, 1, NULL, N'004.0700', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (31, 20080714, N'4.08', N'Personen im gesamten Haushalt', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = COUNT(*)
FROM dbo.BFSDossierPerson WITH (READUNCOMMITTED)
WHERE BFSDossierID = @BFSDossierID', NULL, NULL, NULL, 1, N'/dossier/z:row', N'anz_personen_hh', NULL, N'Personen im gesamten Haushalt', N'Anzahl der Personen des gesamten Haushalts, auch wenn sie nicht (alle) zur Unterstützungseinheit zählen, einschliesslich des Antragstellers/der Antragstellerin.
Lebt ein Ehepaar in einem Heim ist die Haushaltsgrösse 2 Personen. Lebt die antragstellende Person allein in einem Heim ist die Haushaltsgrösse 1 Person.', 450, N'$getvalue("4.07") == 2', 1, NULL, N'004.0800', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (32, 20080714, N'4.09', N'Personen in Unterstützungseinheit', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = COUNT(*)
FROM dbo.BFSDossierPerson WITH (READUNCOMMITTED)
WHERE BFSDossierID = @BFSDossierID
  AND BFSPersonCode IN (1,2)', NULL, NULL, NULL, 1, N'/dossier/z:row', N'anz_personen_ue', NULL, N'Personen in Unterstützungseinheit', N'Anzahl der Personen der gesamten Unterstützungseinheit (Ehepartner, Kinder), einschliesslich des Antragstellers/der Antragstellerin.
Gemäss SKOS-Richtlinien zählen Konkubinatspartner, Geschwister, Kollegen, Freunde o.Ä. grundsätzlich nicht zur Unterstützungseinheit.

Aus EDV-technischen Gründen muss der Partner/die Partnerin zu den Mitgliedern der Unterstützungseinheit gezählt werden, falls sein/ihr Einkommen bei der Berechnung des Budgets (ausgenommen Unterhaltszahlungen) mit berücksichtigt wird. Andernfalls kann keine Information über ihn/sie erfasst werden.
Lebt der Antragsteller/die Antragstellerin temporär in einem Heim und sein/e Ehepartner/in sowie seine/ihre Kinder in einer privaten Unterkunft, sind diese zur Unterstützungseinheit zu zählen.', 460, N'$getvalue("4.07") == 2', 1, NULL, N'004.0900', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (33, 20080714, N'5.1.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 1, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''1'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 470, NULL, 1, N'5.1.01', N'005.1000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (34, 20080714, N'5.1.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 1, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''1'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 480, NULL, 1, N'4.02', N'005.1000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (35, 20080714, N'5.1.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 1, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''1'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 490, NULL, 1, N'4.01', N'005.1000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (36, 20080714, N'5.1.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 1, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''1'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 500, NULL, 1, N'4.03', N'005.1000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (37, 20080714, N'5.1.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 1, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''1'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 510, NULL, 1, N'4.04', N'005.1000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (38, 20080714, N'5.1.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 1, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''1'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 520, N'$getvalue("5.1.05") != 131', 1, N'4.05', N'005.1000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (39, 20080714, N'5.1.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 1, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''1'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 530, NULL, 1, N'4.06', N'005.1000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (40, 20080714, N'5.1.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 1, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''1'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 550, N'$getyears($getvalue("5.1.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.1000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (41, 20080714, N'5.1.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 1, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.1.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''1''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 560, N'$getyears($getvalue("5.1.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.1000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (42, 20080714, N'5.1.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 1, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''1''][@Indx=''2'']', N'Erwerbssituation', NULL, 570, N'false', 1, N'7.012', N'005.1000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (43, 20080714, N'5.1.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 1, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''1''][@Indx=''3'']', N'Erwerbssituation', NULL, 580, N'false', 1, N'7.013', N'005.1000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (44, 20080714, N'5.1.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 1, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''1''][@Indx=''4'']', N'Erwerbssituation', NULL, 590, N'false', 1, N'7.014', N'005.1000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (45, 20080714, N'5.1.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 1, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.1.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''1'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 600, N'$contains($getvalue("5.1.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.1.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.1.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.1.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.1000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (46, 20080714, N'5.a.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 1, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''1'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1730, NULL, 1, N'5.1.01', N'005.a000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (47, 20080714, N'5.a.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 1, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''1'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1740, NULL, 1, N'5.a.2', N'005.a000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (48, 20080714, N'5.a.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 1, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''1'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1750, N'$getvalue("5.a.2") == 1 && $getvalue("5.a.4") == null', 1, N'1.03', N'005.a000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (49, 20080714, N'6.01', N'Wohnstatus', N'1,2,3,6,7,8', 1, 0, 8, NULL, N'BaWohnstatus', N'BFSWohnstatus', 1, NULL, 3, 1, N'<4><sozruh><ZH><prov>
Es gibt zu viele gültige WohnsituationCode
Wir nehmen das Maximum (DatumVon) ohne Einschränkung auf den 31.12.2008 oder den 17.12.2008', N'SELECT TOP 1 @value = STA.BFSCode 
 FROM   BaWohnsituationPerson WOP 
        INNER JOIN BaWohnsituation WOH ON WOH.BaWohnsituationID = WOP.BaWohnsituationID
        INNER JOIN XLOVCode        STA ON STA.LOVName = ''BaWohnstatus'' AND STA.Code = WOH.WohnsituationCode
 WHERE  WOP.BaPersonId = @BaPersonId AND
        ISNULL(WOH.DatumBis,dbo.fnDateSerial(@Jahr,12,31)) <= dbo.fnDateSerial(@Jahr,12,31)
 ORDER BY WOH.DatumVon DESC', N'BaWohnsituation', N'WohnsituationCode', NULL, 1, N'/dossier/z:row', N'sh_wohnsituation_id', NULL, N'Wohnstatus', N'Wohnstatus des Antragstellers/der Antragstellerin (z.B.Mieter/-in; Untermieter/-in, etc.).
Ist die antragstellende Person ohne feste Unterkunft oder lebt sie in einem Heim, in einer stationären Einrichtung oder in einer Form des begleiteten Wohnens, müssen die beiden folgenden Fragen 6b. "Wohnungsgrösse" und 6c. "Wohnkosten" nicht beantwortet werden.


Präzisierungen:

03: Untermieter/in
Diesen Status angeben, falls die antragstellende Person eine Wohnung ganz oder teilweise mietet (mit oder ohne Vertrag), ohne der Hauptmieter zu sein. Gilt auch für Fremdplatzierte in Pflegefamilien.

05: Stationäre Einrichtung (z.B. Heim, Klinik)
Nebst Personen, die sich in Heimen, Kliniken, etc. aufhalten, gilt dieser Status auch für Strafgefangene.

06: Begleitetes Wohnen
Unter begleitetem Wohnen versteht man eine Wohnform, bei der physisch, psychisch oder geistig behinderte Personen in einer Wohnung leben und dort regelmässig von Fachkräften unterstützt werden (so von Erziehern/-innen, Krankenschwestern/-pflegern, Psychiatriepflegern/-innen, Sozialarbeitern/-innen, usw.).

7) Gratisunterkunft
Diese Option wählen, falls die antragstellende Person kostenlos bei Freunden oder Verwandten wohnt.

8) Wohnwagen (Fahrende)
Diese Option angeben, falls die antragstellende Person hauptsächlich in einem beweglichen oder stationären Wohnwagen wohnt.', 2090, NULL, 1, NULL, N'006.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (50, 20080714, N'6.02', N'Wohnungsgrösse gesamt', N'1,2,3,6,7,8', 1, 0, 8, NULL, N'BaWohnungsgroesse', N'BFSWohnungsgroesse', 1, NULL, 3, 1, N'<4><sozgns><sozruh><ZH>

Es gibt zu viele gültige WohnsituationCode
Wir nehmen das Maximum (DatumVon) ohne Einschränkung auf den 31.12.2008 oder den 17.12.2008', N'SELECT @value = (SELECT Top 1 BFSCode FROM BaWohnsituation WITH (READUNCOMMITTED) 
inner join dbo.XLOVCode
on BaWohnsituation.WohnungsgroesseCode = dbo.XLOVCode.Code
inner join BaWohnsituationPerson
on BaWohnsituation.BaWohnsituationID = BaWohnsituationPerson.BaWohnsituationID
AND LOVName = ''BaWohnungsgroesse''
AND BaPersonID = @BaPersonId
order by DatumVon desc)', N'vwPerson', N'WohnungsgroesseCode', NULL, 1, N'/dossier/z:row', N'wohnungsgroesse_id', NULL, N'Wohnungsgrösse', N'Anzahl der Zimmer des Wohnobjektes (ohne Küche, Bad, WC).
Bei Personen, die in einer Wohngemeinschaft mit Personen zusammenleben, die nicht zur Unterstützungseinheit gehören, ist die Zimmerzahl des gesamten Wohnobjektes einzutragen und nicht nur die vom Antragsteller/der Antragstellerin und den Mitgliedern der Unterstützungseinheit bewohnten Zimmer.', 2100, N'$contains($getvalue("6.01"), "1,2,3,11")', 1, NULL, N'006.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (51, 20080714, N'6.03', N'Mietkosten ganze Wohnung', N'1,2,3,6,7,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 3, 1, N'<4><sozgns><ZH>', N'SELECT @value =
  SUM(POS.Betrag) - SUM(POS.Reduktion)
FROM dbo.BgPosition POS
INNER JOIN BgBudget BUD ON BUD.BgBudgetID = POS.BgBudgetID AND BUD.Masterbudget = 0
INNER JOIN BgFinanzplan FIP ON FIP.BgFinanzplanID = BUD.BgFinanzplanID
INNER JOIN FaLeistung LEI ON LEI.FaLeistungID = FIP.FaLeistungID
INNER JOIN BgPositionsart POA ON POA.BgPositionsartID = POS.BgPositionsartID
WHERE POA.BgKostenartID = 213   -- Miete inkl. Nebenkosten
AND YEAR(@DatumBis) = BUD.Jahr AND MONTH(@DatumBis) = BUD.Monat
AND LEI.BaPersonID = @AntragstellerID', NULL, NULL, NULL, 1, N'/dossier/z:row', N'wohnkosten_inkl_nk', NULL, N'Wohnkosten', N'Monatlicher Gesamtbetrag der Wohnkosten (Mietzins gemäss Mietvertrag einschliesslich der Nebenkosten). Bei Wohneigentum ist der monatliche Hypothekarzins zuzüglich der monatlichen Nebenkosten zu erfassen.

Teilt der Antragsteller/die Antragstellerin die Wohnung mit anderen Personen, welche nicht zur Unterstützungseinheit gehören, sind dennoch die Kosten für die gesamte Wohnung zu erfassen. Die effektiven Wohnungskosten, welche der Antragsteller/die Antragstellerin bzw. die Unterstützungseinheit bezahlen muss (Teilbetrag, z.B. bei Wohngemeinschaften) werden unter Frage 6d. "Kostenanteil UE" erfasst.
Bei Fahrenden sind die Standplatzkosten zu erfassen.', 2110, N'$contains($getvalue("6.01"), "1,2,3,4,6,8,9,11")', 1, NULL, N'006.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (52, 20080714, N'6.04', N'Mietkosten anteilsmässig (tatsächlich angrechnete und übernommene Mietkosten)', N'1,2,3,6,7,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 3, 1, N'<4><sozgns><ZH>', N'SELECT @value =
ROUND(
  (SUM(POS.Betrag) - SUM(POS.Reduktion)) 
  / ISNULL((SELECT COUNT(BaPersonID) FROM dbo.BgFinanzplan_BaPerson WHERE BgFinanzplanID = FIP.BgFinanzplanID AND IstUnterstuetzt = 1), 1)
  *20, 0)/20
FROM dbo.BgPosition POS
INNER JOIN BgBudget BUD ON BUD.BgBudgetID = POS.BgBudgetID AND BUD.Masterbudget = 0
INNER JOIN BgFinanzplan FIP ON FIP.BgFinanzplanID = BUD.BgFinanzplanID
INNER JOIN FaLeistung LEI ON LEI.FaLeistungID = FIP.FaLeistungID
INNER JOIN BgPositionsart POA ON POA.BgPositionsartID = POS.BgPositionsartID
WHERE POA.BgKostenartID = 213   -- Miete inkl. Nebenkosten
AND YEAR(@DatumBis) = BUD.Jahr AND MONTH(@DatumBis) = BUD.Monat
AND LEI.BaPersonID = @AntragstellerID
GROUP BY FIP.BgFinanzplanID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'betrag_mietanteil', NULL, N'Miete bzw. Mietanteil (effektiv bezahlte Mietkosten)', N'Der gesamte monatliche Mietanteil inkl. Nebenkosten muss erfasst werden.
Wenn ein Hilfeempfänger/eine Hilfeempfängerin in einer Wohngemeinschaft oder mit einem Konkubinatspartner/einer Konkubinatspartnerin lebt, wird nur sein/ihr eigener Anteil an den gesamten Mietkosten erfasst, also nur die effektiven Mietkosten.', 2120, N'$contains($getvalue("6.01"), "1,2,3,4,6,8,9,11")', 1, NULL, N'006.0400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (53, 20080714, N'7.011', N'1. Erwerbssituation', N'1,2,3,4,5,8', 1, 0, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 4, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''10.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/antragsteller/erwerbsit/z:row', N'erwerbsituation_id', N'[@indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Antragstellers/der Antragstellerin.
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Es sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War die antragstellende Person in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 2130, N'$getyears($getvalue("4.01"), $getstichtag()) >= 14', 1, NULL, N'007.0110', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (54, 20080714, N'7.012', N'2. Erwerbssituation', N'1,2,3,8', 1, 0, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 4, 1, N'<4><sozgns><ZH>
Champs pas disponible', N'SELECT @value = ''-9''', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/antragsteller/erwerbsit/z:row', N'erwerbsituation_id', N'[@indx=''2'']', N'Erwerbssituation', N'Erwerbssituation des Antragstellers/der Antragstellerin.
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Es sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War die antragstellende Person in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 2140, N'false', 1, NULL, N'007.0120', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (55, 20080714, N'7.013', N'3. Erwerbssituation', N'1,2,3,8', 1, 0, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 4, 1, N'<4><sozgns><ZH>
Champs pas disponible', N'SELECT @value = ''-9''', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/antragsteller/erwerbsit/z:row', N'erwerbsituation_id', N'[@indx=''3'']', N'Erwerbssituation', N'Erwerbssituation des Antragstellers/der Antragstellerin.
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Es sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War die antragstellende Person in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 2150, N'false', 1, NULL, N'007.0130', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (56, 20080714, N'7.014', N'4. Erwerbssituation', N'1,2,3,8', 1, 0, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 4, 1, N'<4><sozgns><ZH>
Champs pas disponible', N'SELECT @value = ''-9''', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/antragsteller/erwerbsit/z:row', N'erwerbsituation_id', N'[@indx=''4'']', N'Erwerbssituation', N'Erwerbssituation des Antragstellers/der Antragstellerin.
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Es sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War die antragstellende Person in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 2160, N'false', 1, NULL, N'007.0140', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (57, 20080714, N'7.021', N'Normalarbeitszeit pro Woche', N'1,2,3,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 4, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = CONVERT(int, Arbeitszeit)
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'arbeitszeit_woche', NULL, N'Normalarbeitszeit pro Woche / Stunden', N'Unter Normalarbeitszeit versteht man die Anzahl wöchentlich zu leistender Arbeitsstunden gemäss Arbeitsvertrag. Geht der Antragsteller/die Antragstellerin mehreren Teilzeitbeschäftigungen nach, ist das Total aller Wochenarbeitszeiten einzutragen. Ist im Arbeitsvertrag keine regelmässige Wochenarbeitszeit festgehalten, durchschnittliche Wochenarbeitszeit der letzten 4 Wochen schätzen und bei der nächsten Frage "Unregelmässige Arbeitszeit" wählen.', 2170, N'$contains($getvalue("7.011"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.012"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.013"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.014"), "1,2,3,4,5,6,7,8,9,10,20")', 1, NULL, N'007.0210', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (58, 20080714, N'7.022', N'keine regelmässige Arbeitszeit?', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'2', 4, 1, N'<5><sozgns><sozruh><ZH><09-05-26>
In Zürich nicht verfügbar', N'SELECT @value = ''-6''', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_arbeit_unregelmaessig', NULL, N'Regelmässige Arbeitszeit', N'Falls nichts erfasst, gilt: regelmässige Arbeitszeit

Ist im Arbeitsvertrag keine regelmässige Wochenarbeitszeit festgehalten, dieses Feld ("Unregelmässige Arbeitszeit") auswählen.', 2180, N'$contains($getvalue("7.011"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.012"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.013"), "1,2,3,4,5,6,7,8,9,10,20") || $contains($getvalue("7.014"), "1,2,3,4,5,6,7,8,9,10,20")', 1, NULL, N'007.0220', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (59, 20080714, N'7.03', N'Beschäftigungsgrad', N'1,2,3,4,5,8', 1, 0, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 4, 1, N'SELECT @value = CASE WHEN
  (select SUM(pensum) FROM BaArbeit WITH(READUNCOMMITTED)
  where BaPersonID = @BaPersonID
  and (BaArbeit.datumBis >= dbo.fnDateSerial(@jahr,12,31) or BaArbeit.datumBis is null) ) > 100
THEN
  100
ELSE
  (select SUM(pensum) FROM BaArbeit WITH(READUNCOMMITTED)
  where BaPersonID = @BaPersonID
  and (BaArbeit.datumBis >= dbo.fnDateSerial(@jahr,12,31) or BaArbeit.datumBis is null) )
END', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    not exists (select 1
                from  dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
                where BaPersonID = @BaPersonID and
                      KontoNr in (850, 851, 854, 855)) 
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/antragsteller/z:row', N'beschaeftigungsgrad_id', NULL, N'Beschäftigungsgrad', N'Ist der Antragsteller/die Antragstellerin erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 2190, N'$contains($getvalue("7.011"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("7.012"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("7.013"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("7.014"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, NULL, N'007.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (60, 20080714, N'7.04', N'Hauptgrund für Teilzeit', N'1,2,3,8', 1, 0, 8, NULL, N'BaGrundteilzeit', N'BFSGrundteilzeit', 1, NULL, 4, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GrundTeilzeitarbeit1Code AND LOVName = ''BaGrundteilzeit'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaArbeitAusbildung', N'GrundTeilzeitarbeit1Code', NULL, 1, N'/dossier/antragsteller/z:row', N'teilzeit_grund1_id', NULL, N'Hauptgrund für Teilzeit', N'Hat der Antragsteller/die Antragstellerin eine Teilzeitstelle, ist hier der Hauptgrund dafür anzugeben.


Präzisierungen:

02: Behindert/Unfall
Die antragstellende Person kann auf Grund einer angeborenen oder unfallbedingten Behinderung (physischer, geistiger oder psychischer Art) keiner Vollzeitbeschäftigung nachgehen.

03: Krankheit
Die antragstellende Person kann auf Grund einer nicht angeborenen physischen oder psychischen Krankheit keiner Vollzeitbeschäftigung nachgehen.

04: Haushalt/familiäre Gründe
Die antragstellende Person kann auf Grund häuslicher Pflichten, Kindererziehung oder pflegebedürftiger Angehöriger keiner Vollzeitbeschäftigung nachgehen.

05: Keine Vollzeitstelle gefunden
Die antragstellende Person hat eine Teilzeitstelle angenommen, wünscht sich aber eine Vollzeitbeschäftigung. Sie kann, muss aber nicht, beim Arbeitsamt eingeschrieben sein. Sie ist möglicherweise noch aktiv auf Stellensuche, hat aber eventuell die Suche auch abgebrochen.

06: Zusätzliche Nebentätigkeit', 2200, N'$contains($getvalue("7.03"), "2,3")', 1, NULL, N'007.0400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (61, 20080714, N'7.05', N'Weiterer Grund für Teilzeit', N'1,2,3,8', 1, 0, 8, NULL, N'BaGrundteilzeit', N'BFSGrundteilzeit', 1, NULL, 4, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GrundTeilzeitarbeit2Code AND LOVName = ''BaGrundteilzeit'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaArbeitAusbildung', N'GrundTeilzeitarbeit2Code', NULL, 1, N'/dossier/antragsteller/z:row', N'teilzeit_grund2_id', NULL, N'Weiterer Grund für Teilzeit', N'Erwähnt der Antragsteller/die Antragstellerin mehrere Gründe für seine/ihre Teilzeitarbeit, in diesem Feld den weniger wichtigen Grund erfassen.

Falls nichts erfasst, gilt: kein weiterer Grund für Teilzeit


Präzisierungen:

02: Behindert/Unfall
Die antragstellende Person kann auf Grund einer angeborenen oder unfallbedingten Behinderung (physischer, geistiger oder psychischer Art) keiner Vollzeitbeschäftigung nachgehen.

03: Krankheit
Die antragstellende Person kann auf Grund einer nicht angeborenen physischen oder psychischen Krankheit keiner Vollzeitbeschäftigung nachgehen.

04: Haushalt/familiäre Gründe
Die antragstellende Person kann auf Grund häuslicher Pflichten, Kindererziehung oder pflegebedürftiger Angehöriger keiner Vollzeitbeschäftigung nachgehen.

05: Keine Vollzeitstelle gefunden
Die antragstellende Person hat eine Teilzeitstelle angenommen, wünscht sich aber eine Vollzeitbeschäftigung. Sie kann, muss aber nicht, beim Arbeitsamt eingeschrieben sein. Sie ist möglicherweise noch', 2210, N'$contains($getvalue("7.03"), "2,3")', 1, NULL, N'007.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (62, 20080714, N'7.06', N'Stempelbeginn', N'1,2,3,8', 1, 0, 5, N'dd.mm.yyyy', NULL, NULL, 1, NULL, 4, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = StempelDatum
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', N'BaArbeitAusbildung', N'StempelDatum', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_stempelbeginn', NULL, N'Stempelbeginn', N'Bezieht der Antragsteller/die Antragstellerin ALV-Leistungen, ist hier das Datum des Stempelbeginns einzutragen.

Format: Tag.Monat.Jahr, z.B. 03.08.2001

Ist das Meldedatum nicht genau bekannt, nur das Jahr oder den Monat und das Jahr erfassen.', 2220, N'$contains($getvalue("7.011"), "9,10,11") || $contains($getvalue("7.012"), "9,10,11") || $contains($getvalue("7.013"), "9,10,11") || $contains($getvalue("7.014"), "9,10,11")', 1, NULL, N'007.0600', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (63, 20080714, N'7.07', N'Ausgesteuert', N'1,2,3,8', 1, 0, 8, NULL, N'Nichtbekannt', N'BFSNichtbekannt', 1, NULL, 4, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AusgesteuertUnbekanntCode AND LOVName = ''Nichtbekannt'')
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', N'BaArbeitAusbildung', N'AusgesteuertUnbekanntCode', NULL, 1, N'/dossier/antragsteller/z:row', N'b_ausgesteuert', NULL, N'Ausgesteuert', N'Ausgesteuert gemäss Arbeitslosenversicherungsgesetz.
Diese Option wählen, falls der Antragsteller/die Antragstellerin kein Recht (mehr) auf Arbeitslosenentschädigung hat (Rahmenfrist), ohne wieder eine Arbeit gefunden zu haben. Er/sie kann noch, muss aber nicht mehr beim Arbeitsamt eingeschrieben sein.
Es kann auch "nicht bekannt" eingegeben werden.', 2230, N'$contains($getvalue("7.011"), "9,10,11,12") || $contains($getvalue("7.012"), "9,10,11,12") || $contains($getvalue("7.013"), "9,10,11,12") || $contains($getvalue("7.014"), "9,10,11,12")', 1, NULL, N'007.0700', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (64, 20080714, N'7.08', N'Ausgesteuert seit', N'1,2,3,8', 1, 0, 5, N'dd.mm.yyyy', NULL, NULL, 1, NULL, 4, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = AusgesteuertDatum
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', N'BaArbeitAusbildung', N'AusgesteuertDatum', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_ausgesteuert', NULL, N'Ausgesteuert (AVIG) seit', N'Ist der Antragsteller/die Antragstellerin ausgesteuert (Ende der Rahmenfrist), angeben seit wann.

Format: Tag.Monat.Jahr, z.B. 03.08.2001

Ist das Datum nicht genau bekannt, nur das Jahr oder den Monat und das Jahr erfassen.', 2240, N'$getvalue("7.07") == 1', 1, NULL, N'007.0800', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (65, 20080714, N'7.09', N'Erlernter Beruf', N'1,2,3,8', 1, 0, 8, NULL, NULL, N'BaBeruf', 1, NULL, 4, 1, N'<4><sozgns><ZH>', N'SELECT @value = CASE WHEN ErlernterBerufCode IS NULL THEN 0 ELSE (SELECT BFSCode FROM dbo.BaBeruf WITH (READUNCOMMITTED) WHERE BaBerufID = ErlernterBerufCode) END 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'erlernter_beruf_id', NULL, N'Erlernter Beruf / Kein erlernter Beruf', N'Hat der Antragsteller/die Antragstellerin mehrere Berufe erlernt, ist der zuletzt erlernte Beruf zu erfassen. Hat er/sie keinen Beruf erlernt, "keinen" eintragen.

Hat der Antragsteller/die Antragstellerin keinen Beruf erlernt, dieses Feld ("Kein erlernter Beruf") ankreuzen.', 2250, NULL, 1, NULL, N'007.0900', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (66, 20080714, N'7.10', N'Letzte oder gegenwärtige berufliche Tätigkeit', N'1,2,3,8', 1, 0, 8, NULL, NULL, N'BaBeruf', 1, NULL, 4, 1, N'<1><sozgns><ZH>
Corrigé 18.05.09', N'SELECT @value = (SELECT BFSCode FROM dbo.BaBeruf WITH (READUNCOMMITTED) WHERE BaBerufID = BerufCode) 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaArbeitAusbildung', N'BerufCode', NULL, 1, N'/dossier/antragsteller/z:row', N'aktueller_beruf_id', NULL, N'Letzte oder gegenwärtige berufliche Tätigkeit / Keine berufliche Tätigkeit', N'Den Beruf des Antragstellers/der Antragstellerin angeben, den er/sie derzeit ausübt oder den er/sie zuletzt ausgeübt hat.

Ist der Antragsteller/die Antragstellerin nie berufstätig gewesen, dieses Feld ("Keine Tätigkeit") ankreuzen.', 2260, NULL, 1, NULL, N'007.1000', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (67, 20080714, N'7.11', N'Branche', N'1,2,3,8', 1, 0, 8, NULL, N'BaBranche', N'BFSBranche', 1, NULL, 4, 1, N'<5><sozgns><ZH>
variable erwerbsBrancheCode tjs null
Ancien code:

(SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = BrancheCode AND LOVName = ''Branche'')
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value =''-6''', N'BaArbeitAusbildung', N'BrancheCode', NULL, 1, N'/dossier/antragsteller/z:row', N'branche_alpha_code_2008', NULL, N'Branche', N'Es ist zu erfassen, in welcher Branche der oder die Erwerbstätige seinen/ihren Beruf ausübt. Geht die antragstellende Person mehreren Beschäftigungen nach, Branche der Tätigkeit mit dem höchsten Beschäftigungsgrad erfassen.


Präzisierungen:

Jene Branche des Unternehmens auswählen, in welcher die antragstellende Person arbeitet.
Für eine kaufmännische Angestellte, die in der chemischen Industrie arbeitet, "chemische Industrie" (Code 24) wählen.
Für einen Verkäufer, der bei der Coop arbeitet, "Detailhandel" (Code 52) wählen.', 2270, N'$getvalue("7.10") > 0', 1, NULL, N'007.1100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (68, 20080714, N'7.12', N'Wie oft in den letzten 3 Jahren arbeitslos gewesen', N'1,2,3,8', 1, 0, 8, NULL, N'Wieoft', N'BFSWieoft', 1, NULL, 4, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = CASE WHEN WieOftArbeitslos IS NULL OR WieOftArbeitslos < 1 THEN 0
                        WHEN WieOftArbeitslos = 1 THEN 1
                        ELSE 2
                   END
FROM dbo.BaArbeitAusbildung WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'anz_arbeitslos_3j', NULL, N'Wie oft in den letzten 3 Jahren arbeitslos gewesen', N'Angeben, wie oft der Antragsteller/die Antragstellerin in den letzten drei Jahren arbeitslos gewesen ist.
Arbeitslosigkeit kann unterbrochen werden durch:
- berufliche Tätigkeit (nicht durch Arbeitslosenhilfe organisiert),
- Ausbildung (nicht durch Arbeitslosenhilfe organisiert),
- andere Einschübe (Reise, Familienbetreuung usw.).
Ferien oder Krankheit (von kurzer Dauer) gelten nicht als Unterbrechung der Arbeitslosigkeit.
Mehrere Phasen der Arbeitslosigkeit können unter eine Rahmenfrist fallen.


Präzisierungen:

01: Nie
Die antragstellende Person war in den letzten drei Jahren nie arbeitslos.

02: Einmal (ohne Unterbrechung)
Die antragstellende Person war in den letzten drei Jahren einmal ganz oder teilweise arbeitslos.

03: Mehrmals (mit Unterbrechung)
Die antragstellende Person war in den letzten drei Jahren mehrmals ganz oder teilweise arbeitslos.', 2280, NULL, 1, NULL, N'007.1200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (69, 20080714, N'7.13', N'Höchste abgeschlossene Ausbildung', N'1,2,3,4,5,8', 1, 0, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 4, 1, N'<4><sozgns><ZH>', N'SELECT @value =(SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.BaPerson WITH (READUNCOMMITTED) on XLOVCode.Code = BaPerson.HoechsteAusbildungCode 
WHERE LOVName = ''BaAusbildungstyp'' AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/antragsteller/z:row', N'ausbildung_id', NULL, N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Antragstellers/der Antragstellerin zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachausweis, eidgenössisches Fach- oder Meisterdiplom, Höhere Kaufmännische Gesamtschule (HKG), Technikerschule TS, HTL, HWV,', 2290, NULL, 1, NULL, N'007.1300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (70, 20080714, N'7.14', N'Eine Ausbildung vor dem Abschluss abgebrochen', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'2', 4, 1, N'<5><sozgns><ZH>', N'SELECT @value = CASE WHEN AbgebrocheneAusbildungCode IS NOT NULL THEN 1 ELSE 2 END
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_ausb_abgebrochen', NULL, N'Eine Ausbildung vor dem Abschluss abgebrochen', N'Hat der Antragsteller/die Antragstellerin eine Ausbildung begonnen und abgebrochen?
Wird diese Frage mit "nein" beantwortet, kann die folgende Frage 7o. "Letzte abgebrochene Ausbildung" übersprungen werden.

Format: ja/nein

Falls nichts erfasst, gilt: nein', 2300, N'($geterhebungsjahr() - $getgeburtsjahr("4.01")) > 14 && ($geterhebungsjahr() - $getgeburtsjahr("4.01")) < 35', 1, NULL, N'007.1400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (71, 20080714, N'7.15', N'Letzte abgebrochene Ausbildung', N'1,2,3,8', 1, 0, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 4, 1, N'<5><sozgns><ZH>

Question: utiliser la table xlovcode ou bfslovcode pour faire la conversion ??', N'SELECT @value = (SELECT AbgebrocheneAusbildungCode FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'AbgebrochenAusbildungCode', NULL, 1, N'/dossier/antragsteller/z:row', N'abgebr_ausbildung_id', NULL, N'Letzte abgebrochene Ausbildung', N'Nur beantworten, wenn der Antragsteller/die Antragstellerin eine angefangene Ausbildung vor dem Abschluss abgebrochen hat.


Präzisierungen:

Die Codes "01: Schulbesuch während < 7 Jahren" und "02: Obligatorische Schule" sind in dieser Rubrik nicht enthalten.

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachausweis, eidgenössisches Fach- oder Meisterdiplom, Höhere Kaufmännische Gesamt', 2310, N'$getvalue("7.14") == 1', 1, NULL, N'007.1500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (72, 20080714, N'8.01', N'IV-Eingliederungsmassnahmen', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 5, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = IVEingliederungsmassnahmeCode AND LOVName = ''InAbklaerung'')
FROM dbo.BaGesundheit WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', N'BaGesundheit', N'IVEingliederungsmassnahmeCode', NULL, 1, N'/dossier/antragsteller/z:row', N'b_iv_eingliederung', NULL, N'Eingliederungsmassnahmen', N'Wurden für den Antragsteller/die Antragstellerin IV-Eingliederungsmassnahmen bewilligt?
Das IV-Antragsformular erwähnt folgende Massnahmenkategorien:
- Berufsberatung
- Umschulung
- Rehabilitation im angestammten Beruf
- Arbeitsvermittlung
- Abgabe von Hilfsmitteln
- Spezielle medizinische Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2320, NULL, 1, NULL, N'008.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (73, 20080714, N'8.02', N'Pflegebedürftige Personen im Haushalt insgesamt', N'1,2,3,8', 1, 0, 4, NULL, NULL, NULL, 1, N'0', 5, 3, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = COUNT(*)
FROM dbo.BFSDossierPerson      PRS WITH (READUNCOMMITTED)
  INNER JOIN dbo.BaGesundheit  BGS WITH (READUNCOMMITTED) ON BGS.BaPersonID = PRS.BaPersonID
WHERE PRS.BFSDossierID = @BFSDossierID
  AND BGS.PflegebeduerftigFlag = 1', N'SELECT @value = ''-6''', NULL, NULL, NULL, 1, N'/dossier/z:row', N'anz_pflegefaelle_hh', NULL, N'Plegebedürftige Person im Haushalt ingesamt', N'Angeben, wieviele pflegebedürftige Personen insgesamt im Haushalt leben.
Leben keine pflegebedürftigen Personen im Haushalt, kann die folgende Frage 8c. "Pflege oder Betreuung durch" übersprungen werden.


Beispiele für regelmässige Hilfeleistungen:

Körperpflege, Verarztung (Verbände, Spritzen, Einnahme von Medikamenten, Massagen usw.) sowie weitere Leistungen für behinderte Personen.
Die Betreuung von Kindern oder älteren Menschen, die Zubereitung von Mahlzeiten oder die Erledigung verschiedener Haushaltsarbeiten sind keine Pflege.

Falls nichts erfasst, gilt: 0', 2330, NULL, 1, NULL, N'008.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (74, 20080714, N'8.03', N'Pflege oder Betreuung durch', N'1,2,3,8', 1, 0, 8, NULL, N'PflegeDurch', N'BFSPflegeDurch', 1, NULL, 5, 1, N'<5><sozgns><ZH>
Champs pas trouvé
Ancien code:
SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = PflegeDurchCode AND LOVName = ''PflegeDurch'')
FROM dbo.BaGesundheit WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'SELECT @value = ''-6''', N'BaGesundheit', N'PflegeDurchCode', NULL, 1, N'/dossier/z:row', N'pfleger_id', NULL, N'Plege oder Betreuung durch', N'Wenn pflegebedürftige Personen im Haushalt leben, angeben, durch wen sie betreut werden (Haushaltsmitglied, Organisation/Institution, etc.).
Wenn ein Teil der Pflege durch ein Haushaltsmitglied und ein anderer durch eine Fachperson (z.B. Heimpfleger/in) geleistet wird, sich für jene Kategorie entscheiden, die gemessen an der Häufigkeit und Komplexität der Leistungen den grösseren Teil der Arbeit übernimmt.', 2340, N'$getvalue("8.02") > 0', 1, NULL, N'008.0300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (75, 20080714, N'9.01', N'Krankenversicherung: Grundversicherung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'1', 5, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT CASE WHEN EXISTS(select * FROM baKrankenversicherung WITH(READUNCOMMITTED)
    INNER JOIN FaLeistung WITH(READUNCOMMITTED)
    on FaLeistung.BaPersonID = baKrankenversicherung.BaPersonID
    where baKrankenversicherung.BaPersonID = @BaPersonID
    and baKrankenversicherung.datumVon <=dbo.fnDateSerial(@jahr,12,31)
    and (baKrankenversicherung.datumBis >= dbo.fnDateSerial(@jahr,12,31) or baKrankenversicherung.datumBis is null)
    and GesetzesGrundlageCode = 1) THEN
1
ELSE
2
END
)', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_kk_grundversicherung', NULL, N'Krankenversicherung / Grundversicherung', N'Angeben, ob der Antragsteller/die Antragstellerin eine Grundversicherung bei einer Krankenkasse hat.

Format: ja/nein

Falls nichts erfasst, gilt: ja', 2350, NULL, 1, NULL, N'009.0100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (76, 20080714, N'9.02', N'Krankenversicherung: Zusatzversicherung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'2', 5, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT CASE WHEN EXISTS(select * FROM baKrankenversicherung WITH(READUNCOMMITTED)
    INNER JOIN FaLeistung WITH(READUNCOMMITTED)
    on FaLeistung.BaPersonID = baKrankenversicherung.BaPersonID
    where baKrankenversicherung.BaPersonID = @BaPersonID
    and baKrankenversicherung.datumVon <=dbo.fnDateSerial(@jahr,12,31)
    and (baKrankenversicherung.datumBis >= dbo.fnDateSerial(@jahr,12,31) or baKrankenversicherung.datumBis is null)
    and GesetzesGrundlageCode = 2) THEN
1
ELSE
2
END
)', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_kk_zusatzversicherung', NULL, N'Krankenversicherung / Zusatzversicherung', N'Angeben, ob der Antragsteller/die Antragstellerin eine Zusatzversicherung bei einer Krankenkasse hat.
Unter Zusatzversicherung wird jegliche Form der Krankenversicherung neben der obligatorischen Grundversicherung verstanden, mit Ausnahme der Unfallversicherung.

Format: ja/nein

Falls nichts erfasst, gilt: nein', 2360, NULL, 1, NULL, N'009.0200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (77, 20080714, N'9.04', N'Krankenkasse Name', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 5, 1, N'<4><sozgns><09.05.18><ZH>
SELECT @value = INS.InstitutionName
FROM dbo.fnBFSBudget (@FaLeistungID, @Jahr, 1) BDG
  INNER JOIN dbo.BgPosition            POS WITH (READUNCOMMITTED) ON POS.BgPositionID = BDG.BgPositionID
  INNER JOIN dbo.BaInstitution         INS WITH (READUNCOMMITTED) ON INS.BaInstitutionID = POS.BaInstitutionID 
WHERE POS.BaInstitutionID IS NOT NULL
  AND POS.BaPersonID = @BaPersonID
  AND POS.BgPositionID_Parent IS NULL
  AND BDG.BgGruppeCode = 3202', N'SELECT @value = (select top 1 InstitutionName FROM baKrankenversicherung WITH(READUNCOMMITTED)
    INNER JOIN FaLeistung WITH(READUNCOMMITTED)
    on FaLeistung.BaPersonID = baKrankenversicherung.BaPersonID
    INNER JOIN BaInstitution on baKrankenversicherung.BaInstitutionID = BaInstitution.BaInstitutionID
    where baKrankenversicherung.BaPersonID = @BaPersonID and FaLeistung.FaLeistungID = @FaLeistungID
    and baKrankenversicherung.datumVon <=dbo.fnDateSerial(@jahr,12,31)
    and (baKrankenversicherung.datumBis >= dbo.fnDateSerial(@jahr,12,31) or baKrankenversicherung.datumBis is null)
    and GesetzesGrundlageCode = 1)', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'kk_name', NULL, N'Krankenkasse Name', N'Den Namen der Krankenkasse erfassen, bei welcher der Antragsteller/die
Antragstellerin gemäss KVG seine/ihre Grundversicherung abgeschlossen hat. Diese
Frage wird vom BFS nicht statistisch ausgewertet, kann jedoch für die
Dossierführung hilfreich sein.', 2370, NULL, 1, NULL, N'009.0400', 2, 0)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (78, 20080714, N'9.05', N'Krankenkassen Prämie ganze UE', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 5, 1, N'<3><sozruh><ZH><09-05-26>', N'SELECT @value = sum(Bak.Praemie) 
From BAKrankenversicherung BAK
inner join BFSDossierPerson BFP on BAK.BaPersonID = BFP.BaPersonID
inner join BFSDossier BFD on BFD.BFSDossierId = BFP.BFSDossierId
where BAKrankenversicherungID in 
	(select top 1 BaKrankenversicherungID from BaKrankenversicherung BAK where 
	dbo.fnDateSerial(2008, 12,31) between BAK.DatumVon 
		and IsNull(BAK.DatumBis, dbo.fnDateSerial(2008, 12,31))
	and BAK.GesetzesGrundlageCode =1
	and BAK.BaPersonID = BFP.BaPersonID)
and FaLeistungID = @FaLeistungId
group by FaLeistungID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'kk_praemie_mt', NULL, N'Krankenkassen Prämie', N'Es müssen die monatlichen Krankenkassenprämien für die obligatorische Grundversicherung der gesamten Unterstützungseinheit erfasst werden.', 2380, NULL, 1, NULL, N'009.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (79, 20080714, N'9.061', N'Krankenkassenprämienzuschuss (IPV) ganze UE', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 5, 1, N'<3><sozruh><ZH><09-05-26>', N'SELECT @value = CASE WHEN 
Exists (SELECT KVGPraemienverbilligung 
From BAKrankenversicherung BAK
inner join BFSDossierPerson BFP on BAK.BaPersonID = BFP.BaPersonID
inner join BFSDossier BFD on BFD.BFSDossierId = BFP.BFSDossierId
where KVGPraemienverbilligung =1
	and BAK.BaPersonID = BFP.BaPersonID
and FaLeistungID = @FaLeistungId) 
                          THEN 1
                     ELSE 2
                END', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'b_kk_praemienzuschuss', NULL, N'Krankenkassenprämienzuschuss', N'Erhält die Unterstützungseinheit einen Krankenkassenprämienzuschuss bzw. eine Prämienverbilligung für die Krankenversicherung oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2390, NULL, 1, NULL, N'009.0610', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (80, 20080714, N'9.062', N'Krankenkassenprämienzuschuss (IPV) ganze UE', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 5, 1, N'<3><sozruh><ZH><09-05-26>', N'SELECT @value = sum(Bak.KVGPraemienVerbillBetrag) 
From BAKrankenversicherung BAK
inner join BFSDossierPerson BFP on BAK.BaPersonID = BFP.BaPersonID
inner join BFSDossier BFD on BFD.BFSDossierId = BFP.BFSDossierId
where BAKrankenversicherungID in 
	(select top 1 BaKrankenversicherungID from BaKrankenversicherung BAK where 
	dbo.fnDateSerial(2008, 12,31) between BAK.DatumVon 
		and IsNull(BAK.DatumBis, dbo.fnDateSerial(2008, 12,31))
	and BAK.GesetzesGrundlageCode =1
	and BAK.BaPersonID = BFP.BaPersonID)
and FaLeistungID = @FaLeistungId
group by FaLeistungID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'kk_zuschuss_betrag', NULL, N'Krankenkassenprämienzuschuss / Betrag', N'Erhält die Unterstützungseinheit einen Krankenkassenprämienzuschuss bzw. eine Prämienverbilligung für die Krankenversicherung, muss hier der monatliche Betrag erfasst werden.', 2400, N'$getvalue("9.061") == 1', 1, NULL, N'009.0620', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (82, 20080714, N'10.021', N'ALV', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / ALV', N'Erhält der Antragsteller/die Antragstellerin Arbeitslosengelder oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2440, NULL, 1, NULL, N'010.0210', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (83, 20080714, N'10.022', N'ALV', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / ALV Betrag', N'Erhält der Antragsteller/die Antragstellerin Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 2450, N'$getvalue("10.021") == 1', 1, NULL, N'010.0220', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (84, 20080714, N'10.031', N'Altersrente', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält der Antragsteller/die Antragstellerin eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2460, NULL, 1, NULL, N'010.0310', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (85, 20080714, N'10.032', N'Altersrente', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält der Antragsteller/die Antragstellerin eine Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 2470, N'$getvalue("10.031") == 1', 1, NULL, N'010.0320', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (86, 20080714, N'10.041', N'Witwen/Waisenrente', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht der Antragsteller/die Antragstellerin eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur für die antragstellende Person erfassen, falls sie die direkte Empfängerin ist. Bezieht jedoch ein Kind der Unterstützungseinheit die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2480, NULL, 1, NULL, N'010.0410', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (87, 20080714, N'10.042', N'Witwen-/Waisenrente', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält der Antragsteller/die Antragstellerin eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur für die antragstellende Person erfassen, falls sie die direkte Empfängerin ist. Bezieht jedoch ein Kind der Unterstützungseinheit die Leistung, die Rente unter dessen Namen erfassen.', 2490, N'$getvalue("10.041") == 1', 1, NULL, N'010.0420', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (88, 20080714, N'10.051', N'BVG', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Erhält der Antragsteller/die Antragstellerin Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 2500, NULL, 1, NULL, N'010.0510', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (89, 20080714, N'10.052', N'BVG', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält der Antragsteller/die Antragstellerin Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 2510, N'$getvalue("10.051") == 1', 1, NULL, N'010.0520', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (90, 20080714, N'10.061', N'Hilflosenentschädigung', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht der Antragsteller/die Antragstellerin eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2520, NULL, 1, NULL, N'010.0610', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (91, 20080714, N'10.062', N'Hilflosenentschädigung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält der Antragsteller/die Antragstellerin Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 2530, N'$getvalue("10.061") == 1', 1, NULL, N'010.0620', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (92, 20080714, N'10.063', N'Grad Hilflosigkeit', N'1,2,3,8', 1, 0, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'hilflosigkeitsgrad_id', NULL, N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Antragstellers/der Antragstellerin angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 2540, N'$getvalue("10.061") == 1', 1, NULL, N'010.0630', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (93, 20080714, N'10.071', N'IV-Rente', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht der Antragsteller/die Antragstellerin eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.
IV-Rente durch die Militärversicherung unter "Andere Rente / Taggelder" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2550, NULL, 1, NULL, N'010.0710', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (94, 20080714, N'10.072', N'IV-Rente', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält der Antragsteller/die Antragstellerin eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.
IV-Rente durch die Militärversicherung unter "Andere Rente / Taggelder" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen', 2560, N'$getvalue("10.071") == 1', 1, NULL, N'010.0720', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (95, 20080714, N'10.073', N'Invaliditätsgrad', N'1,2,3,8', 1, 0, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/antragsteller/z:row', N'invaliditaetsgrad_id', NULL, N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent
', 2570, N'$getvalue("10.071") == 1', 1, NULL, N'010.0730', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (96, 20080714, N'10.081', N'SUVA-Rente', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht der Antragsteller/die Antragstellerin eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "10c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2580, NULL, 1, NULL, N'010.0810', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (97, 20080714, N'10.082', N'SUVA-Rente', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält der Antragsteller/die Antragstellerin eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "10c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 2590, N'$getvalue("10.081") == 1', 1, NULL, N'010.0820', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (98, 20080714, N'10.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2600, NULL, 1, NULL, N'010.0910', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (99, 20080714, N'10.092', N'Taggeld Krankenversicherung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).', 2610, N'$getvalue("10.091") == 1', 1, NULL, N'010.0920', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (100, 20080714, N'10.101', N'IV-Taggeld', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2620, NULL, 1, NULL, N'010.1010', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (101, 20080714, N'10.102', N'IV-Taggeld', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen', 2630, N'$getvalue("10.101") == 1', 1, NULL, N'010.1020', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (102, 20080714, N'10.111', N'Unfall-Taggeld', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2640, NULL, 1, NULL, N'010.1110', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (103, 20080714, N'10.112', N'Unfall-Taggeld', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>
ancien code:
SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudget(@FaLeistungID, @Jahr, 0)
WHERE BaPersonID = @BaPersonID
  AND VarName = ''10.112''', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält der Antragsteller/die Antragstellerin Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 2650, N'$getvalue("10.111") == 1', 1, NULL, N'010.1120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (104, 20080714, N'10.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht der Antragsteller/die Antragstellerin andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2660, NULL, 1, NULL, N'010.1210', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (107, 20080714, N'10.122', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht der Antragsteller/die Antragstellerin andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 2670, N'$getvalue("10.121") == 1', 1, NULL, N'010.1220', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (108, 20080714, N'10.131', N'Unterhaltsbeiträge', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält der Antragsteller/die Antragstellerin Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die die antragstellende Person direkt betreffen (also nicht jene für ihre Kinder oder ihre/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2680, NULL, 1, NULL, N'010.1310', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (109, 20080714, N'10.132', N'Unterhaltsbeiträge', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Antragsteller/der Antragstellerin gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offizielle zugesprochene Betrag zu erfassen.', 2690, N'$getvalue("10.131") == 1', 1, NULL, N'010.1320', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (110, 20080714, N'10.141', N'Alimentenbevorschussung', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.142'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''14'']', N'Bevorschussung', N'Erhält ein Mitglied der Unterstützungseinheit eine Bevorschussung von Unterhaltsbeiträgen?

Personen, die Schwierigkeiten haben, ihnen zustehende Unterhaltsbeiträge zu erhalten, können bei der zuständigen Behörde einen Vorschuss beantragen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2700, NULL, 1, NULL, N'010.1410', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (111, 20080714, N'10.142', N'Alimentenbevorschussung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BFSVariable = @Variable and
             BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2))  -- beschränken auf UE-Personen
-- gilt für ganze UE!', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''14'']', N'Bevorschussung / Betrag', N'Erhält ein Mitglied der Unterstützungseinheit eine Bevorschussung von Unterhaltsbeiträgen, muss hier der bevorschusste bzw. inkassierte Betrag pro Monat erfasst werden.', 2710, N'$getvalue("10.141") == 1', 1, NULL, N'010.1420', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (112, 20080714, N'10.30', N'Erhalten andere Mitglieder der Unterstützungseinheit Erwerbseinkommen, Sozialversicherungsleistungen, Unterhaltsbeiträge', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = CASE 
	WHEN EXISTS(
		SELECT TOP 1 1 FROM dbo.fnBFSBudgetStichtagPerson(
			@AntragstellerID, 
			@BFSLeistungsartCode, 
			YEAR(@DatumBis), 
			MONTH(@DatumBis)
		)
        WHERE BaPersonID != @AntragstellerID 
			AND      BFSVariable = @Variable
    ) -- EXISTS
    THEN 1 -- Ja
    ELSE 2 -- Nein
END -- CASE', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_weitere_ue_einkommen', NULL, N'Erhalten andere Mitglieder der Unterstützungseinheit Erwerbseinkommen, Sozialversicherungengsleistungen, Unterhaltsbeiträge', N'Erhalten andere Mitglieder der Unterstützungseinheit Erwerbseinkommen, Sozialversicherungsleistungen oder Unterhaltsbeiträge?
Wird diese Frage mit "nein" beantwortet, kann direkt zur Frage 12a. "Vermögensfreibetrag" weitergegangen werden.

Format: ja/nein', 2810, N'$getvalue("4.07") == 2', 1, NULL, N'010.3000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (114, 20080714, N'11.1.021', N'ALV', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2840, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.1000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (115, 20080714, N'11.1.022', N'ALV', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 2850, N'$getvalue("11.1.021") == 1', 1, N'10.022', N'011.1000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (117, 20080714, N'11.1.031', N'Altersrente', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2860, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.1000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (118, 20080714, N'11.1.032', N'Altersrente', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 2870, N'$getvalue("11.1.031") == 1', 1, N'10.032', N'011.1000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (119, 20080714, N'11.1.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2880, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.1000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (120, 20080714, N'11.1.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 2890, N'$getvalue("11.1.041") == 1', 1, N'10.042', N'011.1000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (121, 20080714, N'11.1.051', N'BVG', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2900, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.1000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (122, 20080714, N'11.1.052', N'BVG', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 2910, N'$getvalue("11.1.051") == 1', 1, N'10.052', N'011.1000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (123, 20080714, N'11.1.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2920, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.1000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (124, 20080714, N'11.1.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 2930, N'$getvalue("11.1.061") == 1', 1, N'10.062', N'011.1000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (125, 20080714, N'11.1.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 1, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''1'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 2940, N'$getvalue("11.1.061") == 1', 1, N'10.063', N'011.1000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (126, 20080714, N'11.1.071', N'IV-Rente', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2950, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.1000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (127, 20080714, N'11.1.072', N'IV-Rente', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 2960, N'$getvalue("11.1.071") == 1', 1, N'10.072', N'011.1000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (128, 20080714, N'11.1.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 1, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''1'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 2970, N'$getvalue("11.1.071") == 1', 1, N'10.073', N'011.1000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (129, 20080714, N'11.1.081', N'SUVA-Rente', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 2980, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.1000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (130, 20080714, N'11.1.082', N'SUVA-Rente', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 2990, N'$getvalue("11.1.081") == 1', 1, N'10.082', N'011.1000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (131, 20080714, N'11.1.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3000, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.1000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (132, 20080714, N'11.1.092', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).', 3010, N'$getvalue("11.1.091") == 1', 1, N'10.092', N'011.1000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (133, 20080714, N'11.1.101', N'IV-Taggeld', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3020, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.1000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (134, 20080714, N'11.1.102', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 3030, N'$getvalue("11.1.101") == 1', 1, N'10.102', N'011.1000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (135, 20080714, N'11.1.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3040, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.1000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (136, 20080714, N'11.1.112', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 3050, N'$getvalue("11.1.111") == 1', 1, N'10.112', N'011.1000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (137, 20080714, N'11.1.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3060, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.1000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (138, 20080714, N'11.1.122', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 3070, N'$getvalue("11.1.121") == 1', 1, N'10.122', N'011.1000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (139, 20080714, N'11.1.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3080, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.1000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (140, 20080714, N'11.1.132', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
       BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).', 3090, N'$getvalue("11.1.131") == 1', 1, N'10.132', N'011.1000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (143, 20080714, N'12.01', N'Vermögensfreibetrag', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 6, 1, N'<2><sozruh><09-06-15>
Variable ist gemäss Standard berechnet', N'SELECT @value = null', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_vermoegensfreibetrag', NULL, N'Vermögensfreibetrag', N'Wurde für dieses Dossier bei Unterstützungsbeginn ein Vermögensfreibetrag berücksichtigt?
Nur "ja" angeben, falls der Vermögensfreibetrag der Unterstützungseinheit höher ist als 1''000.-.

Vermögensfreibetrag = Betrag, welcher der Unterstützungseinheit nach Abzug der kontrollierten Vermögensanteile zur eigenen Verwendung zugestanden wird.', 6060, NULL, 1, NULL, N'012.0100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (144, 20080714, N'12.02', N'Einkommen aus Vermögen', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, N'0', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = null', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''1'']', N'Einkommen aus Vermögen / Monatliches Einkommen aus Vermögen der Unterstützungseinheit (Betrag)', N'Bezieht die Unterstützungseinheit (antragstellende Person und/oder ein anderes Mitglied der UE) Einkommen aus Vermögen?

Beispiele:
Zins aus einem Sparkonto, Einkünfte aus der Vermietung von Grundeigentum (Garage, Grundstück, Wohnung, Haus usw.).

Wird das Einkommen aus Vermögen nur einmal jährlich einkassiert, einen Zwölftel des Jahresbetrags erfassen.

Format: ja/nein

Falls nichts erfasst, gilt: kein Einkommen aus Vermögen', 6070, NULL, 1, NULL, N'012.0200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (145, 20080714, N'12.04', N'Wohneigentum vorhanden', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'2', 6, 1, N'<2><sozruh><ZH><prov>
Die Wohnsituation, aus welcher das Wohneigentum abgeleitet wird, ist hier nicht verfügbar', N'SELECT @value = ''-6''', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_wohneigentum', NULL, N'Wohneigentum vorhanden', N'Ist Wohneigentum vorhanden (antragstellende Person und/oder andere Mitglieder der UE)?

Wohn- bzw. Grundeigentum umfasst Garagen, Wohnungen, Häuser, Grundstücke usw.

Format: ja/nein

Falls nichts erfasst, gilt: nein', 6090, NULL, 1, NULL, N'012.0400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (146, 20080714, N'12.03', N'Guthaben Pensionskasse (2. Säule)', N'1,2,3,8', 1, 0, 8, NULL, N'Nichtbekannt', N'BFSNichtbekannt', 1, NULL, 6, 1, N'<2><sozruh><09-06-15>
Variable ist gemäss Standard berechnet', N'SELECT @value = null', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_guthaben_pensionskasse', NULL, N'Guthaben Pensionskasse (2 Säule)', N'Bestehen Pensionskassenguthaben (antragstellende Person und/oder ein anderes Mitglied der UE)?

Liegt das Alterskapital (2. Säule) auf einem Freizügigkeitskonto, kann dessen Inhaber/ Inhaberin frühestens 5 Jahre vor dem eigentlichen Pensionierungsalter die Auszahlung seines/ihres Guthabens verlangen. Diese Möglichkeit besteht nur für Personen, die ihre Stelle verloren haben und im Rahmen der beruflichen Vorsorge keine Beiträge mehr zahlen.

Format: ja/nein/nicht bekannt', 6080, NULL, 1, NULL, N'012.0300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (147, 20080714, N'12.051', N'Kinderzulage (wenn nicht im Lohn enthalten)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''2'']', N'Kinderzulage', N'Erhält die antragstellende Person und/oder andere Mitglieder der UE Kinderzulagen oder ist ein Antrag in Bearbeitung?

Nur erfassen, wenn die Kinderzulagen nicht im Erwerbseinkommen (Frage 10a. und 11a.) enthalten sind.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 6100, NULL, 1, NULL, N'012.0510', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (148, 20080714, N'12.061', N'Arbeitslosenhilfe', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''2''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''3'']', N'Bedarfsabhängige Leistungen / Anschlusstaggeld', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE ein Anschlusstaggeld?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6120, NULL, 1, NULL, N'012.0610', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (149, 20080714, N'12.062', N'Arbeitslosenhilfe', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''0''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''3'']', N'Bedarfsabhängige Leistungen / Anschlusstaggeld Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE ein Anschlusstaggeld, muss hier der monatliche Gesamtbetrag erfasst werden.', 6130, N'$getvalue("12.061") == 1', 1, NULL, N'012.0620', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (150, 20080714, N'12.071', N'EL-Betrag IV/AHV', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''4'']', N'Bedarfsabhängige Leistungen / EL-Betrag IV/AHV', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE Ergänzungsleistungen zur AHV/IV?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6140, NULL, 1, NULL, N'012.0710', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (151, 20080714, N'12.072', N'EL-Betrag  IV/AHV', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''4'']', N'Bedarfsabhängige Leistungen / EL-Betrag IV/AHV Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE Ergänzungsleistungen zur AHV/IV, muss hier der monatliche Gesamtbetrag erfasst werden.', 6150, N'$getvalue("12.071") == 1', 1, NULL, N'012.0720', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (152, 20080714, N'12.081', N'Individ. Wohnkostenzuschuss:', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''2''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''5'']', N'Bedarfsabhängige Leistungen / Wohngeld', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE individuelles Wohngeld?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6160, NULL, 1, NULL, N'012.0810', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (153, 20080714, N'12.082', N'Individ. Wohnkostenzuschuss:', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''0''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''5'']', N'Bedarfsabhängige Leistungen / Wohngeld Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE ein Wohngeld, muss hier der monatliche Gesamtbetrag erfasst werden.', 6170, N'$getvalue("12.081") == 1', 1, NULL, N'012.0820', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (154, 20080714, N'12.091', N'Mutterschaftsbeiträge', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''6'']', N'Bedarfsabhängige Leistungen / Mutterschaftsbeiträge', N'Erhält die Antragstellerin und/oder ein anderes Mitglied der UE bedarfsabhängige Mutterschaftsbeiträge?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6180, NULL, 1, NULL, N'012.0910', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (155, 20080714, N'12.092', N'Mutterschaftsbeiträge', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''6'']', N'Bedarfsabhängige Leistungen / Mutterschaftsbeiträge Betrag', N'Erhält die Antragstellerin und/oder ein Mitglied der Unterstützungseinheit Mutterschaftsbeiträge, muss hier der monatliche Gesamtbetrag erfasst werden.', 6190, N'$getvalue("12.091") == 1', 1, NULL, N'012.0920', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (156, 20080714, N'12.101', N'Erziehungsgeld', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''2''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''7'']', N'Bedarfsabhängige Leistungen / Erziehungsgeld', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE bedarfsabhängiges Erziehungsgeld?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6200, NULL, 1, NULL, N'012.1010', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (157, 20080714, N'12.102', N'Erziehungsgeld', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''0''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''7'']', N'Bedarfsabhängige Leistungen / Erziehungsgeld Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE Erziehungsgeld, muss hier der monatliche Gesamtbetrag erfasst werden.', 6210, N'$getvalue("12.101") == 1', 1, NULL, N'012.1020', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (160, 20080714, N'12.121', N'Stipendien', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''9'']', N'Bedarfsabhängige Leistungen / Stipendien', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE ein Stipendium?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6220, NULL, 1, NULL, N'012.1210', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (161, 20080714, N'12.122', N'Stipendien', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''9'']', N'Bedarfsabhängige Leistungen / Stipendien Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE Stipendien, muss hier der monatliche Gesamtbetrag erfasst werden.', 6230, N'$getvalue("12.121") == 1', 1, NULL, N'012.1220', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (162, 20080714, N'12.131', N'Gemeindezuschüsse', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''2''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''10'']', N'Bedarfsabhängige Leistungen / Gemeindezuschüsse', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE bedarfsabhängige Gemeindezuschüsse zur AHV-/IV-Rente?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6240, NULL, 1, NULL, N'012.1310', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (163, 20080714, N'12.132', N'Gemeindezuschüsse', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = ''0''', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''10'']', N'Bedarfsabhängige Leistungen / Gemeindezuschüsse Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE Gemeindezuschüsse zur AHV-/IV-Rente, muss hier der monatliche Gesamtbetrag erfasst werden.', 6250, N'$getvalue("12.131") == 1', 1, NULL, N'012.1320', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (164, 20080714, N'12.141', N'andere', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.142'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''11'']', N'Bedarfsabhängige Leistungen / Andere', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE andere bedarfsabhängige Leistungen?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein

Anmerkung:
Bedarfsabhängige Leistungen sind Kantons-, bzw. Gemeindespezifisch geregelt und daher nicht in allen Kantonen/Gemeinden vorhanden.', 6260, NULL, 1, NULL, N'012.1410', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (165, 20080714, N'12.142', N'andere:', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''11'']', N'Bedarfsabhängige Leistungen / Andere Betrag', N'Erhält die antragstellende Person und/oder ein anderes Mitglied der UE andere bedarfsabhängige Leistungen (z.B. weitere kommunale Leistungen, Beiträge von Stiftungen oder anderen Hilfswerken), muss hier der monatliche Gesamtbeitrag erfasst werden.', 6270, N'$getvalue("12.141") == 1', 1, NULL, N'012.1420', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (166, 20080714, N'12.151', N'Erhalt von Haushaltsentschädigung (Konkubinatsbeitrag)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.152'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''12'']', N'Erhalt von Haushaltsentschädigung (Konkubinatsbeitrag)', N'Führt die antragstellende Person und/oder ein anderes Mitglied der UE den Haushalt für eine oder mehrere nicht unterstützte Personen und wird ihr bei der Berechnung der Unterstützung eine Entschädigung für die Haushaltsführung angerechnet? (vgl. SKOS-Richtlinien)

Format: ja/nein

Falls nichts erfasst, gilt: nein', 6280, NULL, 1, NULL, N'012.1510', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (167, 20080714, N'12.152', N'Erhalt von Haushaltsentschädigung (Konkubinatsbeitrag)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''12'']', N'Erhalt von Haushaltsentschädigung (Konkubinatsbeitrag) Betrag', N'Wird für die antragstellende Person und/oder ein anderes Mitglied der UE eine Haushaltsentschädigung berechnet, muss hier der monatliche Gesamtbetrag erfasst werden.', 6290, N'$getvalue("12.151") == 1', 1, NULL, N'012.1520', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (168, 20080714, N'12.161', N'Verwandtenunterstützung', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''12.162'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''13'']', N'Verwandtenunterstützung', N'Wurde gemäss Artikel 328 und 329 ZGB Verwandtenunterstützung geltend gemacht oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 6300, NULL, 1, NULL, N'012.1610', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (169, 20080714, N'12.162', N'Verwandtenunterstützung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-15>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''13'']', N'Verwandtenunterstützung Betrag', N'Wurde gemäss Artikel 328 und 329 ZGB Verwandtenunterstützung geltend gemacht, muss hier der monatliche Gesamtbetrag erfasst werden.', 6310, N'$getvalue("12.161") == 1', 1, NULL, N'012.1620', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (170, 20080714, N'13.011', N'weitere Versicherungsprämien', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, NULL, N'SELECT @value = null', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'b_in_abklaerung', N'[@ausgabeart_id=''1'']', N'Weitere Versicherungsprämien', N'Hat die Unterstützungseinheit neben den Krankenkassenprämien noch andere Versicherungsprämien zu bezahlen?

Z. B. Haftpflicht-, Hausratsversicherung, Autohaftpflicht usw.
Dabei ist es unerheblich, ob diese weiteren Prämien über die Sozialhilfeleistung abgegolten werden.

Format: ja/nein', 6370, NULL, 1, NULL, N'013.0110', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (171, 20080714, N'13.012', N'weitere Versicherungsprämien', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, NULL, N'SELECT @value = null', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'betrag', N'[@ausgabeart_id=''1'']', N'Weitere Versicherungsprämien Monatl. Gesamtbetrag', N'Hat die Unterstützungseinheit neben den Krankenkassenprämien noch andere Versicherungsprämien zu bezahlen (z. B. Haftpflicht-, Hausratsversicherung, Autohaftpflicht usw.), muss hier der monatliche Gesamtbetrag erfasst werden.

Dabei ist es unerheblich, ob diese weiteren Prämien über die Sozialhilfeleistung abgegolten werden.', 6380, N'$getvalue("13.011") == 1', 1, NULL, N'013.0120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (172, 20080714, N'13.021', N'Schuldenbelastung inkl. Steuerschulden (Schätzung)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'b_in_abklaerung', N'[@ausgabeart_id=''2'']', N'Schuldenbelastung inkl. Steuerschulden (Schätzung)', N'Ist die antragstellende Person und/oder ein anderes Mitglied der UE verschuldet, muss hier der Gesamtbetrag der Schulden (oder eine Schätzung) erfasst werden, nicht die monatlichen Rückzahlungsraten.

Schulden aus Hypotheken (Grundpfandschulden) oder Leasingverträge werden hier nicht berücksichtigt.
', 6390, NULL, 1, NULL, N'013.0210', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (173, 20080714, N'13.022', N'Schuldenbelastung inkl. Steuerschulden (Schätzung)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'betrag', N'[@ausgabeart_id=''2'']', N'Schuldenbelastung inkl. Steuerschulden (Schätzung) Betrag', N'Ist die antragstellende Person und/oder ein anderes Mitglied der UE verschuldet, muss hier der Gesamtbetrag der Schulden (oder eine Schätzung) erfasst werden, nicht die monatlichen Rückzahlungsraten.

Schulden aus Hypotheken (Grundpfandschulden) oder Leasingverträge werden hier nicht berücksichtigt.
', 6400, N'$getvalue("13.021") == 1', 1, NULL, N'013.0220', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (174, 20080714, N'13.03', N'Einkommenspfändung', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'b_in_abklaerung', N'[@ausgabeart_id=''3'']', N'Einkommenspfändung', N'Besteht beim Antragsteller/der Antragstellerin und/oder einem anderen Mitglied der Unterstützungseinheit eine Einkommenspfändung?

In manchen Gemeinden ist dies nicht möglich.
Wird lediglich das betreibungsrechtliche Existenzminimum ausbezahlt, so sind keine weiteren Verpflichtungen zu erfüllen. Dies gilt auch für Forderungen von Banken wegen Schulden.

Format: ja/nein

Falls nichts erfasst, gilt: nein
', 6410, NULL, 1, NULL, N'013.0300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (175, 20080714, N'13.041', N'Unterhaltsbeitrag an Ehepartner bzw. Kinder', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'b_in_abklaerung', N'[@ausgabeart_id=''4'']', N'Unterhaltsbeitrag an Ehepartner bzw. Kinder', N'Ist der Antragsteller/die Antragstellerin bzw. ein anderes Mitglied der UE gemäss einem Trennungs-/Scheidungsurteil oder Unterhaltsvertrag zu Unterhaltszahlungen verpflichtet?

Format: ja/nein

Falls nichts erfasst, gilt: nein
', 6420, NULL, 1, NULL, N'013.0410', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (176, 20080714, N'13.042', N'Unterhaltsbeitrag an Ehepartner bzw. Kinder', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ausgabe/z:row', N'betrag', N'[@ausgabeart_id=''4'']', N'Unterhaltsbeitrag an Ehepartner bzw. Kinder Betrag', N'Ist der Antragsteller/die Antragstellerin bzw. ein anderes Mitglied der UE gemäss einem Trennungs-/Scheidungsurteil oder Unterhaltsvertrag zu Unterhaltszahlungen verpflichtet, muss hier der monatliche Gesamtbetrag der Alimentenzahlungen erfasst werden.', 6430, N'$getvalue("13.041") == 1', 1, NULL, N'013.0420', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (177, 20080714, N'14.16', N'1 Budgetberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''16'']', N'Budgetberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Budgetberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6590, NULL, 1, NULL, N'014.1600', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (178, 20080714, N'14.15', N'2 Schuldenberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''15'']', N'Schuldenberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Schuldenberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6580, NULL, 1, NULL, N'014.1500', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (179, 20080714, N'14.14', N'3 materielle Leistungen (Fonds etc.)', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''14'']', N'Materielle Leistungen (Fonds etc.)', N'Wurden der antragstellenden Person bzw. der UE materielle Leistungen aus einem Fonds etc. ausbezahlt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6570, NULL, 1, NULL, N'014.1400', 3, 0)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (180, 20080714, N'14.19', N'4 Berufsberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''19'']', N'Berufsberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Berufsberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6620, NULL, 1, NULL, N'014.1900', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (181, 20080714, N'14.20', N'5 Weiterbildungsmassnahme', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''20'']', N'Weiterbildungsmassnahme', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit eine Weiterbildungsmassnahme angeboten oder vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6630, NULL, 1, NULL, N'014.2000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (182, 20080714, N'14.25', N'6 Beschäftigungsmassnahme RAV', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''25'']', N'Beschäftigungsmassnahme RAV', N'Wurden dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit Beschäftigungsmassnahmen durch die Regionale Arbeitsvermittlung (RAV) angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6680, NULL, 1, NULL, N'014.2500', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (183, 20080714, N'14.26', N'7 Beschäftigungsmassnahme Gemeinde/Kanton', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''26'']', N'Beschäftigungsmassnahme Gemeinde/Kanton', N'Wurden dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit Integrationsmassnahmen (Beschäftigungsprogramme) von der Gemeinde oder dem Kanton angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6690, NULL, 1, NULL, N'014.2600', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (184, 20080714, N'14.10', N'8 Eheberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''10'']', N'Eheberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Eheberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6530, NULL, 1, NULL, N'014.1000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (185, 20080714, N'14.11', N'9 Familienberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''11'']', N'Familienberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Familienberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6540, NULL, 1, NULL, N'014.1100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (186, 20080714, N'14.17', N'10 Kinderbetreuung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''17'']', N'Kinderbetreuung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit Kinderbetreuung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6600, NULL, 1, NULL, N'014.1700', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (187, 20080714, N'14.02', N'11 Jugendanwaltschaft', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''2'']', N'Jugendanwaltschaft', N'Ist die Jugendanwaltschaft in die Betreuung von Mitgliedern der Unterstützungseinheit involviert?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6450, NULL, 1, NULL, N'014.0200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (188, 20080714, N'14.03', N'12 Jugendamt/Jugend-sekretariat', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''3'']', N'Jugendamt/Jugend-sekretariat', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Jugendberatung (Jugendamt oder Jugendsekretariat) angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6460, NULL, 1, NULL, N'014.0300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (189, 20080714, N'14.09', N'13 Jugend-/Erziehungsberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''9'']', N'Jugend-/Erziehungsberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Jugend- oder Erziehungsberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6520, NULL, 1, NULL, N'014.0900', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (190, 20080714, N'14.21', N'14 Gesundheitsberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''21'']', N'Gesundheitsberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Gesundheitsberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6640, NULL, 1, NULL, N'014.2100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (191, 20080714, N'14.05', N'15 Spitex', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''5'']', N'Spitex', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit SPITEX angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6480, NULL, 1, NULL, N'014.0500', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (192, 20080714, N'14.24', N'16 psychiatrisch/psychol. Dienste', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''24'']', N'Psychiatrisch/psychol. Dienste', N'Wurden dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit psychiatrische Dienste oder ein Psychologe/eine Psychologin angeboten oder vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6670, NULL, 1, NULL, N'014.2400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (193, 20080714, N'14.22', N'17 Alkoholberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''22'']', N'Alkoholberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Alkoholberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6650, NULL, 1, NULL, N'014.2200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (194, 20080714, N'14.23', N'18 Drogenberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''23'']', N'Drogenberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Drogenberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6660, NULL, 1, NULL, N'014.2300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (195, 20080714, N'14.06', N'25 Wohnungsvermittlung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''6'']', N'Wohnungsvermittlung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Wohnungsvermittlung angeboten?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6490, NULL, 1, NULL, N'014.0600', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (196, 20080714, N'14.07', N'26 Vermittlung in Wohngruppe', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''7'']', N'Vermittlung in Wohngruppe', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Vermittlung in eine Wohngruppe angeboten?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6500, NULL, 1, NULL, N'014.0700', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (197, 20080714, N'14.08', N'19 Sozialberatung von externer Stelle', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''8'']', N'Sozialberatung von externer Stelle', N'Ist ein externer Sozialdienst in die Betreuung des Antragstellers/der Antragstellerin, bzw. der Unterstützungseinheit involviert?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6510, NULL, 1, NULL, N'014.0800', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (198, 20080714, N'14.04', N'20 Bewährungshilfe/ Strafentlassenen-hilfe', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''4'']', N'Bewährungshilfe / Strafentlassenen-Hilfe', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Beratung für Strafentlassene angeboten bzw. vermittelt? Wird der Antragsteller/die Antragstellerin oder die Unterstützungseinheit von der Strafentlassenenhilfe betreut?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6470, NULL, 1, NULL, N'014.0400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (199, 20080714, N'14.01', N'21 Amtsvormundschaft', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''1'']', N'Amtsvormundschaft', N'Ist die Amtsvormundschaft in die Betreuung von Mitgliedern der Unterstützungseinheit involviert?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6440, NULL, 1, NULL, N'014.0100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (200, 20080714, N'14.18', N'22 Opferhilfeberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''18'']', N'Opferhilfeberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Opferhilfeberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6610, NULL, 1, NULL, N'014.1800', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (201, 20080714, N'14.13', N'23 Rechtsberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''13'']', N'Rechtsberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Rechtsberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6560, NULL, 1, NULL, N'014.1300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (202, 20080714, N'14.12', N'24 Ausländerberatung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''12'']', N'Ausländerberatung', N'Wurde dem Antragsteller/der Antragstellerin bzw. der Unterstützungseinheit die Ausländerberatung angeboten bzw. vermittelt?

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6550, NULL, 1, NULL, N'014.1200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (203, 20080714, N'14.27', N'27 andere, und zwar', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'kommentar', N'[@massnahme_id=''27'']', N'Andere, und zwar', N'Sind andere Institutionen in die Betreuung des Antragstellers/der Antragstellerin, bzw. der Unterstützungseinheit involviert? Wenn dies der Fall ist, angeben welche.

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6700, NULL, 1, NULL, N'014.2700', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (204, 20080714, N'14.28', N'28 andere, und zwar', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'kommentar', N'[@massnahme_id=''28'']', N'Andere, und zwar', N'Sind andere Institutionen in die Betreuung des Antragstellers/der Antragstellerin, bzw. der Unterstützungseinheit involviert? Wenn dies der Fall ist, angeben welche.

Fachstellen und Beratungsleistungen erfassen, die ein oder mehrere Mitglieder der Unterstützungseinheit konsultieren, und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6710, NULL, 1, NULL, N'014.2800', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (205, 20080714, N'14.29', N'29 Unterbringung des Antragstellers', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''29'']', N'Vermittlung zur Unterbringung in eine stationäre Einrichtung / des Antragstellers', N'Sind Vermittlungen zur Unterbringung des Antragstellers/der Antragstellerin in eine stationäre Einrichtung im Gange?

Beratungsleistungen erfassen und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6720, NULL, 1, NULL, N'014.2900', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (206, 20080714, N'14.30', N'30 Unterbringung eines Mitglieds UE', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''30'']', N'Vermittlung zur Unterbringung in eine stationäre Einrichtung / eines Mitglieds UE', N'Sind Vermittlungen zur Unterbringung eines Mitglieds der Unterstützungseinheit in eine stationäre Einrichtung im Gange?

Beratungsleistungen erfassen und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein
', 6730, NULL, 1, NULL, N'014.3000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (207, 20080714, N'14.31', N'31 Unterbringung eines Haushaltsmitglieds', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 7, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/massnahme/z:row', N'wert', N'[@massnahme_id=''31'']', N'Vermittlung zur Unterbringung in eine stationäre Einrichtung / eines Haushaltsmitglieds', N'Sind Vermittlungen zur Unterbringung eines Haushaltsmitglieds in eine stationäre Einrichtung im Gange?

Beratungsleistungen erfassen und zwar unabhängig davon, ob die Hilfe von einem internen oder externen Dienst erbracht wird.

Falls nichts erfasst, gilt: nein', 6740, NULL, 1, NULL, N'014.3100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (208, 20080714, N'15.01', N'Antrag', N'1,2,3,5,6,7,8', 1, 0, 8, NULL, N'Antrag', N'BFSAntrag', 1, NULL, 8, 1, N'<4><sozgns><09.05.18>', N'DECLARE @LeistungDatumVon datetime  DECLARE @LeistungDatumBis datetime    DECLARE @PrevFaLeistungID int  DECLARE @PrevLeistungDatumVon datetime  DECLARE @PrevLeistungDatumBis datetime    -- aktueller Fall für Erhebungsjahr  SELECT @LeistungDatumVon   = DatumVon,               @LeistungDatumBis   = DatumBis  FROM dbo.FaLeistung WITH (READUNCOMMITTED)  WHERE FaLeistungID = @FaLeistungID    -- Vorgänger Fall  SELECT TOP 1         @PrevFaLeistungID           = PREV.FaLeistungID,         @PrevLeistungDatumVon  = PREV.DatumVon,         @PrevLeistungDatumBis   = PREV.DatumBis  FROM dbo.FaLeistung PREV WITH (READUNCOMMITTED)  WHERE PREV.BaPersonID = @BaPersonID   AND PREV.ModulID = 3   AND PREV.DatumVon < @LeistungDatumVon  ORDER BY PREV.DatumVon DESC      -- Antrag  SELECT @value =        CASE             WHEN @PrevFaLeistungID IS NULL AND Year(@LeistungDatumVon) = @Jahr THEN 1  -- neuer Fall             WHEN @PrevFaLeistungID IS NOT NULL AND DateDiff(m,@PrevLeistungDatumBis, @LeistungDatumVon) > 6 THEN 2  -- Wieder', NULL, NULL, NULL, 1, N'/dossier/z:row', N'antragsart_id', NULL, N'Antrag', N'Um welche Art von Antrag handelt es sich?


1: Neuer Fall:
Der Antragsteller/die Antragstellerin hat von der betreffenden Dienststelle noch nie Sozialhilfeleistungen erhalten.

2: Wiederaufnahme nach Unterbrechung (min. 6 Monate ohne finanzielle Leistungen):
Erhält der Antragsteller/die Antragstellerin nach min. 6-monatigem Unterbruch von der betreffenden Dienststelle wieder Sozialhilfeleistungen, diese Kategorie auswählen (auch wenn sich die Zusammensetzung der restlichen Mitglieder der Unterstützungseinheit verändert hat).

3: Laufender Fall ohne Unterbrechung
Diese Option betrifft nur das erste Erhebungsjahr. Sie erlaubt die Aufnahme laufender Dossiers in die Statistik.', 6750, NULL, 1, NULL, N'015.0100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (209, 20080714, N'15.02', N'Frühere Unterstützung', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 8, 1, N'<2><sozruh><prov>
Entgegen der Annahme von V.Schorn scheint die Dauer des Vorgängerfalles gerechnet zu werden.', N'DECLARE @LeistungDatumVon datetime
DECLARE @LeistungDatumBis datetime

DECLARE @PrevFaLeistungID int
DECLARE @PrevLeistungDatumVon datetime
DECLARE @PrevLeistungDatumBis datetime

-- aktueller Fall für Erhebungsjahr
SELECT @LeistungDatumVon   = DatumVon,
       @LeistungDatumBis   = DatumBis
FROM dbo.FaLeistung WITH (READUNCOMMITTED)
WHERE FaLeistungID = @FaLeistungID

-- Vorgänger Fall
SELECT TOP 1
       @PrevFaLeistungID     = PREV.FaLeistungID,
       @PrevLeistungDatumVon = PREV.DatumVon,
       @PrevLeistungDatumBis = PREV.DatumBis
FROM dbo.FaLeistung PREV WITH (READUNCOMMITTED)
WHERE PREV.BaPersonID = @BaPersonID 
AND PREV.ModulID = 3 
AND PREV.DatumVon < @LeistungDatumVon
ORDER BY PREV.DatumVon DESC

-- frühere Unterstützung + Dauer
IF @PrevFaLeistungID IS NOT NULL BEGIN
  SET @value = CONVERT(bit,1)
END ELSE BEGIN
  SET @value = CONVERT(bit,0)
END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_frueher_unterstuetzt', NULL, N'Frühere Unterstützung', N'Hat der Antragsteller/die Antragstellerin bereits früher von diesem oder einem anderen Sozialdienst in der Schweiz Sozialhilfe erhalten?

Format: ja/nein', 6760, NULL, 1, NULL, N'015.0200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (210, 20080714, N'15.03', N'wenn ja: Dauer der letzten Unterstützung', N'1,2,3,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 8, 1, N'<2><sozruh><prov>
Entgegen der Annahme von V.Schorn scheint die Dauer des Vorgängerfalles gerechnet zu werden.', N'DECLARE @LeistungDatumVon datetime
DECLARE @LeistungDatumBis datetime

DECLARE @PrevFaLeistungID int
DECLARE @PrevLeistungDatumVon datetime
DECLARE @PrevLeistungDatumBis datetime

-- aktueller Fall für Erhebungsjahr
SELECT @LeistungDatumVon   = DatumVon,
       @LeistungDatumBis   = DatumBis
FROM dbo.FaLeistung WITH (READUNCOMMITTED)
WHERE FaLeistungID = @FaLeistungID

-- Vorgänger Fall
SELECT TOP 1
       @PrevFaLeistungID     = PREV.FaLeistungID,
       @PrevLeistungDatumVon = PREV.DatumVon,
       @PrevLeistungDatumBis = PREV.DatumBis
FROM dbo.FaLeistung PREV WITH (READUNCOMMITTED)
WHERE PREV.BaPersonID = @BaPersonID 
AND PREV.ModulID = 3 
AND PREV.DatumVon < @LeistungDatumVon
ORDER BY PREV.DatumVon DESC

-- frühere Unterstützung + Dauer
IF @PrevFaLeistungID IS NOT NULL BEGIN
  SET @value = DateDiff(m,@PrevLeistungDatumVon, @PrevLeistungDatumBis) + CASE WHEN DAY(@PrevLeistungDatumBis) > 15 THEN 1 ELSE 0 END
END ELSE BEGIN
  SET @value = NULL
END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'dauer_unterstuetzung_mt', NULL, N'Dauer der letzten Unterstützung', N'Hat der Antragsteller/die Antragstellerin bereits früher von diesem oder einem anderen Sozialdienst Sozialhilfe erhalten, Dauer der letzten Unterstützungsphase angeben. Es genügt eine grobe Schätzung.

Format: Anzahl Monate, z.B. 7', 6770, N'$getvalue("15.02") == 1', 1, NULL, N'015.0300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (212, 20080714, N'15.0401', N'Grundbedarf I', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT SKOS', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''1'']', N'Grundbedarf I', N'Grundbedarf I für den Lebensunterhalt gemäss den kantonalen Richtlinien.', 6790, N'$getvalue("10.20") != 1', 1, NULL, N'015.0401', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (213, 20080714, N'15.0402', N'Zuschlag zum Grundbedarf I', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT SKOS', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''2'']', N'Zuschlag zum Grundbedarf I', N'Zuschlag zum Grundbedarf I gemäss den in Ihrem Kanton gültigen Richtlinien.', 6800, N'$getvalue("10.20") != 1', 1, NULL, N'015.0402', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (214, 20080714, N'15.0403', N'Grundbedarf II', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT SKOS', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''3'']', N'Grundbedarf II', N'Grundbedarf II für den Lebensunterhalt gemäss den in Ihrem Kanton gültigen Richtlinien.', 6810, N'$getvalue("10.20") != 1', 1, NULL, N'015.0403', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (215, 20080714, N'15.0404', N'Angerechnete Miet-/Wohnkosten (inkl. Nebenkosten)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''4'']', N'Angerechnete Miet-/Wohnkosten (inkl. Nebenkosten', N'Angerechnete Miet/-Wohnkosten (inkl. Nebenkosten).
Hier sind die tatsächlichen
 - im Unterstützungsbudget berücksichtigten
 - Wohnkosten anzugeben.', 6820, NULL, 1, NULL, N'015.0404', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (216, 20080714, N'15.0405', N'Medizinische Grundversorgung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''5'']', N'Medizinische Grundversorgung', N'Obligatorische Krankenkassenprämien, die ausnahmsweise noch vom Antragsteller/von der Antragstellerin (anteilsmässig) getragen werden sowie Selbstbehalte und Franchisen (inkl. Zahnarztkosten).', 6830, NULL, 1, NULL, N'015.0405', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (217, 20080714, N'15.0406', N'Allgemeine Erwerbsunkosten (% Arbeitspensum)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT SKOS', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''6'']', N'Allgemeine Erwerbsunkosten (% Arbeitspensum)', N'Pauschale für allgemeine Erwerbsunkosten.
Mit der Pauschale werden die durch eine Erwerbstätigkeit erhöhten monatlichen Haushaltskosten abgegolten. Als Erwerbstätigkeit gilt auch die Teilnahme an Beschäftigungs- und Integrationsprogrammen.', 6840, N'$getvalue("10.20") != 1', 1, NULL, N'015.0406', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (218, 20080714, N'15.0407', N'Spezielle Erwerbsunkosten', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT SKOS', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''7'']', N'Spezielle Erwerbsunkosten', N'Summe der effektiven mit der Erwerbstätigkeit zusammenhängenden zusätzlichen monatlichen Kosten.
Als Erwerbstätigkeit gilt auch die Teilnahme an Beschäftigungs- und Integrationsprogrammen.', 6850, N'$getvalue("10.20") != 1', 1, NULL, N'015.0407', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (219, 20080714, N'15.0408', N'Kosten für Kinderbetreuung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''8'']', N'Kosten für Kinderbetreuung', N'Ausbezahlte Kosten für Fremdbetreuung von Kindern pro Monat.', 6860, NULL, 1, NULL, N'015.0408', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (220, 20080714, N'15.0409', N'Schule und Erstausbildung', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''9'']', N'Schule und Erstausbildung', N'Zusätzliche, situationsbedingte Kosten für Schule und Erstausbildung pro Monat.', 6870, NULL, 1, NULL, N'015.0409', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (221, 20080714, N'15.0410', N'Therapie- oder Heimkosten', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''10'']', N'Therapie- oder Heimkosten', N'Die monatlichen Kosten für Therapien oder für den Aufenthalt in einem Heim bzw. einer Klinik sind hier zu erfassen und nicht unter "Grundbedarf I".', 6880, NULL, 1, NULL, N'015.0410', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (222, 20080714, N'15.0411', N'Pauschale für Personen in stationären Einrichtungen (Sackgeld)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''11'']', N'Pauschale für Personen in stationären', N'Hier ist der Betrag zu erfassen, welcher Personen in stationären Einrichtungen (Heimen, Kliniken, Strafanstalten etc.) für die Deckung persönlicher Ausgaben monatlich gewährt wird ("Sackgeld").
Dieser Betrag ist hier zu erfassen und nicht unter "Grundbedarf I".', 6890, NULL, 1, NULL, N'015.0411', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (223, 20080714, N'15.0412', N'weitere sonstige Leistungen', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''12'']', N'Weitere sonstige Leistungen', N'Den Gesamtbetrag aller weiteren situationsbedingten Leistungen, die gewährt wurden, hier erfassen.', 6900, NULL, 1, NULL, N'015.0412', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (224, 20080714, N'15.051', N'Berechneter Nettobedarf gemäss SKOS', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><prov>
Lohn wird berechnet aufgrund der BgKostenart.BelegArt. Die Zuordnung ist äusserst zweifelhaft.
Berechnung: Bruttoaufwand - (Gesamteinkommen - EFB)', N'SELECT @value = 
  isnull(dbo.fnBFSBetrag(''15.04'',@BFSDossierID),0) -- Bruttobedarf
- isnull(dbo.fnBFSBetrag(''10.00'',@BFSDossierID),0) -- Total Einkommen UE', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_nettobedarf_skos', NULL, N'Berechneter Nettobedarf gemäss SKOS', N'Der berechnete Nettobedarf ist der Bruttobedarf (s. 15d.) pro Monat abzüglich der aktuellen monatlichen Einnahmen der Unterstützungseinheit.', 6970, NULL, 1, NULL, N'015.0510', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (226, 20080714, N'15.06', N'Datum der ersten Auszahlung', N'1,2,3,5,6,7,8', 1, 0, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-05-18><prov>
alter Code:
SELECT @value =ErsteAuszahlung
FROM dbo.[fnBFSGetZahlungDatumZH](@FaLeistungID, @Jahr, default)

usere alter Code:
SELECT @value =
Min(ersteZahlung) from _BFS_2008_Nachmapping
where BFSD_FaLeistungId = @FaLeistungId and verknüpft in (1, 9)', N'IF @BFSLeistungsartCode = 23 BEGIN -- KKBB
  SELECT @Value = @DatumVon
END ELSE BEGIN
  -- WSH
  DECLARE @tmpBuchungen TABLE (Datum DATETIME primary KEY)

  -- alle bebuchten ProLeist-Tage der Personen dieses Dossiers ermitteln
  INSERT @tmpBuchungen
  SELECT DISTINCT MIG.Buchungsdatum
  FROM   BFSDossierPerson DOP
         INNER JOIN MigDetailBuchung MIG ON MIG.BaPersonID = DOP.BaPersonID
         INNER JOIN BgKostenart      KOA on KOA.KontoNr = MIG.KissLeistungsart and
                                            KOA.FaFachbereichCode = 2 AND   -- SH
                                            KOA.KontoNr <> 140              -- keine KVG-Prämien
  WHERE  DOP.BFSDossierID = @BFSDossierID AND
         MIG.Buchungsdatum <= @DatumVon
  ORDER BY MIG.Buchungsdatum

  -- falls keine gefunden, @DatumVon zurückgeben
  IF (SELECT COUNT(*) FROM @tmpBuchungen) = 0 BEGIN
    SET @VALUE = @DatumVon
    RETURN
  END

  INSERT @tmpBuchungen VALUES (''19000101'') -- künstliches unteres Ende
  INSERT @tmpBuchungen VALUES (@DatumVon) -- künstliches oberes Ende

  -- 6 Monate Regel
  SELECT @Value = MAX(TMP.Datum) 
  FROM   @tmpBuchungen TMP
         INNER JOIN @tmpBuchungen TMP2 ON TMP2.Datum < TMP.Datum AND
                                          TMP2.Datum = (SELECT MAX(Datum)
                                                        FROM   @tmpBuchungen
                                                        WHERE  Datum < TMP.Datum)
  WHERE DateDiff(MONTH, TMP2.Datum, TMP.Datum) > 6 OR
        (DateDiff(MONTH, TMP2.Datum, TMP.Datum) = 6 AND DAY(TMP2.Datum) <= DAY(TMP.Datum))
END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'dat_erste_auszahlung', NULL, N'Datum der ersten Auszahlung', N'Das Datum der ersten Auszahlung ist der Monat, für den der Betrag berechnet wurde. Wird z.B. zum ersten Mal Sozialhilfe Ende Februar für den Monat März ausbezahlt, ist der zu erfassende Monat der März.

Format: Monat.Jahr, z.B. 05.2000', 7020, NULL, 1, NULL, N'015.0600', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (229, 20080714, N'16.01', N'Hat die UE für den Monat Dezember eine Zahlung erhalten', N'1,2,3,5,6,7,8,4', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 8, 1, N'<4><sozgns><sozruh><ZH>
Es gibt keine FaLeistungen im Nachmapping 2008, welche das Datum der letzten Zahlung nach hinten verschieben. Aus diesem Grund kein Mapping über _BFS_2008_Nachmapping

usere alter code:
SELECT @value = AuszahlungImDezember
FROM dbo.[fnBFSGetZahlungDatumZH](@FaLeistungID, @Jahr, default)', N'SELECT @value =
CASE WHEN  
  @DatumBis BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 
  1
ELSE
  2
END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_bezug_stichtag', NULL, N'Unterstützungseinheit ist am Stichtag im laufenden Bezug', N'Erfolgten am Stichtag bzw. in diesem Monat (Dezember) Zahlungen an den Antragsteller/die Antragstellerin, so ist mit "ja" zu antworten.
Erfolgte die letzte Zahlung im November, jedoch für den laufenden Monat Dezember, so ist die Unterstützungseinheit ebenfalls noch im laufenden Bezug und die Frage ist mit "ja" zu beantworten. Dies kommt bei Vorauszahlungen über mehrere Monate vor. Wird die Frage mit "ja" beantwortet, müssen die restlichen Fragen nicht beantwortet werden.

Format: ja/nein', 7200, NULL, 1, NULL, N'016.0100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (230, 20080714, N'16.02', N'Datum der letzten Auszahlung', N'1,2,3,5,6,7,8', 1, 0, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozruh><09-05-18><prov>
alter Code
SELECT @value = LetzteAuszahlung
FROM dbo.[fnBFSGetZahlungDatumZH](@FaLeistungID, @Jahr, default)

unsere alter code:
SELECT @value =
Max (IsNull(letzteZahlung, dbo.fnDateSerial(@jahr, 12, 31)))
from _BFS_2008_Nachmapping
where BFSD_FaLeistungId = @FaLeistungId and verknüpft in (1, 9)

if @value = dbo.fnDateSerial(@jahr, 12, 31) set @value = NULL', N'SELECT @value = @DatumBis', NULL, NULL, NULL, 1, N'/dossier/z:row', N'dat_letzte_zahlung', NULL, N'Datum der letzten Auszahlung', N'Monat und Jahr der letzten Auszahlung erfassen.
Diese Frage muss nur beantwortet werden, wenn die Unterstützungseinheit am Stichtag (Dezember) nicht mehr im laufenden Bezug ist.
Gefragt ist hier - wie bei Frage 15f. "Datum der ersten Auszahlung" - für welchen Monat der ausbezahlte Betrag gilt. Wird z.B. Ende September für den Monat Oktober zum letzten Mal Sozialhilfe ausbezahlt, so ist der zu erfassende Monat der Oktober.
Wird der Betrag für zwei Monate zusammen ausbezahlt, ist ebenfalls der Monat zu erfassen, für welchen die letzte Auszahlung bestimmt ist. Erfolgt z.B. die letzte Auszahlung Ende Juli für die Monate August und September, so ist der September als letzter Auszahlungsmonat zu erfassen.

Format: Monat.Jahr, z.B. 04.2001', 7210, N'$getvalue("16.01") == 2', 1, NULL, N'016.0200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (231, 20080714, N'16.03', N'Auszahlungsbeträge als Überbrückung vorrangiger Leistungen gewährt', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 8, 1, N'<2><sozruh><prov>
Unverändert Standard', N'SELECT @value = CASE WHEN EXISTS(SELECT 1 
                                FROM dbo.BgFinanzplan LST WITH (READUNCOMMITTED)
                                WHERE LST.FaLeistungID = @FaLeistungID
                                  AND WhHilfeTypCode = 1)
                      THEN 1
                    ELSE 2
               END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_ueberbrueckung', NULL, N'Auszahlungsbeträge als Überbrückung vorrangiger Leistungen gewährt', N'Wurde Sozialhilfe nur vorübergehend zur Überbrückung bzw. als Vorschuss ausbezahlt (z.B. Arbeitslosenversicherung, IV usw.)?

Diese Frage muss nur beantwortet werden, wenn die Unterstützungseinheit am Stichtag (Dezember) nicht mehr im laufenden Bezug ist oder das Dossier geschlossen wird.', 7220, N'$getvalue("16.01") == 2', 1, NULL, N'016.0300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (232, 20080714, N'1.01', N'Anfangszust. (0)/Stichtag (1)', N'1,2,3,4,5,6,7,8', 1, 0, 7, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns>', N'SELECT @value = Stichtag
FROM dbo.BFSDossier WITH (READUNCOMMITTED)
WHERE BFSDossierId = @BFSDossierID', N'BFSDossier', N'Stichtag', NULL, 0, N'/dossier', N'b_neubezuegerrecord', NULL, N'Anfangszustand', N'Die Unterstützungsgemeinde ist in der Regel diejenige Gemeinde, in der sich der', 80, NULL, 1, NULL, N'001.0100f', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (233, 20080714, N'16.04', N'Hauptgrund für Beendigung der Unterstützungszahlung', N'1,2,3,8', 1, 0, 8, NULL, N'AbschlussHauptGrund', N'BFSAbschlussHauptGrund', 1, NULL, 8, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
WHERE Code = LST.AbschlussGrundCode AND LOVName = ''AbschlussGrund'')
FROM dbo.FaLeistung LST WITH (READUNCOMMITTED)
WHERE LST.FaLeistungID = @FaLeistungID', NULL, NULL, NULL, 1, N'/dossier/z:row', N'beendigungsgrund_id', NULL, N'Hauptgrund für Beendigung der Unterstützungszahlung', N'Lediglich den wichtigsten Grund für die Einstellung der finanziellen Leistungen angeben. Die Frage nur beantworten, wenn der Monat, für den die letzte Auszahlung bestimmt ist, länger als 6 Monate zurück liegt (Dossier abgeschlossen).', 7230, N'$getvalue("16.01") == 2 && $addmonths($getvalue("16.02"),6) < $getstichtag()', 1, NULL, N'016.0400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (234, 20080714, N'16.05', N'Dossier abgeschlossen am', N'1,2,3,4,5,6,7,8', 1, 0, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><ZH>', N'SELECT @value =
CASE WHEN year(DateAdd(m, 6, @DatumBis)) <= @Jahr 
THEN  DateAdd(m, 6, @DatumBis) END', NULL, NULL, NULL, 1, N'/dossier/z:row', N'dat_abgeschlossen', NULL, N'Dossier abgeschlossen am', N'Für die Sozialhilfestatistik ist ein Dossier abgeschlossen, wenn die letzte Auszahlung länger als 6 Monate zurück liegt. Format: Monat.Jahr, z.B. 08.1998', 7240, N'$getvalue("16.01") == 2 && $addmonths($getvalue("16.02"),6) < $getstichtag()', 1, NULL, N'016.0500', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (247, 20080714, N'12.052', N'Kinderzulage (wenn nicht im Lohn enthalten)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable
and
     BaPersonID in (select BaPersonID from BFSDossierPerson where BFSDossierID = @BFSDossierID and BFSPersonCode in (1,2) and
                                        PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/zusatz/z:row', N'betrag', N'[@sh_einkommensart_id=''2'']', N'Kinderzulage (Betrag)', N'Erhält die antragstellende Person und/oder andere Mitglieder der UE Kinderzulagen und sind diese nicht im Erwerbseinkommen (Frage 10a. und 11a.) enthalten, muss hier der monatliche Gesamtbetrag erfasst werden.', 6110, N'$getvalue("12.051") == 1', 1, NULL, N'012.0520', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (249, 20080714, N'11.5.112', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 4490, N'$getvalue("11.5.111") == 1', 1, N'10.112', N'011.5000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (250, 20080714, N'5.8.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 8, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''8''][@Indx=''4'']', N'Erwerbssituation', NULL, 1570, N'false', 1, N'7.014', N'005.8000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (252, 20080714, N'2.07', N'Zivilrechtlicher Wohnsitz:BFS-Code', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, N'Gemeinde', NULL, 1, NULL, 1, 1, N'<2><sozruh><ZH><09-05-26>

ZVR-Wohnsitz ist immer identisch mit Unterstützungswohnsitz', N'SELECT @value = 261', N'vwPerson', N'WohnsitzOrtschaftCode', NULL, 1, N'/dossier/antragsteller/z:row', N'zvr_gemeinde_id', NULL, NULL, NULL, 220, N'$getvalue("3.02") == null && $getvalue("3.04") == null', 1, NULL, N'002.0700a', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (253, 20080714, N'11.5.122', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 4510, N'$getvalue("11.5.121") == 1', 1, N'10.122', N'011.5000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (254, 20080714, N'11.5.132', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 4530, N'$getvalue("11.5.131") == 1', 1, N'10.132', N'011.5000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (255, 20080714, N'11.5.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 5, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''5'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 4380, N'$getvalue("11.5.061") == 1', 1, N'10.063', N'011.5000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (256, 20080714, N'11.5.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 5, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''5'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 4410, N'$getvalue("11.5.071") == 1', 1, N'10.073', N'011.5000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (259, 20080714, N'11.6.021', N'ALV', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4640, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.6000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (260, 20080714, N'11.6.031', N'Altersrente', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4660, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.6000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (261, 20080714, N'11.6.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4680, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.6000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (262, 20080714, N'11.8.222', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''8''][@bedarfsart_id=''22'']', NULL, NULL, 5660, N'$getvalue("11.8.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.8000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (263, 20080714, N'5.9.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 9, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''9'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 1610, NULL, 1, N'4.01', N'005.9000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (264, 20080714, N'5.b.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 2, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''2'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1780, NULL, 1, N'5.a.2', N'005.b000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (265, 20080714, N'5.e.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 5, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''5'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1900, NULL, 1, N'5.a.2', N'005.e000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (266, 20080714, N'5.9.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 9, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''9'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 1650, NULL, 1, N'4.06', N'005.9000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (267, 20080714, N'5.9.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 9, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''9'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 1630, NULL, 1, N'4.04', N'005.9000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (268, 20080714, N'5.9.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 9, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''9'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 1590, NULL, 1, N'5.1.01', N'005.9000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (269, 20080714, N'5.b.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 2, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''2'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1790, N'$getvalue("5.b.2") == 1 && $getvalue("5.b.4") == null', 1, N'1.03', N'005.b000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (270, 20080714, N'5.b.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 2, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''2'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1770, NULL, 1, N'5.1.01', N'005.b000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (271, 20080714, N'5.c.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 3, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''3'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1830, N'$getvalue("5.c.2") == 1 && $getvalue("5.c.4") == null', 1, N'1.03', N'005.c000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (272, 20080714, N'5.c.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 3, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''3'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1810, NULL, 1, N'5.1.01', N'005.c000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (273, 20080714, N'5.d.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 4, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''4'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1870, N'$getvalue("5.d.2") == 1 && $getvalue("5.d.4") == null', 1, N'1.03', N'005.d000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (274, 20080714, N'5.d.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 4, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''4'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1850, NULL, 1, N'5.1.01', N'005.d000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (275, 20080714, N'5.f.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 6, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''6'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1940, NULL, 1, N'5.a.2', N'005.f000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (276, 20080714, N'5.g.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 7, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''7'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1980, NULL, 1, N'5.a.2', N'005.g000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (277, 20080714, N'5.h.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 8, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''8'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 2020, NULL, 1, N'5.a.2', N'005.h000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (278, 20080714, N'5.e.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 5, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''5'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1910, N'$getvalue("5.e.2") == 1 && $getvalue("5.e.4") == null', 1, N'1.03', N'005.e000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (279, 20080714, N'5.e.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 5, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''5'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1890, NULL, 1, N'5.1.01', N'005.e000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (280, 20080714, N'5.f.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 6, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''6'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1950, N'$getvalue("5.f.2") == 1 && $getvalue("5.f.4") == null', 1, N'1.03', N'005.f000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (281, 20080714, N'5.f.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 6, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''6'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1930, NULL, 1, N'5.1.01', N'005.f000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (282, 20080714, N'5.g.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 7, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''7'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 1990, N'$getvalue("5.g.2") == 1 && $getvalue("5.g.4") == null', 1, N'1.03', N'005.g000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (283, 20080714, N'5.g.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 7, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''7'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 1970, NULL, 1, N'5.1.01', N'005.g000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (284, 20080714, N'5.h.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 8, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''8'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 2030, N'$getvalue("5.h.2") == 1 && $getvalue("5.h.4") == null', 1, N'1.03', N'005.h000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (285, 20080714, N'5.d.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 4, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''4'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1860, NULL, 1, N'5.a.2', N'005.d000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (286, 20080714, N'11.2.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3240, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.2000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (287, 20080714, N'11.2.051', N'BVG', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3260, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.2000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (288, 20080714, N'11.2.071', N'IV-Rente', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3310, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.2000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (289, 20080714, N'11.2.081', N'SUVA-Rente', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3340, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.2000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (290, 20080714, N'11.2.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3360, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.2000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (291, 20080714, N'11.2.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3400, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.2000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (292, 20080714, N'11.2.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3420, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.2000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (293, 20080714, N'11.2.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3440, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.2000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (294, 20080714, N'11.2.022', N'ALV', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 3210, N'$getvalue("11.2.021") == 1', 1, N'10.022', N'011.2000.0220', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (295, 20080714, N'11.2.032', N'Altersrente', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 3230, N'$getvalue("11.2.031") == 1', 1, N'10.032', N'011.2000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (296, 20080714, N'11.2.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 3250, N'$getvalue("11.2.041") == 1', 1, N'10.042', N'011.2000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (297, 20080714, N'11.2.052', N'BVG', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 3270, N'$getvalue("11.2.051") == 1', 1, N'10.052', N'011.2000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (298, 20080714, N'11.2.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 3290, N'$getvalue("11.2.061") == 1', 1, N'10.062', N'011.2000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (299, 20080714, N'11.2.072', N'IV-Rente', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 3320, N'$getvalue("11.2.071") == 1', 1, N'10.072', N'011.2000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (300, 20080714, N'11.2.082', N'SUVA-Rente', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 3350, N'$getvalue("11.2.081") == 1', 1, N'10.082', N'011.2000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (301, 20080714, N'11.2.092', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 3370, N'$getvalue("11.2.091") == 1', 1, N'10.092', N'011.2000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (302, 20080714, N'11.2.102', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 3390, N'$getvalue("11.2.101") == 1', 1, N'10.102', N'011.2000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (303, 20080714, N'11.2.112', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 3410, N'$getvalue("11.2.111") == 1', 1, N'10.112', N'011.2000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (304, 20080714, N'11.2.122', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 3430, N'$getvalue("11.2.121") == 1', 1, N'10.122', N'011.2000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (305, 20080714, N'11.2.132', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 3450, N'$getvalue("11.2.131") == 1', 1, N'10.132', N'011.2000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (306, 20080714, N'11.2.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 2, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''2'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 3300, N'$getvalue("11.2.061") == 1', 1, N'10.063', N'011.2000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (307, 20080714, N'11.2.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 2, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''2'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 3330, N'$getvalue("11.2.071") == 1', 1, N'10.073', N'011.2000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (309, 20080714, N'5.8.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 8, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''8'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 1500, N'$getvalue("5.8.05") != 131', 1, N'4.05', N'005.8000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (310, 20080714, N'5.8.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 8, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''8'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 1530, N'$getyears($getvalue("5.8.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.8000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (311, 20080714, N'5.9.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 9, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''9''][@Indx=''4'']', N'Erwerbssituation', NULL, 1710, N'false', 1, N'7.014', N'005.9000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (312, 20080714, N'5.c.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 3, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''3'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 1820, NULL, 1, N'5.a.2', N'005.c000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (313, 20080714, N'5.i.2', N'Separate Unterstützung (Dossier)', N'1,2,3,8', 3, 9, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN 1
       ELSE 2
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'b_separate_unterstuetzung', N'[@hh_person_id=''9'']', N'Separate Unterstützung (Dossier)', N'<LonErhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers?

Format: ja/nein
g Text>', 2060, NULL, 1, N'5.a.2', N'005.i000.2000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (314, 20080714, N'5.8.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 8, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.8.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''8'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1580, N'$contains($getvalue("5.8.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.8.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.8.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.8.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.8000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (315, 20080714, N'5.8.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 8, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''8'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 1470, NULL, 1, N'4.01', N'005.8000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (316, 20080714, N'5.8.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 8, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''8'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 1460, NULL, 1, N'4.02', N'005.8000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (317, 20080714, N'5.8.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 8, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''8'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 1510, NULL, 1, N'4.06', N'005.8000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (318, 20080714, N'5.8.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 8, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''8'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 1490, NULL, 1, N'4.04', N'005.8000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (319, 20080714, N'5.8.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 8, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''8'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 1450, NULL, 1, N'5.1.01', N'005.8000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (320, 20080714, N'5.8.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 8, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''8'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 1480, NULL, 1, N'4.03', N'005.8000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (321, 20080714, N'5.9.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 9, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''9''][@Indx=''2'']', N'Erwerbssituation', NULL, 1690, N'false', 1, N'7.012', N'005.9000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (322, 20080714, N'5.9.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 9, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''9''][@Indx=''3'']', N'Erwerbssituation', NULL, 1700, N'false', 1, N'7.013', N'005.9000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (323, 20080714, N'5.9.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 9, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''9'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 1640, N'$getvalue("5.9.05") != 131', 1, N'4.05', N'005.9000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (324, 20080714, N'5.9.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 9, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''9'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 1670, N'$getyears($getvalue("5.9.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.9000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (325, 20080714, N'5.9.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 9, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.9.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''9'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1720, N'$contains($getvalue("5.9.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.9.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.9.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.9.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.9000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (326, 20080714, N'11.3.051', N'BVG', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3620, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.3000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (327, 20080714, N'11.3.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3640, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.3000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (328, 20080714, N'11.3.071', N'IV-Rente', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3670, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.3000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (329, 20080714, N'11.3.081', N'SUVA-Rente', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3700, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.3000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (330, 20080714, N'11.3.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3720, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.3000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (331, 20080714, N'11.3.101', N'IV-Taggeld', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3740, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.3000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (332, 20080714, N'11.3.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3780, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.3000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (333, 20080714, N'11.3.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3800, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.3000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (335, 20080714, N'11.3.022', N'ALV', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
       BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 3570, N'$getvalue("11.3.021") == 1', 1, N'10.022', N'011.3000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (336, 20080714, N'11.3.032', N'Altersrente', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 3590, N'$getvalue("11.3.031") == 1', 1, N'10.032', N'011.3000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (337, 20080714, N'11.3.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 3610, N'$getvalue("11.3.041") == 1', 1, N'10.042', N'011.3000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (338, 20080714, N'11.7.022', N'ALV', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 5010, N'$getvalue("11.7.021") == 1', 1, N'10.022', N'011.7000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (339, 20080714, N'11.7.032', N'Altersrente', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 5030, N'$getvalue("11.7.031") == 1', 1, N'10.032', N'011.7000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (340, 20080714, N'11.7.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 5050, N'$getvalue("11.7.041") == 1', 1, N'10.042', N'011.7000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (341, 20080714, N'11.7.052', N'BVG', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 5070, N'$getvalue("11.7.051") == 1', 1, N'10.052', N'011.7000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (342, 20080714, N'11.7.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 5090, N'$getvalue("11.7.061") == 1', 1, N'10.062', N'011.7000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (343, 20080714, N'11.7.072', N'IV-Rente', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 5120, N'$getvalue("11.7.071") == 1', 1, N'10.072', N'011.7000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (344, 20080714, N'11.7.082', N'SUVA-Rente', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 5150, N'$getvalue("11.7.081") == 1', 1, N'10.082', N'011.7000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (345, 20080714, N'11.7.092', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 5170, N'$getvalue("11.7.091") == 1', 1, N'10.092', N'011.7000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (346, 20080714, N'11.7.102', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 5190, N'$getvalue("11.7.101") == 1', 1, N'10.102', N'011.7000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (347, 20080714, N'11.7.112', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 5210, N'$getvalue("11.7.111") == 1', 1, N'10.112', N'011.7000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (348, 20080714, N'11.7.122', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 5230, N'$getvalue("11.7.121") == 1', 1, N'10.122', N'011.7000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (349, 20080714, N'11.7.132', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 5250, N'$getvalue("11.7.131") == 1', 1, N'10.132', N'011.7000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (350, 20080714, N'11.7.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 7, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''7'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 5100, N'$getvalue("11.7.061") == 1', 1, N'10.063', N'011.7000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (351, 20080714, N'11.7.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 7, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 5130, N'$getvalue("11.7.071") == 1', 1, N'10.073', N'011.7000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (354, 20080714, N'11.8.021', N'ALV', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5360, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.8000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (355, 20080714, N'11.8.031', N'Altersrente', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5380, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.8000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (356, 20080714, N'11.8.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5400, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.8000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (357, 20080714, N'11.8.051', N'BVG', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5420, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.8000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (358, 20080714, N'11.8.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5440, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.8000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (359, 20080714, N'11.8.071', N'IV-Rente', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5470, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.8000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (360, 20080714, N'11.8.081', N'SUVA-Rente', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5500, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.8000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (361, 20080714, N'11.8.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5520, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.8000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (362, 20080714, N'11.8.101', N'IV-Taggeld', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5540, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.8000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (363, 20080714, N'11.8.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5580, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.8000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (364, 20080714, N'11.5.021', N'ALV', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4280, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.5000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (365, 20080714, N'11.5.031', N'Altersrente', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4300, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.5000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (366, 20080714, N'11.5.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4320, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.5000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (367, 20080714, N'11.7.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''1'']', NULL, NULL, 4980, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.7000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (368, 20080714, N'11.8.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''1'']', NULL, NULL, 5340, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.8000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (369, 20080714, N'11.9.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''1'']', NULL, NULL, 5700, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.9000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (370, 20080714, N'11.2.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''2''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 3190, N'$getvalue("11.2.011") == 1', 1, N'10.012', N'011.2000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (371, 20080714, N'11.3.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 3550, N'$getvalue("11.3.011") == 1', 1, N'10.012', N'011.3000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (372, 20080714, N'11.4.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 3910, N'$getvalue("11.4.011") == 1', 1, N'10.012', N'011.4000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (373, 20080714, N'11.5.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 4270, N'$getvalue("11.5.011") == 1', 1, N'10.012', N'011.5000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (374, 20080714, N'11.6.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 4630, N'$getvalue("11.6.011") == 1', 1, N'10.012', N'011.6000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (375, 20080714, N'11.7.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''7''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 4990, N'$getvalue("11.7.011") == 1', 1, N'10.012', N'011.7000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (376, 20080714, N'11.8.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 5350, N'$getvalue("11.8.011") == 1', 1, N'10.012', N'011.8000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (377, 20080714, N'11.9.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen
', 5710, N'$getvalue("11.9.011") == 1', 1, N'10.012', N'011.9000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (378, 20080714, N'11.4.212', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''4''][@bedarfsart_id=''21'']', NULL, NULL, 4190, N'$getvalue("11.4.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.4000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (379, 20080714, N'11.5.212', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''5''][@bedarfsart_id=''21'']', NULL, NULL, 4550, N'$getvalue("11.5.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.5000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (380, 20080714, N'11.3.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@bedarfsart_id=''21'']', NULL, NULL, 3820, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.3.03"), $getstichtag()) > 14', 1, N'10.211', N'011.3000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (381, 20080714, N'11.6.212', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''6''][@bedarfsart_id=''21'']', NULL, NULL, 4910, N'$getvalue("11.6.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.6000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (382, 20080714, N'11.7.212', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''7''][@bedarfsart_id=''21'']', NULL, NULL, 5270, N'$getvalue("11.7.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.7000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (383, 20080714, N'11.8.212', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''8''][@bedarfsart_id=''21'']', NULL, NULL, 5630, N'$getvalue("11.8.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.8000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (384, 20080714, N'11.9.212', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''9''][@bedarfsart_id=''21'']', NULL, NULL, 5990, N'$getvalue("11.9.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.9000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (385, 20080714, N'11.4.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@bedarfsart_id=''21'']', NULL, NULL, 4180, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.4.03"), $getstichtag()) > 14', 1, N'10.211', N'011.4000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (386, 20080714, N'11.5.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@bedarfsart_id=''21'']', NULL, NULL, 4540, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.5.03"), $getstichtag()) > 14', 1, N'10.211', N'011.5000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (387, 20080714, N'11.6.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@bedarfsart_id=''21'']', NULL, NULL, 4900, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.6.03"), $getstichtag()) > 14', 1, N'10.211', N'011.6000.2110', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (388, 20080714, N'11.7.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@bedarfsart_id=''21'']', NULL, NULL, 5260, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.7.03"), $getstichtag()) > 14', 1, N'10.211', N'011.7000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (389, 20080714, N'11.8.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@bedarfsart_id=''21'']', NULL, NULL, 5620, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.8.03"), $getstichtag()) > 14', 1, N'10.211', N'011.8000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (390, 20080714, N'11.9.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@bedarfsart_id=''21'']', NULL, NULL, 5980, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.9.03"), $getstichtag()) > 14', 1, N'10.211', N'011.9000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (391, 20080714, N'10.222', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'betrag', N'[@bedarfsart_id=''22'']', NULL, NULL, 2770, N'$getvalue("10.221") == 1', 1, NULL, N'010.2220', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (392, 20080714, N'11.1.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@bedarfsart_id=''22'']', NULL, NULL, 3130, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.1.03"), $getstichtag()) > 14', 1, N'10.221', N'011.1000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (393, 20080714, N'11.2.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@bedarfsart_id=''22'']', NULL, NULL, 3490, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.2.03"), $getstichtag()) > 14', 1, N'10.221', N'011.2000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (394, 20080714, N'11.3.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@bedarfsart_id=''22'']', NULL, NULL, 3850, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.3.03"), $getstichtag()) > 14', 1, N'10.221', N'011.3000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (395, 20080714, N'11.4.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@bedarfsart_id=''22'']', NULL, NULL, 4210, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.4.03"), $getstichtag()) > 14', 1, N'10.221', N'011.4000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (396, 20080714, N'11.5.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@bedarfsart_id=''22'']', NULL, NULL, 4570, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.5.03"), $getstichtag()) > 14', 1, N'10.221', N'011.5000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (397, 20080714, N'11.6.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@bedarfsart_id=''22'']', NULL, NULL, 4930, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.6.03"), $getstichtag()) > 14', 1, N'10.221', N'011.6000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (398, 20080714, N'11.7.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@bedarfsart_id=''22'']', NULL, NULL, 5290, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.7.03"), $getstichtag()) > 14', 1, N'10.221', N'011.7000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (399, 20080714, N'11.8.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@bedarfsart_id=''22'']', NULL, NULL, 5650, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.8.03"), $getstichtag()) > 14', 1, N'10.221', N'011.8000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (400, 20080714, N'5.6.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 6, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''6'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 1220, N'$getvalue("5.6.05") != 131', 1, N'4.05', N'005.6000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (401, 20080714, N'5.6.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 6, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''6'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 1250, N'$getyears($getvalue("5.6.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.6000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (402, 20080714, N'5.6.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 6, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.6.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''6'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1300, N'$contains($getvalue("5.6.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.6.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.6.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.6.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.6000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (403, 20080714, N'5.6.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 6, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''6'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 1190, NULL, 1, N'4.01', N'005.6000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (404, 20080714, N'5.6.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 6, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''6'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 1180, NULL, 1, N'4.02', N'005.6000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (405, 20080714, N'5.6.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 6, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''6'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 1230, NULL, 1, N'4.06', N'005.6000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (406, 20080714, N'5.6.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 6, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''6'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 1210, NULL, 1, N'4.04', N'005.6000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (407, 20080714, N'5.6.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 6, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''6'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 1170, NULL, 1, N'5.1.01', N'005.6000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (408, 20080714, N'5.6.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 6, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''6'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 1200, NULL, 1, N'4.03', N'005.6000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (409, 20080714, N'5.7.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 7, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.7.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''7''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 1400, N'$getyears($getvalue("5.7.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.7000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (410, 20080714, N'5.7.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 7, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''7''][@Indx=''3'']', N'Erwerbssituation', NULL, 1420, N'false', 1, N'7.013', N'005.7000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (411, 20080714, N'5.7.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 7, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''7''][@Indx=''4'']', N'Erwerbssituation', NULL, 1430, N'false', 1, N'7.014', N'005.7000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (412, 20080714, N'5.9.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 9, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.9.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''9''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 1680, N'$getyears($getvalue("5.9.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.9000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (413, 20080714, N'5.7.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 7, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''7'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 1360, N'$getvalue("5.7.05") != 131', 1, N'4.05', N'005.7000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (414, 20080714, N'5.7.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 7, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''7'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 1390, N'$getyears($getvalue("5.7.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.7000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (416, 20080714, N'11.6.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''1'']', NULL, NULL, 4620, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.6000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (417, 20080714, N'11.9.222', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''9''][@bedarfsart_id=''22'']', NULL, NULL, 6020, N'$getvalue("11.9.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.9000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (418, 20080714, N'5.9.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 9, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''9'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 1600, NULL, 1, N'4.02', N'005.9000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (419, 20080714, N'1.01', N'Gemeindecode (4)', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, N'GemeindeSozialdienst', NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH><prov>
Der Gemeindecode kann in Zürich nicht ausgewählt werden, weil er konstant ist. Sollte allenfalls aus Stammdaten gelesen werden.', N'SET @value = ''261''', N'FaLeistung', N'GemeindeCode', NULL, 0, N'/dossier/z:row', N'gemeinde_id', NULL, N'Unterstützungsgemeinde', NULL, 30, NULL, 1, NULL, N'001.0100a', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (420, 20080714, N'11.9.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@bedarfsart_id=''22'']', NULL, NULL, 6010, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.9.03"), $getstichtag()) > 14', 1, N'10.221', N'011.9000.2210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (421, 20080714, N'11.1.222', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''1''][@bedarfsart_id=''22'']', NULL, NULL, 3140, N'$getvalue("11.1.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.1000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (422, 20080714, N'11.2.222', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''2''][@bedarfsart_id=''22'']', NULL, NULL, 3500, N'$getvalue("11.2.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.2000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (423, 20080714, N'11.3.222', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''3''][@bedarfsart_id=''22'']', NULL, NULL, 3860, N'$getvalue("11.3.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.3000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (424, 20080714, N'11.4.222', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''4''][@bedarfsart_id=''22'']', NULL, NULL, 4220, N'$getvalue("11.4.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.4000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (425, 20080714, N'11.5.222', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''5''][@bedarfsart_id=''22'']', NULL, NULL, 4580, N'$getvalue("11.5.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.5000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (426, 20080714, N'11.6.222', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''6''][@bedarfsart_id=''22'']', NULL, NULL, 4940, N'$getvalue("11.6.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.6000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (427, 20080714, N'11.7.222', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''7''][@bedarfsart_id=''22'']', NULL, NULL, 5300, N'$getvalue("11.7.221") == 1 && $getvalue("10.20") == 1', 1, N'10.222', N'011.7000.2220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (428, 20080714, N'3.07', N'weniger als 2 Jahre?', N'1,2,3,8', 1, 0, 5, N'dd.mm', NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns><sozruh><ZH>
identisch 3.06, da nicht unterschieden wird zwischen Jahr und Tag/Monat', N'SELECT
   @value = CASE 
   WHEN ZuzugGdeSeitGeburt = 1 -- wenn in Gemeinde geboren
   THEN Geburtsdatum
   ELSE ZuzugGdeDatum                                    
   END 
FROM BaPerson
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'InGemeindeSeit', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_in_gemeinde_seit_tag_monat', NULL, NULL, NULL, 320, N'$getyears($getvalue("3.06"), $getstichtag()) < 2', 1, NULL, N'003.0700', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (429, 20080714, N'3.11', N'weniger als 2 Jahre?', N'1,2,3,8', 1, 0, 5, N'dd.mm', NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH>
identisch 3.10, da nicht unterschieden wird zwischen Jahr und Tag/Monat', N'SELECT
   @value = CASE 
   WHEN ZuzugKtSeitGeburt = 1 -- wenn im kanton geboren
   THEN Geburtsdatum
   ELSE ZuzugKtDatum                                    
   END 
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'ImKantonSeit', NULL, 1, N'/dossier/antragsteller/z:row', N'dat_im_kanton_seit_tag_monat', NULL, NULL, NULL, 360, N'$getyears($getvalue("3.10"), $getstichtag()) < 2', 1, NULL, N'003.1100', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (430, 20080714, N'5.2.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 2, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.2.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''2''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 700, N'$getyears($getvalue("5.2.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.2000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (431, 20080714, N'5.2.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 2, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''2''][@Indx=''2'']', N'Erwerbssituation', NULL, 710, N'false', 1, N'7.012', N'005.2000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (432, 20080714, N'5.2.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 2, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''2''][@Indx=''3'']', N'Erwerbssituation', NULL, 720, N'false', 1, N'7.013', N'005.2000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (433, 20080714, N'5.3.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 3, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''3''][@Indx=''3'']', N'Erwerbssituation', NULL, 860, N'false', 1, N'7.013', N'005.3000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (434, 20080714, N'1.01', N'Dossiernummer (8)', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<2><sozgns><sozruh><ZH><09-06-18>
BFSDossierID wird übermittelt, weil die FaLeistungID nicht mehr eindeutig ist.
!! BEACHTE: Die BFSDossierID ändert bei jedem Export, was unzulässig ist', N'SELECT @value = @BFSDossierID', N'BFSDossier', N'FaLeistungID', NULL, 0, N'/dossier/z:row', N'dossiernummer', NULL, NULL, NULL, 70, NULL, 1, NULL, N'001.0100e', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (435, 20080714, N'1.01', N'Leistungstyp (2)', N'1,2,3,4,5,6,7,8', 1, 0, 8, NULL, N'Leistungsart', N'BFSLeistungsart', 1, NULL, 1, 1, N'<4><sozgns>', N'SELECT @value = @BFSLeistungsartCode', N'BFSDossier', N'BFSLeistungsartCode', NULL, 0, N'/dossier/z:row', N'sh_leistungstyp_id', NULL, NULL, NULL, 50, NULL, 1, NULL, N'001.0100c', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (436, 20080714, N'1.00', N'Identifikation Fallführungssystem', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<2><sozgns><sozruh><ZH><09-06-18>
BFSDossierID + FaLeistung wird übermittelt, weil die FaLeistungID nicht mehr eindeutig ist.
Beachte: Bei Rückmeldungen wird das Dossier schwer zu finden sein. 
Vorschlag hr: DossierID und FaLeistungID; funktioniert vorläufig nicht, weil fremd_id nummerisch.', N'SELECT @value = @BFSDossierID', NULL, NULL, NULL, 0, N'/dossier', N'sh_fremd_id', NULL, NULL, NULL, 20, NULL, 1, NULL, N'001.0000b', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (437, 20080714, N'1.01', N'Erhebungsjahr (4)', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns>', N'SELECT @value = Jahr
FROM dbo.BFSDossier WITH (READUNCOMMITTED)
WHERE BFSDossierId = @BFSDossierID', N'BFSDossier', N'Jahr', NULL, 0, N'/dossier/z:row', N'jahr', NULL, NULL, NULL, 60, NULL, 1, NULL, N'001.0100d', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (438, 20080714, N'1.01', N'Institution (6)', N'1,2,3,4,5,6,7,8', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><ZH><prov>
prov: Allenfalls aus xconfig.valuevar, XConfigId=41, KeyPath=System\Sostat\Institution', N'SET @value = ''13084''', NULL, NULL, NULL, 0, N'/dossier/z:row', N'sozialleistungstraeger_id', NULL, NULL, NULL, 40, NULL, 1, NULL, N'001.0100b', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (440, 20080714, N'11.2.031', N'Altersrente', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3220, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.2000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (441, 20080714, N'11.2.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3280, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.2000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (442, 20080714, N'11.9.082', N'SUVA-Rente', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 5870, N'$getvalue("11.9.081") == 1', 1, N'10.082', N'011.9000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (443, 20080714, N'11.9.092', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 5890, N'$getvalue("11.9.091") == 1', 1, N'10.092', N'011.9000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (444, 20080714, N'11.9.102', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 5910, N'$getvalue("11.9.101") == 1', 1, N'10.102', N'011.9000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (445, 20080714, N'11.9.112', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 5930, N'$getvalue("11.9.111") == 1', 1, N'10.112', N'011.9000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (446, 20080714, N'11.9.122', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 5950, N'$getvalue("11.9.121") == 1', 1, N'10.122', N'011.9000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (447, 20080714, N'11.9.132', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 5970, N'$getvalue("11.9.131") == 1', 1, N'10.132', N'011.9000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (448, 20080714, N'11.9.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 9, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''9'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 5820, N'$getvalue("11.9.061") == 1', 1, N'10.063', N'011.9000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (449, 20080714, N'11.9.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 9, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''9'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 5850, N'$getvalue("11.9.071") == 1', 1, N'10.073', N'011.9000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (450, 20080714, N'5.h.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 8, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''8'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 2010, NULL, 1, N'5.1.01', N'005.h000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (451, 20080714, N'5.i.3', N'Wenn ja,  Kennummer des Antragstellers', N'1,2,3,8', 3, 9, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT AHVNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'ahv_nr', N'[@hh_person_id=''9'']', NULL, N'Erhält das nicht in der Unterstützungseinheit inbegriffene Haushaltsmitglied finanzielle Sozialhilfe im Rahmen eines anderen Dossiers, ist dessen AHV-Nummer zu erfassen.', 2070, N'$getvalue("5.i.2") == 1 && $getvalue("5.i.4") == null', 1, N'1.03', N'005.i000.3000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (452, 20080714, N'5.i.1', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,8', 3, 9, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'verwandtschaftsgrad_id', N'[@hh_person_id=''9'']', N'Beziehungstyp', N'Beziehungstyp des nicht in der Unterstützungseinheit inbegriffenen Haushaltsmitglieds zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen.', 2050, NULL, 1, N'5.1.01', N'005.i000.1000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (453, 20080714, N'11.2.021', N'ALV', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3200, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.2000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (455, 20080714, N'5.4.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 4, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''4'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 930, NULL, 1, N'4.04', N'005.4000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (456, 20080714, N'5.7.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 7, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.7.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''7'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1440, N'$contains($getvalue("5.7.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.7.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.7.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.7.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.7000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (457, 20080714, N'5.9.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 9, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''9'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 1620, NULL, 1, N'4.03', N'005.9000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (458, 20080714, N'5.2.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 2, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''2''][@Indx=''4'']', N'Erwerbssituation', NULL, 730, N'false', 1, N'7.014', N'005.2000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (459, 20080714, N'11.2.101', N'IV-Taggeld', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3380, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.2000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (460, 20080714, N'11.3.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3760, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.3000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (461, 20080714, N'11.4.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4120, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.4000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (462, 20080714, N'11.5.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4480, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.5000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (463, 20080714, N'11.6.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4840, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.6000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (464, 20080714, N'11.7.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5200, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.7000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (465, 20080714, N'11.3.052', N'BVG', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 3630, N'$getvalue("11.3.051") == 1', 1, N'10.052', N'011.3000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (466, 20080714, N'11.3.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 3650, N'$getvalue("11.3.061") == 1', 1, N'10.062', N'011.3000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (467, 20080714, N'11.3.072', N'IV-Rente', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 3680, N'$getvalue("11.3.071") == 1', 1, N'10.072', N'011.3000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (468, 20080714, N'11.3.082', N'SUVA-Rente', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 3710, N'$getvalue("11.3.081") == 1', 1, N'10.082', N'011.3000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (469, 20080714, N'11.3.092', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 3730, N'$getvalue("11.3.091") == 1', 1, N'10.092', N'011.3000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (470, 20080714, N'11.3.102', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 3750, N'$getvalue("11.3.101") == 1', 1, N'10.102', N'011.3000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (471, 20080714, N'11.3.112', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 3770, N'$getvalue("11.3.111") == 1', 1, N'10.112', N'011.3000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (472, 20080714, N'11.3.122', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 3790, N'$getvalue("11.3.121") == 1', 1, N'10.122', N'011.3000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (473, 20080714, N'11.3.132', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''3''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 3810, N'$getvalue("11.3.131") == 1', 1, N'10.132', N'011.3000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (474, 20080714, N'11.3.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 3, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''3'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 3660, N'$getvalue("11.3.061") == 1', 1, N'10.063', N'011.3000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (475, 20080714, N'11.3.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 3, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''3'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 3690, N'$getvalue("11.3.071") == 1', 1, N'10.073', N'011.3000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (478, 20080714, N'11.4.021', N'ALV', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3920, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.4000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (479, 20080714, N'11.4.031', N'Altersrente', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3940, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.4000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (480, 20080714, N'11.4.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3960, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.4000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (481, 20080714, N'11.6.051', N'BVG', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4700, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.6000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (482, 20080714, N'11.6.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4720, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.6000.0610', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (483, 20080714, N'11.6.071', N'IV-Rente', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4750, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.6000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (484, 20080714, N'11.6.081', N'SUVA-Rente', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4780, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.6000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (485, 20080714, N'11.6.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4800, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.6000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (486, 20080714, N'11.6.101', N'IV-Taggeld', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4820, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.6000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (487, 20080714, N'11.6.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4860, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.6000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (488, 20080714, N'11.6.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4880, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.6000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (490, 20080714, N'11.6.022', N'ALV', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 4650, N'$getvalue("11.6.021") == 1', 1, N'10.022', N'011.6000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (491, 20080714, N'11.8.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5600, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.8000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (493, 20080714, N'11.8.022', N'ALV', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 5370, N'$getvalue("11.8.021") == 1', 1, N'10.022', N'011.8000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (494, 20080714, N'11.8.032', N'Altersrente', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 5390, N'$getvalue("11.8.031") == 1', 1, N'10.032', N'011.8000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (495, 20080714, N'11.8.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 5410, N'$getvalue("11.8.041") == 1', 1, N'10.042', N'011.8000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (496, 20080714, N'11.8.052', N'BVG', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 5430, N'$getvalue("11.8.051") == 1', 1, N'10.052', N'011.8000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (497, 20080714, N'11.8.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 5450, N'$getvalue("11.8.061") == 1', 1, N'10.062', N'011.8000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (498, 20080714, N'11.8.072', N'IV-Rente', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 5480, N'$getvalue("11.8.071") == 1', 1, N'10.072', N'011.8000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (499, 20080714, N'11.8.082', N'SUVA-Rente', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 5510, N'$getvalue("11.8.081") == 1', 1, N'10.082', N'011.8000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (500, 20080714, N'11.8.092', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 5530, N'$getvalue("11.8.091") == 1', 1, N'10.092', N'011.8000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (501, 20080714, N'11.8.102', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 5550, N'$getvalue("11.8.101") == 1', 1, N'10.102', N'011.8000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (502, 20080714, N'11.8.112', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 5570, N'$getvalue("11.8.111") == 1', 1, N'10.112', N'011.8000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (503, 20080714, N'11.8.122', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 5590, N'$getvalue("11.8.121") == 1', 1, N'10.122', N'011.8000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (504, 20080714, N'11.8.132', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''8''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 5610, N'$getvalue("11.8.131") == 1', 1, N'10.132', N'011.8000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (505, 20080714, N'11.8.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 8, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''8'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 5460, N'$getvalue("11.8.061") == 1', 1, N'10.063', N'011.8000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (506, 20080714, N'11.8.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 8, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''8'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 5490, N'$getvalue("11.8.071") == 1', 1, N'10.073', N'011.8000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (509, 20080714, N'11.9.021', N'ALV', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5720, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.9000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (510, 20080714, N'11.9.031', N'Altersrente', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5740, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.9000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (511, 20080714, N'11.9.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5760, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.9000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (512, 20080714, N'11.9.051', N'BVG', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5780, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.9000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (513, 20080714, N'11.9.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5800, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.9000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (514, 20080714, N'11.9.071', N'IV-Rente', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5830, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.9000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (515, 20080714, N'11.9.081', N'SUVA-Rente', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5860, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.9000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (516, 20080714, N'11.9.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5880, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.9000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (518, 20080714, N'3.04', N'Aufenthaltsort: BFS-Code', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozruh><sozgns><09-05-19><ZH>
BaAdresse.AdresseCode=3 (hier verwendet für Aufenthalt) gibt es nicht in Zürich

ALT
SELECT @value = PLZ.BFSCode
FROM dbo.vwPerson  PRS
  INNER JOIN BaPLZ PLZ ON PLZ.BaPLZID = PRS.AufenthaltOrtschaftCode
WHERE BaPersonID = @BaPersonID', N'SELECT @value = (SELECT TOP 1 BFSCode FROM BaPLZ where PLZ = 
  (SELECT top 1 PLZ FROM BaAdresse WITH(READUNCOMMITTED)
  WHERE AdresseCode = 2
  AND (datumBis >= dbo.fnDateSerial(2008,12,31) OR datumBis is null)
  AND PLZ >=''1000'' AND PLZ <=''9999''
  ORDER BY datumVon DESC)
ORDER BY Name)', N'vwPerson', N'AufenthaltOrtschaftCode', NULL, 1, N'/dossier/antragsteller/z:row', N'auf_gemeinde_id', NULL, NULL, NULL, 280, N'$getvalue("2.07") == null && $getvalue("3.02") == null', 1, NULL, N'003.0400a', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (519, 20080714, N'11.3.021', N'ALV', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 3560, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.3000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (520, 20080714, N'11.3.031', N'Altersrente', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3580, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.3000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (521, 20080714, N'11.3.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3600, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.3000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (522, 20080714, N'11.4.051', N'BVG', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 3980, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.4000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (523, 20080714, N'11.4.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4000, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.4000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (524, 20080714, N'11.4.071', N'IV-Rente', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4030, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.4000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (525, 20080714, N'11.4.081', N'SUVA-Rente', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4060, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.4000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (526, 20080714, N'11.4.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4080, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.4000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (527, 20080714, N'11.4.101', N'IV-Taggeld', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4100, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.4000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (528, 20080714, N'11.4.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4140, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.4000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (529, 20080714, N'11.4.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4160, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.4000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (531, 20080714, N'11.4.022', N'ALV', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 3930, N'$getvalue("11.4.021") == 1', 1, N'10.022', N'011.4000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (532, 20080714, N'11.4.032', N'Altersrente', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 3950, N'$getvalue("11.4.031") == 1', 1, N'10.032', N'011.4000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (533, 20080714, N'11.4.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 3970, N'$getvalue("11.4.041") == 1', 1, N'10.042', N'011.4000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (534, 20080714, N'11.4.052', N'BVG', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 3990, N'$getvalue("11.4.051") == 1', 1, N'10.052', N'011.4000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (535, 20080714, N'11.4.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 4010, N'$getvalue("11.4.061") == 1', 1, N'10.062', N'011.4000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (536, 20080714, N'11.4.072', N'IV-Rente', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 4040, N'$getvalue("11.4.071") == 1', 1, N'10.072', N'011.4000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (537, 20080714, N'11.4.082', N'SUVA-Rente', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 4070, N'$getvalue("11.4.081") == 1', 1, N'10.082', N'011.4000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (538, 20080714, N'11.4.092', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 4090, N'$getvalue("11.4.091") == 1', 1, N'10.092', N'011.4000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (539, 20080714, N'11.4.102', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 4110, N'$getvalue("11.4.101") == 1', 1, N'10.102', N'011.4000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (540, 20080714, N'11.4.112', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 4130, N'$getvalue("11.4.111") == 1', 1, N'10.112', N'011.4000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (541, 20080714, N'11.4.122', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 4150, N'$getvalue("11.4.121") == 1', 1, N'10.122', N'011.4000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (542, 20080714, N'11.4.132', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''4''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 4170, N'$getvalue("11.4.131") == 1', 1, N'10.132', N'011.4000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (543, 20080714, N'11.4.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 4, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''4'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 4020, N'$getvalue("11.4.061") == 1', 1, N'10.063', N'011.4000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (544, 20080714, N'11.4.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 4, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''4'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 4050, N'$getvalue("11.4.071") == 1', 1, N'10.073', N'011.4000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (545, 20080714, N'5.2.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 2, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''2'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 660, N'$getvalue("5.2.05") != 131', 1, N'4.05', N'005.2000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (546, 20080714, N'5.2.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 2, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''2'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 690, N'$getyears($getvalue("5.2.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.2000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (547, 20080714, N'5.2.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 2, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.2.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''2'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 740, N'$contains($getvalue("5.2.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.2.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.2.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.2.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.2000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (548, 20080714, N'5.2.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 2, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''2'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 630, NULL, 1, N'4.01', N'005.2000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (549, 20080714, N'5.2.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 2, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''2'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 620, NULL, 1, N'4.02', N'005.2000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (550, 20080714, N'5.2.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 2, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''2'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 670, NULL, 1, N'4.06', N'005.2000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (551, 20080714, N'5.2.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 2, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''2'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 650, NULL, 1, N'4.04', N'005.2000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (552, 20080714, N'5.2.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 2, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''2'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 610, NULL, 1, N'5.1.01', N'005.2000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (553, 20080714, N'5.2.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 2, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''2'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 640, NULL, 1, N'4.03', N'005.2000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (554, 20080714, N'5.3.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 3, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.3.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''3''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 840, N'$getyears($getvalue("5.3.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.3000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (555, 20080714, N'5.3.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 3, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''3''][@Indx=''2'']', N'Erwerbssituation', NULL, 850, N'false', 1, N'7.012', N'005.3000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (556, 20080714, N'5.3.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 3, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''3''][@Indx=''4'']', N'Erwerbssituation', NULL, 870, N'false', 1, N'7.014', N'005.3000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (557, 20080714, N'5.3.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 3, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''3'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 800, N'$getvalue("5.3.05") != 131', 1, N'4.05', N'005.3000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (558, 20080714, N'5.3.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 3, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''3'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 830, N'$getyears($getvalue("5.3.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.3000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (559, 20080714, N'5.4.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 4, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.4.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''4''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 980, N'$getyears($getvalue("5.4.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.4000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (560, 20080714, N'5.4.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 4, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''4''][@Indx=''3'']', N'Erwerbssituation', NULL, 1000, N'false', 1, N'7.013', N'005.4000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (561, 20080714, N'5.4.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 4, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''4''][@Indx=''4'']', N'Erwerbssituation', NULL, 1010, N'false', 1, N'7.014', N'005.4000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (562, 20080714, N'5.3.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 3, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.3.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''3'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 880, N'$contains($getvalue("5.3.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.3.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.3.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.3.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.3000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (563, 20080714, N'5.3.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 3, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''3'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 770, NULL, 1, N'4.01', N'005.3000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (564, 20080714, N'5.3.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 3, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''3'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 760, NULL, 1, N'4.02', N'005.3000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (565, 20080714, N'5.3.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 3, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''3'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 810, NULL, 1, N'4.06', N'005.3000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (566, 20080714, N'5.3.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 3, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''3'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 790, NULL, 1, N'4.04', N'005.3000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (567, 20080714, N'11.9.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5940, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.9000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (568, 20080714, N'11.9.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5960, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.9000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (570, 20080714, N'11.9.022', N'ALV', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 5730, N'$getvalue("11.9.021") == 1', 1, N'10.022', N'011.9000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (571, 20080714, N'11.9.032', N'Altersrente', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 5750, N'$getvalue("11.9.031") == 1', 1, N'10.032', N'011.9000.0320', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (572, 20080714, N'11.9.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 5770, N'$getvalue("11.9.041") == 1', 1, N'10.042', N'011.9000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (573, 20080714, N'11.9.052', N'BVG', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 5790, N'$getvalue("11.9.051") == 1', 1, N'10.052', N'011.9000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (574, 20080714, N'11.9.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 5810, N'$getvalue("11.9.061") == 1', 1, N'10.062', N'011.9000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (575, 20080714, N'11.9.072', N'IV-Rente', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''9''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 5840, N'$getvalue("11.9.071") == 1', 1, N'10.072', N'011.9000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (576, 20080714, N'10.011', N'Erwerbseinkommen im Stichmonat (Erwerbseinkommen netto, d.h. nach Sozialabzügen, aber vor Steuern bzw. Abzug Freibetrag)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<4><sozruh><ZH><09-06-16>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'b_in_abklaerung', N'[@einkommensart_id=''1'']', N'TODO', N'TODO', 2420, NULL, 1, NULL, N'010.0110', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (577, 20080714, N'10.012', N'Erwerbseinkommen im Stichmonat (Erwerbseinkommen netto, d.h. nach Sozialabzügen, aber vor Steuern bzw. Abzug Freibetrag)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozruh><ZH><09-06-16>', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/einkommen/z:row', N'betrag', N'[@einkommensart_id=''1'']', N'Erwerbseinkommen (Netto)', N'Monatliches Erwerbseinkommen des Antragstellers/der Antragstellerin nach Abzug der Sozialabgaben aber vor Abzug der Steuern.

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.
Hat die antragstellende Person trotz beruflicher Aktivität (z.B. "Selbständig" ausgewählt) kein Erwerbseinkommen, dann hier den Betrag "1" eintragen!

Falls nichts erfasst, gilt: Antragsteller/in hat kein Erwerbseinkommen.', 2430, N'$getvalue("10.011") == 1', 1, NULL, N'010.0120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (578, 20080714, N'10.20', N'Anwendung SKOS-Richtlinien 2005', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 6, 1, N'<4><sozgns><09-05-18><ZH>
alter code:
SELECT TOP 1 @value = CASE WHEN BFP.WhGrundbedarfTypCode = 32015 THEN 1 ELSE 2 END
FROM dbo.BgFinanzplan         BFP WITH (READUNCOMMITTED)  
WHERE BFP.FaLeistungID = @FaLeistungID
AND YEAR(BFP.GeplantVon) = @Jahr
ORDER BY BFP.GeplantVon DESC', N'Set @value = 1', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_ber_skos_2005', NULL, NULL, NULL, 2720, NULL, 1, NULL, N'010.2000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (579, 20080714, N'10.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'b_in_abklaerung', N'[@bedarfsart_id=''21'']', NULL, NULL, 2730, N'$getyears($getvalue("4.01"), $getstichtag()) > 14', 1, NULL, N'010.2110', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (580, 20080714, N'10.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, N'2', 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'b_in_abklaerung', N'[@bedarfsart_id=''23'']', NULL, NULL, 2790, N'$getyears($getvalue("4.01"), $getstichtag()) > 14', 1, NULL, N'010.2310', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (581, 20080714, N'10.212', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'betrag', N'[@bedarfsart_id=''21'']', NULL, NULL, 2740, N'$getvalue("10.211") == 1', 1, NULL, N'010.2120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (582, 20080714, N'10.232', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<4><sozgns><ZH>', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'betrag', N'[@bedarfsart_id=''23'']', NULL, NULL, 2800, N'$getvalue("10.231") == 1', 1, NULL, N'010.2320', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (583, 20080714, N'11.1.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@bedarfsart_id=''21'']', NULL, NULL, 3100, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.1.03"), $getstichtag()) > 14', 1, N'10.211', N'011.1000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (584, 20080714, N'11.1.212', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''1''][@bedarfsart_id=''21'']', NULL, NULL, 3110, N'$getvalue("11.1.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.1000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (585, 20080714, N'11.1.232', N'Betrag', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''1''][@bedarfsart_id=''23'']', NULL, NULL, 3170, N'$getvalue("11.1.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.1000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (586, 20080714, N'11.2.232', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''2''][@bedarfsart_id=''23'']', NULL, NULL, 3530, N'$getvalue("11.2.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.2000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (587, 20080714, N'11.3.232', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''3''][@bedarfsart_id=''23'']', NULL, NULL, 3890, N'$getvalue("11.3.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.3000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (588, 20080714, N'11.4.232', N'Betrag', N'1,2,3,8', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''4''][@bedarfsart_id=''23'']', NULL, NULL, 4250, N'$getvalue("11.4.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.4000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (589, 20080714, N'11.5.232', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''5''][@bedarfsart_id=''23'']', NULL, NULL, 4610, N'$getvalue("11.5.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.5000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (590, 20080714, N'11.6.232', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''6''][@bedarfsart_id=''23'']', NULL, NULL, 4970, N'$getvalue("11.6.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.6000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (591, 20080714, N'11.7.232', N'Betrag', N'1,2,3,8', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''7''][@bedarfsart_id=''23'']', NULL, NULL, 5330, N'$getvalue("11.7.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.7000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (592, 20080714, N'11.8.232', N'Betrag', N'1,2,3,8', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''8''][@bedarfsart_id=''23'']', NULL, NULL, 5690, N'$getvalue("11.8.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.8000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (593, 20080714, N'11.9.232', N'Betrag', N'1,2,3,8', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''9''][@bedarfsart_id=''23'']', NULL, NULL, 6050, N'$getvalue("11.9.231") == 1 && $getvalue("10.20") == 1', 1, N'10.232', N'011.9000.2320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (594, 20080714, N'3.02', N'Unterstützungswohnsitz: BFS-Code', N'1,2,3,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns><sozruh><ZH><09-05-26>

Unterstützungswohnsitz ist identisch mit ZVR-Wohnsitz', N'SELECT @value = ''''', N'vwPerson', N'UntWohnsitzOrtCode', NULL, 1, N'/dossier/antragsteller/z:row', N'ust_gemeinde_id', NULL, NULL, NULL, 250, N'$getvalue("2.07") == null && $getvalue("3.04") == null', 1, NULL, N'003.0200a', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (601, 20080714, N'12.20', N'Gesamtbetrag anrechenbares Einkommen', N'4,5,6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'ue_monatseinkommen', NULL, NULL, NULL, 6320, NULL, 1, NULL, N'012.2000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (602, 20080714, N'12.21', N'Gesamtbetrag Erwerbseinkommen', N'4,5,6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'ue_monatserwerbseinkommen', NULL, NULL, N'Erwerbseinkommen im Stichmonat (Erwerbseinkommen netto, d.h. nach Sozialabzügen, aber vor Steuern bzw. Abzug Freibetrag)', 6330, NULL, 1, NULL, N'012.2100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (603, 20080714, N'12.22', N'Total Sozialversicherungsleistungen im Stichmonat', N'4,5,6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'ue_monatssozialversleistungen', NULL, NULL, N'Total Sozialversicherungsleistungen im Stichmonat', 6340, NULL, 1, NULL, N'012.2200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (604, 20080714, N'12.23', N'Total bedarfsabhängige Sozialleistungen im Stichmonat', N'4,5,6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'ue_monatsleistungen_bedarf', NULL, NULL, N'Total bedarfsabhängige Sozialleistungen im Stichmonat', 6350, NULL, 1, NULL, N'012.2300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (608, 20080714, N'11.5.051', N'BVG', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4340, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.5000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (609, 20080714, N'11.5.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4360, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.5000.0610', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (610, 20080714, N'11.5.071', N'IV-Rente', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4390, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.5000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (611, 20080714, N'11.5.081', N'SUVA-Rente', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4420, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.5000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (612, 20080714, N'11.5.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4440, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.5000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (613, 20080714, N'11.5.101', N'IV-Taggeld', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 4460, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.5000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (614, 20080714, N'11.5.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4500, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.5000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (615, 20080714, N'11.5.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 4520, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.5000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (617, 20080714, N'11.5.022', N'ALV', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV Betrag', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung), muss hier der monatliche Betrag erfasst werden.', 4290, N'$getvalue("11.5.021") == 1', 1, N'10.022', N'011.5000.0220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (618, 20080714, N'11.5.032', N'Altersrente', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 4310, N'$getvalue("11.5.031") == 1', 1, N'10.032', N'011.5000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (619, 20080714, N'11.5.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 4330, N'$getvalue("11.5.041") == 1', 1, N'10.042', N'011.5000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (620, 20080714, N'11.5.052', N'BVG', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 4350, N'$getvalue("11.5.051") == 1', 1, N'10.052', N'011.5000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (621, 20080714, N'11.5.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 4370, N'$getvalue("11.5.061") == 1', 1, N'10.062', N'011.5000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (622, 20080714, N'11.5.072', N'IV-Rente', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 4400, N'$getvalue("11.5.071") == 1', 1, N'10.072', N'011.5000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (623, 20080714, N'11.5.082', N'SUVA-Rente', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 4430, N'$getvalue("11.5.081") == 1', 1, N'10.082', N'011.5000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (624, 20080714, N'11.5.092', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 4450, N'$getvalue("11.5.091") == 1', 1, N'10.092', N'011.5000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (625, 20080714, N'11.5.102', N'Betrag', N'1,2,3,8', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''5''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 4470, N'$getvalue("11.5.101") == 1', 1, N'10.102', N'011.5000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (626, 20080714, N'11.8.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5560, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.8000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (627, 20080714, N'11.9.111', N'Unfall-Taggeld', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.112'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung oder ist ein Antrag in Bearbeitung?

Sämtliche infolge eines Unfalls ausbezahlten Taggelder erfassen, ungeachtet deren Art oder des Versicherungsunternehmens. Unfalltaggelder können von der SUVA, einer Krankenkasse oder einer privaten Versicherungsgesellschaft stammen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5920, N'$getvalue("10.30") == 1', 1, N'10.111', N'011.9000.1110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (628, 20080714, N'11.2.211', N'Minimale Integrationszulage MIZ (Stichmonat)', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.212'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@bedarfsart_id=''21'']', NULL, NULL, 3460, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.2.03"), $getstichtag()) > 14', 1, N'10.211', N'011.2000.2110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (629, 20080714, N'11.3.212', N'Betrag', N'1,2,3,8', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''3''][@bedarfsart_id=''21'']', NULL, NULL, 3830, N'$getvalue("11.3.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.3000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (630, 20080714, N'10.221', N'Integrationszulage für Nicht-Erwerbstätige IZU (Stichmonat)', N'1,2,3,8', 1, 0, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozruh><ZH><09-06-15>', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''10.222'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'b_in_abklaerung', N'[@bedarfsart_id=''22'']', NULL, NULL, 2760, N'$getyears($getvalue("4.01"), $getstichtag()) > 14', 1, NULL, N'010.2210', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (631, 20080714, N'15.0413', N'Grundbedarf', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''13'']', NULL, NULL, 6910, N'$getvalue("10.20") == 1', 1, NULL, N'015.0413', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (632, 20080714, N'15.0414', N'minus: Sanktion', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH>
NICHT verwendet in ZH', N'SELECT @value = 0', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''14'']', NULL, NULL, 6920, N'$getvalue("10.20") == 1', 1, NULL, N'015.0414', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (633, 20080714, N'15.0415', N'Total der Minimalen Integrationszulagen MIZ', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = ISNULL(dbo.fnBFSBetrag(''10.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.1.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.2.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.3.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.4.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.5.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.6.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.7.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.8.212'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.9.212'',@BFSDossierID), 0)', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''15'']', NULL, NULL, 6930, N'$getvalue("10.20") == 1', 1, NULL, N'015.0415', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (634, 20080714, N'15.0416', N'Total der Integrationszulagen für Nichterwerbstätige IZU', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = ISNULL(dbo.fnBFSBetrag(''10.222'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''11.1.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.2.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.3.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.4.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.5.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.6.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.7.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.8.222'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.9.222'',@BFSDossierID), 0)', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''16'']', NULL, NULL, 6940, N'$getvalue("10.20") == 1', 1, NULL, N'015.0416', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (635, 20080714, N'15.0417', N'Total der Einkommensfreibeträge EFB', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = ISNULL(dbo.fnBFSBetrag(''10.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.1.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.2.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.3.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.4.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.5.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.6.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.7.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.8.232'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''11.9.232'',@BFSDossierID), 0)', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''17'']', NULL, NULL, 6950, N'$getvalue("10.20") == 1', 1, NULL, N'015.0417', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (636, 20080714, N'11.2.212', N'Betrag', N'1,2,3,8', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = -SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'betrag', N'[@ue_person_id=''2''][@bedarfsart_id=''21'']', NULL, NULL, 3470, N'$getvalue("11.2.211") == 1 && $getvalue("10.20") == 1', 1, N'10.212', N'011.2000.2120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (637, 20080714, N'15.0418', N'Effektive Erwerbsunkosten', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><ZH><09-06-17>', N'SELECT @value = -SUM(Betrag)
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE BFSVariable = @Variable', NULL, NULL, NULL, 1, N'/dossier/bedarf/z:row', N'betrag', N'[@bedarfsart_id=''18'']', NULL, NULL, 6960, N'$getvalue("10.20") == 1', 1, NULL, N'015.0418', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (639, 20080714, N'11.1.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@einkommensart_id=''1'']', NULL, NULL, 2820, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.1000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (640, 20080714, N'11.1.012', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''1''][@einkommensart_id=''1'']', N'Erwerbseinkommen', N'Monatliches Erwerbseinkommen des Mitglieds der Unterstützungseinheit nach Abzug der Sozialabgaben aber vor Abzug der Steuern (für jedes Mitglied der UE separat erfassen).

Normalerweise sind die Familien- oder Kinderzulagen im Nettoerwerbseinkommen enthalten. Sie sind somit in dieser Rubrik zu erfassen.

Falls nichts erfasst, gilt: Mitglied der UE hat kein Erwerbseinkommen', 2830, N'$getvalue("11.1.011") == 1', 1, N'10.012', N'011.1000.0120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (641, 20080714, N'11.2.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@einkommensart_id=''1'']', NULL, NULL, 3180, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.2000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (642, 20080714, N'11.3.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@einkommensart_id=''1'']', NULL, NULL, 3540, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.3000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (643, 20080714, N'11.4.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@einkommensart_id=''1'']', NULL, NULL, 3900, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.4000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (644, 20080714, N'11.5.011', N'Erwerbseinkommen (netto) vgl. 5.x.10', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.012'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@einkommensart_id=''1'']', NULL, NULL, 4260, N'$getvalue("10.30") == 1', 1, N'10.011', N'011.5000.0110', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (645, 20080714, N'11.1.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 1, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.1.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''1''][@bedarfsart_id=''23'']', NULL, NULL, 3160, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.1.03"), $getstichtag()) > 14', 1, N'10.231', N'011.1000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (646, 20080714, N'11.2.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 2, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.2.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''2''][@bedarfsart_id=''23'']', NULL, NULL, 3520, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.2.03"), $getstichtag()) > 14', 1, N'10.231', N'011.2000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (647, 20080714, N'11.3.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 3, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.3.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''3''][@bedarfsart_id=''23'']', NULL, NULL, 3880, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.3.03"), $getstichtag()) > 14', 1, N'10.231', N'011.3000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (648, 20080714, N'11.4.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 4, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.4.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''4''][@bedarfsart_id=''23'']', NULL, NULL, 4240, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.4.03"), $getstichtag()) > 14', 1, N'10.231', N'011.4000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (649, 20080714, N'11.5.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 5, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.5.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''5''][@bedarfsart_id=''23'']', NULL, NULL, 4600, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.5.03"), $getstichtag()) > 14', 1, N'10.231', N'011.5000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (650, 20080714, N'11.6.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 6, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.6.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''6''][@bedarfsart_id=''23'']', NULL, NULL, 4960, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.6.03"), $getstichtag()) > 14', 1, N'10.231', N'011.6000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (651, 20080714, N'11.7.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@bedarfsart_id=''23'']', NULL, NULL, 5320, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.7.03"), $getstichtag()) > 14', 1, N'10.231', N'011.7000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (652, 20080714, N'11.8.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 8, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.8.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''8''][@bedarfsart_id=''23'']', NULL, NULL, 5680, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.8.03"), $getstichtag()) > 14', 1, N'10.231', N'011.8000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (653, 20080714, N'11.9.231', N'Einkommensfreibetrag für Erwerbstätige EFB (Stichmonat)', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSJaNein', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.232'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@bedarfsart_id=''23'']', NULL, NULL, 6040, N'$getvalue("10.20") == 1 && $getyears($getvalue("5.9.03"), $getstichtag()) > 14', 1, N'10.231', N'011.9000.2310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (654, 20080714, N'5.7.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 7, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''7'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 1330, NULL, 1, N'4.01', N'005.7000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (655, 20080714, N'5.7.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 7, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''7'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 1320, NULL, 1, N'4.02', N'005.7000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (656, 20080714, N'5.7.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 7, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''7'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 1370, NULL, 1, N'4.06', N'005.7000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (657, 20080714, N'5.7.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 7, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''7'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 1350, NULL, 1, N'4.04', N'005.7000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (658, 20080714, N'5.7.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 7, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''7'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 1310, NULL, 1, N'5.1.01', N'005.7000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (659, 20080714, N'5.7.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 7, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''7'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 1340, NULL, 1, N'4.03', N'005.7000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (660, 20080714, N'5.8.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 8, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.8.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''8''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 1540, N'$getyears($getvalue("5.8.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.8000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (661, 20080714, N'5.8.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 8, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''8''][@Indx=''2'']', N'Erwerbssituation', NULL, 1550, N'false', 1, N'7.012', N'005.8000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (662, 20080714, N'11.6.032', N'Altersrente', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente Betrag', N'Erhält das Mitglied der Unterstützungseinheit Altersrente, muss hier der monatliche Betrag erfasst werden.

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.', 4670, N'$getvalue("11.6.031") == 1', 1, N'10.032', N'011.6000.0320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (663, 20080714, N'11.6.042', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Witwen- oder eine Waisenrente, muss hier der monatliche Betrag erfasst werden.

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.', 4690, N'$getvalue("11.6.041") == 1', 1, N'10.042', N'011.6000.0420', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (664, 20080714, N'11.6.052', N'BVG', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG Betrag', N'Erhält das Mitglied der Unterstützungseinheit Zahlungen aus einer beruflichen Vorsorge (BVG), muss hier der monatliche Betrag erfasst werden.', 4710, N'$getvalue("11.6.051") == 1', 1, N'10.052', N'011.6000.0520', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (665, 20080714, N'11.6.062', N'Hilflosenentschädigung', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Betrag', N'Erhält das Mitglied der Unterstützungseinheit Hilflosenentschädigung, muss hier der monatliche Betrag erfasst werden.

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.', 4730, N'$getvalue("11.6.061") == 1', 1, N'10.062', N'011.6000.0620', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (666, 20080714, N'11.6.072', N'IV-Rente', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine IV-Rente, muss hier der monatliche Betrag erfasst werden.

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.', 4760, N'$getvalue("11.6.071") == 1', 1, N'10.072', N'011.6000.0720', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (667, 20080714, N'11.6.082', N'SUVA-Rente', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente Betrag', N'Erhält das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente), muss hier der monatliche Betrag erfasst werden.

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.', 4790, N'$getvalue("11.6.081") == 1', 1, N'10.082', N'011.6000.0820', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (668, 20080714, N'11.6.092', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung, muss hier der monatliche Betrag erfasst werden.

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).
', 4810, N'$getvalue("11.6.091") == 1', 1, N'10.092', N'011.6000.0920', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (669, 20080714, N'11.6.102', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung, muss hier der monatliche Betrag erfasst werden (auch wenn es sich um eine Haushaltungsentschädigung oder eine Kinder-, Unterstützungs- oder Betriebszulage handelt).

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.', 4830, N'$getvalue("11.6.101") == 1', 1, N'10.102', N'011.6000.1020', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (670, 20080714, N'11.6.112', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''11'']', N'Taggelder / Unfallversicherung Taggeld Betrag', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Unfallversicherung, muss hier der monatliche Betrag erfasst werden und zwar ungeachtet der Versicherungsart (kollektiv oder privat) und der Versicherungsgesellschaft (SUVA, Krankenkasse, andere Gesellschaft).', 4850, N'$getvalue("11.6.111") == 1', 1, N'10.112', N'011.6000.1120', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (671, 20080714, N'11.6.122', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder) Betrag', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder), muss hier der monatliche Gesamtbetrag dieser Leistungen erfasst werden.', 4870, N'$getvalue("11.6.121") == 1', 1, N'10.122', N'011.6000.1220', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (672, 20080714, N'11.6.132', N'Betrag', N'1,2,3,8', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = SUM(Betrag)
FROM   dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))
WHERE  BaPersonID = @BaPersonID AND
      BFSVariable = @VariableAntragsteller', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'betrag', N'[@ue_person_id=''6''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge / Betrag', N'Stehen dem Mitglied der Unterstützungseinheit gemäss einem Trennungs- oder Scheidungsurteil Unterhaltsbeiträge zu, ist der Gesamtbetrag pro Monat zu erfassen. Es ist der tatsächlich ausbezahlte Betrag und nicht der offiziell zugesprochene Betrag zu erfassen.

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
', 4890, N'$getvalue("11.6.131") == 1', 1, N'10.132', N'011.6000.1320', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (673, 20080714, N'11.6.063', N'Grad Hilflosigkeit', N'1,2,3,8', 2, 6, 8, NULL, N'Grad', N'BFSGrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'hilflosigkeitsgrad_id', N'[@ue_person_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung Grad', N'Grad der Hilflosigkeit des Mitgliedes der Unterstützungseinheit angeben.
Das Gesetz hält drei Hilflosigkeitsstufen fest: leicht, mittel und schwer.

Format: leicht/mittel/schwer', 4740, N'$getvalue("11.6.061") == 1', 1, N'10.063', N'011.6000.0630', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (674, 20080714, N'11.6.073', N'Invaliditätsgrad', N'1,2,3,8', 2, 6, 8, NULL, N'Invaliditaetsgrad', N'BFSInvaliditaetsgrad', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'invaliditaetsgrad_id', N'[@ue_person_id=''6'']', N'Sozialversicherungsleistungen /  IV-Rente Invaliditätsgrad', N'Die Invaliditätsgrade richten sich nach dem Gesetz:

<50 Prozent: Anrecht auf Viertelsrente bei Invaliditätsgrad von mindestens 40 Prozent.

50 - 66 1/3 Prozent: Anrecht auf eine halbe Rente.

Ab 66 2/3 Prozent: Anrecht auf eine ganze Rente.

Anmerkung:
Jede versicherte Person, die sich in einer schwierigen finanziellen Lage befindet, hat Anrecht auf eine halbe Invalidenrente, falls sie zu mindestens 40 Prozent invalid ist.

Format: < 50 Prozent/50-66 1/3 Prozent/>=66 1/3 Prozent', 4770, N'$getvalue("11.6.071") == 1', 1, N'10.073', N'011.6000.0730', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (677, 20080714, N'11.7.021', N'ALV', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.022'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''2'']', N'Sozialversicherungsleistungen / AHV', N'Erhält das Mitglied der Unterstützungseinheit Arbeitslosengelder (Sozialversicherungsleistung) oder ist ein Antrag in Bearbeitung?

Wurden Leistungen beantragt und abgelehnt, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5000, N'$getvalue("10.30") == 1', 1, N'10.021', N'011.7000.0210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (678, 20080714, N'11.7.031', N'Altersrente', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.032'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''3'']', N'Sozialversicherungsleistungen / AltersRente', N'Erhält das Mitglied der Unterstützungseinheit eine Altersrente oder ist ein Antrag in Bearbeitung?

Bei Ehepaaren wird die Rente getrennt ausbezahlt und ist somit für die betreffenden Personen getrennt zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5020, N'$getvalue("10.30") == 1', 1, N'10.031', N'011.7000.0310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (679, 20080714, N'11.7.041', N'Witwen-/Waisenrente', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.042'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''4'']', N'Sozialversicherungsleistungen / Witwen-Waisenrente', N'Bezieht das Mitglied der Unterstützungseinheit eine Witwen- oder Waisenrente oder ist ein Antrag in Bearbeitung?

Die Witwen-/Waisenrenten können von der AHV oder auch der Unfall- bzw. der Militärversicherung stammen.
Waisenrente nur dann für das entsprechende Mitglied der UE erfassen, falls es der direkte Empfänger ist. Bezieht jedoch ein Kind des Mitglieds der UE die Leistung, die Rente unter dessen Namen erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5040, N'$getvalue("10.30") == 1', 1, N'10.041', N'011.7000.0410', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (680, 20080714, N'11.7.051', N'BVG', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.052'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''5'']', N'Sozialversicherungsleistungen / BVG', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente aus der beruflichen Vorsorge (BVG) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5060, N'$getvalue("10.30") == 1', 1, N'10.051', N'011.7000.0510', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (681, 20080714, N'11.7.061', N'Hilflosenentschädigung', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.062'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''6'']', N'Sozialversicherungsleistungen /  Hilflosenent-schädigung', N'Bezieht das Mitglied der Unterstützungseinheit eine Hilflosenentschädigung oder ist ein Antrag in Bearbeitung?

Die Hilflosenentschädigung kann von der AHV oder auch der obligatorischen Unfallversicherung stammen.
Minderjährige zwischen 2 und 18 Jahren haben ebenfalls Anrecht auf eine Hilflosenentschädigung.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5080, N'$getvalue("10.30") == 1', 1, N'10.061', N'011.7000.0610', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (682, 20080714, N'11.7.071', N'IV-Rente', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.072'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''7'']', N'Sozialversicherungsleistungen /  IV-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine IV-Rente oder ist ein Antrag in Bearbeitung?

Die IV-Rente kann von der AHV oder auch der obligatorischen Unfallversicherung stammen. Hier nur die von der IV entrichteten IV-Renten erfassen.

IV-Rente durch die Unfallversicherung unter "SUVA-Rente" erfassen.

IV-Zusatzrenten oder Renten für Kinder sind unter dem Namen der invaliden Person zu erfassen.

Ohne Taggelder oder Eingliederungsmassnahmen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5110, N'$getvalue("10.30") == 1', 1, N'10.071', N'011.7000.0710', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (683, 20080714, N'11.7.081', N'SUVA-Rente', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.082'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''8'']', N'Sozialversicherungsleistungen /  SUVA-Rente', N'Bezieht das Mitglied der Unterstützungseinheit eine Rente einer Unfallversicherung (SUVA-Rente) oder ist ein Antrag in Bearbeitung?

Eine SUVA-Rente kann ergänzend zu einer IV- oder AHV-Rente ausbezahlt werden.

Taggelder der Unfallversicherung hier nicht berücksichtigen, sondern unter "11c. Unfallversicherung Taggeld" erfassen.

Hilflosenentschädigungen der Unfallversicherung hier nicht berücksichtigen, sondern unter "Hilflosenentschädigung" erfassen.

Hinterlassenenrenten der Unfallversicherung hier nicht berücksichtigen, sondern unter "Witwen-/Waisenrente" erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5140, N'$getvalue("10.30") == 1', 1, N'10.081', N'011.7000.0810', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (684, 20080714, N'11.7.091', N'Taggeld Krankenversicherung', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.092'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''9'']', N'Taggelder / Krankenversiche-rung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Krankenversicherung oder ist ein Antrag in Bearbeitung?

Eine erwerbstätige Person kann eine zusätzliche Krankentaggeldversicherung abschliessen, insbesondere, falls die im Arbeitsvertrag vorgesehene Deckung nicht ausreicht. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt. Diese zusätzlichen Taggelder aus Privatverträgen müssen zusätzlich zum Lohn und somit unter dieser Rubrik erfasst werden.
Selbstständigerwerbende oder Nichterwerbspersonen können für sich alleine eine Krankentaggeldversicherung abschliessen. In diesem Fall bezieht der Versicherungsnehmer die Krankentaggelder direkt, d.h. die entrichteten Beträge müssen in dieser Rubrik erfasst werden.

Infolge eines Unfalls durch eine Krankenversicherung entrichtete Taggelder nicht hier, sondern in der Rubrik "Unfallversicherung Taggeld" erfassen (Nichterwerbspersonen oder Selbstständigerwerbende, die bei ihrer Krankenkasse eine Unfalltaggeldversicherung abgeschlossen haben).

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5160, N'$getvalue("10.30") == 1', 1, N'10.091', N'011.7000.0910', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (685, 20080714, N'11.7.101', N'IV-Taggeld', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5180, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.7000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (686, 20080714, N'11.7.121', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.122'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''12'']', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'Bezieht das Mitglied der Unterstützungseinheit andere Sozialversicherungsleistungen (Rente oder Taggelder) oder ist ein Antrag in Bearbeitung?

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5220, N'$getvalue("10.30") == 1', 1, N'10.121', N'011.7000.1210', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (687, 20080714, N'11.7.131', N'Unterhaltsbeiträge', N'1,2,3,8', 2, 7, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.7.132'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''7''][@einkommensart_id=''13'']', N'Unterhaltsbeiträge', N'Erhält das Mitglied der Unterstützungseinheit Unterhaltsbeiträge?

Nur Unterhaltsbeiträge erfassen, die das Mitglied der UE direkt betreffen (also nicht jene für seine Kinder oder seine/n Partner/in).
Treffen die Unterhaltsbeiträge trotz Bestehen eines Anspruchs nicht ein, "ja" ohne Angabe des Betrags notieren.

Wurden Unterhaltsbeiträge beantragt und verweigert, "nein" angeben.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein
', 5240, N'$getvalue("10.30") == 1', 1, N'10.131', N'011.7000.1310', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (688, 20080714, N'11.9.101', N'IV-Taggeld', N'1,2,3,8', 2, 9, 8, NULL, N'InAbklaerung', N'BFSInAbklaerung', 1, N'2', 6, 1, N'<5><sozgns><sozruh><ZH><09-06-17> Daten auf Antragsteller', N'SELECT @value = CONVERT(bit, dbo.fnBFSBetrag(''11.9.102'',@BFSDossierID))', NULL, NULL, NULL, 1, N'/dossier/ue/einkommen/z:row', N'b_in_abklaerung', N'[@ue_person_id=''9''][@einkommensart_id=''10'']', N'Taggelder / Invalidenversicherung Taggeld', N'Erhält das Mitglied der Unterstützungseinheit Taggelder von einer Invalidenversicherung oder ist ein Antrag in Bearbeitung?

Die Taggelder der IV werden während der IV-Eingliederungsmassnahmen in folgender Form entrichtet:
- Haushaltungsentschädigung
- Entschädigung für Alleinstehende
- Kinderzulage
- Unterstützungszulage
- Betriebszulage.
In allen Fällen ist das Taggeld unter dem Namen der invaliden Person zu erfassen.

Format: ja/nein/in Abklärung

Falls nichts erfasst, gilt: nein', 5900, N'$getvalue("10.30") == 1', 1, N'10.101', N'011.9000.1010', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (689, 20080714, N'5.3.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 3, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''3'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 750, NULL, 1, N'5.1.01', N'005.3000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (690, 20080714, N'5.3.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 3, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''3'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 780, NULL, 1, N'4.03', N'005.3000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (691, 20080714, N'5.4.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 4, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''4''][@Indx=''2'']', N'Erwerbssituation', NULL, 990, N'false', 1, N'7.012', N'005.4000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (692, 20080714, N'5.4.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 4, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''4'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 940, N'$getvalue("5.4.05") != 131', 1, N'4.05', N'005.4000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (693, 20080714, N'5.4.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 4, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''4'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 970, N'$getyears($getvalue("5.4.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.4000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (694, 20080714, N'5.4.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 4, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.4.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''4'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1020, N'$contains($getvalue("5.4.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.4.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.4.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.4.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.4000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (695, 20080714, N'5.4.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 4, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''4'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 910, NULL, 1, N'4.01', N'005.4000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (696, 20080714, N'5.4.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 4, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''4'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 900, NULL, 1, N'4.02', N'005.4000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (697, 20080714, N'5.4.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 4, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''4'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 950, NULL, 1, N'4.06', N'005.4000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (698, 20080714, N'5.5.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 5, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.5.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''5''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 1120, N'$getyears($getvalue("5.5.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.5000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (699, 20080714, N'5.5.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 5, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''5''][@Indx=''2'']', N'Erwerbssituation', NULL, 1130, N'false', 1, N'7.012', N'005.5000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (700, 20080714, N'5.5.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 5, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''5''][@Indx=''3'']', N'Erwerbssituation', NULL, 1140, N'false', 1, N'7.013', N'005.5000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (701, 20080714, N'5.4.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 4, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''4'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 890, NULL, 1, N'5.1.01', N'005.4000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (702, 20080714, N'5.4.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 4, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''4'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 920, NULL, 1, N'4.03', N'005.4000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (703, 20080714, N'5.5.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 5, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''5''][@Indx=''4'']', N'Erwerbssituation', NULL, 1150, N'false', 1, N'7.014', N'005.5000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (704, 20080714, N'5.5.06', N'Aufenthaltsstatus', N'1,2,3,8', 2, 5, 8, NULL, N'BaAufenthaltsstatus', N'BFSAufenthaltsstatus', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = AuslaenderStatusCode AND LOVName = ''BaAufenthaltsstatus'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'AuslaenderStatusCode', NULL, 1, N'/dossier/ue/person/z:row', N'aufenthaltsstatus_id', N'[@ue_person_id=''5'']', N'Aufenthaltsstatus', N'Bei Ausländerinnen und Ausländern den Aufenthaltsstatus erfassen.
1. Jahresaufenthalt (B)
 - B EG/EFTA Aufenthaltsbew.
 - B Aufenthaltsbewilligung
 - B Schutzbedürftige mit Aufenthaltsbewilligung B
2. Niederlassung (C)
 - C EG/EFTA Niederlassungsbew.
 - C Niederlassungsbew.
 - C1 EG/EFTA Aufenthaltsbew für Angehörige von Beamten und Diplomaten
4. Vorl. Aufgenommen (F)
5. Anerk. Flüchting
 - B anerkannter Flüchtling
6. Keine Bewilligung
7. Anderes
 - G EG/EFTA Grenzgängerbewilligung (anderes)
 - L EG/EFTA Kurzaufenthaltsbew.
 - L Kurzaufenthaltsbew
 - N Asylsuchende
 - S Schutzbedürftige ohne Aufenthaltsbewilligung
 - Saisonbewilligung (A)', 1080, N'$getvalue("5.5.05") != 131', 1, N'4.05', N'005.5000.0600', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (705, 20080714, N'5.5.09', N'Höchste abgeschlossene Ausbildung', N'1,2,3,8', 2, 5, 8, NULL, N'BaAusbildungstyp', N'BFSAusbildungstyp', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED)
inner join dbo.vwPerson WITH (READUNCOMMITTED)
on Code = HoechsteAusbildungCode
WHERE LOVName = ''BaAusbildungstyp''
AND BaPersonID = @BaPersonID)', N'BaArbeitAusbildung', N'HoechsteAusbildungCode', NULL, 1, N'/dossier/ue/person/z:row', N'ausbildung_id', N'[@ue_person_id=''5'']', N'Höchste abgeschlossene Ausbildung', N'Es ist die höchste abgeschlossene Ausbildung des Mitglieds der Unterstützungseinheit zu erfassen. Die höchste abgeschlossene Ausbildung entspricht dabei nicht zwingend der letzten beendeten Ausbildung.
Diese Frage muss nur für Mitglieder der Unterstützungseinheit beantwortet werden, welche älter als 14 Jahre sind.


Präzisierungen

03: Anlehre
Diplommittelschule (bis 2 Jahre), Verkehrsschule, Sozialjahr, Vorkurs für Pflegeberufe (1 oder 2 Jahre), berufsvorbereitende Schule und eigentliche Anlehre (mit Ausbildungsvertrag).

04: Berufslehre oder Vollzeitberufsschule
Eidgenössisches Fähigkeitszeugnis oder gleichwertiger Ausbildungsgang, Berufsfachschule (z.B. Gewerbeschule, Handelsschule, Lehrwerkstätte).

05: Gymnasiale oder beruflich orientierte Maturitätsschule oder Diplommittelschule (3 Jahre)
Gymnasium, Handelsmittelschule (4 Jahre), Lehrerseminar (z.B. für Kindergärtner/innen, Primarlehrer/innen, Musik- und Sportlehrkräfte).

06: Höhere Fach- und Berufsausbildung
Eidgenössischer Fachauswei', 1110, N'$getyears($getvalue("5.5.03"), $getstichtag()) >= 14', 1, N'7.13', N'005.5000.0900', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (706, 20080714, N'5.5.11', N'Beschäftigungsgrad', N'1,2,3,8', 2, 5, 8, NULL, N'BaBeschaeftigungsgrad', N'BFSBeschaeftigungsgrad', 1, NULL, 2, 1, N'<5><sozgns>', N'declare @pensum int
declare @count  int
declare @stichtag datetime

set @stichtag = dbo.fnDateSerial(@jahr,12,31)

select @pensum = max(pensum), @count = count(*)
from   dbo.BaArbeit 
where  BaPersonID = @BaPersonID and
       @stichtag between isnull(DatumBis,@Stichtag) and isnull(DatumBis,@Stichtag) and
       isnull(pensum,0) > 0

select @value =
  case when @count > 1 
  then 4
  else case 
       when @pensum <= 49 then 2
       when @pensum between 50 and 89 then 3
       when @pensum >= 90  then 1
       end
  end

-- WH: wenn kein Einkommen vorhanden, dann soll auch Beschäftigungsgrund leer bleiben
if @BFSLeistungsartCode in (1,2) and 
    ISNULL(dbo.fnBFSBetrag(''11.5.012'',@BFSDossierID),0) = 0
  select @value = null', N'BaArbeitAusbildung', N'BeschaeftigungsGradCode', NULL, 1, N'/dossier/ue/person/z:row', N'beschaeftigungsgrad_id', N'[@ue_person_id=''5'']', N'Beschäftigungsgrad', N'Ist das Mitglied der Unterstützungseinheit erwerbstätig, den Beschäftigungsgrad erfassen.


Präzisierungen:

04: Bei mehreren Teilzeitstellen muss nicht in Prozente umgerechnet werden, sondern "mehrere Teilzeitstellen" selektiert werden.', 1160, N'$contains($getvalue("5.5.101"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.5.102"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.5.103"), "1,2,3,4,5,6,7,8,9,10,20,23") || $contains($getvalue("5.5.104"), "1,2,3,4,5,6,7,8,9,10,20,23")', 1, N'7.03', N'005.5000.1100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (707, 20080714, N'5.5.03', N'Geburtsjahr', N'1,2,3,4,5,6,7,8', 2, 5, 5, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Geburtsdatum
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'Geburtsdatum', NULL, 1, N'/dossier/ue/person/z:row', N'geburtsjahr', N'[@ue_person_id=''5'']', N'Geburtsjahr', N'Geburtsjahr des Mitglieds der Unterstützungseinheit erfassen.

Format: Jahr, z.B. 1952.', 1050, NULL, 1, N'4.01', N'005.5000.0300', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (708, 20080714, N'5.5.02', N'Geschlecht', N'1,2,3,4,5,6,7,8', 2, 5, 8, NULL, N'BaGeschlecht', N'BFSGeschlecht', 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = GeschlechtCode AND LOVName = ''BaGeschlecht'')
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'GeschlechtCode', NULL, 1, N'/dossier/ue/person/z:row', N'geschlecht_id', N'[@ue_person_id=''5'']', N'Geschlecht', N'Geschlecht des Mitglieds der Unterstützungseinheit erfassen.', 1040, NULL, 1, N'4.02', N'005.5000.0200', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (709, 20080714, N'5.5.07', N'In der Schweiz seit wann', N'1,2,3,8', 2, 5, 4, N'yyyy', NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns><sozruh><09-06-22><ZH>', N'SELECT @value = CASE WHEN InCHSeitGeburt = 1 THEN ''1''
                    ELSE  year(inCHSeit) 
               END
FROM dbo.BaPerson
WHERE BaPersonID =  @BaPersonID', N'vwPerson', N'AuslaenderStatusDatum', NULL, 1, N'/dossier/ue/person/z:row', N'in_ch_seit_jahr', N'[@ue_person_id=''5'']', N'In der Schweiz seit / In der Schweiz seit Geburt', N'Zuzugsjahr in die Schweiz eintragen.

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, das entsprechende Feld "in der Schweiz seit Geburt" ankreuzen.
Bei Saisonniers, die jährlich wieder in die Schweiz einreisen, ist das Datum der erstmaligen Einreise in die Schweiz zu erfassen.
Die Frage muss auch für Schweizerinnen und Schweizer beantwortet werden, die nach einem Auslandaufenthalt in die Schweiz zurückkehren oder überhaupt im Ausland geboren wurden.

Format: Jahr, z.B. 1978

Lebt das Mitglied der Unterstützungseinheit seit Geburt in der Schweiz, dieses Feld ("in der Schweiz seit Geburt") ankreuzen.', 1090, NULL, 1, N'4.06', N'005.5000.0700', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (710, 20080714, N'5.5.05', N'Nationalität', N'1,2,3,4,5,6,7,8', 2, 5, 2, NULL, N'BaLand', NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = Iso3Code
FROM   dbo.vwPerson PRS
       INNER JOIN BaLand LND ON LND.BaLandID = PRS.NationalitaetCode
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'NationalitaetCode', NULL, 1, N'/dossier/ue/person/z:row', N'nationalitaet_land_id', N'[@ue_person_id=''5'']', N'Nationalität', N'Bei Schweizer Doppelbürgern/Doppelbürgerinnen Nationalität "Schweiz" erfassen.', 1070, NULL, 1, N'4.04', N'005.5000.0500', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (711, 20080714, N'5.5.01', N'Beziehungstyp zur Antrag stellenden Person', N'1,2,3,4,5,6,7,8', 2, 5, 8, NULL, N'Beziehungstyp', N'BFSBeziehungstyp', 1, NULL, 2, 1, N'<2><2.2><sozgns><sozruh><prov>
Nicht gemappt, V.Schorn klärt das weitere Vorgehen ab.', N'SELECT TOP 1 @VALUE = CASE WHEN DPR.BaPersonID_1 = @BaPersonID THEN DRL.BfsCode12 ELSE DRL.BfsCode21 END
FROM   dbo.BaPerson_Relation DPR
	   LEFT JOIN dbo.BaRelation DRL ON DRL.BaRelationID = DPR.BaRelationID
WHERE  (DPR.BaPersonID_1 = @BaPersonID AND DPR.BaPersonID_2 = @AntragstellerID) OR
	   (DPR.BaPersonID_2 = @BaPersonID AND DPR.BaPersonID_1 = @AntragstellerID)
ORDER BY DatumVon DESC', NULL, NULL, NULL, 1, N'/dossier/ue/person/z:row', N'verwandtschaftsgrad_id', N'[@ue_person_id=''5'']', N'Beziehungstyp bei Antragstellung', N'Beziehungstyp des Mitglieds der Unterstützungseinheit zum Antragsteller/zur Antragstellerin zum gegenwärtigen Zeitpunkt.
Bei Fremdplatzierung die entsprechende Kategorie im Auswahlmenü auswählen', 1030, NULL, 1, N'5.1.01', N'005.5000.0100', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (712, 20080714, N'5.6.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 6, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''6''][@Indx=''3'']', N'Erwerbssituation', NULL, 1280, N'false', 1, N'7.013', N'005.6000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (713, 20080714, N'5.7.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 7, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''7''][@Indx=''2'']', N'Erwerbssituation', NULL, 1410, N'false', 1, N'7.012', N'005.7000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (714, 20080714, N'5.8.103', N'3. Erwerbssituation', N'1,2,3,8', 2, 8, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus3Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''8''][@Indx=''3'']', N'Erwerbssituation', NULL, 1560, N'false', 1, N'7.013', N'005.8000.1030', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (715, 20080714, N'5.5.04', N'Zivilstand', N'1,2,3,4,5,6,7,8', 2, 5, 8, NULL, N'BaZivilstand', N'BFSZivilstand', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = (SELECT BFSCode FROM dbo.XLOVCode WITH (READUNCOMMITTED) WHERE Code = ZivilstandCode AND LOVName = ''BaZivilstand'') 
FROM dbo.BaPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'BaPerson', N'ZivilstandCode', NULL, 1, N'/dossier/ue/person/z:row', N'zivilstand_id', N'[@ue_person_id=''5'']', N'Zivilstand', N'Zivilstand des Mitglieds der Unterstützungseinheit erfassen.', 1060, NULL, 1, N'4.03', N'005.5000.0400', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (716, 20080714, N'5.6.101', N'1. Erwerbssituation', N'1,2,3,8', 2, 6, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<4><sozgns><ZH>', N'SELECT @value = 
  CASE WHEN @BFSLeistungsartCode in (23,25)
  THEN
    (SELECT ERW.BFSCode 
     FROM   dbo.BaPerson PRS 
            INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                           ERW.Code = PRS.ErwerbssituationCode
     WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
  ELSE
    CASE WHEN ISNULL(dbo.fnBFSBetrag(''11.6.012'',@BFSDossierID),0) > 0
    THEN CASE WHEN (SELECT ErwerbssituationCode FROM BaPerson WHERE BaPersonID = @BaPersonID) NOT IN (4,5,6,7,8,9,10) 
         THEN 20 -- nicht erwerbstätig (ohne weitere Detaillierung)
         ELSE (SELECT ERW.BFSCode 
               FROM   dbo.BaPerson PRS 
                      INNER JOIN dbo.XLOVCode ERW ON ERW.LOVName = ''BaErwerbssituation'' AND
                                                     ERW.Code = PRS.ErwerbssituationCode
               WHERE  PRS.BaPersonID = @BaPersonID) -- erfasste Erwerbssituation aus den Stammdaten
         END
    ELSE
      22 -- nicht erwerbstätig (ohne weitere Detaillierung)
    END
  END', N'BaArbeitAusbildung', N'ErwerbssituationStatus1Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''6''][@Indx=''1'']', N'Erwerbssituation', N'Erwerbssituation des Mitglieds der Unterstützungseinheit (falls älter als 14 Jahre).
Einzutragen ist die gegenwärtige Situation.
Temporärjobs haben keine eigene Kategorie. Sie können "regelmässig angestellt"; "zeitlich befristeter Vertrag" oder "Arbeit auf Abruf" sein.

Pro Person sind bis zu 4 Antworten möglich.

Beispiele:
1) Für einen Landwirt, der durch einen Arbeitsunfall eine Zeit lang arbeitsunfähig ist, "01: selbständig" und "16: vorübergehend arbeitsunfähig" auswählen.
2) Für einen auf Abruf arbeitenden, alleinerziehenden Vater zweier Kinder, der eine 60-Prozent-Stelle sucht und beim Arbeitsamt gemeldet ist, "05: Arbeit auf Abruf", "11: auf Stellensuche beim Arbeitsamt gemeldet" und "14: familiäre Gründe" auswählen.


Präzisierungen:

02: Angestellt in eigener Firma
Kann nur selektiert werden, wenn es sich bei der Firma um eine AG oder GmbH handelt.

03: Regelmässig angestellt
Arbeitsvertrag, nicht befristet oder länger als ein Jahr.

04: Zeitlich befristeter Vertrag
Vertrag für weniger als ein Jahr.

05: Arbeit auf Abruf
Jeweils gleicher Arbeitgeber, jedoch schwankender Beschäftigungsgrad je nach Arbeitsanfall (z.B. Aushilfsverkäufer/Aushilfsverkäuferin im Stundenlohn, der/die je nach Bedarf im Laden arbeitet).

06: Gelegenheitsarbeit
Serie von unregelmässigen Arbeiten mit oder ohne Vertrag, von begrenzter Dauer (einige Monate), verbunden mit häufigem Wechsel des Arbeitgebers. War das Mitglied der Unterstützungseinheit in den letzten 4 Wochen unregelmässig beschäftigt, "Gelegenheitsarbeit" auch dann eintragen, wenn er/sie zum Gesprächszeitpunkt vorübergehend keiner beruflichen Tätigkeit nachgeht.

09: Arbeitsintegrationsprogramm (AIP):
Beim Arbeitsamt gemeldete Person, die an einem im Rahmen des Arbeitslosenversicherungsgesetzes organisierten Beschäftigungsprogramm teilnimmt (arbeitsmarktbezogene Massnahmen gemäss AVIG).

10: Beschäftigungsprogramm für Ausgesteuerte:
Person, die kein Recht (mehr) auf Arbeitslosenentschädigung hat (Ende Rahmenfrist) und an einem temporären Beschäftigungsprogramm des Kantons teilnimmt.

14: Haushalt / familiäre Gründe
Für den Arbeitsmarkt nicht oder nur teilweise verfügbare Person, die Hausarbeiten erledigt oder Kinder erzieht. Diese Option ist auch zu wählen, falls eine Person teilzeit arbeitet oder eine Teilzeitbeschäftigung sucht, weil sie sich daneben noch Hausarbeiten oder der Kindererziehung widmen muss.

15: Rentner/Rentnerin
Neben Altersrenten diese Kategorie auch für IV- und SUVA-Renten sowie Witwen- und Waisenrenten auswählen.

18: Keine Chance auf dem Arbeitsmarkt
Person, die keine Arbeit mehr sucht, da sie sich entmutigt fühlt und glaubt, auf dem Arbeitsmarkt nicht mehr gebraucht zu werden (Beurteilung der antragstellenden Person und nicht des Sozialarbeiters/der Sozialarbeiterin).', 1260, N'$getyears($getvalue("5.6.03"), $getstichtag()) >= 14', 1, N'7.011', N'005.6000.1010', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (717, 20080714, N'5.6.102', N'2. Erwerbssituation', N'1,2,3,8', 2, 6, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -9', N'BaArbeitAusbildung', N'ErwerbssituationStatus2Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''6''][@Indx=''2'']', N'Erwerbssituation', NULL, 1270, N'false', 1, N'7.012', N'005.6000.1020', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (718, 20080714, N'5.6.104', N'4. Erwerbssituation', N'1,2,3,8', 2, 6, 8, NULL, N'BaErwerbssituation', N'BFSErwerbssituation', 1, NULL, 2, 1, N'<5><sozgns>', N'set @Value = -6', N'BaArbeitAusbildung', N'ErwerbssituationStatus4Code', NULL, 1, N'/dossier/ue/erwerbsit/z:row', N'erwerbsituation_id', N'[@ue_person_id=''6''][@Indx=''4'']', N'Erwerbssituation', NULL, 1290, N'false', 1, N'7.014', N'005.6000.1040', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (719, 20080714, N'1.04', N'Datum des Beginns der Anspruchsberechtigung', N'6,7', 1, 0, 5, N'dd.mm.yyyy', NULL, NULL, 1, NULL, 1, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'dat_beginn_anspruch', NULL, N'Anspruchsberechtigung', N'Datum der Anspruchsberechtigung', 110, NULL, 1, NULL, N'001.0400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (720, 20080714, N'1.05', N'Versichertennummer (neue AHV-Nummer)', N'1,2,3,4,5,6,7,8', 1, 0, 2, NULL, NULL, NULL, 1, NULL, 1, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson 
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/antragsteller/z:row', N'versichertennummer', NULL, N'Sozialversicherungsnummer', N'Sozialversicherungsnummer (neue AHV-Nummer)', 120, NULL, 1, NULL, N'001.0500', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (721, 20080714, N'1.12', N'Ergänzungsleistung nach Bundesrecht', N'7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 1, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_ergaenzung_bund', NULL, NULL, NULL, 130, NULL, 1, NULL, N'001.1200', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (722, 20080714, N'1.13', N'kantonale Beihilfe AHV/IV', N'7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 1, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_beihilfe_kanton', NULL, NULL, NULL, 140, NULL, 1, NULL, N'001.1300', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (723, 20080714, N'1.14', N'Gemeindezuschuss', N'7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 1, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'b_zuschuss_gemeinde', NULL, NULL, NULL, 150, NULL, 1, NULL, N'001.1400', 2, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (724, 20080714, N'10.213', N'Massnahme zu MIZ', N'1,2,3,8', 1, 0, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'massnahme_grund_id', N'[@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 2750, N'$getvalue("10.211") == 1', 1, NULL, N'010.2130', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (725, 20080714, N'10.223', N'Massnahme zu IZU', N'1,2,3,8', 1, 0, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/antragsteller/skos/z:row', N'massnahme_grund_id', N'[@bedarfsart_id=''22'']', NULL, NULL, 2780, N'$getvalue("10.221") == 1', 1, NULL, N'010.2230', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (726, 20080714, N'35.019', N'direkte Individuelle Prämienverbilligung (IPV)', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''19'']', NULL, N'Format: ja/nein', 7360, NULL, 1, NULL, N'035.0190', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (727, 20080714, N'35.020', N'übriges Einkommen (z.B. Vermögensverzehr) im Stichmonat:', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''20'']', NULL, N'Format: ja/nein', 7370, NULL, 1, NULL, N'035.0200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (728, 20080714, N'12.24', N'Total der Zusatzeinkommen im Stichmonat', N'4,5,6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 6, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'ue_monats_zusatzeinkommen', NULL, NULL, NULL, 6360, NULL, 1, NULL, N'012.2400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (729, 20080714, N'15.0521', N'EL: Zugesprochene Leistung im Stichmonat', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_zugesprochen_el_bund', NULL, NULL, NULL, 6990, NULL, 1, NULL, N'015.0521', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (730, 20080714, N'15.0522', N'kantonale Beihilfe: zugesprochene Leistung im Stichmonat', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_zugesprochen_beihilfe_kanton', NULL, NULL, NULL, 7000, NULL, 1, NULL, N'015.0522', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (731, 20080714, N'15.0523', N'GZ: zugesprochene Leistung im Stichmonat', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_zugesprochen_zuschuss_gemeinde', NULL, NULL, NULL, 7010, NULL, 1, NULL, N'015.0523', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (732, 20080714, N'15.081', N'Gesamter Auszahlungsbetrag seit Jahresbeginn EL', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_ausbezahlt_el_bund', NULL, NULL, NULL, 7040, NULL, 1, NULL, N'015.0810', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (733, 20080714, N'15.082', N'Gesamter Auszahlungsbetrag seit Jahresbeginn kant. Beihilfe', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_ausbezahlt_beihilfe_kanton', NULL, NULL, NULL, 7050, NULL, 1, NULL, N'015.0820', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (734, 20080714, N'15.083', N'Gesamter Auszahlungsbetrag seit Jahresbeginn Gemeindezuschuss', N'7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_ausbezahlt_zuschuss_gemeinde', NULL, NULL, NULL, 7060, NULL, 1, NULL, N'015.0830', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (735, 20080714, N'15.09', N'Gesamter Auszahlungsbetrag seit Jahresbeginn Krankheitskosten', N'6,7', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_tot_ausz_krankheit', NULL, NULL, NULL, 7070, NULL, 1, NULL, N'015.0900', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (736, 20080714, N'35.005', N'Kinderzulage (wenn nicht im Lohn enthalten)', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''2'']', NULL, N'Format: ja/nein', 7260, NULL, 1, NULL, N'035.0050', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (737, 20080714, N'35.006', N'Arbeitslosenhilfe', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''3'']', NULL, N'Format: ja/nein', 7270, NULL, 1, NULL, N'035.0060', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (738, 20080714, N'35.007', N'EL (ordentliche)', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''4'']', NULL, N'Format: ja/nein', 7280, NULL, 1, NULL, N'035.0070', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (739, 20080714, N'35.008', N'Individ. Wohnkostenzuschuss', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''5'']', NULL, N'Format: ja/nein', 7290, NULL, 1, NULL, N'035.0080', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (740, 20080714, N'35.009', N'Eltern-/ Mutterschaftsbeiträge', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''6'']', NULL, N'Format: ja/nein', 7300, NULL, 1, NULL, N'035.0090', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (741, 20080714, N'35.010', N'Erziehungsgeld/Familienzuschuss', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''7'']', NULL, N'Format: ja/nein', 7310, NULL, 1, NULL, N'035.0100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (742, 20080714, N'35.012', N'Stipendien', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''9'']', NULL, N'Format: ja/nein', 7320, NULL, 1, NULL, N'035.0120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (743, 20080714, N'35.014', N'andere', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''11'']', NULL, N'Format: ja/nein', 7330, NULL, 1, NULL, N'035.0140', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (744, 20080714, N'35.017', N'wirtschaftliche Sozialhilfe', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''14'']', NULL, N'Format: ja/nein', 7340, NULL, 1, NULL, N'035.0170', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (745, 20080714, N'35.018', N'kantonale Beihilfe', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''15'']', NULL, N'Format: ja/nein', 7350, NULL, 1, NULL, N'035.0180', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (746, 20080714, N'35.002', N'Einkommen aus Vermögen', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''1'']', NULL, N'Format: ja/nein', 7250, NULL, 1, NULL, N'035.0020', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (747, 20080714, N'35.114', N'Alimentenbevorschussung', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''114'']', NULL, N'Format: ja/nein', 7480, NULL, 1, NULL, N'035.1140', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (748, 20080714, N'35.113', N'Unterhaltsbeiträge', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''113'']', NULL, N'Format: ja/nein', 7470, NULL, 1, NULL, N'035.1130', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (750, 20080714, N'35.112', N'Andere Sozialversicherungsleistungen (Rente / Taggelder)', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''112'']', NULL, N'Format: ja/nein', 7460, NULL, 1, NULL, N'035.1120', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (751, 20080714, N'35.108', N'SUVA-Rente', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''108'']', NULL, N'Format: ja/nein', 7450, NULL, 1, NULL, N'035.1080', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (752, 20080714, N'35.107', N'IV-Rente', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''107'']', NULL, N'Format: ja/nein', 7440, NULL, 1, NULL, N'035.1070', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (753, 20080714, N'35.106', N'Hilflosenentschädigung', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''106'']', NULL, N'Format: ja/nein', 7430, NULL, 1, NULL, N'035.1060', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (754, 20080714, N'35.105', N'BVG', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''105'']', NULL, N'Format: ja/nein', 7420, NULL, 1, NULL, N'035.1050', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (755, 20080714, N'35.104', N'Witwen-/Waisenrente', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''104'']', NULL, N'Format: ja/nein', 7410, NULL, 1, NULL, N'035.1040', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (756, 20080714, N'35.103', N'Altersrente', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''103'']', NULL, N'Format: ja/nein', 7400, NULL, 1, NULL, N'035.1030', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (757, 20080714, N'35.102', N'ALV', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''102'']', NULL, N'Format: ja/nein', 7390, NULL, 1, NULL, N'035.1020', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (758, 20080714, N'35.115', N'Taggelder KK, SUVA, IV', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''115'']', NULL, N'Format: ja/nein', 7490, NULL, 1, NULL, N'035.1150', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (759, 20080714, N'40.0.11', N'Zugesprochener Betrag im Stichmonat an Antragsteller', N'4', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'betrag_zugesprochen', NULL, NULL, NULL, 7510, NULL, 1, NULL, N'040.0000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (760, 20080714, N'40.1.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''1'']', NULL, NULL, 7570, NULL, 1, N'40.0.11', N'040.1000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (761, 20080714, N'40.2.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''2'']', NULL, NULL, 7630, NULL, 1, N'40.0.11', N'040.2000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (762, 20080714, N'40.3.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''3'']', NULL, NULL, 7690, NULL, 1, N'40.0.11', N'040.3000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (763, 20080714, N'40.4.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''4'']', NULL, NULL, 7750, NULL, 1, N'40.0.11', N'040.4000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (764, 20080714, N'40.5.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''5'']', NULL, NULL, 7810, NULL, 1, N'40.0.11', N'040.5000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (765, 20080714, N'40.6.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''6'']', NULL, NULL, 7870, NULL, 1, N'40.0.11', N'040.6000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (766, 20080714, N'40.7.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''7'']', NULL, NULL, 7930, NULL, 1, N'40.0.11', N'040.7000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (767, 20080714, N'40.8.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''8'']', NULL, NULL, 7990, NULL, 1, N'40.0.11', N'040.8000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (768, 20080714, N'40.9.11', N'Zugesprochener Betrag im Stichmonat an p Kind', N'4', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, 
dbo.fnFirstDayOf(@DatumBis), dbo.fnLastDayOf(@DatumBis))
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_zugesprochen', N'[@ue_person_id=''9'']', NULL, NULL, 8050, NULL, 1, N'40.0.11', N'040.9000.1100', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (769, 20080714, N'40.0.12', N'Datum der ersten Auszahlung', N'4', 1, 0, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>
ancien
SELECT @value = ErsteAuszahlung
FROM dbo.fnBFSGetZahlungDatumZH(@FaLeistungID, @Jahr, @BaPersonID)', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'dat_erste_auszahlung', NULL, NULL, NULL, 7520, NULL, 1, NULL, N'040.0000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (770, 20080714, N'40.1.12', N'Datum der ersten Auszahlung', N'4', 2, 1, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''1'']', NULL, NULL, 7580, NULL, 1, N'40.0.12', N'040.1000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (771, 20080714, N'40.2.12', N'Datum der ersten Auszahlung', N'4', 2, 2, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''2'']', NULL, NULL, 7640, NULL, 1, N'40.0.12', N'040.2000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (772, 20080714, N'40.3.12', N'Datum der ersten Auszahlung', N'4', 2, 3, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''3'']', NULL, NULL, 7700, NULL, 1, N'40.0.12', N'040.3000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (773, 20080714, N'40.4.12', N'Datum der ersten Auszahlung', N'4', 2, 4, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''4'']', NULL, NULL, 7760, NULL, 1, N'40.0.12', N'040.4000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (774, 20080714, N'40.5.12', N'Datum der ersten Auszahlung', N'4', 2, 5, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''5'']', NULL, NULL, 7820, NULL, 1, N'40.0.12', N'040.5000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (775, 20080714, N'40.6.12', N'Datum der ersten Auszahlung', N'4', 2, 6, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''6'']', NULL, NULL, 7880, NULL, 1, N'40.0.12', N'040.6000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (776, 20080714, N'40.7.12', N'Datum der ersten Auszahlung', N'4', 2, 7, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''7'']', NULL, NULL, 7940, NULL, 1, N'40.0.12', N'040.7000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (777, 20080714, N'40.8.12', N'Datum der ersten Auszahlung', N'4', 2, 8, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''8'']', NULL, NULL, 8000, NULL, 1, N'40.0.12', N'040.8000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (778, 20080714, N'40.9.12', N'Datum der ersten Auszahlung', N'4', 2, 9, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>', N'SELECT @value = min(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_erste_auszahlung', N'[@ue_person_id=''9'']', NULL, NULL, 8060, NULL, 1, N'40.0.12', N'040.9000.1200', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (779, 20080714, N'40.0.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'betrag_tot_auszahlungen', NULL, NULL, NULL, 7530, NULL, 1, NULL, N'040.0000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (780, 20080714, N'40.1.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 1, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''1'']', NULL, NULL, 7590, NULL, 1, N'40.0.13', N'040.1000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (781, 20080714, N'40.2.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 2, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''2'']', NULL, NULL, 7650, NULL, 1, N'40.0.13', N'040.2000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (782, 20080714, N'40.3.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 3, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''3'']', NULL, NULL, 7710, NULL, 1, N'40.0.13', N'040.3000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (783, 20080714, N'40.4.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 4, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''4'']', NULL, NULL, 7770, NULL, 1, N'40.0.13', N'040.4000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (784, 20080714, N'40.5.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 5, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''5'']', NULL, NULL, 7830, NULL, 1, N'40.0.13', N'040.5000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (785, 20080714, N'40.6.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 6, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''6'']', NULL, NULL, 7890, NULL, 1, N'40.0.13', N'040.6000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (786, 20080714, N'40.7.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 7, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''7'']', NULL, NULL, 7950, NULL, 1, N'40.0.13', N'040.7000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (787, 20080714, N'40.8.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 8, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''8'']', NULL, NULL, 8010, NULL, 1, N'40.0.13', N'040.8000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (788, 20080714, N'40.9.13', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'4', 2, 9, 4, N'F2', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns>', N'SELECT @value = sum(Betrag) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID, dbo.fnDateSerial(@Jahr,1,1),@DatumBis)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'betrag_tot_auszahlungen', N'[@ue_person_id=''9'']', NULL, NULL, 8070, NULL, 1, N'40.0.13', N'040.9000.1300', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (789, 20080714, N'40.0.14', N'Hat der Antragsteller (1. Mitglied UE) für den Monat Dezember eine Zahlung erhalten', N'4', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'b_bezug_stichtag', NULL, NULL, NULL, 7540, NULL, 1, NULL, N'040.0000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (790, 20080714, N'40.1.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 1, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''1'']', NULL, NULL, 7600, NULL, 1, N'40.0.14', N'040.1000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (791, 20080714, N'40.2.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 2, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''2'']', NULL, NULL, 7660, NULL, 1, N'40.0.14', N'040.2000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (792, 20080714, N'40.3.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 3, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''3'']', NULL, NULL, 7720, NULL, 1, N'40.0.14', N'040.3000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (793, 20080714, N'40.4.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 4, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''4'']', NULL, NULL, 7780, NULL, 1, N'40.0.14', N'040.4000.1400', 3, 5)
GO
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (794, 20080714, N'40.5.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 5, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''5'']', NULL, NULL, 7840, NULL, 1, N'40.0.14', N'040.5000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (795, 20080714, N'40.6.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 6, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''6'']', NULL, NULL, 7900, NULL, 1, N'40.0.14', N'040.6000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (796, 20080714, N'40.7.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 7, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''7'']', NULL, NULL, 7960, NULL, 1, N'40.0.14', N'040.7000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (797, 20080714, N'40.8.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 8, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''8'']', NULL, NULL, 8020, NULL, 1, N'40.0.14', N'040.8000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (798, 20080714, N'40.9.14', N'Hat das p-Kind für den Monat Dezember eine Zahlung erhalten', N'4', 2, 9, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, NULL, 40, 1, N'<1><sozgns>', N'DECLARE @LetzteAuszahlung datetime
SELECT @LetzteAuszahlung = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID

SELECT @value = CASE WHEN  
  @LetzteAuszahlung BETWEEN dbo.fnDateSerial(@jahr,12,01)  AND dbo.fnDateSerial(@jahr, 12,31) 
THEN 1 ELSE 2 END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'b_bezug_stichtag', N'[@ue_person_id=''9'']', NULL, NULL, 8080, NULL, 1, N'40.0.14', N'040.9000.1400', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (799, 20080714, N'40.0.15', N'Datum der letzten Auszahlung', N'4', 1, 0, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>

ALT rajouté ZH à la fonction:
SELECT @value = LetzteAuszahlung
FROM dbo.fnBFSGetZahlungDatumZH(@FaLeistungID, @Jahr, @BaPersonID)', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'dat_letzte_zahlung', NULL, NULL, NULL, 7550, N'$getvalue("40.0.14") == 2', 1, NULL, N'040.0000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (800, 20080714, N'40.1.15', N'Datum der letzten Auszahlung', N'4', 2, 1, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''1'']', NULL, NULL, 7610, N'$getvalue("40.1.14") == 2', 1, N'40.0.15', N'040.1000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (801, 20080714, N'40.2.15', N'Datum der letzten Auszahlung', N'4', 2, 2, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''2'']', NULL, NULL, 7670, N'$getvalue("40.2.14") == 2', 1, N'40.0.15', N'040.2000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (802, 20080714, N'40.3.15', N'Datum der letzten Auszahlung', N'4', 2, 3, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<1><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''3'']', NULL, NULL, 7730, N'$getvalue("40.3.14") == 2', 1, N'40.0.15', N'040.3000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (803, 20080714, N'40.4.15', N'Datum der letzten Auszahlung', N'4', 2, 4, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''4'']', NULL, NULL, 7790, N'$getvalue("40.4.14") == 2', 1, N'40.0.15', N'040.4000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (804, 20080714, N'40.5.15', N'Datum der letzten Auszahlung', N'4', 2, 5, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''5'']', NULL, NULL, 7850, N'$getvalue("40.5.14") == 2', 1, N'40.0.15', N'040.5000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (805, 20080714, N'40.6.15', N'Datum der letzten Auszahlung', N'4', 2, 6, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''6'']', NULL, NULL, 7910, N'$getvalue("40.6.14") == 2', 1, N'40.0.15', N'040.6000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (806, 20080714, N'40.7.15', N'Datum der letzten Auszahlung', N'4', 2, 7, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''7'']', NULL, NULL, 7970, N'$getvalue("40.7.14") == 2', 1, N'40.0.15', N'040.7000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (807, 20080714, N'40.8.15', N'Datum der letzten Auszahlung', N'4', 2, 8, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''8'']', NULL, NULL, 8030, N'$getvalue("40.8.14") == 2', 1, N'40.0.15', N'040.8000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (808, 20080714, N'40.9.15', N'Datum der letzten Auszahlung', N'4', 2, 9, 5, N'mm.yyyy', NULL, NULL, 1, NULL, 40, 1, N'<3><sozgns><sozruh><ZH><09-05-26>
rajouté ZH à la fonction', N'SELECT @value = max(Datum) 
FROM dbo.fnBFSALBVZahlungen(@BFSDossierID,null,null)
WHERE BaPersonID = @BaPersonID', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'dat_letzte_zahlung', N'[@ue_person_id=''9'']', NULL, NULL, 8090, N'$getvalue("40.9.14") == 2', 1, N'40.0.15', N'040.9000.1500', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (809, 20080714, N'40.0.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 1, 0, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>
Repris de wsh (v15.02) a tester', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/antragsteller/albv_leistung/z:row', N'antragsart_id', NULL, NULL, NULL, 7500, NULL, 1, NULL, N'040.0000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (810, 20080714, N'40.1.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 1, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''1'']', NULL, NULL, 7560, NULL, 1, N'40.0.1', N'040.1000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (811, 20080714, N'40.2.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 2, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''2'']', NULL, NULL, 7620, NULL, 1, N'40.0.1', N'040.2000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (812, 20080714, N'40.3.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 3, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''3'']', NULL, NULL, 7680, NULL, 1, N'40.0.1', N'040.3000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (813, 20080714, N'40.4.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 4, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''4'']', NULL, NULL, 7740, NULL, 1, N'40.0.1', N'040.4000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (814, 20080714, N'40.5.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 5, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''5'']', NULL, NULL, 7800, NULL, 1, N'40.0.1', N'040.5000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (815, 20080714, N'40.6.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 6, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''6'']', NULL, NULL, 7860, NULL, 1, N'40.0.1', N'040.6000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (816, 20080714, N'40.7.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 7, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''7'']', NULL, NULL, 7920, NULL, 1, N'40.0.1', N'040.7000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (817, 20080714, N'40.8.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 8, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''8'']', NULL, NULL, 7980, NULL, 1, N'40.0.1', N'040.8000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (818, 20080714, N'40.9.1', N'Wiederaufnahme nach Unterbrechung (6 Mte. o.Bezug)', N'4', 2, 9, 8, NULL, N'FaJaNein', N'BFSAntrag', 1, NULL, 40, 1, N'<1><sozgns><ZH>', N'IF EXISTS (
  SELECT 1 
  FROM   BFSDossier DOS
         INNER JOIN BFSDossierPerson DOP ON DOP.BFSDossierID = DOS.BFSDossierID AND
                                            DOP.BFSPersonCode = 1 
  WHERE DOP.BaPersonID = @AntragstellerID  AND
        DOS.BFSLeistungsartCode = @BFSLeistungsartCode AND
        DOS.Jahr = @Jahr AND
        DOS.DatumVon < @DatumVon) 
BEGIN
  SET @value = 2  -- Wiederaufnahme
END ELSE BEGIN
  SET @value = 1 -- neuer Fall
END', NULL, NULL, NULL, 1, N'/dossier/ue/albv_leistung/z:row', N'antragsart_id', N'[@ue_person_id=''9'']', NULL, NULL, 8040, NULL, 1, N'40.0.1', N'040.9000.1000', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (819, 20080714, N'11.1.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 1, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''1''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 3120, N'$getvalue("11.1.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.1000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (820, 20080714, N'11.2.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 2, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''2''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 3480, N'$getvalue("11.2.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.2000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (821, 20080714, N'11.3.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 3, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''3''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 3840, N'$getvalue("11.3.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.3000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (822, 20080714, N'11.4.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 4, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''4''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 4200, N'$getvalue("11.4.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.4000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (823, 20080714, N'11.5.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 5, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''5''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 4560, N'$getvalue("11.5.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.5000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (824, 20080714, N'11.6.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 6, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''6''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 4920, N'$getvalue("11.6.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.6000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (825, 20080714, N'11.7.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 7, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''7''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 5280, N'$getvalue("11.7.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.7000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (826, 20080714, N'11.8.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 8, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''8''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 5640, N'$getvalue("11.8.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.8000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (827, 20080714, N'11.9.213', N'Massnahme zu MIZ', N'1,2,3,8', 2, 9, 8, NULL, N'MassnahmeMIZ', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''9''][@bedarfsart_id=''21'']', N'Massnahme zu MIZ', NULL, 6000, N'$getvalue("11.9.211") == 1 && $getvalue("10.20") == 1', 1, N'10.213', N'011.9000.2130', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (828, 20080714, N'11.1.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 1, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''1''][@bedarfsart_id=''22'']', NULL, NULL, 3150, N'$getvalue("11.1.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.1000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (829, 20080714, N'11.2.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 2, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''2''][@bedarfsart_id=''22'']', NULL, NULL, 3510, N'$getvalue("11.2.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.2000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (830, 20080714, N'11.3.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 3, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''3''][@bedarfsart_id=''22'']', NULL, NULL, 3870, N'$getvalue("11.3.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.3000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (831, 20080714, N'11.4.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 4, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''4''][@bedarfsart_id=''22'']', NULL, NULL, 4230, N'$getvalue("11.4.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.4000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (832, 20080714, N'11.5.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 5, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''5''][@bedarfsart_id=''22'']', NULL, NULL, 4590, N'$getvalue("11.5.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.5000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (833, 20080714, N'11.6.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 6, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''6''][@bedarfsart_id=''22'']', NULL, NULL, 4950, N'$getvalue("11.6.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.6000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (834, 20080714, N'11.7.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 7, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''7''][@bedarfsart_id=''22'']', NULL, NULL, 5310, N'$getvalue("11.7.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.7000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (835, 20080714, N'11.8.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 8, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''8''][@bedarfsart_id=''22'']', NULL, NULL, 5670, N'$getvalue("11.8.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.8000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (836, 20080714, N'11.9.223', N'Massnahme zu IZU', N'1,2,3,8', 2, 9, 8, NULL, N'MassnahmeIZU', N'BFSMassnahmeMIZ', 1, NULL, 6, 1, N'<5><sozgns><ZH> nicht in KiSS erfasst', N'SELECT @value = NULL', NULL, NULL, NULL, 1, N'/dossier/ue/skos/z:row', N'massnahme_grund_id', N'[@ue_person_id=''9''][@bedarfsart_id=''22'']', NULL, NULL, 6030, N'$getvalue("11.9.221") == 1 && $getvalue("10.20") == 1', 1, N'10.223', N'011.9000.2230', 3, 5)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (837, 20080714, N'35.101', N'Erwerbseinkommen im Stichmonat', N'4,5,6,7', 1, 0, 8, NULL, N'FaJaNein', N'BFSJaNein', 1, CONVERT(int, 2), 6, 1, N'nicht in KiSS erfasst (Default ''nein'')', N'SELECT @value = 2', NULL, NULL, NULL, 1, N'/dossier/wbsl_einkommensart/z:row', N'b_in_abklaerung', N'[@sh_einkommensart_id=''101'']', NULL, N'Erwerbseinkommen im Stichmonat (Erwerbseinkommen netto, d.h. nach Sozialabzügen, aber vor Steuern bzw. Abzug Freibetrag)', 7380, NULL, 1, NULL, N'035.1010', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (838, 20080714, N'5.a.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 1, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''1'']', NULL, N'Sozialversicherungsnummer', 1760, N'$getvalue("5.a.2") == 1 && $getvalue("5.a.3") == null', 1, N'1.05', N'005.a000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (839, 20080714, N'5.b.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 2, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''2'']', NULL, N'Sozialversicherungsnummer', 1800, N'$getvalue("5.b.2") == 1 && $getvalue("5.b.3") == null', 1, N'1.05', N'005.b000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (840, 20080714, N'5.c.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 3, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''3'']', NULL, N'Sozialversicherungsnummer', 1840, N'$getvalue("5.c.2") == 1 && $getvalue("5.c.3") == null', 1, N'1.05', N'005.c000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (841, 20080714, N'5.d.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 4, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''4'']', NULL, N'Sozialversicherungsnummer', 1880, N'$getvalue("5.d.2") == 1 && $getvalue("5.d.3") == null', 1, N'1.05', N'005.d000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (842, 20080714, N'5.e.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 5, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''5'']', NULL, N'Sozialversicherungsnummer', 1920, N'$getvalue("5.e.2") == 1 && $getvalue("5.e.3") == null', 1, N'1.05', N'005.e000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (843, 20080714, N'5.f.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 6, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''6'']', NULL, N'Sozialversicherungsnummer', 1960, N'$getvalue("5.f.2") == 1 && $getvalue("5.f.3") == null', 1, N'1.05', N'005.f000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (844, 20080714, N'5.g.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 7, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''7'']', NULL, N'Sozialversicherungsnummer', 2000, N'$getvalue("5.g.2") == 1 && $getvalue("5.g.3") == null', 1, N'1.05', N'005.g000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (845, 20080714, N'5.h.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 8, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''8'']', NULL, N'Sozialversicherungsnummer', 2040, N'$getvalue("5.h.2") == 1 && $getvalue("5.h.3") == null', 1, N'1.05', N'005.h000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (846, 20080714, N'5.i.4', N'Wenn ja, Versichertennummer des Antragstellers', N'1,2,3,8', 3, 9, 2, NULL, NULL, NULL, 1, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = CASE WHEN EXISTS (SELECT 1
                  FROM dbo.FaLeistung WITH (READUNCOMMITTED)
                  WHERE BaPersonID = @BaPersonID 
                  AND   ModulID = 3 
                  AND   @Jahr BETWEEN Year(DatumVon) AND Year(DatumBis))
       THEN (SELECT VersichertenNummer
             FROM dbo.vwPerson
             WHERE BaPersonID = @BaPersonID)
       ELSE NULL
       END', NULL, NULL, NULL, 1, N'/dossier/hh/person/z:row', N'versichertennummer', N'[@hh_person_id=''9'']', NULL, N'Sozialversicherungsnummer', 2080, N'$getvalue("5.i.2") == 1 && $getvalue("5.i.3") == null', 1, N'1.05', N'005.i000.4000', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (896, 20080714, N'5.1.08', N'Versichertennummer', N'1,2,3,8', 2, 1, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''1'']', NULL, NULL, 540, NULL, 1, N'1.05', N'005.1000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (897, 20080714, N'5.2.08', N'Versichertennummer', N'1,2,3,8', 2, 2, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''2'']', NULL, NULL, 680, NULL, 1, N'1.05', N'005.2000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (898, 20080714, N'5.3.08', N'Versichertennummer', N'1,2,3,8', 2, 3, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''3'']', NULL, NULL, 820, NULL, 1, N'1.05', N'005.3000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (899, 20080714, N'5.4.08', N'Versichertennummer', N'1,2,3,8', 2, 4, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''4'']', NULL, NULL, 960, NULL, 1, N'1.05', N'005.4000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (900, 20080714, N'5.5.08', N'Versichertennummer', N'1,2,3,8', 2, 5, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''5'']', NULL, NULL, 1100, NULL, 1, N'1.05', N'005.5000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (901, 20080714, N'5.6.08', N'Versichertennummer', N'1,2,3,8', 2, 6, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''6'']', NULL, NULL, 1240, NULL, 1, N'1.05', N'005.6000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (902, 20080714, N'5.7.08', N'Versichertennummer', N'1,2,3,8', 2, 7, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''7'']', NULL, NULL, 1380, NULL, 1, N'1.05', N'005.7000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (903, 20080714, N'5.8.08', N'Versichertennummer', N'1,2,3,8', 2, 8, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''8'']', NULL, NULL, 1520, NULL, 1, N'1.05', N'005.8000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (904, 20080714, N'5.9.08', N'Versichertennummer', N'1,2,3,8', 2, 9, 2, NULL, NULL, NULL, NULL, NULL, 2, 1, N'<4><sozgns>', N'SELECT @value = VersichertenNummer
FROM dbo.vwPerson WITH (READUNCOMMITTED)
WHERE BaPersonID = @BaPersonID', N'vwPerson', N'VersichertenNummer', NULL, 1, N'/dossier/ue/person/z:row', N'versichertennummer', N'[@ue_person_id=''9'']', NULL, NULL, 1660, NULL, 1, N'1.05', N'005.9000.0800', 2, 4)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (905, 20080714, N'15.04', N'Bruttobedarf der Unterstützungseinheit/ Monat', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozruh><sozgns><09-06-17><ZH><prov>
Annahme, dass die Zuteilung der Belegarten zu den Kostenarten/Leistungsarten korrekt ist und gewartet wird.
Gerechnet werden alle Kostenarten/Leistungsarten, ausgenommen EFB.', N'SELECT @value = -SUM(Betrag)  
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))  
WHERE NOT BFSVariable IN 
  (       
  ''10.212'',	-- MIZ Minimale Integrationszulage 
  ''10.222'',	-- IZU Integrationszulagen
  ''10.232''	-- EFB Erwerbsfreibetrag 
  ) 
AND BaPersonID IN 
  (SELECT BaPersonID 
   FROM    BFSDossierPerson 
   WHERE  BFSDossierID = @BFSDossierID 
                 AND BFSPersonCode in (1,2) AND
                         PersonIndex <= 9) -- beschränken auf 9 tatsächliche UE-Personen', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_bruttobedarf', NULL, N'Bruttobedarf der Unterstützungseinheit / Monat RB', N'Bruttobedarf der Unterstützungseinheit pro Monat.

Der Bruttobedarf entspricht dem theoretischen Bedarf der Unterstützungseinheit (materielle Grundsicherung plus situationsbedingte Leistungen) pro Monat, d.h. ohne Berücksichtigung ihrer aktuellen Einnahmen.', 6780, NULL, 1, NULL, N'015.0400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (906, 20080714, N'15.052', N'Zugesprochene Leistung', N'1,2,3,5,6,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozhru><ZH><09-06-17>', N'Declare @Stichmonat int 
set @Stichmonat=Month(IsNull(@DatumBis, dbo.fnDateSerial(@Jahr,12,1))) 
SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, @Stichmonat, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_zugesprochen', NULL, N'Zugesprochene Leistung', N'Die zugesprochene Leistung ist der effektiv pro Monat an die Unterstützungseinheit ausbezahlte Betrag.
Die zugesprochene Leistung entspricht nicht unbedingt dem berechneten Nettobedarf.', 6980, NULL, 1, NULL, N'015.0520', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (907, 20080714, N'15.08', N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'1,2,3,5,6,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozhru><ZH><09-06-17>', N'SELECT @value = 
   ISNULL(dbo.fnBFSBetrag(''15.11'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.12'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.13'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.14'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.15'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.16'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.17'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.18'',@BFSDossierID), 0) 
+ ISNULL(dbo.fnBFSBetrag(''15.19'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''15.20'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''15.21'',@BFSDossierID), 0)
+ ISNULL(dbo.fnBFSBetrag(''15.22'',@BFSDossierID), 0)', NULL, NULL, NULL, 1, N'/dossier/z:row', N'betrag_tot_auszahlungen', NULL, N'Gesamter Auszahlungsbetrag seit Jahresbeginn', N'Der gesamte Auszahlungsbetrag ist der während des ganzen Erhebungsjahres an die Unterstützungseinheit ausbezahlte Betrag. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die im vergangenen Jahr im Rahmen des vorliegenden Dossiers ausbezahlt wurden.

Diese Frage muss nur am Jahresende beantwortet werden.', 7030, NULL, 1, NULL, N'015.0800', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (908, 20080714, N'15.11', N'Januar', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 1, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''1'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7080, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (909, 20080714, N'15.12', N'Februar', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 2, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''2'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7090, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (910, 20080714, N'15.13', N'März', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 3, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''3'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7100, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1300', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (911, 20080714, N'15.14', N'April', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 4, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''4'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7110, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1400', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (912, 20080714, N'15.15', N'Mai', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 5, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''5'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7120, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1500', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (913, 20080714, N'15.16', N'Juni', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 6, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''6'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7130, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1600', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (914, 20080714, N'15.17', N'Juli', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 7, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''7'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7140, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1700', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (915, 20080714, N'15.18', N'August', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 8, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''8'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7150, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1800', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (916, 20080714, N'15.19', N'September', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 9, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''9'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7160, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.1900', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (917, 20080714, N'15.20', N'Oktober', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 10, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''10'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7170, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.2000', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (918, 20080714, N'15.21', N'November', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 11, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''11'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7180, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.2100', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (919, 20080714, N'15.22', N'Dezember', N'1,2,3,8', 1, 0, 4, N'F2', NULL, NULL, 1, NULL, 8, 1, N'<4><sozgns><sozhru><ZH><09-06-17>', N'SELECT @value = SUM(Betrag)
FROM dbo.fnBFSGetMonatlicheZahlung(@AntragstellerID, @BFSLeistungsartCode, NULL, @Jahr, 12, 0, @DatumVon, @DatumBis)', NULL, NULL, NULL, 1, N'/dossier/auszahlung/z:row', N'betrag', N'[@monat_id=''12'']', N'Monatliche Zahlungen', N'Hier den Auszahlungsbetrag erfassen, der für den entsprechenden Monat insgesamt an die Unterstützungseinheit ausbezahlt wurde. Er entspricht der Summe aller zugesprochenen und einmaligen Sozialhilfeleistungen, die in dem Monat im Rahmen des vorliegenden Dossiers ausbezahlt wurden.', 7190, N'($getvalue("15.11")  + $getvalue("15.12") + $getvalue("15.13") + $getvalue("15.14")  + $getvalue("15.15") + $getvalue("15.16") + $getvalue("15.17")  + $getvalue("15.18") + $getvalue("15.19") + $getvalue("15.20")  + $getvalue("15.21") + $getvalue("15.22") ) <= 0', 1, NULL, N'015.2200', 3, 0)
INSERT INTO [BFSFrage] ([BFSFrageID], [BFSKatalogVersionID], [Variable], [Frage], [BFSLeistungsfilterCodes], [BFSPersonCode], [PersonIndex], [BFSFeldCode], [BFSFormat], [FFLOVName], [BFSLOVName], [BFSValidierungCode], [Vorgabewert], [BFSKategorieCode], [HerkunftCode], [HerkunftBeschreibung], [HerkunftSQL], [FFTabelle], [FFFeld], [FFPKFeld], [Editierbar], [ExportNode], [ExportAttribute], [ExportPredicate], [HilfeTitel], [HilfeText], [Reihenfolge], [FilterRegel], [UpdateOK], [VariableAntragsteller], [VariableExpandiert], [Pos1], [Pos2]) VALUES (920, 20080714, N'10.00', N'Gesamtes Einkommen UE Betrag', N'1,2,3', 1, 0, 4, NULL, NULL, NULL, 1, NULL, 6, 1, N'<2><sozruh><ZH>
NICHT MEHR VERWENDET!
Wird zu Kontrollzwecken gemappt: Total Einkommen - EFB', N'SELECT @value = SUM(Betrag)  
FROM dbo.fnBFSBudgetStichtagPerson(@AntragstellerID, @BFSLeistungsartCode, YEAR(@DatumBis), MONTH(@DatumBis))  
WHERE BFSVariable IN (
''10.012'', -- Erwerbseinkommen im Stichmonat (Erwerbseinkommen netto, d.h. nach Sozialabzügen, aber vor Steuern bzw. Abzug Freibetrag)          
''10.022'', -- ALV          
''10.032'', -- Altersrente          
''10.042'', -- Witwen-/Waisenrente         
''10.052'', -- BVG          
''10.062'', -- Hilflosenentschädigung          
''10.072'', -- IV-Rente          
''10.082'', -- SUVA-Rente          
''10.092'', -- Taggeld Krankenversicherung         
''10.102'', -- IV-Taggeld          
''10.112'', -- Unfall-Taggeld          
''10.122'', -- Andere Sozialversicherungsleistungen (Rente / Taggelder)          
''10.132'', -- Unterhaltsbeiträge          
''10.142'', -- Alimentenbevorschussung          
''12.052'', -- Kinderzulage (wenn nicht im Lohn enthalten)         
''12.072'', -- EL-Betrag  IV/AHV          
''12.092'', -- Mutterschaftsbeiträge          
''12.122'', -- Stipendien          
''12.142'', -- andere:          
''12.152'', -- Erhalt von Haushaltsentschädigung (Konkubinatsbeitrag)          
''12.162'' -- Verwandtenunterstützung        
)
 AND BaPersonID IN 
  (SELECT BaPersonID FROM BFSDossierPerson                                
   WHERE BFSDossierID = @BFSDossierID AND
   BFSPersonCode IN (1,2) AND                                          
   PersonIndex <= 9 -- beschränken auf 9 tatsächliche UE-Personen
    )', NULL, NULL, NULL, 1, N'/dossier/z:row', N'einkommen_detail_id', NULL, NULL, NULL, 2410, NULL, 1, NULL, N'010.0000', 3, 0)
GO
SET IDENTITY_INSERT [BFSFrage] OFF
GO
COMMIT
GO