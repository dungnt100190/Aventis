SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
EXECUTE spDropObject spPendenzCheck_FallsteuerungDLP
GO
/*===============================================================================================
  Description
-------------------------------------------------------------------------------------------------
  SUMMARY:       Pendenzen für Kontrolle der DLP-Erfassung erstellen

  RETURNS:       Ein Datensatz mit anzulegenden Pendenzen
  -
  TEST:          EXEC dbo.spPendenzCheck_FallsteuerungDLP
=================================================================================================*/

CREATE PROCEDURE dbo.spPendenzCheck_FallsteuerungDLP
AS
BEGIN
  -- SET NOCOUNT ON added to prevent extra result sets from interfering with SELECT statements.
  SET NOCOUNT ON;

  -- declare local variables
  DECLARE @AutoGeneratedType INT;
  DECLARE @ReferenceTable VARCHAR(100);
  DECLARE @IntervallTage INT;
  DECLARE @Today DATETIME;
  DECLARE @LanguageCode INT;
  DECLARE @Code INT;

  SET @AutoGeneratedType = 8;  -- KontrolleZuweisungDLP
  SET @ReferenceTable = 'FaPhase';
  SET @Today = GETDATE();
  SET @LanguageCode = 1;
  SET @Code = 40 --Ablauf Dienstleistungspaket

  SET @IntervallTage = CONVERT(INT, ISNULL(dbo.fnXConfig('System\Pendenzen\AblaufDienstleistungspaket\AnzahlTage', GETDATE()), 30));
  IF @IntervallTage <= 0 BEGIN
    SET @IntervallTage = 30;
  END;

  SELECT DISTINCT
    TaskSenderCode   = 5,  -- DbScript
    TaskReceiverCode = 1,  -- Person
    TaskTypeCode     = 40, -- Kontrolle DLP
    TaskStatusCode   = 1,  -- Pendent
    CreateDate       = @Today,
    StartDate        = NULL,
    ExpirationDate   = CASE
	                     WHEN ROUND(DLP.MaximaleLaufZeit, 0) = DLP.MaximaleLaufZeit
						   THEN DATEADD(MONTH, DLP.MaximaleLaufZeit, PHA.DatumVon)
						   ELSE DATEADD(DAY, CONVERT(INT, ROUND(DLP.MaximaleLaufZeit * 30, 0)), PHA.DatumVon)
					   END,
    Subject          = (SELECT dbo.fnStringReplace(Value1, CONVERT(VARCHAR, 
                                                                          CASE
                                                                          WHEN ROUND(DLP.MaximaleLaufZeit, 0) = DLP.MaximaleLaufZeit
                                                                          THEN DATEADD(MONTH, DLP.MaximaleLaufZeit, PHA.DatumVon)
                                                                          ELSE DATEADD(DAY, CONVERT(INT, ROUND(DLP.MaximaleLaufZeit * 30, 0)), PHA.DatumVon)
                                                                          END, 104)) 
                                                                      FROM XLOVCode WHERE LOVName ='TaskType' AND Code = @Code),
    TaskDescription  = (SELECT dbo.fnStringReplace5(Value2, dbo.fnLOVMLText('DynaPhase', PHA.FaPhaseCode, @LanguageCode), PRS.Name + ISNULL(' ' + PRS.Vorname, ''), CONVERT(VARCHAR, PHA.DatumVon, 104) + CHAR(10) + CHAR(13), DLP.NAME, CONVERT(VARCHAR, DLP.MaximaleLaufZeit)) FROM XLOVCode WHERE LOVName ='TaskType' AND Code = @Code),
    FaLeistungID     = PHA.FaLeistungID,
    BaPersonID       = LEI.BaPersonID,
    SenderID         = NULL,
    ReceiverID       = LEI.UserID,
    ReferenceTable    = @ReferenceTable,
    ReferenceID       = PHA.FaPhaseID,
    AutoGeneratedType = @AutoGeneratedType
  FROM dbo.FaPhase PHA
  INNER JOIN dbo.FaLeistung LEI ON LEI.FaLeistungID = PHA.FaLeistungID
  INNER JOIN dbo.BaPerson PRS ON PRS.BaPersonID = LEI.BaPersonID
  INNER JOIN dbo.FsDienstleistungspaket DLP ON DLP.FsDienstleistungspaketID = PHA.FsDienstleistungspaketID_Zugewiesen
  WHERE PHA.DatumBis IS NULL
    AND DLP.MaximaleLaufZeit IS NOT NULL
    AND @Today > DATEADD(DAY, -@IntervallTage, CASE
	  WHEN ROUND(DLP.MaximaleLaufZeit, 0) = DLP.MaximaleLaufZeit
		THEN DATEADD(MONTH, DLP.MaximaleLaufZeit, PHA.DatumVon)
		ELSE DATEADD(DAY, CONVERT(INT, ROUND(DLP.MaximaleLaufZeit * 30, 0)), PHA.DatumVon)
	END)
    AND NOT EXISTS (
	  SELECT TOP 1 1 FROM dbo.XTaskAutoGenerated TAG 
	  WHERE TAG.XTaskAutoGeneratedTypeCode = @AutoGeneratedType
	    AND TAG.ReferenceTable = @ReferenceTable
		AND TAG.ReferenceID = PHA.FaPhaseID);

END
GO
