SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
EXECUTE spDropObject spPendenzCheck_AHVVorbezugPensionMann
GO
/*===============================================================================================
  $Archive: /Database/KISS4_BSS_MasterDev/Stored Procedures/spPendenzCheck_AHVVorbezugPensionMann.sql $
  $Author: Lloreggia $
  $Modtime: 16.12.09 13:52 $
  $Revision: 6 $
=================================================================================================
  Description
-------------------------------------------------------------------------------------------------
  SUMMARY:          Sucht nach Männern, die in Kürze das Alter für AHV Vorbezug erreichen
    @AnzahlTage:    Anzahl Tage, bevor ein Mann das Alter für AHV Vorbezug erreicht
    @Vorbezugalter: AHV-Vorbezug 2 Jahre vor normalem Pensionsalter für Männer
  -
  RETURNS:          
  -
  TEST:             EXEC dbo.spPendenzCheck_AHVVorbezugPensionMann
=================================================================================================
  $Log: /Database/KISS4_BSS_MasterDev/Stored Procedures/spPendenzCheck_AHVVorbezugPensionMann.sql $
 * 
 * 5     16.12.09 13:53 Lloreggia
 * Pendenzen werden nur für offene Leistungen erzeugt
 * 
 * 4     30.11.09 10:08 Lloreggia
 * Header angepasst, Unterscheidung Geschlecht
=================================================================================================*/

CREATE PROCEDURE dbo.spPendenzCheck_AHVVorbezugPensionMann
(
	@AnzahlTage INT = 90,
	@Vorbezugalter INT = 63
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  -- declare local variables
  DECLARE @AutoGeneratedType INT
  DECLARE @ReferenceTable VARCHAR(100)
  DECLARE @Code INT
  
  SET @AutoGeneratedType = 6  -- AHVVorbezugPensionMann
  SET @ReferenceTable = 'BaPerson'
  SET @Code = 27 -- AHV Vorbezug Pension Mann

	SELECT DISTINCT
    TaskSenderCode    = 5,  -- DbScript
    TaskReceiverCode  = 1,  -- Person
    TaskTypeCode      = @Code,  -- AHV Vorbezug Pension Mann
    TaskStatusCode    = 1,  -- Pendent
    CreateDate        = DATEADD(DAY, -@AnzahlTage, DATEADD(YEAR, @Vorbezugalter, PRS.GeburtsDatum)),
    StartDate         = NULL,
    ExpirationDate    = DATEADD(YEAR, @Vorbezugalter, PRS.GeburtsDatum),
    Subject          = (SELECT dbo.fnStringReplace(Value1, CONVERT(varchar, DATEADD(YEAR, @Vorbezugalter, PRS.GeburtsDatum), 104)) FROM XLOVCode WHERE LOVName ='TaskType' AND Code = @Code),
    TaskDescription  = (SELECT Value2 FROM XLOVCode WHERE LOVName ='TaskType' AND Code = @Code),
    FaLeistungID      = FPL.FaLeistungID,
    BaPersonID        = FPP.BaPersonID,
    SenderID          = NULL,
    ReceiverID        = LEI.UserID,
    ReferenceTable    = @ReferenceTable,
    ReferenceID       = PRS.BaPersonID,
    AutoGeneratedType = @AutoGeneratedType
  FROM dbo.BgFinanzplan                  FPL WITH (READUNCOMMITTED)
    INNER JOIN dbo.BgFinanzplan_BaPerson FPP WITH (READUNCOMMITTED) ON FPL.BgFinanzplanID = FPP.BgFinanzplanID
                                                                   --AND FPP.IstUnterstuetzt = 1
    INNER JOIN dbo.BaPerson              PRS WITH (READUNCOMMITTED) ON PRS.BaPersonID = FPP.BaPersonID
                                                                   AND PRS.GeschlechtCode = 1 -- Mann
    INNER JOIN dbo.FaLeistung            LEI WITH (READUNCOMMITTED) ON FPL.FaLeistungID = LEI.FaLeistungID
  WHERE ISNULL(LEI.DatumBis, '99990101') >= GETDATE()
    AND FPL.BgBewilligungStatusCode >= 5
    AND DATEDIFF(DAY, GETDATE(), DATEADD(YEAR, @Vorbezugalter, PRS.GeburtsDatum)) <= @AnzahlTage
    AND GETDATE() <= DATEADD(YEAR, @Vorbezugalter, PRS.GeburtsDatum)
    AND NOT EXISTS (SELECT TOP 1 1
                    FROM dbo.XTaskAutoGenerated TAG WITH (READUNCOMMITTED)
                    WHERE TAG.XTaskAutoGeneratedTypeCode = @AutoGeneratedType
                      AND TAG.ReferenceTable = @ReferenceTable
                      AND TAG.ReferenceID = PRS.BaPersonID);

END
GO
