#region Header

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#endregion

using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using Kiss.Interfaces.UI;
using KiSS4.Common;
using KiSS4.DB;
using KiSS4.Gui;

namespace KiSS4.Inkasso.ZH
{
    public class CtlIkRechtstitelGlaeubiger : KiSS4.Gui.KissUserControl
    {
        #region Fields

        private bool DatenGlaeubigerWurdenKorrigiert = false;
        private int FaFallID = 0;
        private int FaLeistungID;
        private int FaProzessCode;

        // Letzte Bearbeitung
        // 29.08.2007 : sozheo : neu
        // 11.11.2007 : sozheo : neue Regel für Zahlungsweg und Gläubiger
        // 07.01.2008 : sozksc : auswahl im grid; Felder weggenommen
        // 16.01.2008 : sozheo : Schuldner nicht anzeigen
        // 30.01.2008 : sozheo : alle Schuldner nicht anzeigen
        // 09.02.2008 : sozheo : Korrekturen für KKBB
        // 05.05.2008 : sozheo : Korrekturen für neues Feld "IkGlaeubigerStatusCode"
        // ------------------------------------------------------------------------
        private int IkRechtstitelID = 0;
        private bool LeistungIstGeschlossen;
        private bool RtIstKKBB;
        private int SchuldnerBaPersonID1 = 0;
        private KiSS4.Gui.KissCheckEdit chkGanzesKlientensystem;
        private DevExpress.XtraGrid.Columns.GridColumn colAnzahlRT;
        private DevExpress.XtraGrid.Columns.GridColumn colBetrag;
        private DevExpress.XtraGrid.Columns.GridColumn colGlaeubiger;
        private DevExpress.XtraGrid.Columns.GridColumn colHatDaten;
        private DevExpress.XtraGrid.Columns.GridColumn colHatDatenEltern;
        private DevExpress.XtraGrid.Columns.GridColumn colIkGlaeubigerStatusCode;
        private DevExpress.XtraGrid.Columns.GridColumn colInterneVerrechnung;
        private DevExpress.XtraGrid.Columns.GridColumn colIstElternteil;
        private DevExpress.XtraGrid.Columns.GridColumn colPersonName;
        private DevExpress.XtraGrid.Columns.GridColumn colPersonundGeb;
        private DevExpress.XtraGrid.Columns.GridColumn colStatusCode;
        private DevExpress.XtraGrid.Columns.GridColumn colZusatzBetrag;
        private DevExpress.XtraGrid.Columns.GridColumn colZusatzPersonName;
        private System.ComponentModel.IContainer components;
        private KiSS4.Gui.KissDateEdit edtALBVDatumBis;
        private KiSS4.Gui.KissDateEdit edtALBVDatumVon;
        private KiSS4.Gui.KissLookUpEdit edtBaZahlungsweg;
        private KiSS4.Gui.KissCalcEdit edtBetrag;
        private KiSS4.Gui.KissCalcEdit edtBetragALBV;
        private KiSS4.Gui.KissLookUpEdit edtIkGlaeubigerStatusCode;
        private KiSS4.Gui.KissCalcEdit edtVorSaldo;
        private KiSS4.Gui.KissLookUpEdit edtZusatzBaZahlungsweg;
        private KiSS4.Gui.KissCalcEdit edtZusatzBetrag;
        private KiSS4.Gui.KissGrid grdGlaeubiger;
        private DevExpress.XtraGrid.Views.Grid.GridView grvGlaeubiger;
        private KiSS4.Gui.KissLabel kissLabel1;
        private KiSS4.Gui.KissLabel kissLabel2;
        private KiSS4.Gui.KissLabel kissLabel5;
        private KiSS4.Gui.KissLabel lblBaZahlungsweg;
        private KiSS4.Gui.KissLabel lblBetrag;
        private KiSS4.Gui.KissLabel lblBetragALBV;
        private KiSS4.Gui.KissLabel lblStatus;
        private KiSS4.Gui.KissLabel lblVorsaldo;
        private KiSS4.Gui.KissLabel lblZusatzBaZahlungsweg;
        private KiSS4.Gui.KissLabel lblZusatzBetrag;
        private KiSS4.Gui.KissLabel lblZusatzZahlinfo;
        private KiSS4.Gui.KissMemoEdit memKreditor;
        private KiSS4.Gui.KissMemoEdit memZusatzKreditor;
        private KiSS4.DB.SqlQuery qryStatus;
        private KiSS4.DB.SqlQuery qryZahlInfo;
        private KiSS4.DB.SqlQuery qryZahlungsweg;
        private KiSS4.DB.SqlQuery qryZusatzZahlInfo;
        private DevExpress.XtraEditors.Repository.RepositoryItemImageComboBox repedtImages;
        private DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit repedtchkInterneVerrechnung;
        private DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit repedtchkIstElternteil;
        private DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit repedtchkIstGlaeubiger;

        public KiSS4.DB.SqlQuery qryIkGlaeubiger;

        #endregion

        #region Constructors

        public CtlIkRechtstitelGlaeubiger()
        {
            this.InitializeComponent();
        }

        #endregion

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(CtlIkRechtstitelGlaeubiger));
            this.grdGlaeubiger = new KiSS4.Gui.KissGrid();
            this.memKreditor = new KiSS4.Gui.KissMemoEdit();
            this.memZusatzKreditor = new KiSS4.Gui.KissMemoEdit();
            this.chkGanzesKlientensystem = new KiSS4.Gui.KissCheckEdit();
            this.kissLabel5 = new KiSS4.Gui.KissLabel();
            this.lblZusatzZahlinfo = new KiSS4.Gui.KissLabel();
            this.edtBaZahlungsweg = new KiSS4.Gui.KissLookUpEdit();
            this.edtBetrag = new KiSS4.Gui.KissCalcEdit();
            this.lblBetrag = new KiSS4.Gui.KissLabel();
            this.lblBaZahlungsweg = new KiSS4.Gui.KissLabel();
            this.lblZusatzBaZahlungsweg = new KiSS4.Gui.KissLabel();
            this.edtZusatzBaZahlungsweg = new KiSS4.Gui.KissLookUpEdit();
            this.lblZusatzBetrag = new KiSS4.Gui.KissLabel();
            this.edtZusatzBetrag = new KiSS4.Gui.KissCalcEdit();
            this.lblBetragALBV = new KiSS4.Gui.KissLabel();
            this.edtBetragALBV = new KiSS4.Gui.KissCalcEdit();
            this.kissLabel1 = new KiSS4.Gui.KissLabel();
            this.edtALBVDatumVon = new KiSS4.Gui.KissDateEdit();
            this.edtALBVDatumBis = new KiSS4.Gui.KissDateEdit();
            this.edtIkGlaeubigerStatusCode = new KiSS4.Gui.KissLookUpEdit();
            this.lblStatus = new KiSS4.Gui.KissLabel();
            this.lblVorsaldo = new KiSS4.Gui.KissLabel();
            this.edtVorSaldo = new KiSS4.Gui.KissCalcEdit();
            this.kissLabel2 = new KiSS4.Gui.KissLabel();
            this.colAnzahlRT = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colBetrag = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colGlaeubiger = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colHatDaten = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colHatDatenEltern = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colIkGlaeubigerStatusCode = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colInterneVerrechnung = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colIstElternteil = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colPersonName = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colPersonundGeb = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colStatusCode = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colZusatzBetrag = new DevExpress.XtraGrid.Columns.GridColumn();
            this.colZusatzPersonName = new DevExpress.XtraGrid.Columns.GridColumn();
            this.grvGlaeubiger = new DevExpress.XtraGrid.Views.Grid.GridView();
            this.qryIkGlaeubiger = new KiSS4.DB.SqlQuery(this.components);
            this.qryStatus = new KiSS4.DB.SqlQuery(this.components);
            this.qryZahlInfo = new KiSS4.DB.SqlQuery(this.components);
            this.qryZahlungsweg = new KiSS4.DB.SqlQuery(this.components);
            this.qryZusatzZahlInfo = new KiSS4.DB.SqlQuery(this.components);
            this.repedtchkInterneVerrechnung = new DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit();
            this.repedtchkIstElternteil = new DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit();
            this.repedtchkIstGlaeubiger = new DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit();
            this.repedtImages = new DevExpress.XtraEditors.Repository.RepositoryItemImageComboBox();
            ((System.ComponentModel.ISupportInitialize)(this.grdGlaeubiger)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.memKreditor.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.memZusatzKreditor.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chkGanzesKlientensystem.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzZahlinfo)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBaZahlungsweg)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBaZahlungsweg.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBetrag.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBetrag)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBaZahlungsweg)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzBaZahlungsweg)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBaZahlungsweg)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBaZahlungsweg.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzBetrag)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBetrag.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBetragALBV)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBetragALBV.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtALBVDatumVon.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtALBVDatumBis.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtIkGlaeubigerStatusCode)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtIkGlaeubigerStatusCode.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblStatus)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblVorsaldo)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtVorSaldo.Properties)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.grvGlaeubiger)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryIkGlaeubiger)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryStatus)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZahlInfo)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZahlungsweg)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZusatzZahlInfo)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkInterneVerrechnung)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkIstElternteil)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkIstGlaeubiger)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtImages)).BeginInit();
            this.SuspendLayout();
            //
            // grdGlaeubiger
            //
            this.grdGlaeubiger.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)
                        | System.Windows.Forms.AnchorStyles.Left)
                        | System.Windows.Forms.AnchorStyles.Right)));
            this.grdGlaeubiger.DataSource = this.qryIkGlaeubiger;
            this.grdGlaeubiger.EmbeddedNavigator.Name = "";
            this.grdGlaeubiger.Location = new System.Drawing.Point(6, 31);
            this.grdGlaeubiger.MainView = this.grvGlaeubiger;
            this.grdGlaeubiger.Name = "grdGlaeubiger";
            this.grdGlaeubiger.RepositoryItems.AddRange(new DevExpress.XtraEditors.Repository.RepositoryItem[] {
                        this.repedtchkIstGlaeubiger,
                        this.repedtchkIstElternteil,
                        this.repedtchkInterneVerrechnung,
                        this.repedtImages});
            this.grdGlaeubiger.Size = new System.Drawing.Size(677, 142);
            this.grdGlaeubiger.TabIndex = 0;
            this.grdGlaeubiger.ViewCollection.AddRange(new DevExpress.XtraGrid.Views.Base.BaseView[] {
                        this.grvGlaeubiger});
            //
            // memKreditor
            //
            this.memKreditor.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.memKreditor.DataMember = "Kreditor";
            this.memKreditor.DataSource = this.qryZahlInfo;
            this.memKreditor.EditMode = Kiss.Interfaces.UI.EditModeType.ReadOnly;
            this.memKreditor.Location = new System.Drawing.Point(6, 345);
            this.memKreditor.Name = "memKreditor";
            this.memKreditor.Properties.Appearance.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(247)))), ((int)(((byte)(239)))), ((int)(((byte)(231)))));
            this.memKreditor.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.memKreditor.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.memKreditor.Properties.Appearance.Options.UseBackColor = true;
            this.memKreditor.Properties.Appearance.Options.UseBorderColor = true;
            this.memKreditor.Properties.Appearance.Options.UseFont = true;
            this.memKreditor.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.memKreditor.Properties.ReadOnly = true;
            this.memKreditor.Size = new System.Drawing.Size(283, 186);
            this.memKreditor.TabIndex = 2;
            //
            // memZusatzKreditor
            //
            this.memZusatzKreditor.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.memZusatzKreditor.DataMember = "Kreditor";
            this.memZusatzKreditor.DataSource = this.qryZusatzZahlInfo;
            this.memZusatzKreditor.EditMode = Kiss.Interfaces.UI.EditModeType.ReadOnly;
            this.memZusatzKreditor.Location = new System.Drawing.Point(306, 345);
            this.memZusatzKreditor.Name = "memZusatzKreditor";
            this.memZusatzKreditor.Properties.Appearance.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(247)))), ((int)(((byte)(239)))), ((int)(((byte)(231)))));
            this.memZusatzKreditor.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.memZusatzKreditor.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.memZusatzKreditor.Properties.Appearance.Options.UseBackColor = true;
            this.memZusatzKreditor.Properties.Appearance.Options.UseBorderColor = true;
            this.memZusatzKreditor.Properties.Appearance.Options.UseFont = true;
            this.memZusatzKreditor.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.memZusatzKreditor.Properties.ReadOnly = true;
            this.memZusatzKreditor.Size = new System.Drawing.Size(377, 186);
            this.memZusatzKreditor.TabIndex = 3;
            //
            // chkGanzesKlientensystem
            //
            this.chkGanzesKlientensystem.EditValue = true;
            this.chkGanzesKlientensystem.Location = new System.Drawing.Point(6, 6);
            this.chkGanzesKlientensystem.Name = "chkGanzesKlientensystem";
            this.chkGanzesKlientensystem.Properties.Appearance.BackColor = System.Drawing.Color.Transparent;
            this.chkGanzesKlientensystem.Properties.Appearance.Options.UseBackColor = true;
            this.chkGanzesKlientensystem.Properties.Caption = "ganzes Klientensystem anzeigen";
            this.chkGanzesKlientensystem.Size = new System.Drawing.Size(195, 19);
            this.chkGanzesKlientensystem.TabIndex = 27;
            this.chkGanzesKlientensystem.CheckedChanged += new System.EventHandler(this.chkGanzesKlientensystem_CheckedChanged);
            //
            // kissLabel5
            //
            this.kissLabel5.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.kissLabel5.Location = new System.Drawing.Point(3, 318);
            this.kissLabel5.Name = "kissLabel5";
            this.kissLabel5.Size = new System.Drawing.Size(221, 24);
            this.kissLabel5.TabIndex = 30;
            this.kissLabel5.Text = "Gläubiger/in und Zahlinfo";
            this.kissLabel5.UseCompatibleTextRendering = true;
            //
            // lblZusatzZahlinfo
            //
            this.lblZusatzZahlinfo.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblZusatzZahlinfo.Location = new System.Drawing.Point(304, 317);
            this.lblZusatzZahlinfo.Name = "lblZusatzZahlinfo";
            this.lblZusatzZahlinfo.Size = new System.Drawing.Size(320, 24);
            this.lblZusatzZahlinfo.TabIndex = 31;
            this.lblZusatzZahlinfo.Text = "Teilzahlungsempfänger/in und Zahlinfo";
            this.lblZusatzZahlinfo.UseCompatibleTextRendering = true;
            //
            // edtBaZahlungsweg
            //
            this.edtBaZahlungsweg.AllowNull = false;
            this.edtBaZahlungsweg.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtBaZahlungsweg.DataMember = "BaZahlungswegID";
            this.edtBaZahlungsweg.DataSource = this.qryIkGlaeubiger;
            this.edtBaZahlungsweg.Location = new System.Drawing.Point(4, 258);
            this.edtBaZahlungsweg.Name = "edtBaZahlungsweg";
            this.edtBaZahlungsweg.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtBaZahlungsweg.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtBaZahlungsweg.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtBaZahlungsweg.Properties.Appearance.Options.UseBackColor = true;
            this.edtBaZahlungsweg.Properties.Appearance.Options.UseBorderColor = true;
            this.edtBaZahlungsweg.Properties.Appearance.Options.UseFont = true;
            this.edtBaZahlungsweg.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtBaZahlungsweg.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtBaZahlungsweg.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtBaZahlungsweg.Properties.Columns.AddRange(new DevExpress.XtraEditors.Controls.LookUpColumnInfo[] {
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("NameVorname", "Name", 120),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("DatumVon", "Gültig von", 80),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("DatumBis", "Gültig bis", 80),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("Typ", "Typ", 120)});
            this.edtBaZahlungsweg.Properties.DataSource = this.qryZahlungsweg;
            this.edtBaZahlungsweg.Properties.DisplayMember = "DisplayText";
            this.edtBaZahlungsweg.Properties.NullText = "";
            this.edtBaZahlungsweg.Properties.ShowFooter = false;
            this.edtBaZahlungsweg.Properties.ShowHeader = false;
            this.edtBaZahlungsweg.Properties.ValueMember = "Code";
            this.edtBaZahlungsweg.Size = new System.Drawing.Size(283, 24);
            this.edtBaZahlungsweg.TabIndex = 32;
            this.edtBaZahlungsweg.CloseUp += new DevExpress.XtraEditors.Controls.CloseUpEventHandler(this.edtBaZahlungsweg_CloseUp);
            //
            // edtBetrag
            //
            this.edtBetrag.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtBetrag.DataMember = "Betrag";
            this.edtBetrag.DataSource = this.qryIkGlaeubiger;
            this.edtBetrag.Location = new System.Drawing.Point(178, 288);
            this.edtBetrag.Name = "edtBetrag";
            this.edtBetrag.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.True;
            this.edtBetrag.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtBetrag.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtBetrag.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtBetrag.Properties.Appearance.Options.UseBackColor = true;
            this.edtBetrag.Properties.Appearance.Options.UseBorderColor = true;
            this.edtBetrag.Properties.Appearance.Options.UseFont = true;
            this.edtBetrag.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtBetrag.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtBetrag.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtBetrag.Properties.DisplayFormat.FormatString = "N2";
            this.edtBetrag.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtBetrag.Properties.EditFormat.FormatString = "N2";
            this.edtBetrag.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtBetrag.Size = new System.Drawing.Size(100, 24);
            this.edtBetrag.TabIndex = 34;
            this.edtBetrag.EditValueChanged += new System.EventHandler(this.edtBetrag_EditValueChanged);
            //
            // lblBetrag
            //
            this.lblBetrag.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblBetrag.Location = new System.Drawing.Point(4, 288);
            this.lblBetrag.Name = "lblBetrag";
            this.lblBetrag.Size = new System.Drawing.Size(168, 24);
            this.lblBetrag.TabIndex = 35;
            this.lblBetrag.Text = "maximale Auszahlung (oder leer)";
            this.lblBetrag.UseCompatibleTextRendering = true;
            //
            // lblBaZahlungsweg
            //
            this.lblBaZahlungsweg.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblBaZahlungsweg.LabelStyle = KiSS4.Gui.LabelStyleType.TitleLabel;
            this.lblBaZahlungsweg.Location = new System.Drawing.Point(4, 239);
            this.lblBaZahlungsweg.Name = "lblBaZahlungsweg";
            this.lblBaZahlungsweg.Size = new System.Drawing.Size(262, 16);
            this.lblBaZahlungsweg.TabIndex = 36;
            this.lblBaZahlungsweg.Text = "Hauptzahlungsweg (obligatorisch)";
            this.lblBaZahlungsweg.UseCompatibleTextRendering = true;
            //
            // lblZusatzBaZahlungsweg
            //
            this.lblZusatzBaZahlungsweg.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblZusatzBaZahlungsweg.LabelStyle = KiSS4.Gui.LabelStyleType.TitleLabel;
            this.lblZusatzBaZahlungsweg.Location = new System.Drawing.Point(304, 239);
            this.lblZusatzBaZahlungsweg.Name = "lblZusatzBaZahlungsweg";
            this.lblZusatzBaZahlungsweg.Size = new System.Drawing.Size(233, 16);
            this.lblZusatzBaZahlungsweg.TabIndex = 37;
            this.lblZusatzBaZahlungsweg.Text = "Teilzahlungsweg (optional)";
            this.lblZusatzBaZahlungsweg.UseCompatibleTextRendering = true;
            //
            // edtZusatzBaZahlungsweg
            //
            this.edtZusatzBaZahlungsweg.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtZusatzBaZahlungsweg.DataMember = "ZusatzBaZahlungswegID";
            this.edtZusatzBaZahlungsweg.DataSource = this.qryIkGlaeubiger;
            this.edtZusatzBaZahlungsweg.Location = new System.Drawing.Point(304, 258);
            this.edtZusatzBaZahlungsweg.Name = "edtZusatzBaZahlungsweg";
            this.edtZusatzBaZahlungsweg.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtZusatzBaZahlungsweg.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtZusatzBaZahlungsweg.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtZusatzBaZahlungsweg.Properties.Appearance.Options.UseBackColor = true;
            this.edtZusatzBaZahlungsweg.Properties.Appearance.Options.UseBorderColor = true;
            this.edtZusatzBaZahlungsweg.Properties.Appearance.Options.UseFont = true;
            this.edtZusatzBaZahlungsweg.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtZusatzBaZahlungsweg.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtZusatzBaZahlungsweg.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtZusatzBaZahlungsweg.Properties.Columns.AddRange(new DevExpress.XtraEditors.Controls.LookUpColumnInfo[] {
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("NameVorname", "Name", 120),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("DatumVon", "Gültig von", 80),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("DatumBis", "Gültig bis", 80),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("Typ", "Typ", 120)});
            this.edtZusatzBaZahlungsweg.Properties.DataSource = this.qryZahlungsweg;
            this.edtZusatzBaZahlungsweg.Properties.DisplayMember = "DisplayText";
            this.edtZusatzBaZahlungsweg.Properties.NullText = "";
            this.edtZusatzBaZahlungsweg.Properties.ShowFooter = false;
            this.edtZusatzBaZahlungsweg.Properties.ShowHeader = false;
            this.edtZusatzBaZahlungsweg.Properties.ValueMember = "Code";
            this.edtZusatzBaZahlungsweg.Size = new System.Drawing.Size(377, 24);
            this.edtZusatzBaZahlungsweg.TabIndex = 38;
            this.edtZusatzBaZahlungsweg.CloseUp += new DevExpress.XtraEditors.Controls.CloseUpEventHandler(this.edtZusatzBaZahlungsweg_CloseUp);
            //
            // lblZusatzBetrag
            //
            this.lblZusatzBetrag.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblZusatzBetrag.Location = new System.Drawing.Point(304, 288);
            this.lblZusatzBetrag.Name = "lblZusatzBetrag";
            this.lblZusatzBetrag.Size = new System.Drawing.Size(171, 24);
            this.lblZusatzBetrag.TabIndex = 39;
            this.lblZusatzBetrag.Text = "maximale Auszahlung (oder leer)";
            this.lblZusatzBetrag.UseCompatibleTextRendering = true;
            //
            // edtZusatzBetrag
            //
            this.edtZusatzBetrag.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtZusatzBetrag.DataMember = "ZusatzBetrag";
            this.edtZusatzBetrag.DataSource = this.qryIkGlaeubiger;
            this.edtZusatzBetrag.Location = new System.Drawing.Point(481, 288);
            this.edtZusatzBetrag.Name = "edtZusatzBetrag";
            this.edtZusatzBetrag.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.True;
            this.edtZusatzBetrag.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtZusatzBetrag.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtZusatzBetrag.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtZusatzBetrag.Properties.Appearance.Options.UseBackColor = true;
            this.edtZusatzBetrag.Properties.Appearance.Options.UseBorderColor = true;
            this.edtZusatzBetrag.Properties.Appearance.Options.UseFont = true;
            this.edtZusatzBetrag.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtZusatzBetrag.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtZusatzBetrag.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtZusatzBetrag.Properties.DisplayFormat.FormatString = "N2";
            this.edtZusatzBetrag.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtZusatzBetrag.Properties.EditFormat.FormatString = "N2";
            this.edtZusatzBetrag.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtZusatzBetrag.Size = new System.Drawing.Size(100, 24);
            this.edtZusatzBetrag.TabIndex = 40;
            this.edtZusatzBetrag.EditValueChanged += new System.EventHandler(this.edtZusatzBetrag_EditValueChanged);
            //
            // lblBetragALBV
            //
            this.lblBetragALBV.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblBetragALBV.Location = new System.Drawing.Point(4, 211);
            this.lblBetragALBV.Name = "lblBetragALBV";
            this.lblBetragALBV.Size = new System.Drawing.Size(100, 23);
            this.lblBetragALBV.TabIndex = 42;
            this.lblBetragALBV.Text = "prov. ALBV-Betrag";
            this.lblBetragALBV.UseCompatibleTextRendering = true;
            this.lblBetragALBV.Visible = false;
            //
            // edtBetragALBV
            //
            this.edtBetragALBV.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtBetragALBV.DataMember = "BetragALBV";
            this.edtBetragALBV.DataSource = this.qryIkGlaeubiger;
            this.edtBetragALBV.Location = new System.Drawing.Point(110, 211);
            this.edtBetragALBV.Name = "edtBetragALBV";
            this.edtBetragALBV.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.True;
            this.edtBetragALBV.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtBetragALBV.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtBetragALBV.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtBetragALBV.Properties.Appearance.Options.UseBackColor = true;
            this.edtBetragALBV.Properties.Appearance.Options.UseBorderColor = true;
            this.edtBetragALBV.Properties.Appearance.Options.UseFont = true;
            this.edtBetragALBV.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtBetragALBV.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtBetragALBV.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtBetragALBV.Properties.DisplayFormat.FormatString = "N2";
            this.edtBetragALBV.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtBetragALBV.Properties.EditFormat.FormatString = "N2";
            this.edtBetragALBV.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtBetragALBV.Size = new System.Drawing.Size(114, 24);
            this.edtBetragALBV.TabIndex = 43;
            this.edtBetragALBV.Visible = false;
            //
            // kissLabel1
            //
            this.kissLabel1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.kissLabel1.Location = new System.Drawing.Point(240, 211);
            this.kissLabel1.Name = "kissLabel1";
            this.kissLabel1.Size = new System.Drawing.Size(56, 24);
            this.kissLabel1.TabIndex = 44;
            this.kissLabel1.Text = "von / bis";
            this.kissLabel1.UseCompatibleTextRendering = true;
            this.kissLabel1.Visible = false;
            //
            // edtALBVDatumVon
            //
            this.edtALBVDatumVon.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtALBVDatumVon.DataMember = "ALBVDatumVon";
            this.edtALBVDatumVon.DataSource = this.qryIkGlaeubiger;
            this.edtALBVDatumVon.EditValue = null;
            this.edtALBVDatumVon.Location = new System.Drawing.Point(302, 210);
            this.edtALBVDatumVon.Name = "edtALBVDatumVon";
            this.edtALBVDatumVon.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.False;
            this.edtALBVDatumVon.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtALBVDatumVon.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtALBVDatumVon.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtALBVDatumVon.Properties.Appearance.Options.UseBackColor = true;
            this.edtALBVDatumVon.Properties.Appearance.Options.UseBorderColor = true;
            this.edtALBVDatumVon.Properties.Appearance.Options.UseFont = true;
            this.edtALBVDatumVon.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtALBVDatumVon.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtALBVDatumVon.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtALBVDatumVon.Properties.ShowToday = false;
            this.edtALBVDatumVon.Size = new System.Drawing.Size(100, 24);
            this.edtALBVDatumVon.TabIndex = 45;
            this.edtALBVDatumVon.Visible = false;
            //
            // edtALBVDatumBis
            //
            this.edtALBVDatumBis.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtALBVDatumBis.DataMember = "ALBVDatumBis";
            this.edtALBVDatumBis.DataSource = this.qryIkGlaeubiger;
            this.edtALBVDatumBis.EditValue = null;
            this.edtALBVDatumBis.Location = new System.Drawing.Point(408, 210);
            this.edtALBVDatumBis.Name = "edtALBVDatumBis";
            this.edtALBVDatumBis.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.False;
            this.edtALBVDatumBis.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtALBVDatumBis.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtALBVDatumBis.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtALBVDatumBis.Properties.Appearance.Options.UseBackColor = true;
            this.edtALBVDatumBis.Properties.Appearance.Options.UseBorderColor = true;
            this.edtALBVDatumBis.Properties.Appearance.Options.UseFont = true;
            this.edtALBVDatumBis.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtALBVDatumBis.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtALBVDatumBis.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtALBVDatumBis.Properties.ShowToday = false;
            this.edtALBVDatumBis.Size = new System.Drawing.Size(100, 24);
            this.edtALBVDatumBis.TabIndex = 46;
            this.edtALBVDatumBis.Visible = false;
            //
            // edtIkGlaeubigerStatusCode
            //
            this.edtIkGlaeubigerStatusCode.AllowNull = false;
            this.edtIkGlaeubigerStatusCode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtIkGlaeubigerStatusCode.DataMember = "IkGlaeubigerStatusCode";
            this.edtIkGlaeubigerStatusCode.DataSource = this.qryIkGlaeubiger;
            this.edtIkGlaeubigerStatusCode.Location = new System.Drawing.Point(58, 179);
            this.edtIkGlaeubigerStatusCode.Name = "edtIkGlaeubigerStatusCode";
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.Options.UseBackColor = true;
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.Options.UseBorderColor = true;
            this.edtIkGlaeubigerStatusCode.Properties.Appearance.Options.UseFont = true;
            this.edtIkGlaeubigerStatusCode.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtIkGlaeubigerStatusCode.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtIkGlaeubigerStatusCode.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtIkGlaeubigerStatusCode.Properties.Columns.AddRange(new DevExpress.XtraEditors.Controls.LookUpColumnInfo[] {
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("Code", "", 20, DevExpress.Utils.FormatType.None, "", false, DevExpress.Utils.HorzAlignment.Default, DevExpress.Data.ColumnSortOrder.None),
                        new DevExpress.XtraEditors.Controls.LookUpColumnInfo("Text")});
            this.edtIkGlaeubigerStatusCode.Properties.DataSource = this.qryStatus;
            this.edtIkGlaeubigerStatusCode.Properties.DisplayMember = "Text";
            this.edtIkGlaeubigerStatusCode.Properties.NullText = "";
            this.edtIkGlaeubigerStatusCode.Properties.ShowFooter = false;
            this.edtIkGlaeubigerStatusCode.Properties.ShowHeader = false;
            this.edtIkGlaeubigerStatusCode.Properties.ValueMember = "Code";
            this.edtIkGlaeubigerStatusCode.Size = new System.Drawing.Size(114, 24);
            this.edtIkGlaeubigerStatusCode.TabIndex = 47;
            this.edtIkGlaeubigerStatusCode.CloseUp += new DevExpress.XtraEditors.Controls.CloseUpEventHandler(this.edtIkGlaeubigerStatusCode_CloseUp);
            //
            // lblStatus
            //
            this.lblStatus.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblStatus.Location = new System.Drawing.Point(6, 180);
            this.lblStatus.Name = "lblStatus";
            this.lblStatus.Size = new System.Drawing.Size(46, 24);
            this.lblStatus.TabIndex = 48;
            this.lblStatus.Text = "Status";
            this.lblStatus.UseCompatibleTextRendering = true;
            //
            // lblVorsaldo
            //
            this.lblVorsaldo.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lblVorsaldo.Location = new System.Drawing.Point(196, 180);
            this.lblVorsaldo.Name = "lblVorsaldo";
            this.lblVorsaldo.Size = new System.Drawing.Size(66, 24);
            this.lblVorsaldo.TabIndex = 49;
            this.lblVorsaldo.Text = "Vorsaldo";
            this.lblVorsaldo.UseCompatibleTextRendering = true;
            this.lblVorsaldo.Visible = false;
            //
            // edtVorSaldo
            //
            this.edtVorSaldo.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.edtVorSaldo.DataMember = "VorSaldo";
            this.edtVorSaldo.DataSource = this.qryIkGlaeubiger;
            this.edtVorSaldo.Location = new System.Drawing.Point(268, 180);
            this.edtVorSaldo.Name = "edtVorSaldo";
            this.edtVorSaldo.Properties.AllowNullInput = DevExpress.Utils.DefaultBoolean.True;
            this.edtVorSaldo.Properties.Appearance.BackColor = System.Drawing.Color.AliceBlue;
            this.edtVorSaldo.Properties.Appearance.BorderColor = System.Drawing.Color.Linen;
            this.edtVorSaldo.Properties.Appearance.Font = new System.Drawing.Font("Arial", 13F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.edtVorSaldo.Properties.Appearance.Options.UseBackColor = true;
            this.edtVorSaldo.Properties.Appearance.Options.UseBorderColor = true;
            this.edtVorSaldo.Properties.Appearance.Options.UseFont = true;
            this.edtVorSaldo.Properties.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.HotFlat;
            this.edtVorSaldo.Properties.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.edtVorSaldo.Properties.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.edtVorSaldo.Properties.DisplayFormat.FormatString = "N2";
            this.edtVorSaldo.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtVorSaldo.Properties.EditFormat.FormatString = "N2";
            this.edtVorSaldo.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.edtVorSaldo.Size = new System.Drawing.Size(109, 24);
            this.edtVorSaldo.TabIndex = 50;
            this.edtVorSaldo.Visible = false;
            //
            // kissLabel2
            //
            this.kissLabel2.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.kissLabel2.Location = new System.Drawing.Point(383, 180);
            this.kissLabel2.Name = "kissLabel2";
            this.kissLabel2.Size = new System.Drawing.Size(298, 24);
            this.kissLabel2.TabIndex = 51;
            this.kissLabel2.Text = "positiv, wenn zu Gunsten Gläubiger";
            this.kissLabel2.UseCompatibleTextRendering = true;
            this.kissLabel2.Visible = false;
            //
            // colAnzahlRT
            //
            this.colAnzahlRT.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colAnzahlRT.AppearanceCell.Options.UseBackColor = true;
            this.colAnzahlRT.AppearanceCell.Options.UseTextOptions = true;
            this.colAnzahlRT.AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center;
            this.colAnzahlRT.Caption = "Rechtstitel";
            this.colAnzahlRT.FieldName = "AnzahlRT";
            this.colAnzahlRT.Name = "colAnzahlRT";
            this.colAnzahlRT.OptionsColumn.AllowEdit = false;
            this.colAnzahlRT.Visible = true;
            this.colAnzahlRT.VisibleIndex = 5;
            this.colAnzahlRT.Width = 70;
            //
            // colBetrag
            //
            this.colBetrag.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colBetrag.AppearanceCell.Options.UseBackColor = true;
            this.colBetrag.AppearanceHeader.Options.UseTextOptions = true;
            this.colBetrag.AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far;
            this.colBetrag.Caption = "Betrag";
            this.colBetrag.DisplayFormat.FormatString = "N2";
            this.colBetrag.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.colBetrag.FieldName = "Betrag";
            this.colBetrag.Name = "colBetrag";
            this.colBetrag.OptionsColumn.AllowEdit = false;
            this.colBetrag.Visible = true;
            this.colBetrag.VisibleIndex = 8;
            this.colBetrag.Width = 85;
            //
            // colGlaeubiger
            //
            this.colGlaeubiger.AppearanceCell.BackColor = System.Drawing.Color.AliceBlue;
            this.colGlaeubiger.AppearanceCell.Options.UseBackColor = true;
            this.colGlaeubiger.Caption = "Gläubiger";
            this.colGlaeubiger.ColumnEdit = this.repedtchkIstGlaeubiger;
            this.colGlaeubiger.FieldName = "IstGlaeubiger";
            this.colGlaeubiger.Name = "colGlaeubiger";
            this.colGlaeubiger.Visible = true;
            this.colGlaeubiger.VisibleIndex = 0;
            this.colGlaeubiger.Width = 64;
            //
            // colHatDaten
            //
            this.colHatDaten.Caption = "HatDaten";
            this.colHatDaten.FieldName = "HatDaten";
            this.colHatDaten.Name = "colHatDaten";
            //
            // colHatDatenEltern
            //
            this.colHatDatenEltern.Caption = "HatDatenEltern";
            this.colHatDatenEltern.FieldName = "HatDatenEltern";
            this.colHatDatenEltern.Name = "colHatDatenEltern";
            //
            // colIkGlaeubigerStatusCode
            //
            this.colIkGlaeubigerStatusCode.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colIkGlaeubigerStatusCode.AppearanceCell.ForeColor = System.Drawing.Color.Black;
            this.colIkGlaeubigerStatusCode.AppearanceCell.Options.UseBackColor = true;
            this.colIkGlaeubigerStatusCode.AppearanceCell.Options.UseForeColor = true;
            this.colIkGlaeubigerStatusCode.Caption = "Status";
            this.colIkGlaeubigerStatusCode.FieldName = "Status";
            this.colIkGlaeubigerStatusCode.Name = "colIkGlaeubigerStatusCode";
            this.colIkGlaeubigerStatusCode.OptionsColumn.AllowEdit = false;
            this.colIkGlaeubigerStatusCode.Visible = true;
            this.colIkGlaeubigerStatusCode.VisibleIndex = 4;
            this.colIkGlaeubigerStatusCode.Width = 92;
            //
            // colInterneVerrechnung
            //
            this.colInterneVerrechnung.Caption = "Int.Verr.";
            this.colInterneVerrechnung.ColumnEdit = this.repedtchkInterneVerrechnung;
            this.colInterneVerrechnung.FieldName = "InterneVerrechnung";
            this.colInterneVerrechnung.Name = "colInterneVerrechnung";
            this.colInterneVerrechnung.Visible = true;
            this.colInterneVerrechnung.VisibleIndex = 2;
            this.colInterneVerrechnung.Width = 59;
            //
            // colIstElternteil
            //
            this.colIstElternteil.AppearanceCell.BackColor = System.Drawing.Color.AliceBlue;
            this.colIstElternteil.AppearanceCell.Options.UseBackColor = true;
            this.colIstElternteil.Caption = "Erw.Alim";
            this.colIstElternteil.ColumnEdit = this.repedtchkIstElternteil;
            this.colIstElternteil.FieldName = "IstElternteil";
            this.colIstElternteil.Name = "colIstElternteil";
            this.colIstElternteil.Visible = true;
            this.colIstElternteil.VisibleIndex = 1;
            this.colIstElternteil.Width = 60;
            //
            // colPersonName
            //
            this.colPersonName.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colPersonName.AppearanceCell.Options.UseBackColor = true;
            this.colPersonName.Caption = "Zahlung an";
            this.colPersonName.FieldName = "ZWPersonName";
            this.colPersonName.Name = "colPersonName";
            this.colPersonName.OptionsColumn.AllowEdit = false;
            this.colPersonName.Visible = true;
            this.colPersonName.VisibleIndex = 7;
            this.colPersonName.Width = 123;
            //
            // colPersonundGeb
            //
            this.colPersonundGeb.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colPersonundGeb.AppearanceCell.Options.UseBackColor = true;
            this.colPersonundGeb.Caption = "Person / Geburtsdatum";
            this.colPersonundGeb.FieldName = "PersonName";
            this.colPersonundGeb.Name = "colPersonundGeb";
            this.colPersonundGeb.OptionsColumn.AllowEdit = false;
            this.colPersonundGeb.OptionsColumn.ReadOnly = true;
            this.colPersonundGeb.Visible = true;
            this.colPersonundGeb.VisibleIndex = 6;
            this.colPersonundGeb.Width = 198;
            //
            // colStatusCode
            //
            this.colStatusCode.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colStatusCode.AppearanceCell.Options.UseBackColor = true;
            this.colStatusCode.Caption = "Stat.";
            this.colStatusCode.ColumnEdit = this.repedtImages;
            this.colStatusCode.FieldName = "IkGlaeubigerStatusCode";
            this.colStatusCode.Name = "colStatusCode";
            this.colStatusCode.OptionsColumn.AllowEdit = false;
            this.colStatusCode.Visible = true;
            this.colStatusCode.VisibleIndex = 3;
            this.colStatusCode.Width = 37;
            //
            // colZusatzBetrag
            //
            this.colZusatzBetrag.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colZusatzBetrag.AppearanceCell.Options.UseBackColor = true;
            this.colZusatzBetrag.AppearanceHeader.Options.UseTextOptions = true;
            this.colZusatzBetrag.AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far;
            this.colZusatzBetrag.Caption = "Teilbetrag";
            this.colZusatzBetrag.DisplayFormat.FormatString = "N2";
            this.colZusatzBetrag.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            this.colZusatzBetrag.FieldName = "ZusatzBetrag";
            this.colZusatzBetrag.Name = "colZusatzBetrag";
            this.colZusatzBetrag.OptionsColumn.AllowEdit = false;
            this.colZusatzBetrag.Visible = true;
            this.colZusatzBetrag.VisibleIndex = 10;
            this.colZusatzBetrag.Width = 85;
            //
            // colZusatzPersonName
            //
            this.colZusatzPersonName.AppearanceCell.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.colZusatzPersonName.AppearanceCell.Options.UseBackColor = true;
            this.colZusatzPersonName.Caption = "Teilzahlung an";
            this.colZusatzPersonName.FieldName = "ZWZusatzPersonName";
            this.colZusatzPersonName.Name = "colZusatzPersonName";
            this.colZusatzPersonName.OptionsColumn.AllowEdit = false;
            this.colZusatzPersonName.Visible = true;
            this.colZusatzPersonName.VisibleIndex = 9;
            this.colZusatzPersonName.Width = 124;
            //
            // grvGlaeubiger
            //
            this.grvGlaeubiger.Appearance.Empty.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(247)))), ((int)(((byte)(239)))), ((int)(((byte)(231)))));
            this.grvGlaeubiger.Appearance.Empty.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.Empty.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.Empty.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.EvenRow.BackColor = System.Drawing.Color.AliceBlue;
            this.grvGlaeubiger.Appearance.EvenRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.EvenRow.ForeColor = System.Drawing.Color.Black;
            this.grvGlaeubiger.Appearance.EvenRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.EvenRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.EvenRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.FocusedCell.BackColor = System.Drawing.SystemColors.Highlight;
            this.grvGlaeubiger.Appearance.FocusedCell.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.FocusedCell.ForeColor = System.Drawing.SystemColors.HighlightText;
            this.grvGlaeubiger.Appearance.FocusedCell.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.FocusedCell.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.FocusedCell.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.FocusedRow.BackColor = System.Drawing.SystemColors.Highlight;
            this.grvGlaeubiger.Appearance.FocusedRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.FocusedRow.ForeColor = System.Drawing.SystemColors.HighlightText;
            this.grvGlaeubiger.Appearance.FocusedRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.FocusedRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.FocusedRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.GroupPanel.BackColor = System.Drawing.Color.PeachPuff;
            this.grvGlaeubiger.Appearance.GroupPanel.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.GroupRow.BackColor = System.Drawing.Color.PeachPuff;
            this.grvGlaeubiger.Appearance.GroupRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.GroupRow.ForeColor = System.Drawing.SystemColors.WindowText;
            this.grvGlaeubiger.Appearance.GroupRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.GroupRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.GroupRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.HeaderPanel.BackColor = System.Drawing.Color.Tan;
            this.grvGlaeubiger.Appearance.HeaderPanel.BorderColor = System.Drawing.Color.Tan;
            this.grvGlaeubiger.Appearance.HeaderPanel.Font = new System.Drawing.Font("Arial", 11F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.HeaderPanel.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.HeaderPanel.Options.UseBorderColor = true;
            this.grvGlaeubiger.Appearance.HeaderPanel.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.HideSelectionRow.BackColor = System.Drawing.Color.PowderBlue;
            this.grvGlaeubiger.Appearance.HideSelectionRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.HideSelectionRow.ForeColor = System.Drawing.SystemColors.WindowText;
            this.grvGlaeubiger.Appearance.HideSelectionRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.HideSelectionRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.HideSelectionRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.HorzLine.BackColor = System.Drawing.Color.LightGray;
            this.grvGlaeubiger.Appearance.HorzLine.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.OddRow.BackColor = System.Drawing.Color.AliceBlue;
            this.grvGlaeubiger.Appearance.OddRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.OddRow.ForeColor = System.Drawing.Color.Black;
            this.grvGlaeubiger.Appearance.OddRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.OddRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.OddRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.Row.BackColor = System.Drawing.Color.AliceBlue;
            this.grvGlaeubiger.Appearance.Row.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.Row.ForeColor = System.Drawing.Color.Black;
            this.grvGlaeubiger.Appearance.Row.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.Row.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.Row.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.SelectedRow.BackColor = System.Drawing.Color.BlanchedAlmond;
            this.grvGlaeubiger.Appearance.SelectedRow.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Pixel);
            this.grvGlaeubiger.Appearance.SelectedRow.ForeColor = System.Drawing.Color.Black;
            this.grvGlaeubiger.Appearance.SelectedRow.Options.UseBackColor = true;
            this.grvGlaeubiger.Appearance.SelectedRow.Options.UseFont = true;
            this.grvGlaeubiger.Appearance.SelectedRow.Options.UseForeColor = true;
            this.grvGlaeubiger.Appearance.VertLine.BackColor = System.Drawing.Color.LightGray;
            this.grvGlaeubiger.Appearance.VertLine.Options.UseBackColor = true;
            this.grvGlaeubiger.BorderStyle = DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat;
            this.grvGlaeubiger.Columns.AddRange(new DevExpress.XtraGrid.Columns.GridColumn[] {
                        this.colGlaeubiger,
                        this.colIstElternteil,
                        this.colInterneVerrechnung,
                        this.colStatusCode,
                        this.colIkGlaeubigerStatusCode,
                        this.colAnzahlRT,
                        this.colPersonundGeb,
                        this.colPersonName,
                        this.colBetrag,
                        this.colZusatzPersonName,
                        this.colZusatzBetrag,
                        this.colHatDaten,
                        this.colHatDatenEltern});
            this.grvGlaeubiger.GridControl = this.grdGlaeubiger;
            this.grvGlaeubiger.Name = "grvGlaeubiger";
            this.grvGlaeubiger.OptionsCustomization.AllowFilter = false;
            this.grvGlaeubiger.OptionsFilter.UseNewCustomFilterDialog = true;
            this.grvGlaeubiger.OptionsNavigation.AutoFocusNewRow = true;
            this.grvGlaeubiger.OptionsView.ColumnAutoWidth = false;
            this.grvGlaeubiger.OptionsView.ShowFilterPanelMode = DevExpress.XtraGrid.Views.Base.ShowFilterPanelMode.Never;
            this.grvGlaeubiger.OptionsView.ShowGroupPanel = false;
            this.grvGlaeubiger.ShowingEditor += new System.ComponentModel.CancelEventHandler(this.grvGlaeubiger_ShowingEditor);
            this.grvGlaeubiger.CustomDrawCell += new DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventHandler(this.grvGlaeubiger_CustomDrawCell);
            //
            // qryIkGlaeubiger
            //
            this.qryIkGlaeubiger.BatchUpdate = true;
            this.qryIkGlaeubiger.CanUpdate = true;
            this.qryIkGlaeubiger.HostControl = this;
            this.qryIkGlaeubiger.SelectStatement = resources.GetString("qryIkGlaeubiger.SelectStatement");
            this.qryIkGlaeubiger.TableName = "IkGlaeubiger";
            this.qryIkGlaeubiger.AfterFill += new System.EventHandler(this.qryIkGlaeubiger_AfterFill);
            this.qryIkGlaeubiger.PositionChanged += new System.EventHandler(this.qryIkGlaeubiger_PositionChanged);
            this.qryIkGlaeubiger.BeforePost += new System.EventHandler(this.qryIkGlaeubiger_BeforePost);
            this.qryIkGlaeubiger.PositionChanging += new System.EventHandler(this.qryIkGlaeubiger_PositionChanging);
            //
            // qryStatus
            //
            this.qryStatus.HostControl = this;
            this.qryStatus.SelectStatement = "select Code, Text from dbo.XLOVCode WITH(READUNCOMMITTED)\r\nwhere LOVName = \'IkGla" +
                "eubigerStatus\'\r\norder by SortKey";
            //
            // qryZahlInfo
            //
            this.qryZahlInfo.HostControl = this;
            this.qryZahlInfo.SelectStatement = resources.GetString("qryZahlInfo.SelectStatement");
            //
            // qryZahlungsweg
            //
            this.qryZahlungsweg.HostControl = this;
            this.qryZahlungsweg.SelectStatement = resources.GetString("qryZahlungsweg.SelectStatement");
            //
            // qryZusatzZahlInfo
            //
            this.qryZusatzZahlInfo.HostControl = this;
            this.qryZusatzZahlInfo.SelectStatement = resources.GetString("qryZusatzZahlInfo.SelectStatement");
            //
            // repedtchkInterneVerrechnung
            //
            this.repedtchkInterneVerrechnung.AutoHeight = false;
            this.repedtchkInterneVerrechnung.Name = "repedtchkInterneVerrechnung";
            this.repedtchkInterneVerrechnung.EditValueChanging += new DevExpress.XtraEditors.Controls.ChangingEventHandler(this.repedtchkInterneVerrechnung_EditValueChanging);
            //
            // repedtchkIstElternteil
            //
            this.repedtchkIstElternteil.AutoHeight = false;
            this.repedtchkIstElternteil.Name = "repedtchkIstElternteil";
            this.repedtchkIstElternteil.NullStyle = DevExpress.XtraEditors.Controls.StyleIndeterminate.Inactive;
            this.repedtchkIstElternteil.CheckedChanged += new System.EventHandler(this.repedtchkIstElternteil_CheckedChanged);
            //
            // repedtchkIstGlaeubiger
            //
            this.repedtchkIstGlaeubiger.AutoHeight = false;
            this.repedtchkIstGlaeubiger.Name = "repedtchkIstGlaeubiger";
            this.repedtchkIstGlaeubiger.CheckedChanged += new System.EventHandler(this.repedtchkIstGlaeubiger_CheckedChanged);
            //
            // repedtImages
            //
            this.repedtImages.AutoHeight = false;
            this.repedtImages.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
                        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Combo)});
            this.repedtImages.GlyphAlignment = DevExpress.Utils.HorzAlignment.Center;
            this.repedtImages.Name = "repedtImages";
            //
            // CtlIkRechtstitelGlaeubiger
            //
            this.Controls.Add(this.kissLabel2);
            this.Controls.Add(this.edtVorSaldo);
            this.Controls.Add(this.lblVorsaldo);
            this.Controls.Add(this.lblStatus);
            this.Controls.Add(this.edtIkGlaeubigerStatusCode);
            this.Controls.Add(this.edtALBVDatumBis);
            this.Controls.Add(this.edtALBVDatumVon);
            this.Controls.Add(this.kissLabel1);
            this.Controls.Add(this.edtBetragALBV);
            this.Controls.Add(this.lblBetragALBV);
            this.Controls.Add(this.edtZusatzBetrag);
            this.Controls.Add(this.lblZusatzBetrag);
            this.Controls.Add(this.edtZusatzBaZahlungsweg);
            this.Controls.Add(this.lblZusatzBaZahlungsweg);
            this.Controls.Add(this.lblBaZahlungsweg);
            this.Controls.Add(this.lblBetrag);
            this.Controls.Add(this.edtBetrag);
            this.Controls.Add(this.edtBaZahlungsweg);
            this.Controls.Add(this.lblZusatzZahlinfo);
            this.Controls.Add(this.kissLabel5);
            this.Controls.Add(this.chkGanzesKlientensystem);
            this.Controls.Add(this.memZusatzKreditor);
            this.Controls.Add(this.memKreditor);
            this.Controls.Add(this.grdGlaeubiger);
            this.Name = "CtlIkRechtstitelGlaeubiger";
            this.Size = new System.Drawing.Size(695, 544);
            this.MoveFirst += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_MoveFirst);
            this.MoveNext += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_MoveNext);
            this.SaveData += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_SaveData);
            this.MovePrevious += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_MovePrevious);
            this.RefreshData += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_RefreshData);
            this.UndoDataChanges += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_UndoDataChanges);
            this.SizeChanged += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_SizeChanged);
            this.MoveLast += new System.EventHandler(this.CtlIkRechtstitelGlaeubiger_MoveLast);
            ((System.ComponentModel.ISupportInitialize)(this.grdGlaeubiger)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.memKreditor.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.memZusatzKreditor.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chkGanzesKlientensystem.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzZahlinfo)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBaZahlungsweg.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBaZahlungsweg)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBetrag.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBetrag)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBaZahlungsweg)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzBaZahlungsweg)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBaZahlungsweg.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBaZahlungsweg)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblZusatzBetrag)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtZusatzBetrag.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblBetragALBV)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtBetragALBV.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtALBVDatumVon.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtALBVDatumBis.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtIkGlaeubigerStatusCode.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtIkGlaeubigerStatusCode)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblStatus)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.lblVorsaldo)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.edtVorSaldo.Properties)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.kissLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.grvGlaeubiger)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryIkGlaeubiger)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryStatus)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZahlInfo)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZahlungsweg)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.qryZusatzZahlInfo)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkInterneVerrechnung)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkIstElternteil)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtchkIstGlaeubiger)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.repedtImages)).EndInit();
            this.ResumeLayout(false);
        }

        #endregion

        #region Dispose

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                if ((components != null))
                {
                    components.Dispose();
                }
            }
            base.Dispose(disposing);
        }

        #endregion

        #region Private Properties

        // Letzte Bearbeitung
        // 02.04.2008 : sozheo : neu
        // ------------------------------------------------------------------------
        private bool CanEdit
        {
            get
              {
            return (
              qryIkGlaeubiger.CanUpdate &&
              qryIkGlaeubiger.Count > 0 &&
              !LeistungIstGeschlossen
            );
              }
        }

        #endregion

        #region Public Methods

        // Letzte Bearbeitung
        // 30.08.2007 : sozheo : neu
        // 05.05.2008 : sozheo : Korrekturen für neues Feld "IkGlaeubigerStatusCode"
        // 26.06.2008 : sozheo : Vorsaldo eingebaut
        // ------------------------------------------------------------------------
        public bool AllesSpeichern()
        {
            if (LeistungIstGeschlossen) return true;

              if (!qryIkGlaeubiger.Post()) return false;
              if (!DatenGlaeubigerWurdenKorrigiert) return true;

              if (!GlaeubigerAnzahlChecken()) return false;
              if (!GlaeubigerElternKindChecken()) return false;

              IBANNummernChecken();

              bool HasErrors = false;
              string sql = "";
              Session.BeginTransaction();
              try
              {
            foreach (System.Data.DataRow row in qryIkGlaeubiger.DataTable.Rows)
            if (!(bool)row["IstGlaeubiger"] && Utils.ConvertToInt(row["IkGlaeubigerID"])>0)
            {
              // Löschen:
              sql = "DELETE dbo.IkGlaeubiger  ";
              sql += string.Format("WHERE IkGlaeubigerID = {0} ", Utils.ConvertToInt(row["IkGlaeubigerID"]));
              DBUtil.ExecSQL(sql);
            }
            else
            if ((bool)row["IstGlaeubiger"] && Utils.ConvertToInt(row["IkGlaeubigerID"])==0 && row.RowState != System.Data.DataRowState.Unchanged)
            {
              // Einfügen:
              DBUtil.ExecSQL(@"
                INSERT INTO dbo.IkGlaeubiger (
                  IKRechtstitelID, BaPersonID, BaZahlungswegID, ZusatzBaZahlungswegID,
                  Betrag, ZusatzBetrag, IstElternteil, InterneVerrechnung,
                  BetragALBV, ALBVDatumVon, ALBVDatumBis, IkGlaeubigerStatusCode, Vorsaldo )
                VALUES
                  ({0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12}) ",
                IkRechtstitelID,
                Utils.ConvertToInt(row["BaPersonID"]),
                row["BaZahlungswegID"],
                row["ZusatzBaZahlungswegID"],
                row["Betrag"],
                row["ZusatzBetrag"],
                row["IstElternteil"],
                row["InterneVerrechnung"],
                row["BetragALBV"],
                row["ALBVDatumVon"],
                row["ALBVDatumBis"],
                DBUtil.IsEmpty(row["IkGlaeubigerStatusCode"]) ? 1 : row["IkGlaeubigerStatusCode"],
                row["VorSaldo"]
              );
            }
            else
            if ((bool)row["IstGlaeubiger"] && Utils.ConvertToInt(row["IkGlaeubigerID"])>0 && row.RowState != System.Data.DataRowState.Unchanged)
            {
              DBUtil.ExecSQL(@"
                UPDATE dbo.IkGlaeubiger SET
                  IkRechtstitelID = {0},
                  BaPersonID = {1},
                  BaZahlungswegID = {2},
                  ZusatzBaZahlungswegID = {3},
                  Betrag = {4},
                  ZusatzBetrag = {5},
                  IstElternteil = {6},
                  InterneVerrechnung = {7},
                  BetragALBV = {8},
                  ALBVDatumVon = {9},
                  ALBVDatumBis = {10},
                  IkGlaeubigerStatusCode = {11},
                  VorSaldo = {12}
                WHERE IkGlaeubigerID = {13}",
                IkRechtstitelID,
                Utils.ConvertToInt(row["BaPersonID"]),
                row["BaZahlungswegID"],
                row["ZusatzBaZahlungswegID"],
                row["Betrag"],
                row["ZusatzBetrag"],
                row["IstElternteil"],
                row["InterneVerrechnung"],
                row["BetragALBV"],
                row["ALBVDatumVon"],
                row["ALBVDatumBis"],
                DBUtil.IsEmpty(row["IkGlaeubigerStatusCode"]) ? 1 : row["IkGlaeubigerStatusCode"],
                row["VorSaldo"],
                Utils.ConvertToInt(row["IkGlaeubigerID"])
              );
            }
            Session.Commit();
            DatenGlaeubigerWurdenKorrigiert = false;
            //FormController.SendMessage( "FrmFall", "Action", "RefreshTree" );
              }
              catch (Exception ex)
              {
            Session.Rollback();
            KissMsg.ShowInfo(ex.Message);
            HasErrors = true;
              }

              if (!HasErrors)
              {
            int gID = Utils.ConvertToInt(qryIkGlaeubiger["BaPersonID"]);
            GlaeubigerOeffnen();
            qryIkGlaeubiger.Find("BaPersonID="+gID.ToString());
            MonatszahlenNeuRechnen();

            // Navigator Trees aktualisieren:
            FormController.SendMessage("FrmFall", "Action", "RefreshTree");
              }
              return (!HasErrors);
        }

        public void Init(
            int RechtstitelID,
            int FallID,
            bool CanEdit,
            bool IstKKBB,
            int LeistungID,
            int ProzessCode,
            int SchuldnerID,
            bool LeistgGeschlossen
            )
        {
            IkRechtstitelID = RechtstitelID;
            FaFallID = FallID;
            RtIstKKBB = IstKKBB;
            FaLeistungID = LeistungID;
            FaProzessCode = ProzessCode;
            SchuldnerBaPersonID1 = SchuldnerID;
            LeistungIstGeschlossen = LeistgGeschlossen;
            if (LeistungIstGeschlossen)
            {
                qryIkGlaeubiger.CanUpdate = false;
                qryIkGlaeubiger.CanInsert = false;
                qryIkGlaeubiger.CanDelete = false;
            }

            if (!RtIstKKBB) qryIkGlaeubiger.CanUpdate = qryIkGlaeubiger.CanUpdate && CanEdit;
            colGlaeubiger.ColumnEdit.ReadOnly = (!CanEdit || RtIstKKBB);

            // Gläubiger-Status
            qryStatus.Fill();

            //Buchungsstati laden
            repedtImages.SmallImages = KissImageList.SmallImageList;
            SqlQuery qryStati = DBUtil.OpenSQL(
            "select Code, Text, Value1 from dbo.XLOVCode WITH(READUNCOMMITTED) where LOVName = 'IkGlaeubigerStatus' order by SortKey"
            );
            foreach (DataRow row in qryStati.DataTable.Rows)
            {
                repedtImages.Items.Add(new DevExpress.XtraEditors.Controls.ImageComboBoxItem(
                  row["Text"].ToString(),
                  (int) row["Code"],
                  KissImageList.GetImageIndex(Convert.ToInt32(row["Value1"]))));
            }

            if (FaProzessCode != 405)
            {
                // Diese Spalten sind nur bei ALBV sichtbar:
                colIstElternteil.Visible = false;
            }

            // Daten neu anzeigen:
            GlaeubigerOeffnen();
        }

        // Letzte Bearbeitung
        // 24.01.2008 : sozheo : neu
        // ------------------------------------------------------------------------
        public bool KKBBGlaeubigerSetzen(int BaPersonID, bool StatusIstOK)
        {
            // Hier werden die Vorgabewerte des KKBB-Rechtstitels gesetzt:
              // den Gläubiger neu erstellen, wenn er fehlt
              // den Glaubiger wechseln
              if (qryIkGlaeubiger.Find("IstGlaeubiger=1"))
              {
            // Es gibt bereits einen Gläubiger, also entfernen, wenn notwendig:
            if (Utils.ConvertToInt(qryIkGlaeubiger["BaPersonID"]) != BaPersonID || !StatusIstOK) {
              // alten Gläubiger löschen:
              qryIkGlaeubiger["IstGlaeubiger"] = false;
              qryIkGlaeubiger.RowModified = true;
              DatenGlaeubigerWurdenKorrigiert = true;
              qryIkGlaeubiger_PositionChanged(null, null);
            }
            else return true;
              }

              // Wenn der Status nicht ok ist, dann soll kein Gläubiger gewählt sein:
              if (!StatusIstOK) return true;

              // Wenn der Status ok ist, kontrollieren, ob Gläubiger richtig gesetzt ist:
              if (!qryIkGlaeubiger.Find("BaPersonID="+BaPersonID.ToString()))
              {
            KissMsg.ShowInfo("Programmfehler: Die Personen-ID konnte nicht gefunden werden.");
            return false;
              }

              if (!(bool)qryIkGlaeubiger["IstGlaeubiger"])
              {
            // ist noch nicht gewählt, also setzen;
            qryIkGlaeubiger["IstGlaeubiger"] = true;
            qryIkGlaeubiger.RowModified = true;
            DatenGlaeubigerWurdenKorrigiert = true;
            qryIkGlaeubiger_PositionChanged(null, null);
              }
              return true;
        }

        // Letzte Bearbeitung
        // 22.09.2007 : sozheo : neu, damit Änderungen des Geburtsdatums aktualisiert werden
        // --------------------------------------------------------------------------------------
        public override bool ReceiveMessage( System.Collections.Specialized.HybridDictionary param )
        {
            // we need at least one parameter to know what to do
              if( param == null || param.Count < 1 ) return true;

              // action depending
              switch( param["Action"] as string )
              {
            case "Refresh": qryIkGlaeubiger.Refresh(); return true;
              }

              // did not understand message
              return false;
        }

        #endregion

        #region Private Methods

        private void CtlIkRechtstitelGlaeubiger_MoveFirst(object sender, EventArgs e)
        {
            qryIkGlaeubiger.First();
        }

        private void CtlIkRechtstitelGlaeubiger_MoveLast(object sender, EventArgs e)
        {
            qryIkGlaeubiger.Last();
        }

        private void CtlIkRechtstitelGlaeubiger_MoveNext(object sender, EventArgs e)
        {
            qryIkGlaeubiger.Next();
        }

        private void CtlIkRechtstitelGlaeubiger_MovePrevious(object sender, EventArgs e)
        {
            qryIkGlaeubiger.Previous();
        }

        private void CtlIkRechtstitelGlaeubiger_RefreshData(object sender, EventArgs e)
        {
            if (!AllesSpeichern()) return;
              // Daten neu anzeigen:
              GlaeubigerOeffnen();
        }

        // Letzte Bearbeitung
        // 30.08.2007 : sozheo : neu
        // ------------------------------------------------------------------------
        private void CtlIkRechtstitelGlaeubiger_SaveData(object sender, EventArgs e)
        {
            if (!AllesSpeichern()) throw new KissCancelException();
        }

        // Letzte Bearbeitung
        // 24.01.2008 : sozheo : neu
        // ------------------------------------------------------------------------
        private void CtlIkRechtstitelGlaeubiger_SizeChanged(object sender, EventArgs e)
        {
            int HalfWidth = this.Size.Width / 2;

              // Zahlinfo links:
              edtBaZahlungsweg.Width = HalfWidth - 8 - 6;
              memKreditor.Width = HalfWidth - 8 - 6;

              // Zahlinfo rechts:
              lblZusatzBaZahlungsweg.Left = HalfWidth + 8;
              edtZusatzBaZahlungsweg.Left = HalfWidth + 8;
              lblZusatzBetrag.Left = HalfWidth + 8;
              edtZusatzBetrag.Left = HalfWidth + 8 + 168;
              lblZusatzZahlinfo.Left = HalfWidth + 8;
              memZusatzKreditor.Left = HalfWidth + 8;
              edtZusatzBaZahlungsweg.Width = HalfWidth - 8 -6;
              memZusatzKreditor.Width = HalfWidth - 8 - 6;
        }

        private void CtlIkRechtstitelGlaeubiger_UndoDataChanges(object sender, EventArgs e)
        {
            // Daten neu anzeigen:
              GlaeubigerOeffnen();
        }

        // Letzte Bearbeitung
        // 06.03.2008 : sozheo : neu
        // ------------------------------------------------------------------------
        private void EditierenALBVEinstellen(bool IstGlaeubiger, bool IstElternteil)
        {
            // ALBV Betrag nur bei Kinder
              bool CanEditDet = (
            CanEdit &&
            IstGlaeubiger &&
            !IstElternteil
              );
              EditModeType EMode = CanEditDet ? EditModeType.Normal : EditModeType.ReadOnly;
              edtBetragALBV.EditMode = EMode;
              edtALBVDatumVon.EditMode = EMode;
              edtALBVDatumBis.EditMode = EMode;
              edtVorSaldo.EditMode = EMode;
        }

        private void EditierenBetragEinstellen(bool IstGlaeubiger)
        {
            // Betrag sperren oder nicht:
              bool CanEditDet = (
            CanEdit &&
            IstGlaeubiger &&
            !DBUtil.IsEmpty(qryIkGlaeubiger["ZusatzBaZahlungswegID"])
              );
              EditModeType EMode = EditModeType.ReadOnly;
              if (CanEditDet) EMode = EditModeType.Normal;
              edtBetrag.EditMode = EMode;
              edtZusatzBetrag.EditMode = EMode;
        }

        // Letzte Bearbeitung
        // 25.01.2008 : sozheo : neu
        // 22.05.2008 : sozheo : Zahlungsweg soll immer editierbar sein
        // ------------------------------------------------------------------------
        private void EditierenFelderEinstellen(bool IstGlaeubiger, bool Intern)
        {
            // Status
              bool CanEditDet = (
            CanEdit &&
            IstGlaeubiger
              );
              EditModeType EMode = EditModeType.ReadOnly;
              if (CanEditDet) EMode = EditModeType.Normal;
              edtIkGlaeubigerStatusCode.EditMode = EMode;
              edtVorSaldo.EditMode = EMode;

              // Zahlungsweg: ist nur editierbar, wenn nicht interne Verrechnung
              CanEditDet = (
            CanEdit &&
            IstGlaeubiger
            //&& (!Intern)
              );
              EMode = EditModeType.ReadOnly;
              if (CanEditDet) EMode = EditModeType.Normal;
              edtBaZahlungsweg.EditMode = EMode;

              // Zusatz-Zahlungsweg: ist immer editierbar
              CanEditDet = (
            CanEdit &&
            IstGlaeubiger
              );
              EMode = EditModeType.ReadOnly;
              if (CanEditDet) EMode = EditModeType.Normal;
              edtZusatzBaZahlungsweg.EditMode = EMode;
        }

        private DateTime GetDatumBisZahlweg(int ZCode)
        {
            if (ZCode == 0) return DateTime.Today;
              if (!qryZahlungsweg.Find("Code=" + ZCode.ToString())) return DateTime.Today;
              if (DBUtil.IsEmpty(qryZahlungsweg["DatumBisKontrolle"])) return DateTime.Today;
              return (DateTime)qryZahlungsweg["DatumBisKontrolle"];
        }

        // Letzte Bearbeitung
        // 27.05.2008 : sozheo : neu
        // ------------------------------------------------------------------------
        private DateTime GetDatumVonZahlweg(int ZCode)
        {
            if (ZCode == 0) return DateTime.Today;
              if (!qryZahlungsweg.Find("Code=" + ZCode.ToString())) return DateTime.Today;
              if (DBUtil.IsEmpty(qryZahlungsweg["DatumVonKontrolle"])) return DateTime.Today;
              return (DateTime)qryZahlungsweg["DatumVonKontrolle"];
        }

        // Letzte Bearbeitung
        // 23.01.2008 : sozheo : neu
        // 14.02.2008 : sozheo : Kontrolle Gläubiger korrigiert
        // ------------------------------------------------------------------------
        private bool GlaeubigerAnzahlChecken()
        {
            string msg = "";
              SqlQuery qry;

              // Kontrolle, dass ein Gläubiger nur in einem aktiven Rechsttitel vorhanden ist
              foreach (System.Data.DataRow row in qryIkGlaeubiger.DataTable.Rows)
              if ( (bool)row["IstGlaeubiger"] && DBUtil.IsEmpty(row["IkGlaeubigerID"]))
              {
            qry = DBUtil.OpenSQL(@"
              select Count(*) as Anzahl from dbo.IkGlaeubiger GLB
              left join dbo.IkRechtstitel RTL WITH(READUNCOMMITTED) on RTL.IkRechtstitelID = GLB.IkRechtstitelID
              left join dbo.FaLeistung LTG WITH(READUNCOMMITTED) on LTG.FaLeistungID = RTL.FaLeistungID
              where GLB.BaPersonID = {0}
                and LTG.FaFallID = {1}
                and (
                  -- Bei KKBB sollen nur Rechtstitel KKBB angezeigt werden
                  ({3} = 407 and LTG.FaProzessCode = 407) OR
                  -- Bei ALBV und UeBH sollen nur Rechtstitel ALBV und UeBH angezeigt werden
                  ({3} IN (405, 406) and LTG.FaProzessCode IN (405, 406) and not RTL.IkRechtstitelGueltigBis is NULL)
                )
                and not GLB.IkRechtstitelID = {2}",
              row["BaPersonID"],
              FaFallID,
              IkRechtstitelID,
              FaProzessCode
            );

            if (Utils.ConvertToInt(qry["Anzahl"]) > 0)
            {
              if (msg != "") msg += "\r\n";
              msg += Utils.ConvertToString(row["PersonName"]) + " (" + Utils.ConvertToInt(qry["Anzahl"]).ToString() + ")";
            }
              }
              if (msg != "") KissMsg.ShowInfo(string.Format(
            "Folgende Personen sind bereits in einem anderen Rechstitel als Gläubiger erfasst:\r\n\r\n"+
            "{0}\r\n\r\n"+
            "Diese Personen können nicht einem 2. Rechtstitel hinzugefügt werden.",
            msg));

              return (msg == "");
        }

        // Letzte Bearbeitung
        // 23.01.2008 : sozheo : neu
        // 14.02.2008 : sozheo : Kontrolle Gläubiger korrigiert
        // ------------------------------------------------------------------------
        private bool GlaeubigerElternKindChecken()
        {
            int AnzEltern = 0;

            // Kontrolle, dass ein Gläubiger nur in einem aktiven Rechsttitel vorhanden ist
            foreach (System.Data.DataRow row in qryIkGlaeubiger.DataTable.Rows)
                if ((bool)row["IstGlaeubiger"])
                {
                    if ((bool)row["IstElternteil"]) AnzEltern += 1;
                }

            if (AnzEltern > 1)
            {
                KissMsg.ShowInfo("Sie können nur einen Erwachsenen auswählen.");
                return false;
            }
            return true;
        }

        private void GlaeubigerOeffnen()
        {
            int Filter = (chkGanzesKlientensystem.Checked) ? 1 : 0;
              qryIkGlaeubiger.Fill(IkRechtstitelID, FaFallID, Filter, FaProzessCode);

              // Mögliche Zahlungswege neu anzeigen:
              // Neu sollen alle Schuldner ausgeklammert werden:
              qryZahlungsweg.Fill(FaFallID, FaLeistungID);
              edtBaZahlungsweg.Properties.DropDownRows = 7;
              edtZusatzBaZahlungsweg.Properties.DropDownRows = 7;
        }

        // Letzte Bearbeitung
        // 18.01.2008 : sozheo : Prüfung wieder aktiviert
        // ------------------------------------------------------------------------
        private void IBANNummernChecken()
        {
            string msg = "";
              SqlQuery sql;

              // Kontrolle IBAN
              foreach (System.Data.DataRow row in qryIkGlaeubiger.DataTable.Rows)
              if ( (bool)row["IstGlaeubiger"] && Utils.ConvertToInt(row["BaZahlungswegID"]) > 0 )
              {
            sql = DBUtil.OpenSQL(@"
              select BaZahlungswegID, IBANNummer from dbo.BaZahlungsweg WITH(READUNCOMMITTED)
              where BaZahlungswegID = {0} and EinzahlungsscheinCode in (2,3,4,5)",
              Utils.ConvertToInt(row["BaZahlungswegID"])
            );
            if (!DBUtil.IsEmpty(sql["BaZahlungswegID"]) && DBUtil.IsEmpty(sql["IBANNummer"]))
            {
              if (msg != "") msg += "\r\n";
              msg += Utils.ConvertToString(row["PersonName"]); // + ", " + Utils.ConvertToString(row["ZahlungswegName"]);
            }
              }
              if (msg != "") KissMsg.ShowInfo(string.Format(
            "Bei den foglenden Zahlungswegen ist die IBAN-Nummer nicht definiert.\r\n\r\n"+
            "{0}\r\n\r\n"+
            "Ohne IBAN-Nummer können keine Zahlungen an PSCD gesendet werden.",
            msg));

              // Kontrolle Wohnsitz
              msg = "";
              foreach (System.Data.DataRow row in qryIkGlaeubiger.DataTable.Rows)
              if ( (bool)row["IstGlaeubiger"] && Utils.ConvertToInt(row["BaZahlungswegID"]) > 0 )
              {
            sql = DBUtil.OpenSQL(string.Format(
              "select top 1 PLZ, Ort from dbo.BaAdresse WITH(READUNCOMMITTED) where BaPersonID = {0} and AdresseCode = 1 "+
              "and GetDate() between IsNull(DatumVon, GetDate()) and IsNull(DatumBis, GetDate())"+
              "order by IsNull(DatumVon, GetDate()) desc",
              Utils.ConvertToInt(row["BaPersonID"])
            ));
            if ( DBUtil.IsEmpty(sql["PLZ"]) && DBUtil.IsEmpty(sql["Ort"]))
            {
              if (msg != "") msg += "\r\n";
              msg += Utils.ConvertToString(row["PersonName"]) + ": Wohnsitz PLZ und Ort fehlen";
            }
              }
              if (msg != "") KissMsg.ShowInfo(string.Format(
            "Bei den foglenden Personen ist die Wohnsitzadresse nicht definiert.\r\n\r\n"+
            "{0}\r\n\r\n"+
            "Ohne Wohnsitz können die Zeilen nicht verarbeitet werden.",
            msg));
        }

        // Letzte Bearbeitung
        // 27.03.2008 : sozheo : neu
        // 27.03.2008 : sozheo : TODO: kann wieder entfernt werden, wenn der prov. ALBV-Betrag entfernt wird
        // 07.04.2008 : sozheo : Nein, muss mind. gemacht werden, wenn Aktiv umgestellt wird
        // ------------------------------------------------------------------------
        private void MonatszahlenNeuRechnen()
        {
            try
            {
            SqlQuery sql = DBUtil.OpenSQL("EXEC dbo.spIkMonatszahlen_DetailAll {0}, 1",
              FaLeistungID // IkRechtstitelID vvv
            );
            }
            catch (Exception ex)
            {
                KissMsg.ShowInfo(ex.Message);
            }
        }

        private void chkGanzesKlientensystem_CheckedChanged(object sender, EventArgs e)
        {
            if (!AllesSpeichern()) return;
              GlaeubigerOeffnen();
        }

        private void edtBaZahlungsweg_CloseUp(object sender, DevExpress.XtraEditors.Controls.CloseUpEventArgs e)
        {
            e.AcceptValue = true;
              if (!e.CloseMode.Equals(DevExpress.XtraEditors.PopupCloseMode.Normal)) return;

              qryIkGlaeubiger["BaZahlungswegID"] = Utils.ConvertToInt(e.Value);
              EditierenBetragEinstellen(true);
              qryZahlInfo.Fill(Utils.ConvertToInt(qryIkGlaeubiger["BaZahlungswegID"]));
              qryIkGlaeubiger["ZWPersonName"] = qryZahlInfo["Name"];
              // Damit wir später wissen, dass im Gitter editiert wurde:
              DatenGlaeubigerWurdenKorrigiert = true;
        }

        private void edtBetrag_EditValueChanged(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 24.01.2008 : sozheo : neu
            // ------------------------------------------------------------------------

            if (!edtBetrag.UserModified) return;

            qryIkGlaeubiger["Betrag"] = edtBetrag.EditValue;
            if (!DBUtil.IsEmpty(qryIkGlaeubiger["ZusatzBetrag"]))
            {
              qryIkGlaeubiger["ZusatzBetrag"] = DBNull.Value;
              qryIkGlaeubiger.RefreshDisplay();
            }
            qryIkGlaeubiger.RowModified = true;
        }

        // Letzte Bearbeitung
        // 29.08.2007 : sozheo : neu
        // 06.03.2008 : sozheo : neues CheckEdit
        // 05.05.2008 : sozheo : Korrekturen für neues Feld "IkGlaeubigerStatusCode"
        // ------------------------------------------------------------------------
        private void edtIkGlaeubigerStatusCode_CloseUp(object sender, DevExpress.XtraEditors.Controls.CloseUpEventArgs e)
        {
            e.AcceptValue = true;
              if (!e.CloseMode.Equals(DevExpress.XtraEditors.PopupCloseMode.Normal)) return;

              int NewValue = Utils.ConvertToInt(e.Value);
              qryIkGlaeubiger["IkGlaeubigerStatusCode"] = NewValue;
              DatenGlaeubigerWurdenKorrigiert = true;

              if (qryStatus.Find("Code="+NewValue.ToString()))
            qryIkGlaeubiger["Status"] = qryStatus["Text"];
              else
            qryIkGlaeubiger["Status"] = DBNull.Value;
        }

        private void edtZusatzBaZahlungsweg_CloseUp(object sender, DevExpress.XtraEditors.Controls.CloseUpEventArgs e)
        {
            e.AcceptValue = true;
              if (!e.CloseMode.Equals(DevExpress.XtraEditors.PopupCloseMode.Normal)) return;

              if (DBUtil.IsEmpty(e.Value))
              {
            qryIkGlaeubiger["ZusatzBaZahlungswegID"] = DBNull.Value;
            qryIkGlaeubiger["Betrag"] = DBNull.Value;
            qryIkGlaeubiger["ZusatzBetrag"] = DBNull.Value;
              }
              else
            qryIkGlaeubiger["ZusatzBaZahlungswegID"] = Utils.ConvertToInt(e.Value);

              EditierenBetragEinstellen(true);
              qryZusatzZahlInfo.Fill(Utils.ConvertToInt(qryIkGlaeubiger["ZusatzBaZahlungswegID"]));
              qryIkGlaeubiger["ZWZusatzPersonName"] = qryZusatzZahlInfo["Name"];
              // Damit wir später wissen, dass im Gitter editiert wurde:
              DatenGlaeubigerWurdenKorrigiert = true;
        }

        private void edtZusatzBetrag_EditValueChanged(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 24.01.2008 : sozheo : neu
            // ------------------------------------------------------------------------

            if (!edtZusatzBetrag.UserModified) return;

            qryIkGlaeubiger["ZusatzBetrag"] = edtZusatzBetrag.EditValue;
            if (!DBUtil.IsEmpty(qryIkGlaeubiger["Betrag"]))
            {
              qryIkGlaeubiger["Betrag"] = DBNull.Value;
              qryIkGlaeubiger.RefreshDisplay();
            }
            qryIkGlaeubiger.RowModified = true;
        }

        // Letzte Bearbeitung
        // 18.01.2008 : sozheo : neu
        // 05.05.2008 : sozheo : Korrekturen für neues Feld "IkGlaeubigerStatusCode"
        // ------------------------------------------------------------------------
        private void grvGlaeubiger_CustomDrawCell(object sender, DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs e)
        {
            /*
              else if (gvwListe.IsRowSelected(e.RowHandle))
              {
            e.Appearance.BackColor = Color.FromName("Highlight");
            e.Appearance.ForeColor = Color.FromName("HighlightText");
              }
              */

              e.Handled = false;
              //if (grvGlaeubiger.FocusedRowHandle == e.RowHandle)
              /*
              if (grvGlaeubiger.IsRowSelected(e.RowHandle) || grvGlaeubiger.FocusedRowHandle == e.RowHandle)
              {
            e.Appearance.BackColor = Color.FromName("Highlight");
            e.Appearance.ForeColor = Color.FromName("HighlightText");
            return;
              }
              */

              if (e.Column.FieldName == "IstGlaeubiger")
              {
            // Wenn bereits Forderungen erfasst wurden, dann kann der Gläubiger nicht mehr entfernt werden
            if (
              !qryIkGlaeubiger.CanUpdate ||
              (bool)grvGlaeubiger.GetRowCellValue(e.RowHandle, colHatDaten) ||
              RtIstKKBB ||
              !CanEdit
            )
              e.Appearance.BackColor = Color.BlanchedAlmond;
            else
              e.Appearance.BackColor = Color.AliceBlue;
              }
              else if (e.Column.FieldName == "IstElternteil")
              {
            // Wenn als Gläubiger erfasst und nicht gesperrt, dann kann IstElternteil editiert werden
            if (
              !qryIkGlaeubiger.CanUpdate ||
              (!(bool)grvGlaeubiger.GetRowCellValue(e.RowHandle, colGlaeubiger)) ||
                (bool)grvGlaeubiger.GetRowCellValue(e.RowHandle, colHatDatenEltern) ||
              !CanEdit
            )
              e.Appearance.BackColor = Color.BlanchedAlmond;
            else
              e.Appearance.BackColor = Color.AliceBlue;
              }
              //else if (e.Column.FieldName == "InterneVerrechnung" || e.Column.FieldName == "IkGlaeubigerStatusCode")
              else if (e.Column.FieldName == "InterneVerrechnung")
              {
            // Wenn als Gläubiger erfasst, dann können InterneVerrechnung und IkGlaeubigerStatusCode editiert werden
            if (
              !qryIkGlaeubiger.CanUpdate ||
              (!(bool)grvGlaeubiger.GetRowCellValue(e.RowHandle, colGlaeubiger)) ||
              !CanEdit
            )
              e.Appearance.BackColor = Color.BlanchedAlmond;
            else
              e.Appearance.BackColor = Color.AliceBlue;
              }
        }

        // Letzte Bearbeitung
        // 18.01.2008 : sozheo : neu
        // 05.05.2008 : sozheo : Korrekturen für neues Feld "IkGlaeubigerStatusCode"
        // ------------------------------------------------------------------------
        private void grvGlaeubiger_ShowingEditor(object sender, CancelEventArgs e)
        {
            // Editor freigeben:
              if (grvGlaeubiger.FocusedColumn.FieldName == "IstGlaeubiger")
            e.Cancel = ((bool)qryIkGlaeubiger["HatDaten"] || !CanEdit || RtIstKKBB);
              else if (grvGlaeubiger.FocusedColumn.FieldName == "IstElternteil")
            e.Cancel = ((!(bool)qryIkGlaeubiger["IstGlaeubiger"]) || (bool)qryIkGlaeubiger["HatDatenEltern"] || !CanEdit || RtIstKKBB);
              else if (grvGlaeubiger.FocusedColumn.FieldName == "InterneVerrechnung")
            e.Cancel = ((!(bool)qryIkGlaeubiger["IstGlaeubiger"]) || !CanEdit);
              //else if (grvGlaeubiger.FocusedColumn.FieldName == "IkGlaeubigerStatusCode")
              //  e.Cancel = ((!(bool)qryIkGlaeubiger["IstGlaeubiger"]) || !CanEdit);
              else
            e.Cancel = true;
        }

        private void qryIkGlaeubiger_AfterFill(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 29.08.2007 : sozheo : neu
            // ------------------------------------------------------------------------

            DatenGlaeubigerWurdenKorrigiert = false;
            if (qryIkGlaeubiger.Count==0) qryIkGlaeubiger_PositionChanged(sender, e);
        }

        private void qryIkGlaeubiger_BeforePost(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 29.08.2007 : sozheo : neu
            // 17.01.2008 : sozheo : angepasst für neues Datenmodell
            // 27.01.2008 : sozheo : neu können nur gültige Zahlungswege ausgewählt werden

            // ------------------------------------------------------------------------

            DatenGlaeubigerWurdenKorrigiert = true;
            if (!(bool)qryIkGlaeubiger["IstGlaeubiger"]) return;

            if (DBUtil.IsEmpty(qryIkGlaeubiger["IstElternteil"]))
            {
              KissMsg.ShowInfo("Die Spalte 'Eltern' (Elt.) darf nicht leer bleiben.");
              throw new KissCancelException();
            }

            if (!DBUtil.IsEmpty(qryIkGlaeubiger["BaZahlungswegID"]))
            {
              int ZCode = Utils.ConvertToInt(qryIkGlaeubiger["BaZahlungswegID"]);
              DateTime DVon = GetDatumVonZahlweg(ZCode);
              DateTime DBis = GetDatumBisZahlweg(ZCode);
              if (DVon > DateTime.Today || DBis < DateTime.Today)
              {
                KissMsg.ShowInfo("Der gewählte Zahlungsweg ist zum heutigen Zeitpunkt nicht gültig.");
                throw new KissCancelException();
              }
            }

            /*
            if (
              (!(bool)qryIkGlaeubiger["IstElternteil"]) &&
              (!(bool)qryIkGlaeubiger["IstErwachsen"]) )
            {
              KissMsg.ShowInfo("Wählen Sie entweder Kinderalimente (Ki.Al.) oder Erwachsenenalimente (Erw.Al.).");
              throw new KissCancelException();
            }

            if (
              (bool)qryIkGlaeubiger["IstKind"] &&
              (bool)qryIkGlaeubiger["IstErwachsen"] )
            {
              KissMsg.ShowInfo("Sie können nicht Kinderalimente (Ki.Al.) und Erwachsenenalimente (Erw.Al.) anwählen.");
              throw new KissCancelException();
            }
            */

            if (!(bool)qryIkGlaeubiger["InterneVerrechnung"] && DBUtil.IsEmpty(qryIkGlaeubiger["BaZahlungswegID"]))
            {
              KissMsg.ShowInfo("Bei Gläubiger muss ein Zahlungsweg angegeben werden.");
              throw new KissCancelException();
            }

            if (
              (!DBUtil.IsEmpty(qryIkGlaeubiger["ZusatzBaZahlungswegID"])) &&
              DBUtil.IsEmpty(qryIkGlaeubiger["Betrag"]) &&
              DBUtil.IsEmpty(qryIkGlaeubiger["ZusatzBetrag"])
            )
            {
              KissMsg.ShowInfo("Wenn Sie 2 Zahlungswege angeben, müssen Sie bei einem Zahlungsweg einen Betrag definieren.");
              throw new KissCancelException();
            }

            if (!DBUtil.IsEmpty(qryIkGlaeubiger["ZusatzBaZahlungswegID"]))
            {
              int ZZCode = Utils.ConvertToInt(qryIkGlaeubiger["ZusatzBaZahlungswegID"]);
              DateTime DzVon = GetDatumVonZahlweg(ZZCode);
              DateTime DzBis = GetDatumBisZahlweg(ZZCode);
              if (DzVon > DateTime.Today || DzBis < DateTime.Today)
              {
                KissMsg.ShowInfo("Der gewählte Zusatz-Zahlungsweg ist zum heutigen Zeitpunkt nicht gültig.");
                throw new KissCancelException();
              }
            }

            if ( (!DBUtil.IsEmpty(qryIkGlaeubiger["BetragALBV"])) && DBUtil.IsEmpty(qryIkGlaeubiger["ALBVDatumVon"]) )
            {
              KissMsg.ShowInfo("Wenn Sie einen ALBV-Betrag angeben, muss das Von-Datum erfasst werden.");
              throw new KissCancelException();
            }
        }

        private void qryIkGlaeubiger_PositionChanged(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 29.08.2007 : sozheo : neu
            // 29.03.2008 : sozheo : korrigiert, wenn count=0
            // ------------------------------------------------------------------------

            //int SID = Utils.ConvertToInt(qryIkGlaeubiger["IkGlaeubigerStatusCode"]);
            //edtIkGlaeubigerStatusCode.EditValue = SID;
            /*
            if (SID > 0)
              edtIkGlaeubigerStatusCode.EditValue = SID;
            else
              edtIkGlaeubigerStatusCode.EditValue = DBNull.Value;
            */

            //KissMsg.ShowInfo((qryIkGlaeubiger["IkGlaeubigerStatusCode"]).ToString());
            //KissMsg.ShowInfo(SID.ToString());
            //KissMsg.ShowInfo(Utils.ConvertToInt(edtIkGlaeubigerStatusCode.EditValue).ToString());

            bool IstGlb = qryIkGlaeubiger.Count == 0 ? false : Utils.ConvertToBool(qryIkGlaeubiger["IstGlaeubiger"], false);
            bool Intern = qryIkGlaeubiger.Count == 0 ? false : Utils.ConvertToBool(qryIkGlaeubiger["InterneVerrechnung"], false);
            bool Eltern = qryIkGlaeubiger.Count == 0 ? false : Utils.ConvertToBool(qryIkGlaeubiger["IstElternteil"], false);

            // Das Editieren soll gesperrt werden, wenn die Person kein Gläubiger ist
            EditierenFelderEinstellen(IstGlb, Intern);
            EditierenBetragEinstellen(IstGlb);
            EditierenALBVEinstellen(IstGlb, Eltern);

            // Zahlinfos anzeigen:
            qryZahlInfo.Fill(Utils.ConvertToInt(qryIkGlaeubiger["BaZahlungswegID"]));
            qryZusatzZahlInfo.Fill(Utils.ConvertToInt(qryIkGlaeubiger["ZusatzBaZahlungswegID"]));
        }

        private void qryIkGlaeubiger_PositionChanging(object sender, System.EventArgs e)
        {
            // Letzte Bearbeitung
            // 21.01.2008 : sozheo : neu
            // ------------------------------------------------------------------------

            if (qryIkGlaeubiger.RowModified || DatenGlaeubigerWurdenKorrigiert)
              if (!qryIkGlaeubiger.Post()) throw new KissCancelException();
        }

        private void repedtchkInterneVerrechnung_EditValueChanging(object sender, DevExpress.XtraEditors.Controls.ChangingEventArgs e)
        {
            if (!KissMsg.ShowQuestion("Wollen Sie die interne Verrechnung wirklich umstellen?"))
              {
            e.Cancel = true;
              }
              else
              {
            e.Cancel = false;
            // Damit wir später wissen, dass im Gitter wurde:
            DatenGlaeubigerWurdenKorrigiert = true;

            // Werte explizit ändern
            bool NewValue = Utils.ConvertToBool(e.NewValue, false);

            // Nein, Zahlungsweg soll nicht gelöscht werrden
            //if (NewValue) {
            //  qryIkGlaeubiger["BaZahlungswegID"] = DBNull.Value;
            //  qryIkGlaeubiger["ZWPersonName"] = DBNull.Value;
            //}
            qryIkGlaeubiger["InterneVerrechnung"] = NewValue;
            qryIkGlaeubiger.RefreshDisplay();
            grvGlaeubiger.RefreshData();

            // Fenster einstellen
            EditierenFelderEinstellen((bool)qryIkGlaeubiger["IstGlaeubiger"], NewValue);
              }
        }

        private void repedtchkIstElternteil_CheckedChanged(object sender, EventArgs e)
        {
            if (RtIstKKBB) return;
              // Damit wir später wissen, dass im Gitter wurde:
              DatenGlaeubigerWurdenKorrigiert = true;

              bool NewValue = !(bool)qryIkGlaeubiger["IstElternteil"];
              qryIkGlaeubiger["IstElternteil"] = NewValue;
              if (NewValue) {
            qryIkGlaeubiger["BetragALBV"] = DBNull.Value;
            qryIkGlaeubiger["VorSaldo"] = DBNull.Value;
              }
              EditierenALBVEinstellen((bool)qryIkGlaeubiger["IstGlaeubiger"], NewValue);
        }

        private void repedtchkIstGlaeubiger_CheckedChanged(object sender, EventArgs e)
        {
            if (RtIstKKBB) return;
              // Damit wir später wissen, dass im Gitter editiert wurde:
              DatenGlaeubigerWurdenKorrigiert = true;

              bool NewValue = !(bool)qryIkGlaeubiger["IstGlaeubiger"];
              qryIkGlaeubiger["IstGlaeubiger"] = NewValue;
              if (NewValue)
              {
            // Der Gläubiger wird hinzugefügt:
            qryIkGlaeubiger["IkGlaeubigerStatusCode"] = 1;
            if (qryStatus.Find("Code=1"))
              qryIkGlaeubiger["Status"] = qryStatus["Text"];
            else
              qryIkGlaeubiger["Status"] = DBNull.Value;

            grvGlaeubiger.RefreshEditor(true);
            //tmp.RefreshRow
            //tmp.RefreshData

              }
              else
              {
            // Der Gläubiger wird entfernt:
            qryIkGlaeubiger["IkGlaeubigerStatusCode"] = DBNull.Value;
            qryIkGlaeubiger["Status"] = DBNull.Value;
              }
              EditierenFelderEinstellen(NewValue, (bool)qryIkGlaeubiger["InterneVerrechnung"]);
              EditierenBetragEinstellen(NewValue);
              EditierenALBVEinstellen(NewValue, (bool)qryIkGlaeubiger["IstElternteil"]);
        }

        #endregion
    }
}