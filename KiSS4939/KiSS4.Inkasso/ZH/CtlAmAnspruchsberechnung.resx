<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xWordBericht1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAnBJREFUOE+VkutL
        U2Ecx48v+g/6BwJ7VUQg+aIgIiJUjEiTLpqDLm8MisiazrGlJIhEFjGdMLs5neQlL2XeEK2GKLFE5eim
        m9vc1W3O5dRtZzvfnucctNHai36HDz+eF8/ndzlPBpMU/V+XQIKh8DxPMs/wCXqmmUA+8GCK87Mzku8x
        kuculCitadna5UEJhBPQdE4gO+829gXX66xQNtnQPebF4DdfClcrTQiTy5QgEai0wxjRL/yRXHowjze9
        Lug+e2j7aUMmVyC4ncCr91+Ey3swuWUzULU7BDQDPpTWsDC7w5CrF+EPRVH8uB8VTQbkXLmLFz0svKEE
        2sZWoB01i12cvTmJ6karQDgWR8GjWTRojZDUTEPVZcaFez1QfxhDpVwpCjbjsPnjeDdixoncW2BOXhvG
        oUK9gH+HQ859PQofTiLzYguOl0zgzA01WFsAlVWiwLURx+o6h5YhiyjIKujF0bKfAmu/ojhd2gqJ8jsO
        F7WDOVYNTfcU7KEIpDKFIHAE4jB7OTQPWkXBkbwOnKo1CiwHd3EgS40J1o879eM4eF4Hdn0Lpo2d/R3Y
        SHWTi4NqwC4KMs+9xR4Lvm2ko1yqgJ3MvuLhwDpiaOhbEwXJkX9ZgvIKhQDd+t/QERadHOZsMdT3OFIF
        zR3j8GwmyKYTQnYH43CSmW0+Tqi86Ixh3h6DwRJFbZcrVdDYPkra5IRWabV/YbBEMLMcwROdO1VAnyld
        kMnNwUjyEqnIOjhSlcOsNYof5giml6OYMkVQpfWmCugznSMtvh5aFX6T6pMdL/vsePbRgbpuJ552uqAk
        lWVtHkhbfakCutX/5TeLHqSvp6SEKQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnCollapse.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGJJREFUOE/tkzEO
        ACAIA+H/j9ZA1KAgZXLShEXI0SIyUWsED3NSggAoDxW8A0inM8S5VyCFZiZI4p63XQakDggkipI6YMoO
        LET+7d2+BQcAbpEryADq6RIL9BXokAo/uPg4Hb1GcJPD5uf6AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnExpand.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGBJREFUOE/FkzEO
        ACAIA+H/j8awGCxIndCERfEoFVXETOhSbVIYgJ0nBXhhDuCVMLzzrMATgydM8jwAH+xJQdV/3Duh4AGd
        opTQAdzdW2zQPwXFoDz8I3AgQir3ZjyIlRcuDniLAmTbIAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="rtfedtParams.EditValue" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAEAQAAAB9TeXN0ZW0uVW5pdHlTZXJpYWxpemF0aW9uSG9sZGVyAwAAAARE
        YXRhCVVuaXR5VHlwZQxBc3NlbWJseU5hbWUBAAEICgIAAAAGAgAAAAAL
</value>
  </data>
  <data name="RTFEditKinder.EditValue" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAEAQAAAB9TeXN0ZW0uVW5pdHlTZXJpYWxpemF0aW9uSG9sZGVyAwAAAARE
        YXRhCVVuaXR5VHlwZQxBc3NlbWJseU5hbWUBAAEICgIAAAAGAgAAAAAL
</value>
  </data>
  <metadata name="qryAbPosition.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="qryAbPosition.SelectStatement" xml:space="preserve">
    <value>select 
  P.AmAbPositionID, 
  P.AmAnspruchsberechnungID,
  P.AmAbPositionsartID, 
  P.AmAbKindID,
  case 
    when P.AmAbPositionsartID in (500, 730) and K.BerechtigtCode = 1 
      then 'ALBV: ' + N.Name + Isnull(' ' + N.Vorname, '')
    when P.AmAbPositionsartID in (500, 730) and K.BerechtigtCode = 2 
      then 'UeBH: ' + N.Name + Isnull(' ' + N.Vorname, '')
    else P.Text
  end as Text,
  P.DatumVon,
  P.Wert1,
  P.Wert2,
  P.Wert3,
  P.Bemerkung,
  -- Daten von Kinder
  K.BerechtigtCode,
  -- berechnete Spalte für TreePosition
  case 
    when P.Sortierung1 = 'K' and L.FaProzessCode in (402, 403) 
      then 'K'+Convert(varchar, P.AmAbPositionsartID)+'_'+Convert(varchar, K.AmAbKindID)
    when P.Sortierung1 = 'Y' and L.FaProzessCode in (402, 403) 
      then 'Y'+Convert(varchar, P.AmAbPositionsartID)+'_'+Convert(varchar, K.AmAbKindID)
    else P.Sortierung1 + Convert(varchar, A.AmAbPositionsartID)
  end as PositionsID, 

  -- berechnete Spalte für TreePosition
  case
    -- ALBV und ueBH
    when P.Sortierung1 = 'Z' and L.FaProzessCode in (402, 403) then 'X' + Convert(varchar, P.ParentID)
    when P.Sortierung1 = 'Y' and L.FaProzessCode in (402, 403) then 'X' + Convert(varchar, P.ParentID)
    when P.Sortierung1 = 'K' and L.FaProzessCode in (402, 403) then 'J' + Convert(varchar, K.AmAbKindID)
    else P.Sortierung1+Convert(varchar, A.ParentID)
  end as ParentID,

  -- 1. Feld für Sortierung
  case
    when P.Sortierung1 = 'Y' then 'X' + N.Name + Isnull(' ' + N.Vorname, '') 
    when P.Sortierung1 = 'K' then 'K' + N.Name + Isnull(' ' + N.Vorname, '') 
    else P.Sortierung1
  end as Sortierung1,

  -- 2. Feld für Sortierung
  P.Sortierung2,

  Editierbar1 = IsNULL(A.Editierbar1, 0),
  Editierbar2 = IsNULL(A.Editierbar2, 0),
  P.Mengeneinheit1,
  P.Mengeneinheit2,
  Mengeneinheit3 = case 
    when (NOT P.Wert3 IS NULL) then 'CHF' 
    when (NOT P.Mengeneinheit1 IS NULL) then 'CHF' 
    else NULL 
  end,
  P.Format1,
  P.Format2

-- hier kein WITH(READUNCOMMITTED)
from dbo.AmAbPosition P
  -- hier kein WITH(READUNCOMMITTED)
  left outer join dbo.AmAnspruchsberechnung B on B.AmAnspruchsberechnungID=P.AmAnspruchsberechnungID 
  left outer join dbo.FaLeistung L WITH(READUNCOMMITTED) on L.FaLeistungID=B.FaLeistungID 
  left outer join dbo.AmAbPositionsart A WITH(READUNCOMMITTED) on A.AmAbPositionsartID=P.AmAbPositionsartID 
  left outer join dbo.AmAbKind K WITH(READUNCOMMITTED) on K.AmAbKindID=P.AmAbKindID
  left outer join dbo.BaPerson N WITH(READUNCOMMITTED) on N.BaPersonID=K.BaPersonID
where 
  P.AmAnspruchsberechnungID = {0}


-- Namen der Kinder:
union all
select 
  NULL, NULL, NULL, NULL, 
  case K.BerechtigtCode
    when 1 then 'ALBV: '
    when 2 then 'UeBH: '
    when 3 then 'KKBB: '
    else '[ERROR]: '
  end + N.Name + Isnull(' ' + N.Vorname, '') as Text, 
  NULL, NULL, NULL, NULL, NULL, 
  K.BerechtigtCode,
  'J'+Convert(varchar, K.AmAbKindID) as PositionsID,
  NULL as ParentID, 
  'K' + N.Name + Isnull(' ' + N.Vorname, '') as Sortierung1, 
  '0' as Sortierung2, 
  0 as Editierbar1, 
  0 as Editierbar2,
  NULL, NULL, NULL,
  NULL, NULL
-- hier kein WITH(READUNCOMMITTED)
from dbo.AmAbKind K
  left outer join dbo.AmAnspruchsberechnung B on B.AmAnspruchsberechnungID=K.AmAnspruchsberechnungID 
  left outer join dbo.FaLeistung L WITH(READUNCOMMITTED) on L.FaLeistungID=B.FaLeistungID 
  left join dbo.BaPerson N WITH(READUNCOMMITTED) on N.BaPersonID=K.BaPersonID
where K.AmAnspruchsberechnungID = {0}
  and (K.BerechtigtCode = 1 or K.BerechtigtCode = 2)
  and L.FaProzessCode in (402, 403)

order by 14, 15</value>
  </data>
  <metadata name="qryKind.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 54</value>
  </metadata>
  <data name="qryKind.SelectStatement" xml:space="preserve">
    <value>select 
  FPR.BaPersonID, 
  AKI.AmAbKindID,
  Name = PRS.Name+IsNull(' '+PRS.Vorname,''), 
  [Alter] = dbo.fnGetAge(PRS.Geburtsdatum, GetDate()),
  PRS.Geburtsdatum, 
  Berechnung = convert(bit, case when AKI.AmAbKindID is null then 0 else 1 end),
  AKI.BerechtigtCode,
  AKI.DatumBis,
  AKI.IkRechtstitelID,
  RTName = CASE LRT.FaProzessCode
    WHEN 405 THEN 'ALBV, '+
      ISNULL(RTI.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', '+CONVERT(VARCHAR, INF.RechtstitelDatumVon, 104), '')
    WHEN 406 THEN 'UeBH, '+
      ISNULL(RTI.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', '+CONVERT(VARCHAR, INF.RechtstitelDatumVon, 104), '')
    WHEN 407 THEN 'KKBB, '+
      ISNULL(RTI.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', ' + CONVERT(VARCHAR, RTI.IkRechtstitelGueltigVon, 104), '')+
      ISNULL(' - ' + CONVERT(VARCHAR, RTI.IkRechtstitelGueltigBis, 104), '')
    ELSE ''
  END,
  Anspruch = case 
    when L.FaProzessCode in (402) then (
      -- hier kein WITH(READUNCOMMITTED)
      select top 1 P.Wert3 from dbo.AmAbPosition P
      where P.AmAnspruchsberechnungID = AKI.AmAnspruchsberechnungID 
        and P.AmAbKindID = AKI.AmAbKindID and P.AmAbPositionsartID = 531 )
    when L.FaProzessCode in (404) then (
      select top 1 P.Wert3 from dbo.AmAbPosition P
      where P.AmAnspruchsberechnungID = AKI.AmAnspruchsberechnungID 
        and AKI.BerechtigtCode = 3 and P.AmAbPositionsartID = 3290 )
    else NULL
  end 
from dbo.FaFallPerson FPR WITH(READUNCOMMITTED)
  left join dbo.BaPerson PRS WITH(READUNCOMMITTED) on PRS.BaPersonID = FPR.BaPersonID
  left join dbo.AmAbKind AKI WITH(READUNCOMMITTED) on AKI.BaPersonID = FPR.BaPersonID and AKI.AmAnspruchsberechnungID = {0}
  left join dbo.IkRechtstitel RTI WITH(READUNCOMMITTED) on RTI.IkRechtstitelID = AKI.IkRechtstitelID
  left join dbo.IkRechtstitelInfos INF WITH(READUNCOMMITTED) on INF.IkRechtstitelInfosID  = (
    SELECT MAX(I2.IkRechtstitelInfosID) FROM dbo.IkRechtstitelInfos I2 WITH(READUNCOMMITTED)
    WHERE I2.IkRechtstitelID = RTI.IkRechtstitelID
  )
  left join dbo.FaLeistung LRT WITH(READUNCOMMITTED) on LRT.FaLeistungID = RTI.FaLeistungID
  left outer join dbo.AmAnspruchsberechnung B on B.AmAnspruchsberechnungID=AKI.AmAnspruchsberechnungID 
  -- hier kein WITH(READUNCOMMITTED)
  left outer join dbo.FaLeistung L WITH(READUNCOMMITTED) on L.FaLeistungID=B.FaLeistungID 
where FPR.FaFallID = {1} and 
(
  (
    {3} not in (4,5)
    and FPR.BaPersonID != {2} 
    and Exists( 
      select REL.BaRelationID from dbo.BaPerson_Relation REL WITH(READUNCOMMITTED)
      where REL.BaPersonID_1 = {2} 
       and REL.BaPersonID_2 = FPR.BaPersonID
       and REL.BaRelationID in (1,6,7,39) )
  ) or (
    {3} in (4,5) and FPR.BaPersonID = {2} 
  )
)
order by 
  case when AKI.AmAbKindID is null then 0 else 1 end desc,
  dbo.fnGetAge(PRS.Geburtsdatum, GetDate()) desc

-- zum testen : Fall = 51042, AnspruchID = 136, Klient = 205487</value>
  </data>
  <metadata name="qryRechtstitel.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 54</value>
  </metadata>
  <data name="qryRechtstitel.SelectStatement" xml:space="preserve">
    <value>SELECT
  IkRechtstitelID = NULL,
  Text = NULL,
  RechtstitelDatumVon = NULL
UNION ALL

SELECT
  R.IkRechtstitelID,
  Text = CASE L.FaProzessCode
    WHEN 405 THEN 'ALBV, '+
      ISNULL(R.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', '+CONVERT(VARCHAR, I.RechtstitelDatumVon, 104), '')
    WHEN 406 THEN 'ÜbH, '+
      ISNULL(R.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', '+CONVERT(VARCHAR, I.RechtstitelDatumVon, 104), '')
    WHEN 407 THEN 'KKBB, '+
      ISNULL(R.Bezeichnung, '[keine Bezeichnung]')+
      ISNULL(', '+CONVERT(VARCHAR, R.IkRechtstitelGueltigVon, 104), '')+
      ISNULL(' - ' + CONVERT(VARCHAR, R.IkRechtstitelGueltigBis, 104), '')
    ELSE '[falscher Prozesscode]'
  END,
  RechtstitelDatumVon = I.RechtstitelRechtskraeftig
FROM dbo.IkRechtstitel R WITH(READUNCOMMITTED)
LEFT JOIN dbo.IkRechtstitelInfos I WITH(READUNCOMMITTED) ON I.IkRechtstitelInfosID = (
  SELECT MAX(I2.IkRechtstitelInfosID) FROM dbo.IkRechtstitelInfos I2 WITH(READUNCOMMITTED)
  WHERE I2.IkRechtstitelID = R.IkRechtstitelID )
LEFT JOIN dbo.FaLeistung L WITH(READUNCOMMITTED) ON L.FaLeistungID = R.FaLeistungID
LEFT JOIN dbo.IkGlaeubiger G WITH(READUNCOMMITTED) ON G.IkRechtstitelID = R.IkRechtstitelID
WHERE  L.FaFallID = {0}
  AND (
    (L.FaProzessCode = 405 AND {2} = 1) OR
    (L.FaProzessCode = 406 AND {2} = 2) OR
    (L.FaProzessCode = 407 AND {2} = 3)
  )
  AND G.BaPersonID = {1}
ORDER BY RechtstitelDatumVon DESC</value>
  </data>
  <metadata name="qryAmAnspruchsberechnung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 17</value>
  </metadata>
  <data name="qryAmAnspruchsberechnung.SelectStatement" xml:space="preserve">
    <value>select ABE.*,
  TypBerechng = dbo.fnLOVText('AmBerechnungTyp', ABE.AmBerechnungTypCode),
  TypEinkomm = dbo.fnLOVText('AmEinkommensvariante', ABE.AmEinkommensvarianteCode),
  TypStatus = dbo.fnLOVText('AmBerechnungsStatus', ABE.AmBerechnungsStatusCode),
  AnzKinder = (select count(*) from AmAbKind where AmAnspruchsberechnungID = ABE.AmAnspruchsberechnungID),
  Username = U.DisplayText,
  MandUsername = UM.LastName + IsNull(' ' + UM.Firstname, ''),
  MandInst = IM.Name
-- hier kein WITH(READUNCOMMITTED)
from dbo.AmAnspruchsberechnung ABE
Left outer join dbo.vwUser U WITH(READUNCOMMITTED) on U.UserID = ABE.UserID
Left outer join dbo.XUser UM WITH(READUNCOMMITTED) on UM.UserID = ABE.Mandant_UserID
Left outer join dbo.BaInstitution IM WITH(READUNCOMMITTED) on IM.BaInstitutionID = ABE.Mandant_InstitutionID
Left outer join dbo.FaLeistung L WITH(READUNCOMMITTED) on L.FaLeistungID = ABE.FaLeistungID

where ABE.FaLeistungID = {0}
--- and Convert(datetime, ABE.DefinitivAbDatum, 104) &gt;= Convert(datetime, {edtSucheDefinitivAb}, 104)
--- and Convert(datetime, ABE.DefinitivAbDatum, 104) &lt;= Convert(datetime, {edtSucheDefinitivBis}, 104)
--- and ABE.AmBerechnungTypCode = {edtSucheBerechnungstyp}
order by ABE.BerechnungDatumAb desc, ABE.AmAnspruchsberechnungID desc</value>
  </data>
  <data name="xDokumentVerfuegung.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="xDokumentBerechnung.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtBerechnungDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="adtErstkontakt.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtSucheDefinitivBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtSucheDefinitivAb.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="qryBerechtigtKind.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>335, 17</value>
  </metadata>
  <metadata name="qryK511.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>476, 17</value>
  </metadata>
  <data name="qryK511.SelectStatement" xml:space="preserve">
    <value>select Top 1 TotalAlimentSoll = dbo.fnIkAlimenteRunden(
  IsNull(R.IkIndexRundenCode, 1), 
  case 
    when (ISNULL(F.IkAnpassungsRegelCode, 7) = 7 OR R.IkIndexTypCode = 9) then F.Betrag
    else F.Betrag*ISNULL(F.IndexStandBeiBerechnung,100) / ISNULL(R.IndexStandPunkte,100)
  end)
-- hier kein WITH(READUNCOMMITTED)
from dbo.IkForderung F
left join dbo.IkRechtstitel R on R.IkRechtstitelID = F.IkRechtstitelID
where F.IkRechtstitelID = {0}
and F.IkForderungPeriodischCode = 1  -- lov IkForderungPeriodisch
and F.BaPersonID = {1}
and F.DatumAnpassenAb &lt;= {2}
order by F.DatumAnpassenAb desc</value>
  </data>
  <metadata name="qryZVV.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>227, 54</value>
  </metadata>
  <data name="qryZVV.SelectStatement" xml:space="preserve">
    <value>select top 1
  Value1 = Convert(money, Betrag1),
  Value2 = Convert(money, Betrag2),
  Value3 = Convert(money, Betrag3)
from dbo.IkZVVTarife 
where IkZVVTarifeCode = {0}
and GueltigAb &lt;= {1}
order by GueltigAb desc</value>
  </data>
</root>