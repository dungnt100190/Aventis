<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryFbBarauszahlungAuftrag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <metadata name="qryFbBarauszahlungZyklus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>223, 18</value>
  </metadata>
  <data name="qryFbBarauszahlungZyklus.SelectStatement" xml:space="preserve">
    <value>SELECT  BAZ.FbBarauszahlungZyklusID,
        BAZ.FbBarauszahlungAuftragID,
        BAZ.DatumStart,
        BAZ.DauerNaechsteZahlung,
        BAZ.DauerTypCode,
        BAZ.WochentagCode,
        BAZ.Creator,
        BAZ.Created,
        BAZ.Modifier,
        BAZ.Modified
FROM dbo.FbBarauszahlungZyklus BAZ WITH (READUNCOMMITTED)
WHERE FbBarauszahlungAuftragID = {0}
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDocument.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxDGqSEtjeE/MgYpBhmEoYmQDSANKM7GpQHZmVg1oDsJxgdp
        pI4N2EIKJjbqJLIiDqSJEMaVovGKAwBnM3PWBP8PfwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDocument.Properties.Buttons1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFhJREFUOE9jYACC
        /8YM/0EYxCYKwDSQpQmXDRiG4bMFp83Y/ELQf8gKCCpGDjGiFMM8TJJidFsIxgtyaBGMF3Sn4HUaSUFK
        KNJwxjLRyYJQSJAczLCgBtEA67lx9ZvcxaQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDocument.Properties.Buttons2" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAEZJREFUOE9jZAAC
        Y2Pj/yAaGzh79iwjhjhIw///MzGwmJjYfxAmSQPIIAxNhGwAaUBxNi4NyM4c1TBcQgnkD0IYV4rGKw4A
        eBqbSD6xP+0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDocument.Properties.Buttons3" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGlJREFUOE+tUgsK
        QCEIq0t4EU/boTyT7y0QCrUPJIgwXFurWv5iZsWMSkSqw0FQba6JSNFXBBzkSDsFECbbGWG0+ZbQuLgA
        UgUsHxNseTV7xOOlrxQslWNL0Wsb9jbWSMkpANh19qOX+Aed2oX3sErF6QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryFbBarauszahlungAuftrag.SelectStatement" xml:space="preserve">
    <value>DECLARE @FaLeistungID INT
SET @FaLeistungID = {0}

SELECT DISTINCT 
        BAA.FaLeistungID,
        BAA.FbBarauszahlungAuftragID,
        BAA.UserID_Creator,
        BAA.UserID_Modifier,
        BAA.XDocumentID,
        BAA.AuszahlungenVorhanden,
        BAA.Betrag,
        BAA.Buchungstext,
        BAA.DatumVon,
        BAA.DatumBis,
        BAA.FbBarauszahlungPeriodizitaetCode,
        BAA.SollKtoNr,
        BAA.HabenKtoNr,
        BAA.Vorbezug,
        BAA.Nachbezug,
        BAA.Creator,
        BAA.Created,
        BAA.Modifier,
        BAA.Modified,
        BAA.FbBarauszahlungAuftragTS,
        FbBarauszahlungStatusCode = CASE 
                                      WHEN BAA.AuszahlungenVorhanden = 1 THEN 3
                                      WHEN FPR.FbPeriodeID IS NULL THEN 1
                                      ELSE 2
                                    END,
        SollKtoName = FKT.KontoName,
        HabenKtoName = FKT1.KontoName,
        NameMandant = PRS.NameVorname,
        BaPersonID_Mandant = PRS.BaPersonID,
        PLZOrtMandant = ISNULL(WohnsitzPLZ + ' ' , '') + ISNULL(WohnsitzOrt, ''),
        CreatorName = USR.NameVorname,
        ModifierName = USR1.NameVorname,
        LetzteAuszahlung =  CASE WHEN AuszahlungenVorhanden = 1
                              THEN (SELECT MAX(Datum)
                                    FROM FbBarauszahlungAusbezahlt BAB
                                      LEFT JOIN FbBarauszahlungZyklus BAZ ON BAZ.FbBarauszahlungZyklusID = BAB.FbBarauszahlungZyklusID
                                    WHERE BAZ.FbBarauszahlungAuftragID = BAA.FbBarauszahlungAuftragID)
                              ELSE NULL
                            END
FROM FbBarauszahlungAuftrag            BAA
  LEFT  JOIN FaLeistung                LEI  ON LEI.FaLeistungID = BAA.FaLeistungID
  LEFT  JOIN vwPerson                  PRS  ON PRS.BaPersonID = LEI.BaPersonID
  LEFT  JOIN FbBarauszahlungZyklus     BAZ  ON BAZ.FbBarauszahlungAuftragID = BAA.FbBarauszahlungAuftragID
  LEFT  JOIN FbBarauszahlungAusbezahlt BAB  ON BAB.FbBarauszahlungZyklusID = BAZ.FbBarauszahlungZyklusID
  LEFT  JOIN vwUser                    USR  ON USR.UserID = BAA.UserID_Creator
  LEFT  JOIN vwUser                    USR1 ON USR1.UserID = BAA.UserID_Modifier
  LEFT  JOIN FbPeriode                 FPR  ON FPR.BaPersonID = LEI.BaPersonID AND
                                               FPR.PeriodeStatusCode = 1 AND
                                               FPR.PeriodeVon &lt;= CASE WHEN BAA.DatumVon &gt; GETDATE() THEN BAA.DatumVon ELSE GETDATE() END AND
                                               FPR.PeriodeBis &gt;= CASE WHEN BAA.DatumVon &gt; GETDATE() THEN BAA.DatumVon ELSE GETDATE() END
  LEFT  JOIN FbKonto                   FKT  ON FKT.KontoNr = BAA.SollKtoNr AND
                                               FKT.FbPeriodeID = FPR.FbPeriodeID
  LEFT  JOIN FbKonto                   FKT1 ON FKT1.KontoNr = BAA.HabenKtoNr AND
                                               FKT1.FbPeriodeID = FPR.FbPeriodeID
WHERE BAA.FaLeistungID = @FaLeistungID
--- AND ({edtSearchNurAktive} = 0 OR (IsNull(BAA.DatumBis, GETDATE()) &gt;= GETDATE() AND BAA.FbBarauszahlungPeriodizitaetCode &lt;&gt; 9) OR (BAA.AuszahlungenVorhanden = 0 AND BAA.FbBarauszahlungPeriodizitaetCode = 9))
--- AND BAA.Betrag &gt;= {edtSearchBetragVon}
--- AND BAA.Betrag &lt;= {edtSearchBetragBis}
--- AND BAA.DatumVon &gt;= {edtSearchDatumVon}
--- AND BAA.DatumBis &lt;= {edtSearchDatumBis}
--- AND BAA.FbBarauszahlungPeriodizitaetCode = {edtSearchPeriodizitaet}
--ORDER BY BAA.DatumVon, BAA.DatumBis
</value>
  </data>
  <data name="edtSearchDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="edtSearchDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFVJREFUOE9jZAAC
        Y2Pj/yCaEDh79iwjWA1MAzaNWOVAgsRguAuIcRKKGmROQwMD3D/IbKwaQApgitBp6mgAeYokG4abBmT/
        YKQ3smKapLREKFkjywMAd9eDN3Z9MMsAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="qryPerson.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>417, 19</value>
  </metadata>
  <metadata name="qrySaldoKasse.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>523, 19</value>
  </metadata>
  <data name="qrySaldoKasse.SelectStatement" xml:space="preserve">
    <value>SELECT Saldo = SUM(Saldo)
FROM (
  SELECT  Saldo = IsNull(KTO.EroeffnungsSaldo,0) +
                  (SELECT IsNull(SUM(Betrag),0)
                   FROM   dbo.FbBuchung WITH (READUNCOMMITTED) 
                   WHERE  FbPeriodeID = KTO.FbPeriodeID AND
                          SollKtoNr = KTO.KontoNr AND
                          BuchungsDatum &lt;= GETDATE()) -
                  (SELECT IsNull(SUM(Betrag),0)
                   FROM   dbo.FbBuchung WITH (READUNCOMMITTED) 
                   WHERE  FbPeriodeID = KTO.FbPeriodeID AND
                          HabenKtoNr = KTO.KontoNr AND
                          BuchungsDatum &lt;= GETDATE()),
          *
  FROM dbo.FbKonto KTO WITH (READUNCOMMITTED)
  WHERE KTO.FbPeriodeID = {0} 
    AND KTO.SaldoGruppeName = {1}
    AND KTO.KontoKlasseCode &lt;= 4
) TMP
GROUP BY SaldoGruppeName
</value>
  </data>
  <metadata name="qryPeriode.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>653, 19</value>
  </metadata>
  <data name="qryPeriode.SelectStatement" xml:space="preserve">
    <value>SELECT FbPeriodeID
FROM FbPeriode
WHERE BaPersonID = {0}
  AND PeriodeStatusCode = 1
  AND PeriodeVon &lt;= ISNULL(dbo.fnDateOf({1}), dbo.fnDateOf(GETDATE()))
  AND PeriodeBis &gt;= ISNULL(dbo.fnDateOf({1}), dbo.fnDateOf(GETDATE()))</value>
  </data>
  <metadata name="qryKonto.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>764, 19</value>
  </metadata>
  <data name="qryKonto.SelectStatement" xml:space="preserve">
    <value>SELECT 
  KTO.FbKontoID,
  KTO.KontoNr,
  KTO.KontoName
FROM dbo.FbKonto KTO WITH (READUNCOMMITTED)
  LEFT JOIN dbo.FbPeriode PER WITH (READUNCOMMITTED) ON PER.FbPeriodeID = KTO.FbPeriodeID
  LEFT JOIN dbo.BaPerson  BAP WITH (READUNCOMMITTED) ON BAP.BaPersonID = PER.BaPersonID
WHERE BAP.BaPersonID = {0} 
  AND PER.PeriodeVon &lt;= {1}
  AND PER.PeriodeBis &gt;= {1}
  AND KTO.KontoNr IS NOT NULL
  AND KTO.KontoNr = {2}
ORDER BY KTO.KontoNr</value>
  </data>
</root>