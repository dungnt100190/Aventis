
            // ============================================================
//   This code was generated by the tool [DBToClass].
//   
//   Changes to this file may result in incorrect behavior
//   and will be lost when the code is regenerated.
// ============================================================
//   ServerName:  sql2014.diartislocal.local\sql2014
//   DBName:      KiSS_BSS_TestRelease_R4906
//   MachineName: BISRV1085
//   UserName:    rbvm
//   Version:     2.0.0.27111
// ============================================================


            using System;
            using System.Text;

            namespace KiSS.DBScheme
            {

                /// <summary>
                /// Class that contains all the object schemes
                /// </summary>
                public static class DBODef
                {
/// <summary>
/// Type: Table
/// </summary>

public static class _tmp_deleted_BgAuszahlungPerson{
/// <summary>
/// Gets the table definition for _tmp_deleted_BgAuszahlungPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("_tmp_deleted_BgAuszahlungPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonID { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BgAuszahlungPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusID { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BgZahlungsmodusID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbAuszahlungsArtCode { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "KbAuszahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgAuszahlungsTerminCode { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BgAuszahlungsTerminCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgWochentagCodes { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BgWochentagCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile1 { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "MitteilungZeile1", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile2 { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "MitteilungZeile2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile3 { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "MitteilungZeile3", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile4 { get { return new DBOColumnDef(_tmp_deleted_BgAuszahlungPerson.TableDef, "MitteilungZeile4", typeof(string), false, false, false, 35, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Adressinformation für Personen und Institutionen
/// </summary>

public static class BaAdresse{
/// <summary>
/// Gets the table definition for BaAdresse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaAdresse", "", true); } }


/// <summary>
/// Primärschlüssel für Adress Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaAdresseID { get { return new DBOColumnDef(BaAdresse.TableDef, "BaAdresseID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Eindeutige Identifikation der zugehörigen Person. Foreign Key der Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaAdresse.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Eindeutige Identifikation der zugehörigen Institution. Foreign Key der Institution.   Entweder ist BaPersonID oder BaInstitutionID gefüllt.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaAdresse.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XUser, Privatadresse des Benutzers
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BaAdresse.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// ck: TODO Leo weisst du wozu die ist?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef PlatzierungInstID { get { return new DBOColumnDef(BaAdresse.TableDef, "PlatzierungInstID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmMandantID { get { return new DBOColumnDef(BaAdresse.TableDef, "VmMandantID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(BaAdresse.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(BaAdresse.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebKontaktID { get { return new DBOColumnDef(BaAdresse.TableDef, "KaBetriebKontaktID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Land-Angabe des Adressrecords; Wert aus Werteliste BaLand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(BaAdresse.TableDef, "BaLandID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Angedachte Historisierung der Adressenrecords. In Berner Standard nicht verwendet! TODO
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaAdresse.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angedachte Historisierung der Adressenrecords. In Berner Standard nicht verwendet! TODO
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaAdresse.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AusEinwohnerregister { get { return new DBOColumnDef(BaAdresse.TableDef, "AusEinwohnerregister", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob eine Adresse gesperrt ist oder nicht (TODO: wird das benötigt?)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Gesperrt { get { return new DBOColumnDef(BaAdresse.TableDef, "Gesperrt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Spezifiziert den Typ der Adresse anhand der Werteliste BaAdressTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseCode { get { return new DBOColumnDef(BaAdresse.TableDef, "AdresseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zur Institution (=Name der Institution) oder Person (=Name und Vorname der Person), welche für die Anschrift als c/o verwendet werden soll
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CareOf { get { return new DBOColumnDef(BaAdresse.TableDef, "CareOf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Ein Vermerk über Besonderheiten der Wohngegebenheiten  z. B. "Zur Untermiete bei Herrn/Frau X".
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(BaAdresse.TableDef, "Zusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Optionale Zuhanden-Von Angaben, welche für die Anschrift verwendet werden sollen
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuhandenVon { get { return new DBOColumnDef(BaAdresse.TableDef, "ZuhandenVon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Strassen-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(BaAdresse.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// BaStrasseID auf BaHaus oder in Alpha-Import gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef StrasseCode { get { return new DBOColumnDef(BaAdresse.TableDef, "StrasseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// Hausnr-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(BaAdresse.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Postfach-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(BaAdresse.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Flag, ob das Postfach eine Nummer hat oder lediglich mit Postfach angeschrieben werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(BaAdresse.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Postleitzahl-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(BaAdresse.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Ort-Angabe des Adressrecords TODO: Ort vs. OrtschaftCode
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(BaAdresse.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// TODO OrtschaftCode vs. Ort
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(BaAdresse.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Kanton-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(BaAdresse.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Bezirk-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(BaAdresse.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld für weitere Angaben des Adressrecords
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaAdresse.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Name der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef InstitutionName { get { return new DBOColumnDef(BaAdresse.TableDef, "InstitutionName", typeof(string), false, false, false, 100, true, "", "ZH"); } }


/// <summary>
/// TODO? Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlatzierungsartCode { get { return new DBOColumnDef(BaAdresse.TableDef, "PlatzierungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnStatusCode { get { return new DBOColumnDef(BaAdresse.TableDef, "WohnStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnungsgroesseCode { get { return new DBOColumnDef(BaAdresse.TableDef, "WohnungsgroesseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Quartier Code von Alpha
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef QuartierCode { get { return new DBOColumnDef(BaAdresse.TableDef, "QuartierCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// Migrationsfeld; TODO Feld löschen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(BaAdresse.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }


/// <summary>
/// VersionsID des Adressrecords für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BaAdresse.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaAdresse.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaAdresse.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaAdresse.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaAdresse.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Adressrecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaAdresseTS { get { return new DBOColumnDef(BaAdresse.TableDef, "BaAdresseTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaArbeit{
/// <summary>
/// Gets the table definition for BaArbeit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaArbeit", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaArbeit_ { get { return new DBOColumnDef(BaArbeit.TableDef, "BaArbeit", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaArbeit.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaArbeit.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TypCode { get { return new DBOColumnDef(BaArbeit.TableDef, "TypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PensumCode { get { return new DBOColumnDef(BaArbeit.TableDef, "PensumCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaSprachniveauCode { get { return new DBOColumnDef(BaArbeit.TableDef, "BaSprachniveauCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaArbeit.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaArbeit.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaArbeit.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(BaArbeit.TableDef, "Adresse", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaArbeit.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaArbeit.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaArbeit.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaArbeit.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaArbeitTS { get { return new DBOColumnDef(BaArbeit.TableDef, "BaArbeitTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaArbeitAusbildung{
/// <summary>
/// Gets the table definition for BaArbeitAusbildung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaArbeitAusbildung", "", false); } }


/// <summary>
/// Primärschlüssel für BaArbeitAusbildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BaPersonID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationStatus1Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "ErwerbssituationStatus1Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationStatus2Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "ErwerbssituationStatus2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationStatus3Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "ErwerbssituationStatus3Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationStatus4Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "ErwerbssituationStatus4Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeschaeftigungsGradCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BeschaeftigungsGradCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit1Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "GrundTeilzeitarbeit1Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit2Code { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "GrundTeilzeitarbeit2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrancheCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BrancheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErlernterBerufCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "ErlernterBerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerufCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaArbeitAusbildung_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HoechsteAusbildungCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "HoechsteAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbgebrochenAusbildungCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "AbgebrochenAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnstellungCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "AnstellungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: NUMERIC]
/// [Length: 5]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Arbeitszeit { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "Arbeitszeit", typeof(System.Nullable<decimal>), false, false, false, 5, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsVariableArbeitszeit { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "IsVariableArbeitszeit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StempelDatum { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "StempelDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WieOftArbeitslos { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "WieOftArbeitslos", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusgesteuertUnbekanntCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "AusgesteuertUnbekanntCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusgesteuertDatum { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "AusgesteuertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaArbeitAusbildungTS { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "BaArbeitAusbildungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IntegrationsstandCode { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "IntegrationsstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef FinanziellUnabhaengig { get { return new DBOColumnDef(BaArbeitAusbildung.TableDef, "FinanziellUnabhaengig", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// Bankenstamm
/// </summary>

public static class BaBank{
/// <summary>
/// Gets the table definition for BaBank
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaBank", "", false); } }


/// <summary>
/// Primärschlüssel für BaBank Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(BaBank.TableDef, "BaBankID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Feld auf Maske CtlBaBank entfernt. Wäre momentan also überflüssig. In nächstem Schritt entfernen?!?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef LandCode { get { return new DBOColumnDef(BaBank.TableDef, "LandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaBank.TableDef, "Name", typeof(string), false, false, false, 70, false, "", ""); } }


/// <summary>
/// Feld auf Maske CtlBaBank entfernt. Wäre momentan also überflüssig. In nächstem Schritt entfernen?!?
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(BaBank.TableDef, "Zusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(BaBank.TableDef, "Strasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(BaBank.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(BaBank.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef ClearingNr { get { return new DBOColumnDef(BaBank.TableDef, "ClearingNr", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClearingNrNeu { get { return new DBOColumnDef(BaBank.TableDef, "ClearingNrNeu", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FilialeNr { get { return new DBOColumnDef(BaBank.TableDef, "FilialeNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HauptsitzBCL { get { return new DBOColumnDef(BaBank.TableDef, "HauptsitzBCL", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(BaBank.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GueltigAb { get { return new DBOColumnDef(BaBank.TableDef, "GueltigAb", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SicUpdated { get { return new DBOColumnDef(BaBank.TableDef, "SicUpdated", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaBank.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaBank.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaBank.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaBank.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaBankTS { get { return new DBOColumnDef(BaBank.TableDef, "BaBankTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaBeruf{
/// <summary>
/// Gets the table definition for BaBeruf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaBeruf", "", false); } }


/// <summary>
/// Primärschlüssel für BaBeruf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BaBerufID { get { return new DBOColumnDef(BaBeruf.TableDef, "BaBerufID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Beruf { get { return new DBOColumnDef(BaBeruf.TableDef, "Beruf", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungM { get { return new DBOColumnDef(BaBeruf.TableDef, "BezeichnungM", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungW { get { return new DBOColumnDef(BaBeruf.TableDef, "BezeichnungW", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BaBeruf.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSCode { get { return new DBOColumnDef(BaBeruf.TableDef, "BFSCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaBerufTS { get { return new DBOColumnDef(BaBeruf.TableDef, "BaBerufTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um die Daten der Ereignisse zu speichern
/// </summary>

public static class BaEinwohnerregisterEmpfangeneEreignisse{
/// <summary>
/// Gets the table definition for BaEinwohnerregisterEmpfangeneEreignisse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaEinwohnerregisterEmpfangeneEreignisse", "", false); } }


/// <summary>
/// Primärschlüssel der vom Einwohnerregister empfangenen Ereignisse
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseID { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Rohdaten von empfangenen Ereignissen
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseRohdatenID { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseRohdatenID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// ID der Person im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef FremdsystemID { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "FremdsystemID", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Header. Beinhaltet unter anderem die Person ID im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef deliveryHeader { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "deliveryHeader", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Abwesenheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef absence { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "absence", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 27 = Anerkennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef acknowledgement { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "acknowledgement", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 22 = Änderung Datensperre
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef addressLock { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "addressLock", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 24 = Adoption
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef adoption { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "adoption", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 1 = Geburt
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef birth { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "birth", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 39 = Änderung Sorgerecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef care { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "care", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 28 = Kindesverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef childRelationship { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "childRelationship", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 21 = Zustelladresse
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef contact { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "contact", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 2 = Tod
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef death { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "death", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Person gelöscht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef deletePerson { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "deletePerson", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 8 = Scheidung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef divorce { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "divorce", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 25 = Vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef gardianMeasure { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "gardianMeasure", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 10 = Zivilstandsänderung Partner/in
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef maritalStatusPartner { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "maritalStatusPartner", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 4 = Eheschliessung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef marriage { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "marriage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 3 = Verschollen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef missing { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "missing", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 20 = Umzug (innerhalb Gemeinde)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef move { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "move", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 18 = Zuzug
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef moveIn { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "moveIn", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 19 = Wegzug
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef moveOut { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "moveOut", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 12 = Einbürgerung Ausländer
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef naturalizeForeigner { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "naturalizeForeigner", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 13 = Einbürgerung Schweizer in Gemeinde
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef naturalizeSwiss { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "naturalizeSwiss", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 38 = Änderung Schriftensperre
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef paperLock { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "paperLock", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 36 = Eintragung Partnerschaft
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef partnership { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "partnership", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 35 = Antrag Verlängerung Ausländerbewilligung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef renewPermit { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "renewPermit", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// PID bisher
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef replacePerson { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "replacePerson", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 6 = Trennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef separation { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "separation", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 46 = Änderung Bürgerrecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeCitizen { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeCitizen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 47 = Wechsel vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeGardian { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeGardian", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 29 = Namensänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeName { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeName", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 17 = Wechsel der Staatsangehörigkeit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeNationality { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeNationality", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// NEST Registerdatenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeNestRegister { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeNestRegister", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// NEST Solldatenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeNestTarget { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeNestTarget", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 30 = Arbeitgeber-/Berufswechsel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeOccupation { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeOccupation", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// OKV Datenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeOKV { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeOKV", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 31 = Konfessionswechsel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeReligion { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeReligion", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 16 = Wechsel Ausländerkategorie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeResidencePermit { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeResidencePermit", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 23 = Umwandlung Meldeverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeResidenceType { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeResidenceType", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 32 = Geschlechtsänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef changeSex { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "changeSex", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Abwesenheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctAbsence { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctAbsence", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur zusätzliche Adressen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctAdditionalAddresses { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctAdditionalAddresses", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 43 = Korrektur Adressdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctAddress { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctAddress", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Kodierungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctCodes { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctCodes", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 53 = Korrektur Zustelladresse
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctContact { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctContact", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 59 = Korrektur Todesdatum
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctDateOfDeath { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctDateOfDeath", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Rechtskraftsdatum Namensänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctDateOfNameChange { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctDateOfNameChange", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Einbürgerungsdatum
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctDateOfNaturalization { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctDateOfNaturalization", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Drittmeldepflichtdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctDMP { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctDMP", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 50 = Korrektur Identifikatoren
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctIdentification { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctIdentification", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 60 = Korrektur Korrespondenzsprache
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctLanguageOfCorrespondance { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctLanguageOfCorrespondance", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Korrektur Pflichten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctLiabilities { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctLiabilities", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 57 = Korrektur Zivilstand
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctMaritalData { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctMaritalData", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 51 = Korrektur Zusatznamen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctName { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctName", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 52 = Korrektur Nationalität
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctNationality { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctNationality", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 45 = Korrektur Berufsdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctOccupation { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctOccupation", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 55 = Korrektur Heimatort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctOrigin { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctOrigin", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 41 = Korrektur Person
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctPerson { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctPerson", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 58 = Korrektur Geburtsort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctPlaceOfBirth { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctPlaceOfBirth", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 44 = Änderung Beziehungsdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctRelationship { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctRelationship", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 54 = Korrektur Konfession
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctReligion { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctReligion", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 42 = Korrektur Meldeverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctReporting { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctReporting", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 56 = Korrektur Ausländerkategorie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef correctResidencePermit { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "correctResidencePermit", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Abwesenheit beenden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoAbsence { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoAbsence", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 14 = Bürgerrechtsentlassung aus Gemeinde
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoCitizen { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoCitizen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 26 = Aufhebung vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoGardian { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoGardian", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 11 = Ungültigerklärung Ehe
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoMarriage { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoMarriage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 34 = Aufhebung Verschollenerklärung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoMissing { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoMissing", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 37 = Auflösung Partnerschaft
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoPartnership { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoPartnership", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 7 = Aufhebung Trennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoSeparation { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoSeparation", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ereignismeldung 15 = Aberkennung Schweizer Bürgerrecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef undoSwiss { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "undoSwiss", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datensynchronisationsmeldung. Meldung Gesamtdatenbestand: Anzahl Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef baseDelivery_numberOfMessages { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "baseDelivery_numberOfMessages", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datensynchronisationsmeldung. Meldung Gesamtdatenbestand: Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef baseDelivery_messages { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "baseDelivery_messages", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datensynchronisationsmeldung. Schlüsselaustausch: Anzahl Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef keyDelivery_numberOfKeyMessages { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "keyDelivery_numberOfKeyMessages", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datensynchronisationsmeldung. Schlüsselaustausch: Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef keyDelivery_messages { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "keyDelivery_messages", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datensynchronisationsmeldung. Datenanfrage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef dataRequest { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "dataRequest", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseTS { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisse.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um das XML mit den Ereignissen zu speichern
/// </summary>

public static class BaEinwohnerregisterEmpfangeneEreignisseRohdaten{
/// <summary>
/// Gets the table definition for BaEinwohnerregisterEmpfangeneEreignisseRohdaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaEinwohnerregisterEmpfangeneEreignisseRohdaten", "", false); } }


/// <summary>
/// Primärschlüssel der vom Einwohnerregister empfangenen Ereignisse
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseRohdatenID { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseRohdatenID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// XML mit den Ereignissen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Xml { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "Xml", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Status des Eintrags; wird für die wiederholte Ausführung bei einem Importfehler benötigt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS { get { return new DBOColumnDef(BaEinwohnerregisterEmpfangeneEreignisseRohdaten.TableDef, "BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Anmeldung und Abmeldung von Klienten
/// </summary>

public static class BaEinwohnerregisterPersonAnAbmeldung{
/// <summary>
/// Gets the table definition for BaEinwohnerregisterPersonAnAbmeldung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaEinwohnerregisterPersonAnAbmeldung", "", false); } }


/// <summary>
/// Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterPersonAnAbmeldungID { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "BaEinwohnerregisterPersonAnAbmeldungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// ID der PersonID im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef FremdsystemID { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "FremdsystemID", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// 1 = Anmeldung und 0 = Abmeldung
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Status", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum der An/Abmeldung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des BaEinwohnerregisterPersonAnAbmeldung Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterPersonAnAbmeldungTS { get { return new DBOColumnDef(BaEinwohnerregisterPersonAnAbmeldung.TableDef, "BaEinwohnerregisterPersonAnAbmeldungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Liste der BaPersonID in Omega (oder anderes Fremdsystem) registriert sind (Nachbarische Tabelle ist log.BaWinwohnerRegisterPersonAnAbMeldung)
/// </summary>

public static class BaEinwohnerregisterPersonStatus{
/// <summary>
/// Gets the table definition for BaEinwohnerregisterPersonStatus
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaEinwohnerregisterPersonStatus", "", false); } }


/// <summary>
/// Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterPersonStatusID { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "BaEinwohnerregisterPersonStatusID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// FK BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaEinwohnerregisterPersonStatusTS { get { return new DBOColumnDef(BaEinwohnerregisterPersonStatus.TableDef, "BaEinwohnerregisterPersonStatusTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaGemeinde{
/// <summary>
/// Gets the table definition for BaGemeinde
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaGemeinde", "", false); } }


/// <summary>
/// Primärschlüssel für BaGemeinde Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaGemeindeID { get { return new DBOColumnDef(BaGemeinde.TableDef, "BaGemeindeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// BFSCode der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSCode { get { return new DBOColumnDef(BaGemeinde.TableDef, "BFSCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Postleitzahl der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(BaGemeinde.TableDef, "PLZ", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Name der Gemeinde
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaGemeinde.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Amtlicher Name der Gemeinde
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameLang { get { return new DBOColumnDef(BaGemeinde.TableDef, "NameLang", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// Gemeindename TID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(BaGemeinde.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art des Gemeindeeintrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeEintragArt { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeEintragArt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Status der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeStatus { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeStatus", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mutationssnummer Aufnahme der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufnahmeNummer { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufnahmeNummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art der Gemeindeaufnahme
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufnahmeModus { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufnahmeModus", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Gemeindeaufnahme
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufnahmeDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufnahmeDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Mutationsnummer Aufhebung der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufhebungNummer { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufhebungNummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art der Gemeindeaufhebung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufhebungModus { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufhebungModus", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Gemeindeaufhebung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAufhebungDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAufhebungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Aenderungsdatum der Gemeinde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeAenderungDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeAenderungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Historisierungsnummer der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeHistorisierungID { get { return new DBOColumnDef(BaGemeinde.TableDef, "GemeindeHistorisierungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// BezirkCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkCode { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Name des Bezirks
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkName { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Amtlicher Name des Bezirks
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkNameLang { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkNameLang", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// Bezirksname TID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkNameTID { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkNameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art des Bezirkseinrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkEintragArt { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkEintragArt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mutationsnummer Aufnahme des Bezirks
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufnahmeNummer { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufnahmeNummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art der Bezirksaufnahme
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufnahmeModus { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufnahmeModus", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Bezirksaufnahme
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufnahmeDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufnahmeDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Mutationsnummer Aufhebung des Bezirks
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufhebungNummer { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufhebungNummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art der Bezirksaufhebung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufhebungModus { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufhebungModus", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Bezirksaufhebung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAufhebungDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAufhebungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Aenderungsdatum des Bezirks
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkAenderungDatum { get { return new DBOColumnDef(BaGemeinde.TableDef, "BezirkAenderungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KantonID { get { return new DBOColumnDef(BaGemeinde.TableDef, "KantonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(BaGemeinde.TableDef, "Kanton", typeof(string), false, false, false, 2, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KantonNameLang { get { return new DBOColumnDef(BaGemeinde.TableDef, "KantonNameLang", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// True wenn das BFS die Daten bei einer aktualisierung neu geliefert hat.
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BFSDelivered { get { return new DBOColumnDef(BaGemeinde.TableDef, "BFSDelivered", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaGemeindeTS { get { return new DBOColumnDef(BaGemeinde.TableDef, "BaGemeindeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaGesundheit{
/// <summary>
/// Gets the table definition for BaGesundheit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaGesundheit", "", false); } }


/// <summary>
/// Primärschlüssel für BaGesundheit Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaGesundheitID { get { return new DBOColumnDef(BaGesundheit.TableDef, "BaGesundheitID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaGesundheit.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Jahr des Datensatzes
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (datepart(year,getdate()))]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BaGesundheit.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "(datepart(year,getdate()))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution_KVG) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KVGOrganisationID { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGOrganisationID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Kontaktperson der zugehörigen KVG-Krankenkasse (KVGOrganisationID)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGKontaktPerson { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGKontaktPerson", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Telefonnummer der zugehörigen KVG-Krankenkasse (KVGOrganisationID) bzw. deren Kontaktperson (KVGKontaktPerson)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGKontaktTelefon { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGKontaktTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Mitglied-Nr der zugehörigen KVG-Krankenkasse (KVGOrganisationID).
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGMitgliedNr { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGMitgliedNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Datum des Vertragsbeginns mit der zugehörigen KVG-Krankenkasse
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGVersichertSeit { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGVersichertSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG Grundprämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGGrundPraemie { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGGrundPraemie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG-Unfallprämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGUnfallPraemie { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGUnfallPraemie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG Gesundheits-Förderungs-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGGesundFoerdPraemie { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGGesundFoerdPraemie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag des KVG-Zuschuss (Prämienverbilligung)
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGZuschussBetrag { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGZuschussBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG-Umweltabgabe
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGUmweltabgabeBetrag { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGUmweltabgabeBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGPraemie { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGPraemie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der KVG-Franchise
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGFranchise { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGFranchise", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Zahlungs-Periode der KVG-Krankenkasse
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGZahlungsPeriodeCode { get { return new DBOColumnDef(BaGesundheit.TableDef, "KVGZahlungsPeriodeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution_VVG) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VVGOrganisationID { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGOrganisationID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Kontaktperson der zugehörigen VVG-Krankenkasse (VVGOrganisationID)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGKontaktPerson { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGKontaktPerson", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Telefonnummer der zugehörigen VVG-Krankenkasse (VVGOrganisationID) bzw. deren Kontaktperson (VVGKontaktPerson)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGKontaktTelefon { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGKontaktTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Freitextangabe. Gedacht für Mitglied-Nr der zugehörigen VVG-Krankenkasse (VVGOrganisationID).
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGMitgliedNr { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGMitgliedNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Datum des Vertragsbeginns mit der zugehörigen VVG-Krankenkasse
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGVersichertSeit { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGVersichertSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der VVG-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGPraemie { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGPraemie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag der VVG-Franchise
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGFranchise { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGFranchise", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Zahlungs-Periode der VVG-Krankenkasse
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGZahlungsPeriodeCode { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGZahlungsPeriodeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Freitextfeld zur Erfassung weitere Zusatzversicherungen
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGZusaetzeRTF { get { return new DBOColumnDef(BaGesundheit.TableDef, "VVGZusaetzeRTF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Flag ob KVG Prämienverbilligung zurzeit abgeklärt wird
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ZuschussInAbklaerungFlag { get { return new DBOColumnDef(BaGesundheit.TableDef, "ZuschussInAbklaerungFlag", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// Angabe ob Person IV erhält
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVEingliederungsmassnahmeCode { get { return new DBOColumnDef(BaGesundheit.TableDef, "IVEingliederungsmassnahmeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angabe durch wen Person geflegt wird.   Darf nur Wert enthalten, wenn PflegebeduerftigFlag = 1
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PflegeDurchCode { get { return new DBOColumnDef(BaGesundheit.TableDef, "PflegeDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag ob Person pflegebedürftig ist
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PflegebeduerftigFlag { get { return new DBOColumnDef(BaGesundheit.TableDef, "PflegebeduerftigFlag", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// TODO: DELETE! War wohl für Historisierung gedacht
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaGesundheit.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Abmeldung ASV (Amt für Sozialversicherung)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ASVSAbmeldung { get { return new DBOColumnDef(BaGesundheit.TableDef, "ASVSAbmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Anmeldung ASV (Amt für Sozialversicherung)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ASVSAnmeldung { get { return new DBOColumnDef(BaGesundheit.TableDef, "ASVSAnmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Freitextfeld Maske BaGesundheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaGesundheit.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AbtretungKK { get { return new DBOColumnDef(BaGesundheit.TableDef, "AbtretungKK", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum EVAZ
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EVAZDatum { get { return new DBOColumnDef(BaGesundheit.TableDef, "EVAZDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ZahnarztBaInstitutionID { get { return new DBOColumnDef(BaGesundheit.TableDef, "ZahnarztBaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaGesundheitTS { get { return new DBOColumnDef(BaGesundheit.TableDef, "BaGesundheitTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaInstitution{
/// <summary>
/// Gets the table definition for BaInstitution
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaInstitution", "", false); } }


/// <summary>
/// Primärschlüssel für BaInstitution Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaInstitution.TableDef, "BaInstitutionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XOrgUnit.OrgUnitID, um einer Institution eine Abteilung als Besitzer zuzuweisen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(BaInstitution.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionNr { get { return new DBOColumnDef(BaInstitution.TableDef, "InstitutionNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// Art der Institution anhand der Werteliste BaInstitutionArt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionArtCode { get { return new DBOColumnDef(BaInstitution.TableDef, "BaInstitutionArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag ob Institution aktiv ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(BaInstitution.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Flag ob Institution ein Debitor ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Debitor { get { return new DBOColumnDef(BaInstitution.TableDef, "Debitor", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob Institution ein Kreditor ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Kreditor { get { return new DBOColumnDef(BaInstitution.TableDef, "Kreditor", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Institution Serienbriefe erhalten soll oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(BaInstitution.TableDef, "KeinSerienbrief", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(BaInstitution.TableDef, "ManuelleAnrede", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Anrede der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(BaInstitution.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Briefanrede der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(BaInstitution.TableDef, "Briefanrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Titel der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(BaInstitution.TableDef, "Titel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Name der Institution (Mehrzeilig) oder Name der Fachperson (Einzeilig)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaInstitution.TableDef, "Name", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// Vorname der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(BaInstitution.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Geschlecht der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(BaInstitution.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Geburtsdatum einer Fachperson
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(BaInstitution.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Versichertennummer einer Fachperson
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(BaInstitution.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(BaInstitution.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Zweite Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon2 { get { return new DBOColumnDef(BaInstitution.TableDef, "Telefon2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Dritte Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon3 { get { return new DBOColumnDef(BaInstitution.TableDef, "Telefon3", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fax-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(BaInstitution.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// E-Mail Adresse der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(BaInstitution.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Homepage der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Homepage { get { return new DBOColumnDef(BaInstitution.TableDef, "Homepage", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Korrespondenzsprache der Institution
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(BaInstitution.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaInstitution.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionName { get { return new DBOColumnDef(BaInstitution.TableDef, "InstitutionName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionTypCode { get { return new DBOColumnDef(BaInstitution.TableDef, "InstitutionTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaFreigabeStatusCode { get { return new DBOColumnDef(BaInstitution.TableDef, "BaFreigabeStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DefinitivUserID { get { return new DBOColumnDef(BaInstitution.TableDef, "DefinitivUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DefinitivDatum { get { return new DBOColumnDef(BaInstitution.TableDef, "DefinitivDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltUserID { get { return new DBOColumnDef(BaInstitution.TableDef, "ErstelltUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltDatum { get { return new DBOColumnDef(BaInstitution.TableDef, "ErstelltDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertUserID { get { return new DBOColumnDef(BaInstitution.TableDef, "MutiertUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertDatum { get { return new DBOColumnDef(BaInstitution.TableDef, "MutiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaInstitution.TableDef, "Creator", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaInstitution.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaInstitution.TableDef, "Modifier", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaInstitution.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitutionTS { get { return new DBOColumnDef(BaInstitution.TableDef, "BaInstitutionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle, um einer BaInstitution 0..n verschiedene BaInstitutionTyp-en zuzuweisen
/// </summary>

public static class BaInstitution_BaInstitutionTyp{
/// <summary>
/// Gets the table definition for BaInstitution_BaInstitutionTyp
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaInstitution_BaInstitutionTyp", "", false); } }


/// <summary>
/// Primärschlüssel für BaInstitution_BaInstitutionTyp Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaInstitution_BaInstitutionTypID { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "BaInstitution_BaInstitutionTypID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaInstitution.BaInstitutionID, Institution, welche einen Typ zugewiesen erhalten soll
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "BaInstitutionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaInstitutionTyp.BaInstitutionTypID, Zuweisung eines Typen zu einer Institution
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionTypID { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "BaInstitutionTypID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitution_BaInstitutionTypTS { get { return new DBOColumnDef(BaInstitution_BaInstitutionTyp.TableDef, "BaInstitution_BaInstitutionTypTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Dokumente im Institutionenstamm
/// </summary>

public static class BaInstitutionDokument{
/// <summary>
/// Gets the table definition for BaInstitutionDokument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaInstitutionDokument", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaInstitutionDokumentID { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionDokumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// zugehörige Institution
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Verfasser des Dokuments
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// BaPersonID, falls Adressat eine Person ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaInstitutionID, falls Adressat eine Institution ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV BaInstitutionDokumentKontaktart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionDokumentKontaktartCode { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionDokumentKontaktartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV BaInstitutionDokumentDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionDokumentDienstleistungCode { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionDokumentDienstleistungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV FaDauer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaDauerCode { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "FaDauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Inhalt { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Inhalt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitutionDokumentTS { get { return new DBOColumnDef(BaInstitutionDokument.TableDef, "BaInstitutionDokumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Institutionen können 0:n Kontaktpersonen zugewiesen werden
/// </summary>

public static class BaInstitutionKontakt{
/// <summary>
/// Gets the table definition for BaInstitutionKontakt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaInstitutionKontakt", "", false); } }


/// <summary>
/// Primärschlüssel für BaInstitutionKontakt Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaInstitutionKontaktID { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "BaInstitutionKontaktID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel: BaInstitutionKontakt.BaInstitutionID => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "BaInstitutionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Flag ob eine Kontaktperson aktiv ist oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "ManuelleAnrede", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Anrede der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Briefanrede der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Briefanrede", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Titel der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Titel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Name der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Vorname der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Geschlecht der Kontaktperson (LOVName: Geschlecht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Telefon-Nr. der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fax-Nr. der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// E-Mail Adresse der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Sprachcode der Kontaktperson
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitutionKontaktTS { get { return new DBOColumnDef(BaInstitutionKontakt.TableDef, "BaInstitutionKontaktTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Mögliche Typen einer Institution, in Verwendung mit der Tabelle BaInstitution_BaInstitutionTyp
/// </summary>

public static class BaInstitutionTyp{
/// <summary>
/// Gets the table definition for BaInstitutionTyp
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaInstitutionTyp", "", false); } }


/// <summary>
/// Primärschlüssel für BaInstitutionTyp Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaInstitutionTypID { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "BaInstitutionTypID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XOrgUnit.OrgUnitID, um einen Typ einer Abteilung zuzuweisen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Name/Bezeichnung eines Types
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// TID der Name-Spalte, wird für die Mehrsprachigkeit verwendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob ein Typ aktiv verwendet wird oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Zusätzliche Bemerkungen eines Types
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitutionTypTS { get { return new DBOColumnDef(BaInstitutionTyp.TableDef, "BaInstitutionTypTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaKantonalerZuschuss{
/// <summary>
/// Gets the table definition for BaKantonalerZuschuss
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaKantonalerZuschuss", "", false); } }


/// <summary>
/// PrimaryKey, wird als ID benutzt
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaKantonalerZuschussID { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "BaKantonalerZuschussID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Bezeichnung des kantonalen Zuschusses
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "Bezeichnung", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Multilanguage-TID der Bezeichnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungTID { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "BezeichnungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KantonCode { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "KantonCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "Bemerkungen", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaKantonalerZuschussTS { get { return new DBOColumnDef(BaKantonalerZuschuss.TableDef, "BaKantonalerZuschussTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaKopfquote{
/// <summary>
/// Gets the table definition for BaKopfquote
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaKopfquote", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaKopfquoteID { get { return new DBOColumnDef(BaKopfquote.TableDef, "BaKopfquoteID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaKopfquote.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef RechnungDatum { get { return new DBOColumnDef(BaKopfquote.TableDef, "RechnungDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(BaKopfquote.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zeitspanne { get { return new DBOColumnDef(BaKopfquote.TableDef, "Zeitspanne", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: NCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaKopfquote.TableDef, "Bemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaKopfquoteTS { get { return new DBOColumnDef(BaKopfquote.TableDef, "BaKopfquoteTS", typeof(byte[]), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaLand{
/// <summary>
/// Gets the table definition for BaLand
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaLand", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(BaLand.TableDef, "BaLandID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Name des Landes
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(BaLand.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef TextFR { get { return new DBOColumnDef(BaLand.TableDef, "TextFR", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef TextIT { get { return new DBOColumnDef(BaLand.TableDef, "TextIT", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef TextEN { get { return new DBOColumnDef(BaLand.TableDef, "TextEN", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Zweistelliger ISO Code; 3166 Alpha-2
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Iso2Code { get { return new DBOColumnDef(BaLand.TableDef, "Iso2Code", typeof(string), false, false, false, 2, true, "", ""); } }


/// <summary>
/// Dreistelliger ISO Code; 3166 Alpha-3
/// [DataType: VARCHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Iso3Code { get { return new DBOColumnDef(BaLand.TableDef, "Iso3Code", typeof(string), false, false, false, 3, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSCode { get { return new DBOColumnDef(BaLand.TableDef, "BFSCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BaLand.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Ländercodes für die Schnittstelle zu SAP
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SAPCode { get { return new DBOColumnDef(BaLand.TableDef, "SAPCode", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaLand.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaLand.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ob der Wert von BFS geliefert wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BFSDelivered { get { return new DBOColumnDef(BaLand.TableDef, "BFSDelivered", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaLand.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Zeitpunkt der Erstellung.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaLand.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz als letzter verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaLand.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Zeitpunkt der letzten Änderung.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaLand.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaLandTS { get { return new DBOColumnDef(BaLand.TableDef, "BaLandTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Einer Person können 0:n Mietverträge zugeordnet werden.   Die Maske CtlHaushalt unterstützt bisher jedoch nur die Erfassung eines Mietvertrages!
/// </summary>

public static class BaMietvertrag{
/// <summary>
/// Gets the table definition for BaMietvertrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaMietvertrag", "", false); } }


/// <summary>
/// Primärschlüssel für BaMietvertrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaMietvertragID { get { return new DBOColumnDef(BaMietvertrag.TableDef, "BaMietvertragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Datum von des Mietvertrages. Miete ab auf CtlHaushalt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaMietvertrag.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum bis des Mietvertrages. Miete bis auf CtlHaushalt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaMietvertrag.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Mietkosten gemäss Mietvertrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mietkosten { get { return new DBOColumnDef(BaMietvertrag.TableDef, "Mietkosten", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Nebenkosten gemäss Mietvertrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Nebenkosten { get { return new DBOColumnDef(BaMietvertrag.TableDef, "Nebenkosten", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Kostenanteil der Unterstützungseinheit des Mietvertrags
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KostenanteilUE { get { return new DBOColumnDef(BaMietvertrag.TableDef, "KostenanteilUE", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag des Mietdepots des Mietvertrags
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mietdepot { get { return new DBOColumnDef(BaMietvertrag.TableDef, "Mietdepot", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaMietvertrag_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaMietvertrag.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld zum Mietvertrag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaMietvertrag.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaMietvertragTS { get { return new DBOColumnDef(BaMietvertrag.TableDef, "BaMietvertragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaMietvertrag_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaMietvertrag.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GarantieBis { get { return new DBOColumnDef(BaMietvertrag.TableDef, "GarantieBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MieteAbgetreten { get { return new DBOColumnDef(BaMietvertrag.TableDef, "MieteAbgetreten", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mietzinsgarantie { get { return new DBOColumnDef(BaMietvertrag.TableDef, "Mietzinsgarantie", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson{
/// <summary>
/// Gets the table definition for BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPerson", "", true); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaPerson.TableDef, "BaPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef StatusPersonCode { get { return new DBOColumnDef(BaPerson.TableDef, "StatusPersonCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(BaPerson.TableDef, "Titel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaPerson.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FruehererName { get { return new DBOColumnDef(BaPerson.TableDef, "FruehererName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(BaPerson.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname2 { get { return new DBOColumnDef(BaPerson.TableDef, "Vorname2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(BaPerson.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sterbedatum { get { return new DBOColumnDef(BaPerson.TableDef, "Sterbedatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(BaPerson.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(BaPerson.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// Policen-Nummer der Haushaltsversicherung
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef HaushaltVersicherungsNummer { get { return new DBOColumnDef(BaPerson.TableDef, "HaushaltVersicherungsNummer", typeof(string), false, false, false, 18, true, "", "Standard"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NNummer { get { return new DBOColumnDef(BaPerson.TableDef, "NNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFFNummer { get { return new DBOColumnDef(BaPerson.TableDef, "BFFNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZARNummer { get { return new DBOColumnDef(BaPerson.TableDef, "ZARNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ZIPNr { get { return new DBOColumnDef(BaPerson.TableDef, "ZIPNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef KantonaleReferenznummer { get { return new DBOColumnDef(BaPerson.TableDef, "KantonaleReferenznummer", typeof(string), false, false, false, 50, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(BaPerson.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandCode { get { return new DBOColumnDef(BaPerson.TableDef, "ZivilstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandDatum { get { return new DBOColumnDef(BaPerson.TableDef, "ZivilstandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef HeimatgemeindeCode { get { return new DBOColumnDef(BaPerson.TableDef, "HeimatgemeindeCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef HeimatgemeindeCodes { get { return new DBOColumnDef(BaPerson.TableDef, "HeimatgemeindeCodes", typeof(string), false, false, false, 255, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef NationalitaetCode { get { return new DBOColumnDef(BaPerson.TableDef, "NationalitaetCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ReligionCode { get { return new DBOColumnDef(BaPerson.TableDef, "ReligionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusCode { get { return new DBOColumnDef(BaPerson.TableDef, "AuslaenderStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusGueltigBis { get { return new DBOColumnDef(BaPerson.TableDef, "AuslaenderStatusGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_P { get { return new DBOColumnDef(BaPerson.TableDef, "Telefon_P", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_G { get { return new DBOColumnDef(BaPerson.TableDef, "Telefon_G", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef MobilTel1 { get { return new DBOColumnDef(BaPerson.TableDef, "MobilTel1", typeof(string), false, false, false, 100, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef MobilTel2 { get { return new DBOColumnDef(BaPerson.TableDef, "MobilTel2", typeof(string), false, false, false, 100, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(BaPerson.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(BaPerson.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Unterstuetzt { get { return new DBOColumnDef(BaPerson.TableDef, "Unterstuetzt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Fiktiv { get { return new DBOColumnDef(BaPerson.TableDef, "Fiktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaPerson.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef EinwohnerregisterAktiv { get { return new DBOColumnDef(BaPerson.TableDef, "EinwohnerregisterAktiv", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef EinwohnerregisterID { get { return new DBOColumnDef(BaPerson.TableDef, "EinwohnerregisterID", typeof(string), false, false, false, 50, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef DeutschVerstehenCode { get { return new DBOColumnDef(BaPerson.TableDef, "DeutschVerstehenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef WichtigerHinweisCode { get { return new DBOColumnDef(BaPerson.TableDef, "WichtigerHinweisCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtPLZ { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrtCode { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrt { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtKanton { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ZuzugKtLandCode { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtDatum { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtSeitGeburt { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugKtSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdePLZ { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrtCode { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeOrtCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrt { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeKanton { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ZuzugGdeLandCode { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeDatum { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeSeitGeburt { get { return new DBOColumnDef(BaPerson.TableDef, "ZuzugGdeSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzPLZ { get { return new DBOColumnDef(BaPerson.TableDef, "UntWohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzOrt { get { return new DBOColumnDef(BaPerson.TableDef, "UntWohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzKanton { get { return new DBOColumnDef(BaPerson.TableDef, "UntWohnsitzKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UntWohnsitzLandCode { get { return new DBOColumnDef(BaPerson.TableDef, "UntWohnsitzLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugPLZ { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef WegzugOrtCode { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugOrtCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrt { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugKanton { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef WegzugLandCode { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugDatum { get { return new DBOColumnDef(BaPerson.TableDef, "WegzugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef WohnsitzWieBaPersonID { get { return new DBOColumnDef(BaPerson.TableDef, "WohnsitzWieBaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef AufenthaltWieBaInstitutionID { get { return new DBOColumnDef(BaPerson.TableDef, "AufenthaltWieBaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationCode { get { return new DBOColumnDef(BaPerson.TableDef, "ErwerbssituationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit1Code { get { return new DBOColumnDef(BaPerson.TableDef, "GrundTeilzeitarbeit1Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit2Code { get { return new DBOColumnDef(BaPerson.TableDef, "GrundTeilzeitarbeit2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef BaGrundNichtErwerbstaetigCode { get { return new DBOColumnDef(BaPerson.TableDef, "BaGrundNichtErwerbstaetigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ErwerbsBrancheCode { get { return new DBOColumnDef(BaPerson.TableDef, "ErwerbsBrancheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ErlernterBerufCode { get { return new DBOColumnDef(BaPerson.TableDef, "ErlernterBerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef BerufCode { get { return new DBOColumnDef(BaPerson.TableDef, "BerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef HoechsteAusbildungCode { get { return new DBOColumnDef(BaPerson.TableDef, "HoechsteAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef AbgebrocheneAusbildungCode { get { return new DBOColumnDef(BaPerson.TableDef, "AbgebrocheneAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ArbeitSpezFaehigkeiten { get { return new DBOColumnDef(BaPerson.TableDef, "ArbeitSpezFaehigkeiten", typeof(string), false, false, false, -1, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(BaPerson.TableDef, "KbKostenstelleID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InCHSeit { get { return new DBOColumnDef(BaPerson.TableDef, "InCHSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef InCHSeitGeburt { get { return new DBOColumnDef(BaPerson.TableDef, "InCHSeitGeburt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PUAnzahlVerlustscheine { get { return new DBOColumnDef(BaPerson.TableDef, "PUAnzahlVerlustscheine", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PUKrankenkasse { get { return new DBOColumnDef(BaPerson.TableDef, "PUKrankenkasse", typeof(string), false, false, false, 50, true, "", "ZH"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PraemienuebernahmeVon { get { return new DBOColumnDef(BaPerson.TableDef, "PraemienuebernahmeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "ZH"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PraemienuebernahmeBis { get { return new DBOColumnDef(BaPerson.TableDef, "PraemienuebernahmeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "ZH"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PersonOhneLeistung { get { return new DBOColumnDef(BaPerson.TableDef, "PersonOhneLeistung", typeof(bool), false, false, false, 1, false, "((0))", "ZH"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef HCMCFluechtling { get { return new DBOColumnDef(BaPerson.TableDef, "HCMCFluechtling", typeof(bool), false, false, false, 1, false, "((0))", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef StellensuchendCode { get { return new DBOColumnDef(BaPerson.TableDef, "StellensuchendCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef ResoNr { get { return new DBOColumnDef(BaPerson.TableDef, "ResoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef NEAnmeldung { get { return new DBOColumnDef(BaPerson.TableDef, "NEAnmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef HeimatgemeindeBaGemeindeID { get { return new DBOColumnDef(BaPerson.TableDef, "HeimatgemeindeBaGemeindeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef AktiveKopfQuote { get { return new DBOColumnDef(BaPerson.TableDef, "AktiveKopfQuote", typeof(System.Nullable<bool>), false, false, false, 1, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ALK { get { return new DBOColumnDef(BaPerson.TableDef, "ALK", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef AndereSVLeistungen { get { return new DBOColumnDef(BaPerson.TableDef, "AndereSVLeistungen", typeof(string), false, false, false, -1, true, "", "PI"); } }


/// <summary>
/// Anrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(BaPerson.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef AusbildungCode { get { return new DBOColumnDef(BaPerson.TableDef, "AusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Behinderungsart2Code { get { return new DBOColumnDef(BaPerson.TableDef, "Behinderungsart2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BemerkungenAdresse { get { return new DBOColumnDef(BaPerson.TableDef, "BemerkungenAdresse", typeof(string), false, false, false, -1, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BemerkungenSV { get { return new DBOColumnDef(BaPerson.TableDef, "BemerkungenSV", typeof(string), false, false, false, -1, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BeruflicheMassnahmeIV { get { return new DBOColumnDef(BaPerson.TableDef, "BeruflicheMassnahmeIV", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Briefanrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(BaPerson.TableDef, "Briefanrede", typeof(string), false, false, false, 100, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BSVBehinderungsartCode { get { return new DBOColumnDef(BaPerson.TableDef, "BSVBehinderungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BVGRente { get { return new DBOColumnDef(BaPerson.TableDef, "BVGRente", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef CAusweisDatum { get { return new DBOColumnDef(BaPerson.TableDef, "CAusweisDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KlientenkontoNr { get { return new DBOColumnDef(BaPerson.TableDef, "KlientenkontoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef DebitorNr { get { return new DBOColumnDef(BaPerson.TableDef, "DebitorNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef DebitorUpdate { get { return new DBOColumnDef(BaPerson.TableDef, "DebitorUpdate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef EigenerMietvertrag { get { return new DBOColumnDef(BaPerson.TableDef, "EigenerMietvertrag", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Einrichtpauschale { get { return new DBOColumnDef(BaPerson.TableDef, "Einrichtpauschale", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef EinrichtungspauschaleCode { get { return new DBOColumnDef(BaPerson.TableDef, "EinrichtungspauschaleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ErgaenzungsLeistungen { get { return new DBOColumnDef(BaPerson.TableDef, "ErgaenzungsLeistungen", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Flag zum wissen ob die Person Assistenzbeitrag hat
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Assistenzbeitrag { get { return new DBOColumnDef(BaPerson.TableDef, "Assistenzbeitrag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum des Beitrages
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAssistenzbeitrag { get { return new DBOColumnDef(BaPerson.TableDef, "DatumAssistenzbeitrag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Anzahl Stunden für die IV verfügte Assistenzberatung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IvVerfuegteAssistenzberatung { get { return new DBOColumnDef(BaPerson.TableDef, "IvVerfuegteAssistenzberatung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumIvVerfuegung { get { return new DBOColumnDef(BaPerson.TableDef, "DatumIvVerfuegung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef ErteilungVA { get { return new DBOColumnDef(BaPerson.TableDef, "ErteilungVA", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// Checkbox FAZ für Familiennachzug (CAR/SRK spezifisch)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: IBE]
/// </summary>

public static DBOColumnDef IstFamiliennachzug { get { return new DBOColumnDef(BaPerson.TableDef, "IstFamiliennachzug", typeof(bool), false, false, false, 1, false, "((0))", "IBE"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(BaPerson.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HauptBehinderungsartCode { get { return new DBOColumnDef(BaPerson.TableDef, "HauptBehinderungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// Wird von PI auf eine HELB Anmeldung verzichtet, so wird dieses Flag auf True gesetzt und die anderen HELB-Felder geleert
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HELBKeinAntrag { get { return new DBOColumnDef(BaPerson.TableDef, "HELBKeinAntrag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HELBAb { get { return new DBOColumnDef(BaPerson.TableDef, "HELBAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HELBAnmeldung { get { return new DBOColumnDef(BaPerson.TableDef, "HELBAnmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// Datum, wann der Entscheid für oder gegen HELB getroffen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HELBEntscheid { get { return new DBOColumnDef(BaPerson.TableDef, "HELBEntscheid", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HELBEntscheidCode { get { return new DBOColumnDef(BaPerson.TableDef, "HELBEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HilfslosenEntschaedigungCode { get { return new DBOColumnDef(BaPerson.TableDef, "HilfslosenEntschaedigungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef ImKantonSeit { get { return new DBOColumnDef(BaPerson.TableDef, "ImKantonSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef ImKantonSeitGeburt { get { return new DBOColumnDef(BaPerson.TableDef, "ImKantonSeitGeburt", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef InGemeindeSeit { get { return new DBOColumnDef(BaPerson.TableDef, "InGemeindeSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IntensivPflegeZuschlagCode { get { return new DBOColumnDef(BaPerson.TableDef, "IntensivPflegeZuschlagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVBerechtigungAnfangsStatusCode { get { return new DBOColumnDef(BaPerson.TableDef, "IVBerechtigungAnfangsStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVBerechtigungErsterEntscheidAb { get { return new DBOColumnDef(BaPerson.TableDef, "IVBerechtigungErsterEntscheidAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVBerechtigungErsterEntscheidCode { get { return new DBOColumnDef(BaPerson.TableDef, "IVBerechtigungErsterEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVBerechtigungZweiterEntscheidAb { get { return new DBOColumnDef(BaPerson.TableDef, "IVBerechtigungZweiterEntscheidAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVBerechtigungZweiterEntscheidCode { get { return new DBOColumnDef(BaPerson.TableDef, "IVBerechtigungZweiterEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVGrad { get { return new DBOColumnDef(BaPerson.TableDef, "IVGrad", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVHilfsmittel { get { return new DBOColumnDef(BaPerson.TableDef, "IVHilfsmittel", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef IVTaggeld { get { return new DBOColumnDef(BaPerson.TableDef, "IVTaggeld", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Flag, ob eine Person Serienbriefe erhalten soll oder nicht (0=Serienbrief, 1=kein Serienbrief)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(BaPerson.TableDef, "KeinSerienbrief", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KonfessionCode { get { return new DBOColumnDef(BaPerson.TableDef, "KonfessionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KontoFuehrung { get { return new DBOColumnDef(BaPerson.TableDef, "KontoFuehrung", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// BaPersonID des Dossierträgers. Fremdschlüssel (FK_BaPerson_BaPerson_Dossiertraeger) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: CAR]
/// </summary>

public static DBOColumnDef BaPersonID_Dossiertraeger { get { return new DBOColumnDef(BaPerson.TableDef, "BaPersonID_Dossiertraeger", typeof(System.Nullable<int>), false, true, false, 4, true, "", "CAR"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Kopfquote_BaInstitutionID { get { return new DBOColumnDef(BaPerson.TableDef, "Kopfquote_BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KopfquoteAbDatum { get { return new DBOColumnDef(BaPerson.TableDef, "KopfquoteAbDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KopfquoteBisDatum { get { return new DBOColumnDef(BaPerson.TableDef, "KopfquoteBisDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// Code für die Erfassung der Korrespondenzsprache, betrifft LOV: BaKorrespondenzSprache
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KorrespondenzSpracheCode { get { return new DBOColumnDef(BaPerson.TableDef, "KorrespondenzSpracheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KTG { get { return new DBOColumnDef(BaPerson.TableDef, "KTG", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef LaufendeVollmachtErlaubnis { get { return new DBOColumnDef(BaPerson.TableDef, "LaufendeVollmachtErlaubnis", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(BaPerson.TableDef, "ManuelleAnrede", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Neues Feld für medizinische Massnahmen IV. Nur für PI (siehe Ticket: #5022)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef MedizinischeMassnahmeIV { get { return new DBOColumnDef(BaPerson.TableDef, "MedizinischeMassnahmeIV", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Mehrfachbehinderung { get { return new DBOColumnDef(BaPerson.TableDef, "Mehrfachbehinderung", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef MietdepotPI { get { return new DBOColumnDef(BaPerson.TableDef, "MietdepotPI", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(BaPerson.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef MobilTel { get { return new DBOColumnDef(BaPerson.TableDef, "MobilTel", typeof(string), false, false, false, 100, true, "", "Standard"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef NavigatorZusatz { get { return new DBOColumnDef(BaPerson.TableDef, "NavigatorZusatz", typeof(string), false, false, false, 30, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef PassiveKopfQuote { get { return new DBOColumnDef(BaPerson.TableDef, "PassiveKopfQuote", typeof(System.Nullable<bool>), false, false, false, 1, true, "", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef PauschaleAktualDatum { get { return new DBOColumnDef(BaPerson.TableDef, "PauschaleAktualDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef PersonSichtbarSDFlag { get { return new DBOColumnDef(BaPerson.TableDef, "PersonSichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((1))", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef ProjNr { get { return new DBOColumnDef(BaPerson.TableDef, "ProjNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef RentenstufeCode { get { return new DBOColumnDef(BaPerson.TableDef, "RentenstufeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(BaPerson.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Sozialhilfe { get { return new DBOColumnDef(BaPerson.TableDef, "Sozialhilfe", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Sprachpauschale { get { return new DBOColumnDef(BaPerson.TableDef, "Sprachpauschale", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Testperson { get { return new DBOColumnDef(BaPerson.TableDef, "Testperson", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef UntWohnsitzOrtCode { get { return new DBOColumnDef(BaPerson.TableDef, "UntWohnsitzOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef UVGRente { get { return new DBOColumnDef(BaPerson.TableDef, "UVGRente", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef UVGTaggeld { get { return new DBOColumnDef(BaPerson.TableDef, "UVGTaggeld", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef VerstaendigungSprachCode { get { return new DBOColumnDef(BaPerson.TableDef, "VerstaendigungSprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// Aus der Migration von VIS nach KiSS: Spezifische VIS-Access-DB, welche als Quelle für den Datensatz diente
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef visdat36Area { get { return new DBOColumnDef(BaPerson.TableDef, "visdat36Area", typeof(string), false, false, false, 255, true, "", "PI"); } }


/// <summary>
/// Aus der Migration von VIS nach KiSS: ID in der Area-spezifischen VIS-Access-DB
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef visdat36ID { get { return new DBOColumnDef(BaPerson.TableDef, "visdat36ID", typeof(string), false, false, false, 6, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef VormundMassnahmenCode { get { return new DBOColumnDef(BaPerson.TableDef, "VormundMassnahmenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef VormundPI { get { return new DBOColumnDef(BaPerson.TableDef, "VormundPI", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef WichtigerHinweis { get { return new DBOColumnDef(BaPerson.TableDef, "WichtigerHinweis", typeof(string), false, false, false, 1000, true, "", "PI"); } }


/// <summary>
/// Wittwen-, Wittwer-, Waisenrente
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef WittwenWittwerWaisenrente { get { return new DBOColumnDef(BaPerson.TableDef, "WittwenWittwerWaisenrente", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef WohnstatusCode { get { return new DBOColumnDef(BaPerson.TableDef, "WohnstatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ZeigeDetails { get { return new DBOColumnDef(BaPerson.TableDef, "ZeigeDetails", typeof(bool), false, false, false, 1, false, "((1))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ZeigeTelGeschaeft { get { return new DBOColumnDef(BaPerson.TableDef, "ZeigeTelGeschaeft", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ZeigeTelMobil { get { return new DBOColumnDef(BaPerson.TableDef, "ZeigeTelMobil", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef ZeigeTelPrivat { get { return new DBOColumnDef(BaPerson.TableDef, "ZeigeTelPrivat", typeof(bool), false, false, false, 1, false, "((1))", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef ZEMISNummer { get { return new DBOColumnDef(BaPerson.TableDef, "ZEMISNummer", typeof(string), false, false, false, 20, true, "", "Standard"); } }


/// <summary>
/// Flag ob die Person eine Berechnungsperson ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstBerechnungsperson { get { return new DBOColumnDef(BaPerson.TableDef, "IstBerechnungsperson", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Asylgesuch-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAsylgesuch { get { return new DBOColumnDef(BaPerson.TableDef, "DatumAsylgesuch", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Einbezug FAZ / Geburt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEinbezugFaz { get { return new DBOColumnDef(BaPerson.TableDef, "DatumEinbezugFaz", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BaPerson.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", "PI"); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", "PI"); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", "PI"); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", "PI"); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPersonTS { get { return new DBOColumnDef(BaPerson.TableDef, "BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle, um Institutionen einer Person zuzuordnen
/// </summary>

public static class BaPerson_BaInstitution{
/// <summary>
/// Gets the table definition for BaPerson_BaInstitution
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPerson_BaInstitution", "", false); } }


/// <summary>
/// Primärschlüssel für BaPerson_BaInstitution Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPerson_BaInstitutionID { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaPerson_BaInstitutionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaPersonID => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionID => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaInstitutionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionKontaktID => BaInstitutionKontakt.BaInstitutionKontaktID (optionaler Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionKontaktID { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaInstitutionKontaktID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionTypID => BaInstitutionTyp.BaInstitutionTypID (optionaler Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionTypID { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaInstitutionTypID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Zusätzliche Bemerkungen zu der Beziehung BaPerson > BaInstitution
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPerson_BaInstitutionTS { get { return new DBOColumnDef(BaPerson_BaInstitution.TableDef, "BaPerson_BaInstitutionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson_KantonalerZuschuss{
/// <summary>
/// Gets the table definition for BaPerson_KantonalerZuschuss
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPerson_KantonalerZuschuss", "", false); } }


/// <summary>
/// PrimaryKey, wird als ID verwendet
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPerson_KantonalerZuschussID { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "BaPerson_KantonalerZuschussID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaKantonalerZuschuss.BaKantonalerZuschussID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaKantonalerZuschussID { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "BaKantonalerZuschussID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPerson_KantonalerZuschussTS { get { return new DBOColumnDef(BaPerson_KantonalerZuschuss.TableDef, "BaPerson_KantonalerZuschussTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson_NewodPerson{
/// <summary>
/// Gets the table definition for BaPerson_NewodPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPerson_NewodPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef NewodPersonID { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "NewodPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AuslaenderAktiveSozialhilfe { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "AuslaenderAktiveSozialhilfe", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SchweizerAktiveSozialhilfe { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "SchweizerAktiveSozialhilfe", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SchweizerAktiveVormundschaft { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "SchweizerAktiveVormundschaft", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aktualisiert { get { return new DBOColumnDef(BaPerson_NewodPerson.TableDef, "Aktualisiert", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zur Erfassung einer Beziehung (Relation) zwischen Person 1 und Person 2.    Z.B. Person 1 ist Mutter von Person 2
/// </summary>

public static class BaPerson_Relation{
/// <summary>
/// Gets the table definition for BaPerson_Relation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPerson_Relation", "", false); } }


/// <summary>
/// Primärschlüssel für BaPerson_Relation Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPerson_RelationID { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "BaPerson_RelationID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaPerson1) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_1 { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "BaPersonID_1", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaPerson2) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_2 { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "BaPersonID_2", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaRelation) => BaRelation.BaRelationID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaRelationID { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "BaRelationID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Beginn der Relation zwischen Person 1 und Person 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ende der Relation zwischen Person 1 und Person 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld,
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPerson_RelationTS { get { return new DBOColumnDef(BaPerson_Relation.TableDef, "BaPerson_RelationTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPLZ{
/// <summary>
/// Gets the table definition for BaPLZ
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPLZ", "", false); } }


/// <summary>
/// Primärschlüssel für BaPLZ Records. Entspricht der ONRP von der Post.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPLZID { get { return new DBOColumnDef(BaPLZ.TableDef, "BaPLZID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(BaPLZ.TableDef, "PLZ", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ6 { get { return new DBOColumnDef(BaPLZ.TableDef, "PLZ6", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZSuffix { get { return new DBOColumnDef(BaPLZ.TableDef, "PLZSuffix", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BaPLZ.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(BaPLZ.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(BaPLZ.TableDef, "Kanton", typeof(string), false, false, false, 2, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BaPLZ.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSCode { get { return new DBOColumnDef(BaPLZ.TableDef, "BFSCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Die Ordnungsnummer Post ist der eindeutige, unveränderliche Schlüsselbegriff der Postleitzahl
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ONRP { get { return new DBOColumnDef(BaPLZ.TableDef, "ONRP", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum ab welchem die PLZ gilt.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaPLZ.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum bis welchem die PLZ gilt.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaPLZ.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(BaPLZ.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BaPLZ.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BaPLZ.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BaPLZ.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BaPLZ.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPLZTS { get { return new DBOColumnDef(BaPLZ.TableDef, "BaPLZTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPraemienverbilligung{
/// <summary>
/// Gets the table definition for BaPraemienverbilligung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaPraemienverbilligung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPraemienverbilligungID { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "BaPraemienverbilligungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Folgenummer { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "Folgenummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragAnspruch { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "BetragAnspruch", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragAuszahlung { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "BetragAuszahlung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungAn { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "ZahlungAn", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// BAG-Nummer der Krankenkasse
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungAn_Krankenkassennummer { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "ZahlungAn_Krankenkassennummer", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LetzteMutation { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "LetzteMutation", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Grund { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "Grund", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPraemienverbilligungTS { get { return new DBOColumnDef(BaPraemienverbilligung.TableDef, "BaPraemienverbilligungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BaRelation{
/// <summary>
/// Gets the table definition for BaRelation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaRelation", "", false); } }


/// <summary>
/// Primärschlüssel für BaRelation Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaRelationID { get { return new DBOColumnDef(BaRelation.TableDef, "BaRelationID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef NameRelation { get { return new DBOColumnDef(BaRelation.TableDef, "NameRelation", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 75]
/// </summary>

public static DBOColumnDef NameGenerisch1 { get { return new DBOColumnDef(BaRelation.TableDef, "NameGenerisch1", typeof(string), false, false, false, 75, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 75]
/// </summary>

public static DBOColumnDef NameGenerisch2 { get { return new DBOColumnDef(BaRelation.TableDef, "NameGenerisch2", typeof(string), false, false, false, 75, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NameMaennlich1 { get { return new DBOColumnDef(BaRelation.TableDef, "NameMaennlich1", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NameWeiblich1 { get { return new DBOColumnDef(BaRelation.TableDef, "NameWeiblich1", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NameMaennlich2 { get { return new DBOColumnDef(BaRelation.TableDef, "NameMaennlich2", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NameWeiblich2 { get { return new DBOColumnDef(BaRelation.TableDef, "NameWeiblich2", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef symmetrisch { get { return new DBOColumnDef(BaRelation.TableDef, "symmetrisch", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BfsCode12 { get { return new DBOColumnDef(BaRelation.TableDef, "BfsCode12", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BfsCode21 { get { return new DBOColumnDef(BaRelation.TableDef, "BfsCode21", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BaRelation.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaRelationTS { get { return new DBOColumnDef(BaRelation.TableDef, "BaRelationTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// WeiterverrechnungsCode einer Person. (@@TODO das ist nicht nach Namingkonvention!!!)    Dadurch können erbrachte Leistungen an andere Stellen (wie den Bund oder den Herkunftskanton) weiterverrechnet werden.
/// </summary>

public static class BaWVCode{
/// <summary>
/// Gets the table definition for BaWVCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaWVCode", "", false); } }


/// <summary>
/// Primärschlüssel für BaWVCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaWVCodeID { get { return new DBOColumnDef(BaWVCode.TableDef, "BaWVCodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaWVCode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaWVCode.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Weiterverrechnungs-Code der Person (LOV BaWVCode)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaWVCode_ { get { return new DBOColumnDef(BaWVCode.TableDef, "BaWVCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beginn der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaWVCode.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Ende der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaWVCode.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Gibt an ob der WV-Status gültig oder ungültig ist (LOV: BaWVStatus)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StatusCode { get { return new DBOColumnDef(BaWVCode.TableDef, "StatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungsfeld für zusätzliche Benutzerangaben
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BaWVCode.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Nummer des Heimatkantons (@@TODO woher weiss man die? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatKantonNr { get { return new DBOColumnDef(BaWVCode.TableDef, "HeimatKantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Nummer des Wohnkantons  (@@TODO woher weiss man die? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnKantonNr { get { return new DBOColumnDef(BaWVCode.TableDef, "WohnKantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Kürzel des Kantons(@@TODO woher weiss man den? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KantonKuerzel { get { return new DBOColumnDef(BaWVCode.TableDef, "KantonKuerzel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Flag ob die Person Auslandschweizer ist (@@TODO: weshalb auf BaWVCode?)
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auslandschweizer { get { return new DBOColumnDef(BaWVCode.TableDef, "Auslandschweizer", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaWVCodeTS { get { return new DBOColumnDef(BaWVCode.TableDef, "BaWVCodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zur Erfassung von Zahlungswegen einer Person oder Institution
/// </summary>

public static class BaZahlungsweg{
/// <summary>
/// Gets the table definition for BaZahlungsweg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BaZahlungsweg", "", false); } }


/// <summary>
/// Primärschlüssel für BaZahlungsweg Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaZahlungswegID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Beginn der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Ende der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Art der Überweisung, auf Maske Zahlwegtyp genannt (LOV: BgEinzahlungsschein)  @@TODO Konsistenz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzahlungsscheinCode { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "EinzahlungsscheinCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaBankID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Nummer des Bankkontos
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNummer { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BankKontoNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// IBAN-Nummer des Kontos. Bei neu erfassten Kreditoren, wird die IBAN-Nummer von KiSS automatisch errechnet.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBANNummer { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "IBANNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Nummer des Postkontos
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostKontoNummer { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "PostKontoNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseName { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseName", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseName2 { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseName2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseStrasse { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseStrasse", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseHausNr { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseHausNr", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePostfach { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdressePostfach", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePLZ { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdressePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseOrt { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseOrt", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef AdresseLandCode { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "AdresseLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaZahlwegModulStdCodes { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaZahlwegModulStdCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaZahlungswegTS { get { return new DBOColumnDef(BaZahlungsweg.TableDef, "BaZahlungswegTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEAusbezahlteUeberstunden_XUser{
/// <summary>
/// Gets the table definition for BDEAusbezahlteUeberstunden_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEAusbezahlteUeberstunden_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDEAusbezahlteUeberstunden_XUserID { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "BDEAusbezahlteUeberstunden_XUserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef AusbezahlteStd { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "AusbezahlteStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEAusbezahlteUeberstunden_XUserTS { get { return new DBOColumnDef(BDEAusbezahlteUeberstunden_XUser.TableDef, "BDEAusbezahlteUeberstunden_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEFerienanspruch_XUser{
/// <summary>
/// Gets the table definition for BDEFerienanspruch_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEFerienanspruch_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDEFerienanspruch_XUserID { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "BDEFerienanspruch_XUserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FerienanspruchStdProJahr { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "FerienanspruchStdProJahr", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEFerienanspruch_XUserTS { get { return new DBOColumnDef(BDEFerienanspruch_XUser.TableDef, "BDEFerienanspruch_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEFerienkuerzungen_XUser{
/// <summary>
/// Gets the table definition for BDEFerienkuerzungen_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEFerienkuerzungen_XUser", "", true); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "UserID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "Jahr", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FerienkuerzungStd { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "FerienkuerzungStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEFerienkuerzungen_XUserTS { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "BDEFerienkuerzungen_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BDEFerienkuerzungen_XUser.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// [NamespaceExtension: PI]
/// </summary>

public static class BDELeistung{
/// <summary>
/// Gets the table definition for BDELeistung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDELeistung", "", true); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BDELeistungID { get { return new DBOColumnDef(BDELeistung.TableDef, "BDELeistungID", typeof(int), true, false, true, 4, false, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDELeistung.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(BDELeistung.TableDef, "BDELeistungsartID", typeof(int), false, true, false, 4, false, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KostenstelleOrgUnitID { get { return new DBOColumnDef(BDELeistung.TableDef, "KostenstelleOrgUnitID", typeof(int), false, false, false, 4, false, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BDELeistung.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BDELeistung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", "PI"); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Dauer { get { return new DBOColumnDef(BDELeistung.TableDef, "Dauer", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Anzahl { get { return new DBOColumnDef(BDELeistung.TableDef, "Anzahl", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef LohnartCode { get { return new DBOColumnDef(BDELeistung.TableDef, "LohnartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BDELeistung.TableDef, "Bemerkung", typeof(string), false, false, false, 500, true, "", "PI"); } }


/// <summary>
/// Flag, ob diese Leistung über die Schnittstelle exportiert werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef KeinExport { get { return new DBOColumnDef(BDELeistung.TableDef, "KeinExport", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// Historisierter, berechneter Wert des Kostenträgers
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HistKostentraeger { get { return new DBOColumnDef(BDELeistung.TableDef, "HistKostentraeger", typeof(int), false, false, false, 4, false, "", "PI"); } }


/// <summary>
/// Historisierter, berechneter Wert der Kostenstelle
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HistKostenstelle { get { return new DBOColumnDef(BDELeistung.TableDef, "HistKostenstelle", typeof(int), false, false, false, 4, false, "", "PI"); } }


/// <summary>
/// Historisierter, berechneter Wert der Kostenart
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HistKostenart { get { return new DBOColumnDef(BDELeistung.TableDef, "HistKostenart", typeof(int), false, false, false, 4, false, "", "PI"); } }


/// <summary>
/// Historisierter, berechneter Wert der MandantenNummer
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef HistMandantNr { get { return new DBOColumnDef(BDELeistung.TableDef, "HistMandantNr", typeof(int), false, false, false, 4, false, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(BDELeistung.TableDef, "Freigegeben", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Visiert { get { return new DBOColumnDef(BDELeistung.TableDef, "Visiert", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(BDELeistung.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(BDELeistung.TableDef, "VerbuchtLD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BDELeistung.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef BDELeistungTS { get { return new DBOColumnDef(BDELeistung.TableDef, "BDELeistungTS", typeof(byte[]), false, false, false, 8, false, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef Fakturiert { get { return new DBOColumnDef(BDELeistung.TableDef, "Fakturiert", typeof(bool), false, false, false, 1, false, "((0))", "PI"); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDELeistungsart{
/// <summary>
/// Gets the table definition for BDELeistungsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDELeistungsart", "", true); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(BDELeistungsart.TableDef, "BDELeistungsartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(BDELeistungsart.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungTID { get { return new DBOColumnDef(BDELeistungsart.TableDef, "BezeichnungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BDELeistungsart.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BDELeistungsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BDELeistungsart.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientErfassungCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KlientErfassungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzahlCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "AnzahlCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtikelNr { get { return new DBOColumnDef(BDELeistungsart.TableDef, "ArtikelNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef LeistungsartTypCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "LeistungsartTypCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KostenartCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KostenartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRStandard { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KTRStandard", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRIV { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KTRIV", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRAHV { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KTRAHV", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRNichtberechtigte { get { return new DBOColumnDef(BDELeistungsart.TableDef, "KTRNichtberechtigte", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beschreibung { get { return new DBOColumnDef(BDELeistungsart.TableDef, "Beschreibung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswDienstleistungCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "AuswDienstleistungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswFakturaCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "AuswFakturaCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswProduktCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "AuswProduktCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswPIAuftragCode { get { return new DBOColumnDef(BDELeistungsart.TableDef, "AuswPIAuftragCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDELeistungsartTS { get { return new DBOColumnDef(BDELeistungsart.TableDef, "BDELeistungsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BDELeistungsart.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEPensum_XUser{
/// <summary>
/// Gets the table definition for BDEPensum_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEPensum_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDEPensum_XUserID { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "BDEPensum_XUserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PensumProzent { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "PensumProzent", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEPensum_XUserTS { get { return new DBOColumnDef(BDEPensum_XUser.TableDef, "BDEPensum_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDESollProTag_XUser{
/// <summary>
/// Gets the table definition for BDESollProTag_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDESollProTag_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDESollProTag_XUserID { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "BDESollProTag_XUserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef SollStundenProTag { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "SollStundenProTag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDESollProTag_XUserTS { get { return new DBOColumnDef(BDESollProTag_XUser.TableDef, "BDESollProTag_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDESollStundenProJahr_XUser{
/// <summary>
/// Gets the table definition for BDESollStundenProJahr_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDESollStundenProJahr_XUser", "", true); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDESollStundenProJahr_XUserID { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "BDESollStundenProJahr_XUserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JanuarStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "JanuarStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FebruarStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "FebruarStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MaerzStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "MaerzStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef AprilStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "AprilStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MaiStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "MaiStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JuniStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "JuniStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JuliStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "JuliStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef AugustStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "AugustStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef SeptemberStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "SeptemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef OktoberStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "OktoberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef NovemberStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "NovemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DezemberStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "DezemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef TotalStd { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "TotalStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDESollStundenProJahr_XUserTS { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "BDESollStundenProJahr_XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(BDESollStundenProJahr_XUser.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEUserGroup{
/// <summary>
/// Gets the table definition for BDEUserGroup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEUserGroup", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDEUserGroupID { get { return new DBOColumnDef(BDEUserGroup.TableDef, "BDEUserGroupID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef UserGroupName { get { return new DBOColumnDef(BDEUserGroup.TableDef, "UserGroupName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserGroupNameTID { get { return new DBOColumnDef(BDEUserGroup.TableDef, "UserGroupNameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beschreibung { get { return new DBOColumnDef(BDEUserGroup.TableDef, "Beschreibung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEUserGroupTS { get { return new DBOColumnDef(BDEUserGroup.TableDef, "BDEUserGroupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEUserGroup_BDELeistungsart{
/// <summary>
/// Gets the table definition for BDEUserGroup_BDELeistungsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEUserGroup_BDELeistungsart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BDEUserGroupID { get { return new DBOColumnDef(BDEUserGroup_BDELeistungsart.TableDef, "BDEUserGroupID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(BDEUserGroup_BDELeistungsart.TableDef, "BDELeistungsartID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEUserGroup_BDELeistungsartTS { get { return new DBOColumnDef(BDEUserGroup_BDELeistungsart.TableDef, "BDEUserGroup_BDELeistungsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEZeitrechner{
/// <summary>
/// Gets the table definition for BDEZeitrechner
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BDEZeitrechner", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BDEZeitrechnerID { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "BDEZeitrechnerID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ZeitVon { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "ZeitVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZeitBis { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "ZeitBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BDEZeitrechnerTS { get { return new DBOColumnDef(BDEZeitrechner.TableDef, "BDEZeitrechnerTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die einzelnen BFS-Dossiers (Anfangszustands- und Folgedossiers)
/// </summary>

public static class BFSDossier{
/// <summary>
/// Gets the table definition for BFSDossier
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSDossier", "", false); } }


/// <summary>
/// Primärschlüssel für BFSDossier Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BFSDossierID { get { return new DBOColumnDef(BFSDossier.TableDef, "BFSDossierID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSDossier_BFSKatalogVersion) => BFSKatalogVersion.BFSKatalogVersionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSKatalogVersionID { get { return new DBOColumnDef(BFSDossier.TableDef, "BFSKatalogVersionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSDossier_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(BFSDossier.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSDossier_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BFSDossier.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Die LaufNr wird für das Erstellen der BFS-Dossiernummer benötigt. Nach einen Unterbruch von mehr als 6 Monate wird die LaufNr incrementiert. (BFS-DossierNr = BaPersonID + ZustaendigeGemerinde + LaufNr)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef LaufNr { get { return new DBOColumnDef(BFSDossier.TableDef, "LaufNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// BFS-Code der zuständige Gemeinde. Wird für die BFS-DossierNr benötigt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ZustaendigeGemeinde { get { return new DBOColumnDef(BFSDossier.TableDef, "ZustaendigeGemeinde", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum der erste Zahlung (Aufnahmedatum). Wird für die BFS-DossierNr benötigt
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BFSDossier.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BFSDossier.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BFSDossier.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// zum definieren ob es ein Stichtag- oder ein Anfangszustand-Dossier ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Stichtag { get { return new DBOColumnDef(BFSDossier.TableDef, "Stichtag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// ?? obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSDossierStatusCode { get { return new DBOColumnDef(BFSDossier.TableDef, "BFSDossierStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code der BFS-Leistungsart aus BFSLOV-Tabelle
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSLeistungsartCode { get { return new DBOColumnDef(BFSDossier.TableDef, "BFSLeistungsartCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Imports
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ImportDatum { get { return new DBOColumnDef(BFSDossier.TableDef, "ImportDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Plausibilisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlausibilisierungDatum { get { return new DBOColumnDef(BFSDossier.TableDef, "PlausibilisierungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum des Exports
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ExportDatum { get { return new DBOColumnDef(BFSDossier.TableDef, "ExportDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XML { get { return new DBOColumnDef(BFSDossier.TableDef, "XML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSDossierTS { get { return new DBOColumnDef(BFSDossier.TableDef, "BFSDossierTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSDossierPerson{
/// <summary>
/// Gets the table definition for BFSDossierPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSDossierPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BFSDossierPersonID { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "BFSDossierPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSDossierPerson_BFSDossier) => BFSDossier.BFSDossierID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSDossierID { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "BFSDossierID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSPersonCode { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "BFSPersonCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PersonIndex { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "PersonIndex", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonName { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "PersonName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSDossierPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSDossierPersonTS { get { return new DBOColumnDef(BFSDossierPerson.TableDef, "BFSDossierPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSFarbCode{
/// <summary>
/// Gets the table definition for BFSFarbCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSFarbCode", "", false); } }


/// <summary>
/// Primärschlüssel für BFSFarbCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BFSFarbCodeID { get { return new DBOColumnDef(BFSFarbCode.TableDef, "BFSFarbCodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Leistungsfilter { get { return new DBOColumnDef(BFSFarbCode.TableDef, "Leistungsfilter", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ExcelFarbCode { get { return new DBOColumnDef(BFSFarbCode.TableDef, "ExcelFarbCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSFarbCode_BFSFrage) => BFSFrage.BFSFrageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSFrageID { get { return new DBOColumnDef(BFSFarbCode.TableDef, "BFSFrageID", typeof(int), false, true, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSFrage{
/// <summary>
/// Gets the table definition for BFSFrage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSFrage", "", false); } }


/// <summary>
/// Primärschlüssel für BFSFrage Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BFSFrageID { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSFrageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSFrage_BFSKatalogVersion) => BFSKatalogVersion.BFSKatalogVersionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSKatalogVersionID { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSKatalogVersionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef Variable { get { return new DBOColumnDef(BFSFrage.TableDef, "Variable", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Frage { get { return new DBOColumnDef(BFSFrage.TableDef, "Frage", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSLeistungsfilterCodes { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSLeistungsfilterCodes", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSPersonCode { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSPersonCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PersonIndex { get { return new DBOColumnDef(BFSFrage.TableDef, "PersonIndex", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BFSFeldCode { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSFeldCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSFormat { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSFormat", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FFLOVName { get { return new DBOColumnDef(BFSFrage.TableDef, "FFLOVName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSLOVName { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSLOVName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSValidierungCode { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSValidierungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorgabewert { get { return new DBOColumnDef(BFSFrage.TableDef, "Vorgabewert", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSKategorieCode { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HerkunftCode { get { return new DBOColumnDef(BFSFrage.TableDef, "HerkunftCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HerkunftBeschreibung { get { return new DBOColumnDef(BFSFrage.TableDef, "HerkunftBeschreibung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HerkunftSQL { get { return new DBOColumnDef(BFSFrage.TableDef, "HerkunftSQL", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FFTabelle { get { return new DBOColumnDef(BFSFrage.TableDef, "FFTabelle", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FFFeld { get { return new DBOColumnDef(BFSFrage.TableDef, "FFFeld", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FFPKFeld { get { return new DBOColumnDef(BFSFrage.TableDef, "FFPKFeld", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Editierbar { get { return new DBOColumnDef(BFSFrage.TableDef, "Editierbar", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ExportNode { get { return new DBOColumnDef(BFSFrage.TableDef, "ExportNode", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ExportAttribute { get { return new DBOColumnDef(BFSFrage.TableDef, "ExportAttribute", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ExportPredicate { get { return new DBOColumnDef(BFSFrage.TableDef, "ExportPredicate", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HilfeTitel { get { return new DBOColumnDef(BFSFrage.TableDef, "HilfeTitel", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HilfeText { get { return new DBOColumnDef(BFSFrage.TableDef, "HilfeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Reihenfolge { get { return new DBOColumnDef(BFSFrage.TableDef, "Reihenfolge", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSFrageTS { get { return new DBOColumnDef(BFSFrage.TableDef, "BFSFrageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FilterRegel { get { return new DBOColumnDef(BFSFrage.TableDef, "FilterRegel", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UpdateOK { get { return new DBOColumnDef(BFSFrage.TableDef, "UpdateOK", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VariableAntragsteller { get { return new DBOColumnDef(BFSFrage.TableDef, "VariableAntragsteller", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VariableExpandiert { get { return new DBOColumnDef(BFSFrage.TableDef, "VariableExpandiert", typeof(string), false, false, false, 15, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSKatalogVersion{
/// <summary>
/// Gets the table definition for BFSKatalogVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSKatalogVersion", "", false); } }


/// <summary>
/// Primärschlüssel für BFSKatalogVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BFSKatalogVersionID { get { return new DBOColumnDef(BFSKatalogVersion.TableDef, "BFSKatalogVersionID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BFSKatalogVersion.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlausexVersion { get { return new DBOColumnDef(BFSKatalogVersion.TableDef, "PlausexVersion", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierXML { get { return new DBOColumnDef(BFSKatalogVersion.TableDef, "DossierXML", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSLOV{
/// <summary>
/// Gets the table definition for BFSLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSLOV", "", false); } }


/// <summary>
/// Primärschlüssel für BFSLOV Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(BFSLOV.TableDef, "LOVName", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSLOVTS { get { return new DBOColumnDef(BFSLOV.TableDef, "BFSLOVTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSLOVCode{
/// <summary>
/// Gets the table definition for BFSLOVCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSLOVCode", "", false); } }


/// <summary>
/// Primärschlüssel für BFSLOVCode Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(BFSLOVCode.TableDef, "LOVName", typeof(string), false, true, true, 100, false, "", ""); } }


/// <summary>
/// Primärschlüssel für BFSLOVCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(BFSLOVCode.TableDef, "Code", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(BFSLOVCode.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TextTID { get { return new DBOColumnDef(BFSLOVCode.TableDef, "TextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KurzText { get { return new DBOColumnDef(BFSLOVCode.TableDef, "KurzText", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KurzTextTID { get { return new DBOColumnDef(BFSLOVCode.TableDef, "KurzTextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Filter { get { return new DBOColumnDef(BFSLOVCode.TableDef, "Filter", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BFSLOVCode.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSLOVCodeTS { get { return new DBOColumnDef(BFSLOVCode.TableDef, "BFSLOVCodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSWert{
/// <summary>
/// Gets the table definition for BFSWert
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BFSWert", "", false); } }


/// <summary>
/// Primärschlüssel für BFSWert Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BFSWertID { get { return new DBOColumnDef(BFSWert.TableDef, "BFSWertID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSDossier) => BFSDossier.BFSDossierID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSDossierID { get { return new DBOColumnDef(BFSWert.TableDef, "BFSDossierID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSDossierPerson) => BFSDossierPerson.BFSDossierPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSDossierPersonID { get { return new DBOColumnDef(BFSWert.TableDef, "BFSDossierPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSFrage) => BFSFrage.BFSFrageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BFSFrageID { get { return new DBOColumnDef(BFSWert.TableDef, "BFSFrageID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Wert { get { return new DBOColumnDef(BFSWert.TableDef, "Wert", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlausiFehler { get { return new DBOColumnDef(BFSWert.TableDef, "PlausiFehler", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BFSWertTS { get { return new DBOColumnDef(BFSWert.TableDef, "BFSWertTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgAuszahlungPerson{
/// <summary>
/// Gets the table definition for BgAuszahlungPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgAuszahlungPerson", "", false); } }


/// <summary>
/// Primärschlüssel für BgAuszahlungPerson Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonID { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgAuszahlungPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgPositionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BgZahlungsmodus) => BgZahlungsmodus.BgZahlungsmodusID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusID { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgZahlungsmodusID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbAuszahlungsArtCode { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "KbAuszahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef BgAuszahlungsTerminCode { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgAuszahlungsTerminCode", typeof(System.Nullable<int>), false, false, false, 4, true, "(1)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgWochentagCodes { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgWochentagCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile1 { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "MitteilungZeile1", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile2 { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "MitteilungZeile2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile3 { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "MitteilungZeile3", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile4 { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "MitteilungZeile4", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonTS { get { return new DBOColumnDef(BgAuszahlungPerson.TableDef, "BgAuszahlungPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgAuszahlungPersonTermin{
/// <summary>
/// Gets the table definition for BgAuszahlungPersonTermin
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgAuszahlungPersonTermin", "", false); } }


/// <summary>
/// Primärschlüssel für BgAuszahlungPersonTermin Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonTerminID { get { return new DBOColumnDef(BgAuszahlungPersonTermin.TableDef, "BgAuszahlungPersonTerminID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPersonTermin_BgAuszahlungPerson) => BgAuszahlungPerson.BgAuszahlungPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonID { get { return new DBOColumnDef(BgAuszahlungPersonTermin.TableDef, "BgAuszahlungPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BgAuszahlungPersonTermin.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonTerminTS { get { return new DBOColumnDef(BgAuszahlungPersonTermin.TableDef, "BgAuszahlungPersonTerminTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgBewilligung{
/// <summary>
/// Gets the table definition for BgBewilligung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgBewilligung", "", false); } }


/// <summary>
/// Primärschlüssel für BgBewilligung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgBewilligungID { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgBewilligungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgFinanzplanID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgBudgetID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_User) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(BgBewilligung.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_User_An) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_An { get { return new DBOColumnDef(BgBewilligung.TableDef, "UserID_An", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BgBewilligung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBewilligungCode { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgBewilligungCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgBewilligung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PerDatum { get { return new DBOColumnDef(BgBewilligung.TableDef, "PerDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgBewilligungTS { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgBewilligungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(BgBewilligung.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// UserID vom Benutzer der für diese Aktion zuständig ist, unabhängig von der Stellvertretung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Zustaendig { get { return new DBOColumnDef(BgBewilligung.TableDef, "UserID_Zustaendig", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// ID der Abteilung des Leiters der Abteilung von UserID_Zustaendig.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID_ChefZustaendig { get { return new DBOColumnDef(BgBewilligung.TableDef, "OrgUnitID_ChefZustaendig", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Zum wissen ob die Weiterempfehlung oder die Anfrage zurückgewiesen wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Zurueckgewiesen { get { return new DBOColumnDef(BgBewilligung.TableDef, "Zurueckgewiesen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgBudget{
/// <summary>
/// Gets the table definition for BgBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgBudget", "", false); } }


/// <summary>
/// Primärschlüssel für BgBudget Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(BgBudget.TableDef, "BgBudgetID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBewilligungStatusCode { get { return new DBOColumnDef(BgBudget.TableDef, "BgBewilligungStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgBudget_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(BgBudget.TableDef, "BgFinanzplanID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(BgBudget.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(BgBudget.TableDef, "Monat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgBudget.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OldID { get { return new DBOColumnDef(BgBudget.TableDef, "OldID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgBudgetTS { get { return new DBOColumnDef(BgBudget.TableDef, "BgBudgetTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MasterBudget { get { return new DBOColumnDef(BgBudget.TableDef, "MasterBudget", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgDokument{
/// <summary>
/// Gets the table definition for BgDokument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgDokument", "", false); } }


/// <summary>
/// Primärschlüssel für BgDokument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgDokumentID { get { return new DBOColumnDef(BgDokument.TableDef, "BgDokumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(BgDokument.TableDef, "BgFinanzplanID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(BgDokument.TableDef, "BgBudgetID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(BgDokument.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgDokumentTypCode { get { return new DBOColumnDef(BgDokument.TableDef, "BgDokumentTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(BgDokument.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(BgDokument.TableDef, "Stichwort", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgDocumentTS { get { return new DBOColumnDef(BgDokument.TableDef, "BgDocumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgFinanzplan{
/// <summary>
/// Gets the table definition for BgFinanzplan
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgFinanzplan", "", false); } }


/// <summary>
/// Primärschlüssel für BgFinanzplan Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(BgFinanzplan.TableDef, "BgFinanzplanID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(BgFinanzplan.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef BgBewilligungStatusCode { get { return new DBOColumnDef(BgFinanzplan.TableDef, "BgBewilligungStatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGrundEroeffnenCode { get { return new DBOColumnDef(BgFinanzplan.TableDef, "BgGrundEroeffnenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGrundAbschlussCode { get { return new DBOColumnDef(BgFinanzplan.TableDef, "BgGrundAbschlussCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef WhHilfeTypCode { get { return new DBOColumnDef(BgFinanzplan.TableDef, "WhHilfeTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "((1))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GeplantVon { get { return new DBOColumnDef(BgFinanzplan.TableDef, "GeplantVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeplantBis { get { return new DBOColumnDef(BgFinanzplan.TableDef, "GeplantBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BgFinanzplan.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BgFinanzplan.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgFinanzplan.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgFinanzplanTS { get { return new DBOColumnDef(BgFinanzplan.TableDef, "BgFinanzplanTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WhGrundbedarfTypCode { get { return new DBOColumnDef(BgFinanzplan.TableDef, "WhGrundbedarfTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgFinanzplan_BaPerson{
/// <summary>
/// Gets the table definition for BgFinanzplan_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgFinanzplan_BaPerson", "", false); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "BgFinanzplanID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShFinanzPlan_BaPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "BaPersonID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IstUnterstuetzt { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "IstUnterstuetzt", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "KbKostenstelleID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_KbKostenstelle_KVG) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID_KVG { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "KbKostenstelleID_KVG", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_ShNrmVerrechnungsbasis) => ShNrmVerrechnungsbasis.ShNrmVerrechnungsbasisID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef ShNrmVerrechnungsbasisID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "ShNrmVerrechnungsbasisID", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PrsNummerKanton { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "PrsNummerKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PrsNummerHeimat { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "PrsNummerHeimat", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmVerrechnungVon { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "NrmVerrechnungVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmVerrechnungBis { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "NrmVerrechnungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmVerrechnungsAnteilCode { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "NrmVerrechnungsAnteilCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstAuslandCh { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "IstAuslandCh", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslandChVon { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "AuslandChVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslandChBis { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "AuslandChBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslandChMeldungAm { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "AuslandChMeldungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslandChReferenzNrBund { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "AuslandChReferenzNrBund", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_ShBurgergemeinde) => ShBurgergemeinde.BurgergemeindeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BurgergemeindeID { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "BurgergemeindeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgFinanzplan_BaPersonTS { get { return new DBOColumnDef(BgFinanzplan_BaPerson.TableDef, "BgFinanzplan_BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgGruppe_BFSFrage{
/// <summary>
/// Gets the table definition for BgGruppe_BFSFrage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgGruppe_BFSFrage", "", false); } }


/// <summary>
/// Primärschlüssel dieser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgGruppe_BFSFrageID { get { return new DBOColumnDef(BgGruppe_BFSFrage.TableDef, "BgGruppe_BFSFrageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf LOV 'BgGruppe'
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(BgGruppe_BFSFrage.TableDef, "BgGruppeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BFSFrage (KatalogVersion unabhängig, darum auf das Feld Variable und nicht auf BFSFrageID)
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef Variable { get { return new DBOColumnDef(BgGruppe_BFSFrage.TableDef, "Variable", typeof(string), false, false, false, 10, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgKostenart{
/// <summary>
/// Gets the table definition for BgKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgKostenart", "", false); } }


/// <summary>
/// Primärschlüssel für BgKostenart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(BgKostenart.TableDef, "BgKostenartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgKostenart_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(BgKostenart.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "((3))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(BgKostenart.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BgKostenart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// ID für die Übersetzung des Namen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(BgKostenart.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Quoting { get { return new DBOColumnDef(BgKostenart.TableDef, "Quoting", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(BgKostenart.TableDef, "BgSplittingArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Definiert in welcher Zeile die Kostenart im ZUG Report angezeigt werden soll.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaWVZeileCode { get { return new DBOColumnDef(BgKostenart.TableDef, "BaWVZeileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgKostenartTS { get { return new DBOColumnDef(BgKostenart.TableDef, "BgKostenartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Mapping Tabelle zwischen Kostenarten und GEF-Gruppen. Dies ist für die Differenzierung der Sozialhilferechnung relevant
/// </summary>

public static class BgKostenart_WhGefKategorie{
/// <summary>
/// Gets the table definition for BgKostenart_WhGefKategorie
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgKostenart_WhGefKategorie", "", false); } }


/// <summary>
/// Primärschlüssel dieser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgKostenart_WhGefKategorieID { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "BgKostenart_WhGefKategorieID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf der Tabelle BgKostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "BgKostenartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf der Tabelle WhGefKategorie
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef WhGefKategorieID { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "WhGefKategorieID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Zum wissen ob die Kostenart eine Inkassoprovision ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsInkassoprovision { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "IsInkassoprovision", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgKostenart_WhGefKategorieTS { get { return new DBOColumnDef(BgKostenart_WhGefKategorie.TableDef, "BgKostenart_WhGefKategorieTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Daten über eine Position in einem Budget
/// </summary>

public static class BgPosition{
/// <summary>
/// Gets the table definition for BgPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgPosition", "", false); } }


/// <summary>
/// Primärschlüssel für BgPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID_Parent { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionID_Parent", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID_CopyOf { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionID_CopyOf", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(BgPosition.TableDef, "BgBudgetID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BgPosition.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgSpezkonto) => BgSpezkonto.BgSpezkontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(BgPosition.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BgPosition.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DebitorBaPersonID { get { return new DBOColumnDef(BgPosition.TableDef, "DebitorBaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ErstelltUserID { get { return new DBOColumnDef(BgPosition.TableDef, "ErstelltUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPosition_XUser1) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MutiertUserID { get { return new DBOColumnDef(BgPosition.TableDef, "MutiertUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID_AutoForderung { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionID_AutoForderung", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(BgPosition.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShBelegID { get { return new DBOColumnDef(BgPosition.TableDef, "ShBelegID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(BgPosition.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Reduktion { get { return new DBOColumnDef(BgPosition.TableDef, "Reduktion", typeof(decimal), false, false, false, 8, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Abzug { get { return new DBOColumnDef(BgPosition.TableDef, "Abzug", typeof(decimal), false, false, false, 8, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragEff { get { return new DBOColumnDef(BgPosition.TableDef, "BetragEff", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((999999999))]
/// </summary>

public static DBOColumnDef MaxBeitragSD { get { return new DBOColumnDef(BgPosition.TableDef, "MaxBeitragSD", typeof(decimal), false, false, false, 8, false, "((999999999))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(BgPosition.TableDef, "Buchungstext", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef VerwaltungSD { get { return new DBOColumnDef(BgPosition.TableDef, "VerwaltungSD", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgPosition.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BgPosition.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BgPosition.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OldID { get { return new DBOColumnDef(BgPosition.TableDef, "OldID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeVon { get { return new DBOColumnDef(BgPosition.TableDef, "VerwPeriodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeBis { get { return new DBOColumnDef(BgPosition.TableDef, "VerwPeriodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaelligAm { get { return new DBOColumnDef(BgPosition.TableDef, "FaelligAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungDatum { get { return new DBOColumnDef(BgPosition.TableDef, "RechnungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef BgBewilligungStatusCode { get { return new DBOColumnDef(BgPosition.TableDef, "BgBewilligungStatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value1 { get { return new DBOColumnDef(BgPosition.TableDef, "Value1", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value2 { get { return new DBOColumnDef(BgPosition.TableDef, "Value2", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value3 { get { return new DBOColumnDef(BgPosition.TableDef, "Value3", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragAnfrage { get { return new DBOColumnDef(BgPosition.TableDef, "BetragAnfrage", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgAuszahlungID { get { return new DBOColumnDef(BgPosition.TableDef, "BgAuszahlungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEff { get { return new DBOColumnDef(BgPosition.TableDef, "DatumEff", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der Benutzer kann über die Saldierung eine Bemerkung hinzufügen. Siehe CtlQueryWhZahlungseingaenge.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungSaldierung { get { return new DBOColumnDef(BgPosition.TableDef, "BemerkungSaldierung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Der Benutzer kann manuell eine BgPosition eines Monatsbudgets als saldiert markieren.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Saldiert { get { return new DBOColumnDef(BgPosition.TableDef, "Saldiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltDatum { get { return new DBOColumnDef(BgPosition.TableDef, "ErstelltDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertDatum { get { return new DBOColumnDef(BgPosition.TableDef, "MutiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionTS { get { return new DBOColumnDef(BgPosition.TableDef, "BgPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgPositionsart{
/// <summary>
/// Gets the table definition for BgPositionsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgPositionsart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgPositionsartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgGruppeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(BgPositionsart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HilfeText { get { return new DBOColumnDef(BgPositionsart.TableDef, "HilfeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(BgPositionsart.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShPositionTyp_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmKontoCode { get { return new DBOColumnDef(BgPositionsart.TableDef, "NrmKontoCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwaltungSD_Default { get { return new DBOColumnDef(BgPositionsart.TableDef, "VerwaltungSD_Default", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Spezkonto { get { return new DBOColumnDef(BgPositionsart.TableDef, "Spezkonto", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProPerson { get { return new DBOColumnDef(BgPositionsart.TableDef, "ProPerson", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProUE { get { return new DBOColumnDef(BgPositionsart.TableDef, "ProUE", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((16773120))]
/// </summary>

public static DBOColumnDef Masterbudget_EditMask { get { return new DBOColumnDef(BgPositionsart.TableDef, "Masterbudget_EditMask", typeof(int), false, false, false, 4, false, "((16773120))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((4095))]
/// </summary>

public static DBOColumnDef Monatsbudget_EditMask { get { return new DBOColumnDef(BgPositionsart.TableDef, "Monatsbudget_EditMask", typeof(int), false, false, false, 4, false, "((4095))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgPositionsart_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(BgPositionsart.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "((3))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef sqlRichtlinie { get { return new DBOColumnDef(BgPositionsart.TableDef, "sqlRichtlinie", typeof(string), false, false, false, 3000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionsartTS { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgPositionsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VarName { get { return new DBOColumnDef(BgPositionsart.TableDef, "VarName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Verrechenbar { get { return new DBOColumnDef(BgPositionsart.TableDef, "Verrechenbar", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ErzeugtBfsDossier { get { return new DBOColumnDef(BgPositionsart.TableDef, "ErzeugtBfsDossier", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgPositionsart.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(BgPositionsart.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beginn der Gültigkeit der Positionsart
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BgPositionsart.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ende der Gültigkeit der Positionsart
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BgPositionsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Identifikationsnummer einer Positionsart, die für terminierte Positionsarten und ihre Nachfolge-Positionsarten identisch ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartCode { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgPositionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel einer Nachfolge-Positionsart auf ihre terminierte Vorgänger-Positionsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID_CopyOf { get { return new DBOColumnDef(BgPositionsart.TableDef, "BgPositionsartID_CopyOf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Sagt aus, ob die Positionsart vom System vorgegeben oder kundenspezifisch ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(BgPositionsart.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Die Auswahl des Kreditors beschränkt sich auf die Zahlungsverbindungen im Klientensystem (Personen + Institutionen) sowie auf die Instititution des Spezialkontos bei einer Einzelzahlung ab Spezialkonto mit konfigurierter Institution die Institution des Spezialkontos.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KreditorEingeschraenkt { get { return new DBOColumnDef(BgPositionsart.TableDef, "KreditorEingeschraenkt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um Buchungstextvorschläge pro Positionsart zu speichern
/// </summary>

public static class BgPositionsartBuchungstext{
/// <summary>
/// Gets the table definition for BgPositionsartBuchungstext
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgPositionsartBuchungstext", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgPositionsartBuchungstextID { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "BgPositionsartBuchungstextID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf der BgPositionsart für welche den Buchungstext gesetzt ist
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "BgPositionsartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf der BgPositionsart in welcher den Buchungstext definiert ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID_UseText { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "BgPositionsartID_UseText", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Buchungstext für eine Positionsart
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Buchungstext", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// zum definieren ob diesen Eintrag der Standard-Buchungstext ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Standardwert { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Standardwert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionsartBuchungstextTS { get { return new DBOColumnDef(BgPositionsartBuchungstext.TableDef, "BgPositionsartBuchungstextTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgSpezkonto{
/// <summary>
/// Gets the table definition for BgSpezkonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgSpezkonto", "", false); } }


/// <summary>
/// Primärschlüssel für BgSpezkonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BgSpezkontoID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgSpezkontoTypCode { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BgSpezkontoTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef NameSpezkonto { get { return new DBOColumnDef(BgSpezkonto.TableDef, "NameSpezkonto", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0.0000))]
/// </summary>

public static DBOColumnDef StartSaldo { get { return new DBOColumnDef(BgSpezkonto.TableDef, "StartSaldo", typeof(decimal), false, false, false, 8, false, "((0.0000))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef OhneEinzelzahlung { get { return new DBOColumnDef(BgSpezkonto.TableDef, "OhneEinzelzahlung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragProMonat { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BetragProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BgPositionsart) => BgPositionsart.BgPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErsterMonat { get { return new DBOColumnDef(BgSpezkonto.TableDef, "ErsterMonat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BgSpezkonto.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BgSpezkonto.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(BgSpezkonto.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OldID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "OldID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgSpezkontoTS { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BgSpezkontoTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(BgSpezkonto.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Inaktiv { get { return new DBOColumnDef(BgSpezkonto.TableDef, "Inaktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KuerzungLaufzeitMonate { get { return new DBOColumnDef(BgSpezkonto.TableDef, "KuerzungLaufzeitMonate", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KuerzungAnteilGBL { get { return new DBOColumnDef(BgSpezkonto.TableDef, "KuerzungAnteilGBL", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Begründung des Abschluss
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussBegruendung { get { return new DBOColumnDef(BgSpezkonto.TableDef, "AbschlussBegruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Rückerstattung des Abzahlungskontos. Code aus LOV AbzahlungskontoRueckerstattung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbzahlungskontoRueckerstattungCode { get { return new DBOColumnDef(BgSpezkonto.TableDef, "AbzahlungskontoRueckerstattungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Abschlussgrund des Abzahlungskontos. Code aus LOV AbzahlungskontoAbschlussgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundCode { get { return new DBOColumnDef(BgSpezkonto.TableDef, "AbschlussgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um einen Spezialkonto abzuschliessen. (neu für Abzahlungskonto in Ticket #4918)
/// </summary>

public static class BgSpezkontoAbschluss{
/// <summary>
/// Gets the table definition for BgSpezkontoAbschluss
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgSpezkontoAbschluss", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle BgSpezkontoAbschluss
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgSpezkontoAbschlussID { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "BgSpezkontoAbschlussID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel des Spezialkonto
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "BgSpezkontoID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Abschlussbetrag
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Abschlusstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgSpezkontoAbschlussTS { get { return new DBOColumnDef(BgSpezkontoAbschluss.TableDef, "BgSpezkontoAbschlussTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgZahlungsmodus{
/// <summary>
/// Gets the table definition for BgZahlungsmodus
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgZahlungsmodus", "", false); } }


/// <summary>
/// Primärschlüssel für BgZahlungsmodus Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusID { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "BgZahlungsmodusID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodus_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef NameZahlungsmodus { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "NameZahlungsmodus", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbAuszahlungsArtCode { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "KbAuszahlungsArtCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef KontoKlient { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "KontoKlient", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodus_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OldID { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "OldID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgZahlungsmodusTS { get { return new DBOColumnDef(BgZahlungsmodus.TableDef, "BgZahlungsmodusTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class BgZahlungsmodusTermin{
/// <summary>
/// Gets the table definition for BgZahlungsmodusTermin
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BgZahlungsmodusTermin", "", false); } }


/// <summary>
/// Primärschlüssel für BgZahlungsmodusTermin Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusTerminID { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "BgZahlungsmodusTerminID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodusTermin_BgZahlungsmodus) => BgZahlungsmodus.BgZahlungsmodusID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusID { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "BgZahlungsmodusID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TagImMonat { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "TagImMonat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef ImVormonat { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "ImVormonat", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: SMALLINT]
/// [Length: 2]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef nMonatlich { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "nMonatlich", typeof(short), false, false, false, 2, false, "(1)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef BetragGleich { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "BetragGleich", typeof(bool), false, false, false, 1, false, "(1)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgZahlungsmodusTerminTS { get { return new DBOColumnDef(BgZahlungsmodusTermin.TableDef, "BgZahlungsmodusTerminTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaField{
/// <summary>
/// Gets the table definition for DynaField
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("DynaField", "", false); } }


/// <summary>
/// Primärschlüssel für DynaField Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DynaFieldID { get { return new DBOColumnDef(DynaField.TableDef, "DynaFieldID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_DynaField_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(DynaField.TableDef, "MaskName", typeof(string), false, true, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef FieldName { get { return new DBOColumnDef(DynaField.TableDef, "FieldName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FieldCode { get { return new DBOColumnDef(DynaField.TableDef, "FieldCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayText { get { return new DBOColumnDef(DynaField.TableDef, "DisplayText", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TabPosition { get { return new DBOColumnDef(DynaField.TableDef, "TabPosition", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef X { get { return new DBOColumnDef(DynaField.TableDef, "X", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Y { get { return new DBOColumnDef(DynaField.TableDef, "Y", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Width { get { return new DBOColumnDef(DynaField.TableDef, "Width", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Height { get { return new DBOColumnDef(DynaField.TableDef, "Height", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Length { get { return new DBOColumnDef(DynaField.TableDef, "Length", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(DynaField.TableDef, "LOVName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SQL { get { return new DBOColumnDef(DynaField.TableDef, "SQL", typeof(string), false, false, false, 4000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DefaultValue { get { return new DBOColumnDef(DynaField.TableDef, "DefaultValue", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandatory { get { return new DBOColumnDef(DynaField.TableDef, "Mandatory", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TabName { get { return new DBOColumnDef(DynaField.TableDef, "TabName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GridColTitle { get { return new DBOColumnDef(DynaField.TableDef, "GridColTitle", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GridColWidth { get { return new DBOColumnDef(DynaField.TableDef, "GridColWidth", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GridColPosition { get { return new DBOColumnDef(DynaField.TableDef, "GridColPosition", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AppCode { get { return new DBOColumnDef(DynaField.TableDef, "AppCode", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DynaFieldTS { get { return new DBOColumnDef(DynaField.TableDef, "DynaFieldTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GridColTitleTID { get { return new DBOColumnDef(DynaField.TableDef, "GridColTitleTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayTextTID { get { return new DBOColumnDef(DynaField.TableDef, "DisplayTextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaMask{
/// <summary>
/// Gets the table definition for DynaMask
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("DynaMask", "", false); } }


/// <summary>
/// Primärschlüssel für DynaMask Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(DynaMask.TableDef, "MaskName", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentMaskName { get { return new DBOColumnDef(DynaMask.TableDef, "ParentMaskName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentPosition { get { return new DBOColumnDef(DynaMask.TableDef, "ParentPosition", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(DynaMask.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaModulCode { get { return new DBOColumnDef(DynaMask.TableDef, "FaModulCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaPhaseCode { get { return new DBOColumnDef(DynaMask.TableDef, "FaPhaseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmProzessCode { get { return new DBOColumnDef(DynaMask.TableDef, "VmProzessCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef DisplayText { get { return new DBOColumnDef(DynaMask.TableDef, "DisplayText", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IconID { get { return new DBOColumnDef(DynaMask.TableDef, "IconID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TabNames { get { return new DBOColumnDef(DynaMask.TableDef, "TabNames", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GridHeight { get { return new DBOColumnDef(DynaMask.TableDef, "GridHeight", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(DynaMask.TableDef, "System", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Active { get { return new DBOColumnDef(DynaMask.TableDef, "Active", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AppCode { get { return new DBOColumnDef(DynaMask.TableDef, "AppCode", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DynaMaskTS { get { return new DBOColumnDef(DynaMask.TableDef, "DynaMaskTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaProzessCode { get { return new DBOColumnDef(DynaMask.TableDef, "KaProzessCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayTextTID { get { return new DBOColumnDef(DynaMask.TableDef, "DisplayTextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaValue{
/// <summary>
/// Gets the table definition for DynaValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("DynaValue", "", false); } }


/// <summary>
/// Primärschlüssel für DynaValue Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DynaValueID { get { return new DBOColumnDef(DynaValue.TableDef, "DynaValueID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_DynaValue_FaPhase) => FaPhase.FaPhaseID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(DynaValue.TableDef, "FaPhaseID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_DynaValue_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(DynaValue.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_DynaValue_DynaField) => DynaField.DynaFieldID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DynaFieldID { get { return new DBOColumnDef(DynaValue.TableDef, "DynaFieldID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(DynaValue.TableDef, "Value", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueText { get { return new DBOColumnDef(DynaValue.TableDef, "ValueText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GridRowID { get { return new DBOColumnDef(DynaValue.TableDef, "GridRowID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef CreationDate { get { return new DBOColumnDef(DynaValue.TableDef, "CreationDate", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DynaValueTS { get { return new DBOColumnDef(DynaValue.TableDef, "DynaValueTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaAktennotizen{
/// <summary>
/// Gets the table definition for FaAktennotizen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaAktennotizen", "", false); } }


/// <summary>
/// Primärschlüssel des Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaAktennotizID { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaAktennotizID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaLeistung.FaLeistungID. Weisst die Aktennotiz zu einer Leistung zu.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XUser.UserID. Weisst die Aktennotiz zu einem Mitarbeiter zu.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaAktennotizen.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zeit { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Zeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaDauerCode { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaDauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaGespraechsStatusCode { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaGespraechsStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Verschiedene Themen wie Wohnen, Gesundheit u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaThemaCodes { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaThemaCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaGespraechstypCode { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaGespraechstypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktpartner { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Kontaktpartner", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AlimentenstelleTypCode { get { return new DBOColumnDef(FaAktennotizen.TableDef, "AlimentenstelleTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// BaPersonIDs der betroffenen Personen, kommasepariert
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonIDs { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BaPersonIDs", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Stichwort", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltRTF { get { return new DBOColumnDef(FaAktennotizen.TableDef, "InhaltRTF", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Vertraulich { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Vertraulich", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BesprechungThema1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThema1", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BesprechungThema2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThema2", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BesprechungThema3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThema3", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BesprechungThema4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThema4", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThemaText1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThemaText2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThemaText3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungThemaText4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZiel1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZiel2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZiel3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZiel4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZielGrad1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZielGrad2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZielGrad3", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "BesprechungZielGrad4", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mögliche Werte sind z.B. Telefon oder E-Mail.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKontaktartCode { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaKontaktartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Pendenz1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Pendenz2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Pendenz3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Pendenz4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzErledigt1 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "PendenzErledigt1", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzErledigt2 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "PendenzErledigt2", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzErledigt3 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "PendenzErledigt3", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzErledigt4 { get { return new DBOColumnDef(FaAktennotizen.TableDef, "PendenzErledigt4", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(FaAktennotizen.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt wroden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt mutiert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaAktennotizen.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaAktennotizTS { get { return new DBOColumnDef(FaAktennotizen.TableDef, "FaAktennotizTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Diese Tabelle ist für die Dokumentablage. Zur Zeit wird diese Tabelle nur von SRK verwendet. Ist sehr änhlich wie FaDokumente, hat aber doch etwas andere Attribute wie eine many to many Verbindung zu BaPerson.
/// </summary>

public static class FaDokumentAblage{
/// <summary>
/// Gets the table definition for FaDokumentAblage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaDokumentAblage", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaDokumentAblageID { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "FaDokumentAblageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur FaLeistung.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zum User. Enthält den User, welcher das Dokument erstellt hat (wird zur Zeit nicht auf der Maske angezeigt).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Foreign Key auf BaPerson, falls im Adressat eine Person ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Foreign Key auf BaInstitution, falls im Adressat eine Institution ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaDokumentAblageInhalt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaDokumentAblageInhaltCode { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "FaDokumentAblageInhaltCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV FaThemaDokAblage. Thema zum Dokument.
/// [DataType: VARCHAR]
/// [Length: 250]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaThemaDokAblageCodes { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "FaThemaDokAblageCodes", typeof(string), false, false, false, 250, true, "", ""); } }


/// <summary>
/// Wann das Dokument erstellt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumErstellung { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "DatumErstellung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumGueltigVon { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "DatumGueltigVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumGueltigBis { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "DatumGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Bemerkungen über das Dokument.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XDocument (=> DocumentId).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaDokumentAblageTS { get { return new DBOColumnDef(FaDokumentAblage.TableDef, "FaDokumentAblageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle von BaPerson und FaDokumentAblage
/// </summary>

public static class FaDokumentAblage_BaPerson{
/// <summary>
/// Gets the table definition for FaDokumentAblage_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaDokumentAblage_BaPerson", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaDokumentAblage_BaPersonID { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "FaDokumentAblage_BaPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf Tabelle BaPerson, Spalte BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle FaKodumentAblage, Spalte FaDokumentAblageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaDokumentAblageID { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "FaDokumentAblageID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaDokumentAblage_BaPersonTS { get { return new DBOColumnDef(FaDokumentAblage_BaPerson.TableDef, "FaDokumentAblage_BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaDokumente{
/// <summary>
/// Gets the table definition for FaDokumente
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaDokumente", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaDokumenteID { get { return new DBOColumnDef(FaDokumente.TableDef, "FaDokumenteID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaDokumente.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_LT { get { return new DBOColumnDef(FaDokumente.TableDef, "BaPersonID_LT", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(FaDokumente.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(FaDokumente.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zum PriMa (Private Mandatsträger) für das Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID_Adressat { get { return new DBOColumnDef(FaDokumente.TableDef, "VmPriMaID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Absender { get { return new DBOColumnDef(FaDokumente.TableDef, "UserID_Absender", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_VisumBeantragtDurch { get { return new DBOColumnDef(FaDokumente.TableDef, "UserID_VisumBeantragtDurch", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_VisumBeantragtBei { get { return new DBOColumnDef(FaDokumente.TableDef, "UserID_VisumBeantragtBei", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_VisiertDurch { get { return new DBOColumnDef(FaDokumente.TableDef, "UserID_VisiertDurch", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_EkVisumUser { get { return new DBOColumnDef(FaDokumente.TableDef, "UserID_EkVisumUser", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(FaDokumente.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Merkblatt Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Merkblatt { get { return new DBOColumnDef(FaDokumente.TableDef, "DocumentID_Merkblatt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// BaPersonIDs der betroffenen Personen, kommasepariert
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonIDs { get { return new DBOColumnDef(FaDokumente.TableDef, "BaPersonIDs", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumErstellung { get { return new DBOColumnDef(FaDokumente.TableDef, "DatumErstellung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StatusCode { get { return new DBOColumnDef(FaDokumente.TableDef, "StatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzDatum { get { return new DBOColumnDef(FaDokumente.TableDef, "PendenzDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzErledigt { get { return new DBOColumnDef(FaDokumente.TableDef, "PendenzErledigt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// Welcher Dienst es ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmErbDienstCode { get { return new DBOColumnDef(FaDokumente.TableDef, "VmErbDienstCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dauer, z.B. 15 Minuten
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaDauerCode { get { return new DBOColumnDef(FaDokumente.TableDef, "FaDauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(FaDokumente.TableDef, "Stichwort", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EingangAusgang { get { return new DBOColumnDef(FaDokumente.TableDef, "EingangAusgang", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ThemaCode { get { return new DBOColumnDef(FaDokumente.TableDef, "ThemaCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VisumBeantragtDatum { get { return new DBOColumnDef(FaDokumente.TableDef, "VisumBeantragtDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VisiertDatum { get { return new DBOColumnDef(FaDokumente.TableDef, "VisiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EkStatusCode { get { return new DBOColumnDef(FaDokumente.TableDef, "EkStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EkLaufNr { get { return new DBOColumnDef(FaDokumente.TableDef, "EkLaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EkKW { get { return new DBOColumnDef(FaDokumente.TableDef, "EkKW", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EkJahr { get { return new DBOColumnDef(FaDokumente.TableDef, "EkJahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EkVisumDatum { get { return new DBOColumnDef(FaDokumente.TableDef, "EkVisumDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(FaDokumente.TableDef, "Bemerkung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// Auflistung der Themen (aus LOV). Kommasepariert.
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaThemaCodes { get { return new DBOColumnDef(FaDokumente.TableDef, "FaThemaCodes", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Vertraulich { get { return new DBOColumnDef(FaDokumente.TableDef, "Vertraulich", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Hat den Wert 1, wenn das Dokument logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(FaDokumente.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Ob ein Dokument ein Bericht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstBericht { get { return new DBOColumnDef(FaDokumente.TableDef, "IstBericht", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaDokumente.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wan der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaDokumente.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaDokumente.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zulest verändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaDokumente.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaDokumenteTS { get { return new DBOColumnDef(FaDokumente.TableDef, "FaDokumenteTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für die Maske Fa - Kategorisierung
/// </summary>

public static class FaKategorisierung{
/// <summary>
/// Gets the table definition for FaKategorisierung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaKategorisierung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaKategorisierungID { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// FK auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaKategorisierung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// FK auf FaKategorisierungEksProdukt (Wertelistenersatztabelle)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaKategorisierungEksProduktID { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungEksProduktID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// FK auf XUser
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaKategorisierung.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Das Datum der Kategorisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungEksOption
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungEksOptionCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungEksOptionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungKiStatus (N, F)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungKiStatusCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungKiStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungIntake (A,B,C)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungIntakeCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungIntakeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungKooperation (1,2,...,9,10)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungKooperationCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungKooperationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungRessourcen (1,2,...,9,10)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungRessourcenCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungRessourcenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste FaKategorisierungAbschlussgrund (ähnlich Abschlussgrund Intake-Phase)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorisierungAbschlussgrundCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungAbschlussgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dynamisch berechnete Spalte. Enthält die aus den Kategorisierungs-Kriterien resultierende Kategorie.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKategorieCode { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Ende der Kategorisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abschlussdatum { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Abschlussdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Begründung der Kategorisierung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaKategorisierung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaKategorisierungTS { get { return new DBOColumnDef(FaKategorisierung.TableDef, "FaKategorisierungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Wird für Auswahl EKS-Produkt auf der Maske Fa - Kategorisierung verwendet (an Stelle einer LOV, wegen FK auf XOrgUnit)
/// </summary>

public static class FaKategorisierungEksProdukt{
/// <summary>
/// Gets the table definition for FaKategorisierungEksProdukt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaKategorisierungEksProdukt", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaKategorisierungEksProduktID { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "FaKategorisierungEksProduktID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XOrgUnit
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "OrgUnitID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Text, der im Dropdown angezeigt wird
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Text", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Text, der im Fallnavigator angezeigt wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef ShortText { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "ShortText", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaKategorieCode { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "FaKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Die Anzahl Tage/Monate/Jahre (abhängig von FaKategorisierungEksProduktFristTypCode) für die Berechnung des Felds 'Frist'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Frist { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Frist", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Typ des Felds 'Frist' (Tag/Monat/Jahr)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaKategorisierungEksProduktFristTypCode { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "FaKategorisierungEksProduktFristTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaKategorisierungEksProduktTS { get { return new DBOColumnDef(FaKategorisierungEksProdukt.TableDef, "FaKategorisierungEksProduktTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet alle fachlich historisierten Modul-Leistungen der Klientendossiers
/// </summary>

public static class FaLeistung{
/// <summary>
/// Gets the table definition for FaLeistung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaLeistung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaLeistung.TableDef, "FaLeistungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaLeistung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaFallID { get { return new DBOColumnDef(FaLeistung.TableDef, "FaFallID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(FaLeistung.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaLeistung.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef SachbearbeiterID { get { return new DBOColumnDef(FaLeistung.TableDef, "SachbearbeiterID", typeof(System.Nullable<int>), false, true, false, 4, true, "", "ZH"); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistung_SchuldnerBaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef SchuldnerBaPersonID { get { return new DBOColumnDef(FaLeistung.TableDef, "SchuldnerBaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaProzessCode { get { return new DBOColumnDef(FaLeistung.TableDef, "FaProzessCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ([dbo].[fnGetDefaultGemeindeCode]())]
/// </summary>

public static DBOColumnDef GemeindeCode { get { return new DBOColumnDef(FaLeistung.TableDef, "GemeindeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "([dbo].[fnGetDefaultGemeindeCode]())", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef LeistungsartCode { get { return new DBOColumnDef(FaLeistung.TableDef, "LeistungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsGrundCode { get { return new DBOColumnDef(FaLeistung.TableDef, "EroeffnungsGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussGrundCode { get { return new DBOColumnDef(FaLeistung.TableDef, "AbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaLeistung.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaLeistung.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(FaLeistung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Nummer des KES Dossiers
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dossiernummer { get { return new DBOColumnDef(FaLeistung.TableDef, "Dossiernummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: MBU]
/// </summary>

public static DBOColumnDef FaAufnahmeartCode { get { return new DBOColumnDef(FaLeistung.TableDef, "FaAufnahmeartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "MBU"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: MBU]
/// </summary>

public static DBOColumnDef FaKontaktveranlasserCode { get { return new DBOColumnDef(FaLeistung.TableDef, "FaKontaktveranlasserCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "MBU"); } }


/// <summary>
/// LOV-Codes für FaTeilleistungserbringer
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaTeilleistungserbringerCodes { get { return new DBOColumnDef(FaLeistung.TableDef, "FaTeilleistungserbringerCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// LOV-Codes für FaModulDienstleistungen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef FaModulDienstleistungenCode { get { return new DBOColumnDef(FaLeistung.TableDef, "FaModulDienstleistungenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkSchuldnerStatusCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkSchuldnerStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkAufenthaltsartCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkAufenthaltsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkHatUnterstuetzung { get { return new DBOColumnDef(FaLeistung.TableDef, "IkHatUnterstuetzung", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkIstRentenbezueger { get { return new DBOColumnDef(FaLeistung.TableDef, "IkIstRentenbezueger", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkSchuldnerMahnen { get { return new DBOColumnDef(FaLeistung.TableDef, "IkSchuldnerMahnen", typeof(bool), false, false, false, 1, false, "((1))", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkEinnahmenQuoteCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkEinnahmenQuoteCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkDatumRechtskraft { get { return new DBOColumnDef(FaLeistung.TableDef, "IkDatumRechtskraft", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkInkassoBemuehungCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkInkassoBemuehungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkVerjaehrungAm { get { return new DBOColumnDef(FaLeistung.TableDef, "IkVerjaehrungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkLeistungStatusCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkLeistungStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkDatumForderungstitel { get { return new DBOColumnDef(FaLeistung.TableDef, "IkDatumForderungstitel", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkRueckerstattungTypCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkRueckerstattungTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkForderungTitelCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkForderungTitelCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef IkErreichungsGradCode { get { return new DBOColumnDef(FaLeistung.TableDef, "IkErreichungsGradCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef OldUnitID { get { return new DBOColumnDef(FaLeistung.TableDef, "OldUnitID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef VmAuftragCode { get { return new DBOColumnDef(FaLeistung.TableDef, "VmAuftragCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KaProzessCode { get { return new DBOColumnDef(FaLeistung.TableDef, "KaProzessCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "Standard"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef KaEpqJob { get { return new DBOColumnDef(FaLeistung.TableDef, "KaEpqJob", typeof(System.Nullable<bool>), false, false, false, 1, true, "", "Standard"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(FaLeistung.TableDef, "Bezeichnung", typeof(string), false, false, false, 50, true, "", "Standard"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(FaLeistung.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", "Standard"); } }


/// <summary>
/// [DataType: BIGINT]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef PscdVertragsgegenstandID { get { return new DBOColumnDef(FaLeistung.TableDef, "PscdVertragsgegenstandID", typeof(System.Nullable<long>), false, false, false, 8, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef MigBemerkung { get { return new DBOColumnDef(FaLeistung.TableDef, "MigBemerkung", typeof(string), false, false, false, 200, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef MigHerkunftCode { get { return new DBOColumnDef(FaLeistung.TableDef, "MigHerkunftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef MigAlteFallNr { get { return new DBOColumnDef(FaLeistung.TableDef, "MigAlteFallNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef VUFaFallID { get { return new DBOColumnDef(FaLeistung.TableDef, "VUFaFallID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef visdat36Area { get { return new DBOColumnDef(FaLeistung.TableDef, "visdat36Area", typeof(string), false, false, false, 255, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef visdat36FALLID { get { return new DBOColumnDef(FaLeistung.TableDef, "visdat36FALLID", typeof(string), false, false, false, 6, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef visdat36LEISTUNGID { get { return new DBOColumnDef(FaLeistung.TableDef, "visdat36LEISTUNGID", typeof(string), false, false, false, 6, true, "", "PI"); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>

public static DBOColumnDef WiederholteSpezifischeErmittlungEAF { get { return new DBOColumnDef(FaLeistung.TableDef, "WiederholteSpezifischeErmittlungEAF", typeof(bool), false, false, false, 1, false, "((0))", "Standard"); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaLeistung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaLeistung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaLeistung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaLeistung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaLeistungTS { get { return new DBOColumnDef(FaLeistung.TableDef, "FaLeistungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungArchiv{
/// <summary>
/// Gets the table definition for FaLeistungArchiv
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaLeistungArchiv", "", false); } }


/// <summary>
/// Primärschlüssel für FaLeistungArchiv Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaLeistungArchivID { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "FaLeistungArchivID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XArchive) => XArchive.ArchiveID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ArchiveID { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "ArchiveID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArchivNr { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "ArchivNr", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef CheckIn { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "CheckIn", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "CheckOut", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef CheckInUserID { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "CheckInUserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XUser1) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef CheckOutUserID { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "CheckOutUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaLeistungArchivTS { get { return new DBOColumnDef(FaLeistungArchiv.TableDef, "FaLeistungArchivTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungBewertung{
/// <summary>
/// Gets the table definition for FaLeistungBewertung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaLeistungBewertung", "", false); } }


/// <summary>
/// Primärschlüssel für FaLeistungBewertung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaBewertungID { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "FaBewertungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungBewertung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Termin { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "Termin", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaBewertungCode { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "FaBewertungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKriterienCodes { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "FaKriterienCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungBewertung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaLeistungBewertungTS { get { return new DBOColumnDef(FaLeistungBewertung.TableDef, "FaLeistungBewertungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen für die Darstellung der Fallübergabe in der Zeitachse
/// </summary>

public static class FaLeistungUserHist{
/// <summary>
/// Gets the table definition for FaLeistungUserHist
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaLeistungUserHist", "", false); } }


/// <summary>
/// Primärschlüssel für FaLeistungUserHist.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaLeistungUserHistID { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "FaLeistungUserHistID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Die dazugehörige FaLeistungID.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Der für den Zeitraum zuständige User.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum von welchem an der User für den Fall zuständig war.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Datum bis zu welchem der User für den Fall zuständig war.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "DatumBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaLeistungUserHistTS { get { return new DBOColumnDef(FaLeistungUserHist.TableDef, "FaLeistungUserHistTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungZugriff{
/// <summary>
/// Gets the table definition for FaLeistungZugriff
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaLeistungZugriff", "", false); } }


/// <summary>
/// Primärschlüssel für FaLeistungZugriff Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaLeistungZugriffID { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "FaLeistungZugriffID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungZugriff_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaLeistungZugriff_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DarfMutieren { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "DarfMutieren", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Gastrechtsgültigkeit DatumVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Gastrechtsgültigkeit DatumBis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaLeistungZugriffTS { get { return new DBOColumnDef(FaLeistungZugriff.TableDef, "FaLeistungZugriffTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPendenzgruppe{
/// <summary>
/// Gets the table definition for FaPendenzgruppe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaPendenzgruppe", "", false); } }


/// <summary>
/// Primärschlüssel für FaPendenzgruppe Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaPendenzgruppeID { get { return new DBOColumnDef(FaPendenzgruppe.TableDef, "FaPendenzgruppeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FaPendenzgruppe.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beschreibung { get { return new DBOColumnDef(FaPendenzgruppe.TableDef, "Beschreibung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaPendenzgruppeTS { get { return new DBOColumnDef(FaPendenzgruppe.TableDef, "FaPendenzgruppeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPendenzgruppe_User{
/// <summary>
/// Gets the table definition for FaPendenzgruppe_User
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaPendenzgruppe_User", "", false); } }


/// <summary>
/// Primärschlüssel für FaPendenzgruppe_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaPendenzgruppe_UserID { get { return new DBOColumnDef(FaPendenzgruppe_User.TableDef, "FaPendenzgruppe_UserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPendenzgruppe_XUser_FaPendenzgruppe) => FaPendenzgruppe.FaPendenzgruppeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaPendenzgruppeID { get { return new DBOColumnDef(FaPendenzgruppe_User.TableDef, "FaPendenzgruppeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPendenzgruppe_XUser_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaPendenzgruppe_User.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaPendenzgruppe_UserTS { get { return new DBOColumnDef(FaPendenzgruppe_User.TableDef, "FaPendenzgruppe_UserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPhase{
/// <summary>
/// Gets the table definition for FaPhase
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaPhase", "", false); } }


/// <summary>
/// Primärschlüssel für FaPhase Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(FaPhase.TableDef, "FaPhaseID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPhase_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaPhase.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPhase_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaPhase.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPhase_FsDienstleistungspaket) => FsDienstleistungspaket.FsDienstleistungspaketID. Rolle ist Zugewiesen (siehe auch Bedarf).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FsDienstleistungspaketID_Zugewiesen { get { return new DBOColumnDef(FaPhase.TableDef, "FsDienstleistungspaketID_Zugewiesen", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FaPhase_FsDienstleistungspaket) => FsDienstleistungspaket.FsDienstleistungspaketID. Rolle ist Bedarf (siehe auch Zugewiesen).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FsDienstleistungspaketID_Bedarf { get { return new DBOColumnDef(FaPhase.TableDef, "FsDienstleistungspaketID_Bedarf", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Typ der Phase (LOV FaPhase)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaPhaseCode { get { return new DBOColumnDef(FaPhase.TableDef, "FaPhaseCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum VON der Phase
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaPhase.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Datum BIS der Phase
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaPhase.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Abschlussgrund der Phase (LOV AbschlussGrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussGrundCode { get { return new DBOColumnDef(FaPhase.TableDef, "AbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(FaPhase.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaPhase.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt wroden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaPhase.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt mutiert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaPhase.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaPhase.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaPhaseTS { get { return new DBOColumnDef(FaPhase.TableDef, "FaPhaseTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Hier werden die FaLeistungen gespeichert, welche verknüpft werden müssen und z.B. in einem Ordner dargestellt werden (EAF).
/// </summary>

public static class FaRelation{
/// <summary>
/// Gets the table definition for FaRelation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaRelation", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle FaRelation
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaRelationID { get { return new DBOColumnDef(FaRelation.TableDef, "FaRelationID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Erste FaLeistungID welche mit FaLeistungID2 zusammenhängt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID1 { get { return new DBOColumnDef(FaRelation.TableDef, "FaLeistungID1", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Zweite FaLeistungID welche mit FaLeistungID1 zusammenhängt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID2 { get { return new DBOColumnDef(FaRelation.TableDef, "FaLeistungID2", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV welche den Typ des Eintrags definiert
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaRelationTypCode { get { return new DBOColumnDef(FaRelation.TableDef, "FaRelationTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// True wenn beide FaLeistungen synchron behandelt werden sollen. Z.B. bei Fallzugriff.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef CascadeUpdate { get { return new DBOColumnDef(FaRelation.TableDef, "CascadeUpdate", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaRelation.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaRelation.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaRelation.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaRelation.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaRelationTS { get { return new DBOColumnDef(FaRelation.TableDef, "FaRelationTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// beinhaltet Weisungen Einträge.
/// Eine zwischen Tabelle für die Termine und Dokumente wurde Datenstrukturmässig schönner sein, aber komplexer im C# Code. Da wir nur 5 Termine und Dokumente haben sind sie direkt auf der Weisungstabelle.
/// Die zwischen Tabelle FaWeisung_TerminDocument (oder änlich) wurde die folgende Felder haben:
/// - FaWeisung_TerminDocumentID int identity
/// - FaWeisungID int
/// - XDocumentID int
/// - Termin datetime
/// - TerminTyp int (Weisung, Mahnung1, Mahnung2, Mahnung3, Verfuegung)
/// 
/// </summary>

public static class FaWeisung{
/// <summary>
/// Gets the table definition for FaWeisung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaWeisung", "", false); } }


/// <summary>
/// Primärschlüssel der Weisung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaWeisungID { get { return new DBOColumnDef(FaWeisung.TableDef, "FaWeisungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel einer FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaWeisung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel vom Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Creator { get { return new DBOColumnDef(FaWeisung.TableDef, "UserID_Creator", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// UserID vom verantwortliche RD
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_VerantwortlichRD { get { return new DBOColumnDef(FaWeisung.TableDef, "UserID_VerantwortlichRD", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// UserID vom verantwortliche SAR
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_VerantwortlichSAR { get { return new DBOColumnDef(FaWeisung.TableDef, "UserID_VerantwortlichSAR", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XTaskID_SAR { get { return new DBOColumnDef(FaWeisung.TableDef, "XTaskID_SAR", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// StatusCode der Weisung, ein Enum im C# Code. Der Name des Enum ist FaWeisung.Status.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef StatusCode { get { return new DBOColumnDef(FaWeisung.TableDef, "StatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// Die Weisungsart. Ist ein Enum im C# Code (schriftlich, mündlich). Der Name des Enum ist FaWeisung.Weisungsart.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WeisungsartCode { get { return new DBOColumnDef(FaWeisung.TableDef, "WeisungsartCode", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Betreff der Weisung
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Betreff { get { return new DBOColumnDef(FaWeisung.TableDef, "Betreff", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Die Ausgangslage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausganslage { get { return new DBOColumnDef(FaWeisung.TableDef, "Ausganslage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Die Auflage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auflage { get { return new DBOColumnDef(FaWeisung.TableDef, "Auflage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// angedrohte Konsequenz. KonsequenzCode aus LOV Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KonsequenzCodeAngedroht { get { return new DBOColumnDef(FaWeisung.TableDef, "KonsequenzCodeAngedroht", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// angedrohte Kürzung zwischen 0 und 15%
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KuerzungGBAngedroht { get { return new DBOColumnDef(FaWeisung.TableDef, "KuerzungGBAngedroht", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Termin der Weisung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TerminWeisung { get { return new DBOColumnDef(FaWeisung.TableDef, "TerminWeisung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Document der Weisung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Weisung { get { return new DBOColumnDef(FaWeisung.TableDef, "XDocumentID_Weisung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Termin der 1. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TerminMahnung1 { get { return new DBOColumnDef(FaWeisung.TableDef, "TerminMahnung1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Document der 1. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Mahnung1 { get { return new DBOColumnDef(FaWeisung.TableDef, "XDocumentID_Mahnung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Termin der 2. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TerminMahnung2 { get { return new DBOColumnDef(FaWeisung.TableDef, "TerminMahnung2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Document der 2. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Mahnung2 { get { return new DBOColumnDef(FaWeisung.TableDef, "XDocumentID_Mahnung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Termin der 3. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TerminMahnung3 { get { return new DBOColumnDef(FaWeisung.TableDef, "TerminMahnung3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Document der 3. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Mahnung3 { get { return new DBOColumnDef(FaWeisung.TableDef, "XDocumentID_Mahnung3", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVerfuegung { get { return new DBOColumnDef(FaWeisung.TableDef, "DatumVerfuegung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Document der Verfügung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Verfuegung { get { return new DBOColumnDef(FaWeisung.TableDef, "XDocumentID_Verfuegung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// verfügte Konsequenz. KonsequenzCode aus LOV Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KonsequenzCodeVerfuegt { get { return new DBOColumnDef(FaWeisung.TableDef, "KonsequenzCodeVerfuegt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Konsequenz gültig von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KonsequenzDatumVon { get { return new DBOColumnDef(FaWeisung.TableDef, "KonsequenzDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Konsequenz gültig bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KonsequenzDatumBis { get { return new DBOColumnDef(FaWeisung.TableDef, "KonsequenzDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// verfügte Kürzung zwischen 0 und 15%
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KuerzungGBVerfuegt { get { return new DBOColumnDef(FaWeisung.TableDef, "KuerzungGBVerfuegt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Kürzung gültig von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KuerzungDatumVon { get { return new DBOColumnDef(FaWeisung.TableDef, "KuerzungDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Kürzung gültig bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KuerzungDatumBis { get { return new DBOColumnDef(FaWeisung.TableDef, "KuerzungDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Zum wissen ob die Weisung verschoben wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WeisungVerschoben { get { return new DBOColumnDef(FaWeisung.TableDef, "WeisungVerschoben", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Die Weisung ist erfüllt (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WeisungErfuellt { get { return new DBOColumnDef(FaWeisung.TableDef, "WeisungErfuellt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef CanDelete { get { return new DBOColumnDef(FaWeisung.TableDef, "CanDelete", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaWeisung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaWeisung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaWeisung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaWeisung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaWeisungTS { get { return new DBOColumnDef(FaWeisung.TableDef, "FaWeisungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet betroffene Personen von einer Weisung
/// </summary>

public static class FaWeisung_BaPerson{
/// <summary>
/// Gets the table definition for FaWeisung_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaWeisung_BaPerson", "", false); } }


/// <summary>
/// Primärschlüssel für FaWeisung_BaPerson Records
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaWeisung_BaPersonID { get { return new DBOColumnDef(FaWeisung_BaPerson.TableDef, "FaWeisung_BaPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaWeisung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaWeisungID { get { return new DBOColumnDef(FaWeisung_BaPerson.TableDef, "FaWeisungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fredmschlüssel auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaWeisung_BaPerson.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaWeisung_BaPersonTS { get { return new DBOColumnDef(FaWeisung_BaPerson.TableDef, "FaWeisung_BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet das Protokoll jeder Weisungen
/// </summary>

public static class FaWeisungProtokoll{
/// <summary>
/// Gets the table definition for FaWeisungProtokoll
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaWeisungProtokoll", "", false); } }


/// <summary>
/// Primärschlüssel von FaWeisung_Protokoll Records
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaWeisungProtokollID { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "FaWeisungProtokollID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaWeisung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaWeisungID { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "FaWeisungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Aktion die für die Weisung gemacht wurde
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aktion { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Aktion", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Bemerkung für die Weisung
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Bemerkung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Nächster Termin
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Termin { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Termin", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Verantwortliche Person für die nächste Aktion
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verantwortlich { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Verantwortlich", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaWeisung_ProtokollTS { get { return new DBOColumnDef(FaWeisungProtokoll.TableDef, "FaWeisung_ProtokollTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// beinhaltet Einträge für die Steuerung von Weisungen
/// </summary>

public static class FaWeisungWorkflow{
/// <summary>
/// Gets the table definition for FaWeisungWorkflow
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaWeisungWorkflow", "", false); } }


/// <summary>
/// Primärschlüssel vom Workflow-Eintrag
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaWeisungWorkflowID { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "FaWeisungWorkflowID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XTaskTemplateID_RD { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "XTaskTemplateID_RD", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XTaskTemplateID_SAR { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "XTaskTemplateID_SAR", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Aktueller Status. Wert vom Enum FaWeisungStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef StatusCode { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "StatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Aktion für den aktuellen Status
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Aktion { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "Aktion", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit der Aktion
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AktionTID { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "AktionTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Neuer Status der Weisung. Wert vom Enum FaWeisungStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef NeuerStatusCode { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "NeuerStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Person die für die Weisung Zuschtändig ist.
/// ZustaendigCode ist ein Enum (FaWeisung.Zustaendig)
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ZustaendigCode { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "ZustaendigCode", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Das nächste Termin ist ein Mussfeld
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef TerminMuss { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "TerminMuss", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// TerminCode zum wissen in welchem Feld das nächste Termin kopiert sein muss.
/// TerminCode ist ein Enum (FaWeisung.Termin)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NaechsterTerminCode { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "NaechsterTerminCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zum wissen ob das Datum vom NaechstenTerminCode angepasst sein muss.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef NaechsterTerminAnpassen { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "NaechsterTerminAnpassen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Eine Pendenz soll für den Sacharbeiter generiert werden (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PendenzSAR { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "PendenzSAR", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Eine Pendenz soll für den Rechstdienst generiert werden (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PendenzRD { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "PendenzRD", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Die Pendenz vom SAR muss angepasst weden, und nicht neu erstellt (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SARPendenzAnpassen { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "SARPendenzAnpassen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Zum wissen ob die Weisung nach dieser Aktion erfüllt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WeisungErfuellt { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "WeisungErfuellt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaWeisungWorkflowTS { get { return new DBOColumnDef(FaWeisungWorkflow.TableDef, "FaWeisungWorkflowTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für Maske Zeitliche Planung (Fallführung SRK)
/// </summary>

public static class FaZeitlichePlanung{
/// <summary>
/// Gets the table definition for FaZeitlichePlanung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaZeitlichePlanung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaZeitlichePlanungID { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "FaZeitlichePlanungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase1Ende { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase1Ende", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase1SitAnalyse { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase1SitAnalyse", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase1Bemerkungen { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase1Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase2Beginn { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase2Beginn", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase2Ende { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase2Ende", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase2SitAnalyse { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase2SitAnalyse", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase2Bemerkungen { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase2Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase3Beginn { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase3Beginn", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase3SitAnalyse { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase3SitAnalyse", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase3Bemerkungen { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Phase3Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FaZeitlichePlanungTS { get { return new DBOColumnDef(FaZeitlichePlanung.TableDef, "FaZeitlichePlanungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// beinhaltet Barauszahlungsaufträge
/// </summary>

public static class FbBarauszahlungAuftrag{
/// <summary>
/// Gets the table definition for FbBarauszahlungAuftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBarauszahlungAuftrag", "", false); } }


/// <summary>
/// Primärschlüssel einem Barauszahlungsauftrag
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungAuftragID { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "FbBarauszahlungAuftragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel der Leistung.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel des Benutzers welcher den Auftrag erstellt hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Creator { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "UserID_Creator", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel des Benutzers welcher den Auftrag geändert hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Modifier { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "UserID_Modifier", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel von einem Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "XDocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// zum wissen ob Auszahlung bereits voranden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AuszahlungenVorhanden { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "AuszahlungenVorhanden", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Buchungstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Buchungstext", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Gültigkeitsdatum von
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Gültigkeitsdatum bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Die Periodizität. Enum und LOV FbBarauszahlungPeriodizitaet
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbBarauszahlungPeriodizitaetCode { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "FbBarauszahlungPeriodizitaetCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Soll-Kontonummer
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "SollKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Haben-Kontonummer
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "HabenKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Anzahl Tage welche die Auszahlung im Voraus eingelöst werden kann
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Vorbezug { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Vorbezug", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Anzahl Tage welche die Auszahlung im Nachhinein eingelöst werden kann
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Nachbezug { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Nachbezug", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBarauszahlungAuftragTS { get { return new DBOColumnDef(FbBarauszahlungAuftrag.TableDef, "FbBarauszahlungAuftragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// beinhaltet Dati für einen Zyklus wenn eine Barauszahlung ausbezahlt wurde
/// </summary>

public static class FbBarauszahlungAusbezahlt{
/// <summary>
/// Gets the table definition for FbBarauszahlungAusbezahlt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBarauszahlungAusbezahlt", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungAusbezahltID { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "FbBarauszahlungAusbezahltID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel von einem Barauszahlungszyklus
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungZyklusID { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "FbBarauszahlungZyklusID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf der Buchung die erstellt wurde nach dem Auszahlen von der VM-Kasse
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "FbBuchungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Benutzer welcher die Auszahlung ausgelöst hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum wenn die Barauszahlung ausbezahlt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Stichtag der Barauszahlung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Stichtag { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Stichtag", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBarauszahlungAusbezahltTS { get { return new DBOColumnDef(FbBarauszahlungAusbezahlt.TableDef, "FbBarauszahlungAusbezahltTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// beinhaltet Informationen für den Zyklus einer Barauszahlung
/// </summary>

public static class FbBarauszahlungZyklus{
/// <summary>
/// Gets the table definition for FbBarauszahlungZyklus
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBarauszahlungZyklus", "", false); } }


/// <summary>
/// Primärschlüssel von Barauszahlungszyklus
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungZyklusID { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "FbBarauszahlungZyklusID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel von einem Barauszahlungsauftrag
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungAuftragID { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "FbBarauszahlungAuftragID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum der erste geplante Barauszahlung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumStart { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "DatumStart", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef DauerNaechsteZahlung { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "DauerNaechsteZahlung", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Enum DauerTyp (Tag, Monat)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef DauerTypCode { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "DauerTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Wochentag vom Zyklus. Wird verwendet wenn in der Periodizität vom Barauszahlungsauftrag ein Wochentag gesetzt ist.
/// Enum und LOV Wochentag
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WochentagCode { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "WochentagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBarauszahlungZyklusTS { get { return new DBOColumnDef(FbBarauszahlungZyklus.TableDef, "FbBarauszahlungZyklusTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBelegNr{
/// <summary>
/// Gets the table definition for FbBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBelegNr", "", false); } }


/// <summary>
/// Primärschlüssel für FbBelegNr Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBelegNrID { get { return new DBOColumnDef(FbBelegNr.TableDef, "FbBelegNrID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef BelegNrCode { get { return new DBOColumnDef(FbBelegNr.TableDef, "BelegNrCode", typeof(int), false, false, false, 4, false, "(0)", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBelegNr_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbBelegNr.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBelegNr_DmgPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FbBelegNr.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef NaechsteBelegNr { get { return new DBOColumnDef(FbBelegNr.TableDef, "NaechsteBelegNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BelegNrVon { get { return new DBOColumnDef(FbBelegNr.TableDef, "BelegNrVon", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BelegNrBis { get { return new DBOColumnDef(FbBelegNr.TableDef, "BelegNrBis", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Praefix { get { return new DBOColumnDef(FbBelegNr.TableDef, "Praefix", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBelegNrTS { get { return new DBOColumnDef(FbBelegNr.TableDef, "FbBelegNrTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchung{
/// <summary>
/// Gets the table definition for FbBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBuchung", "", false); } }


/// <summary>
/// Primärschlüssel für FbBuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(FbBuchung.TableDef, "FbBuchungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBPERIOD) => FbPeriode.FbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbPeriodeID { get { return new DBOColumnDef(FbBuchung.TableDef, "FbPeriodeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Buchungstyp gemäss LOV FbBuchungTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BuchungTypCode { get { return new DBOColumnDef(FbBuchung.TableDef, "BuchungTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Buchungscode - Template für Buchung (KtoNr und Text) - FbBuchungCode
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(FbBuchung.TableDef, "Code", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// BelegNr mit Präfix - FbBelegNr (Impliziter Zusammenhang mit BuchungTypCode)
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(FbBuchung.TableDef, "BelegNr", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// Position der Buchung für diese BelegNr. Immer 0. Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BelegNrPos { get { return new DBOColumnDef(FbBuchung.TableDef, "BelegNrPos", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Zeitpunkt zu welchem die Buchung verbucht wird.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BuchungsDatum { get { return new DBOColumnDef(FbBuchung.TableDef, "BuchungsDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBKONTO2) => FbKonto.KontoNr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(FbBuchung.TableDef, "SollKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBKONTO) => FbKonto.KontoNr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(FbBuchung.TableDef, "HabenKtoNr", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Betrag der Buchung in CHF.
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(FbBuchung.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Buchungstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(FbBuchung.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Zeitpunkt zu welchem der Betrag ausbezahlt wird.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(FbBuchung.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// das originale Valutadatum, dass fürs erstellen von Buchungen via Dauerautrag verwendet wird
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatumOriginal { get { return new DBOColumnDef(FbBuchung.TableDef, "ValutaDatumOriginal", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Auszahlung möglich bis ende Zahlungsfrist. Tage nach ValutaDatum?? Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsfrist { get { return new DBOColumnDef(FbBuchung.TableDef, "Zahlungsfrist", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Status der Buchung. LOV FbBuchungStatus. Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BuchungStatusCode { get { return new DBOColumnDef(FbBuchung.TableDef, "BuchungStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBDAUERA) => FbDauerauftrag.FbDauerauftragID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbDauerauftragID { get { return new DBOColumnDef(FbBuchung.TableDef, "FbDauerauftragID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Zeitpunkt zu welchem die Buchung erfasst wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef ErfassungsDatum { get { return new DBOColumnDef(FbBuchung.TableDef, "ErfassungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "(getdate())", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBuchung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbBuchung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBZAHLUN) => FbZahlungsweg.FbZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbZahlungswegID { get { return new DBOColumnDef(FbBuchung.TableDef, "FbZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Post Konto Nr
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(FbBuchung.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Bank Konto Nr
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(FbBuchung.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Konto-Nr des Kreditors im internationalen Format.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBAN { get { return new DBOColumnDef(FbBuchung.TableDef, "IBAN", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Zahlungsart. Zahlungsart für Buchungen mit Kreditor.  LOV FbZahlungsartCode.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungsArtCode { get { return new DBOColumnDef(FbBuchung.TableDef, "ZahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Referenznummer für Buchungen mit ESR.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(FbBuchung.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Feld auf Einzahlungsschein.
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(FbBuchung.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Empfänger: Name
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FbBuchung.TableDef, "Name", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Empfänger: Adresszusatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(FbBuchung.TableDef, "Zusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Empfänger: Strasse und Nr
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(FbBuchung.TableDef, "Strasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Empfänger: PLZ
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(FbBuchung.TableDef, "PLZ", typeof(string), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Empfänger: Ort
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(FbBuchung.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbBuchung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbBuchung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbBuchung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbBuchung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBuchungTS { get { return new DBOColumnDef(FbBuchung.TableDef, "FbBuchungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchungCode{
/// <summary>
/// Gets the table definition for FbBuchungCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBuchungCode", "", false); } }


/// <summary>
/// Primärschlüssel für FbBuchungCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBuchungCodeID { get { return new DBOColumnDef(FbBuchungCode.TableDef, "FbBuchungCodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(FbBuchungCode.TableDef, "Code", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBuchungCode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FbBuchungCode.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(FbBuchungCode.TableDef, "SollKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(FbBuchungCode.TableDef, "HabenKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(FbBuchungCode.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(FbBuchungCode.TableDef, "Text", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBuchungCode_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbBuchungCode.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBuchungCodeTS { get { return new DBOColumnDef(FbBuchungCode.TableDef, "FbBuchungCodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchungskreis{
/// <summary>
/// Gets the table definition for FbBuchungskreis
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbBuchungskreis", "", false); } }


/// <summary>
/// Primärschlüssel für FbBuchungskreis Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbBuchungskreisID { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "FbBuchungskreisID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbBuchungskreisCode { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "FbBuchungskreisCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbBuchungskreis_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BuchungsDatum { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "BuchungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "SollKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "HabenKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBuchungskreisTS { get { return new DBOColumnDef(FbBuchungskreis.TableDef, "FbBuchungskreisTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDauerauftrag{
/// <summary>
/// Gets the table definition for FbDauerauftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbDauerauftrag", "", false); } }


/// <summary>
/// Primärschlüssel für FbDauerauftrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbDauerauftragID { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "FbDauerauftragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDauerauftrag_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "SollKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "HabenKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDauerauftrag_FbZahlungsweg) => FbZahlungsweg.FbZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbZahlungswegID { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "FbZahlungswegID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Periodizität -  LOV FbBarauszahlungPeriodizitaet
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PeriodizitaetCode { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "PeriodizitaetCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Code für den Wochentag - LOV WochentagCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WochentagCode { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "WochentagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monatstag1 { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Monatstag1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monatstag2 { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Monatstag2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob Zahlung ggf vor dem Wochenende ausgeführt werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef VorWochenende { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "VorWochenende", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "Status", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbDauerauftragTS { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "FbDauerauftragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerauftragDokID { get { return new DBOColumnDef(FbDauerauftrag.TableDef, "DauerauftragDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTABuchung{
/// <summary>
/// Gets the table definition for FbDTABuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbDTABuchung", "", false); } }


/// <summary>
/// Primärschlüssel für FbDTABuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(FbDTABuchung.TableDef, "FbBuchungID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für FbDTABuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbDTAJournalID { get { return new DBOColumnDef(FbDTABuchung.TableDef, "FbDTAJournalID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(FbDTABuchung.TableDef, "Status", typeof(int), false, false, false, 4, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbDTABuchungTS { get { return new DBOColumnDef(FbDTABuchung.TableDef, "FbDTABuchungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTAJournal{
/// <summary>
/// Gets the table definition for FbDTAJournal
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbDTAJournal", "", false); } }


/// <summary>
/// Primärschlüssel für FbDTAJournal Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbDTAJournalID { get { return new DBOColumnDef(FbDTAJournal.TableDef, "FbDTAJournalID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 512]
/// </summary>

public static DBOColumnDef FilePath { get { return new DBOColumnDef(FbDTAJournal.TableDef, "FilePath", typeof(string), false, false, false, 512, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef TotalBetrag { get { return new DBOColumnDef(FbDTAJournal.TableDef, "TotalBetrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TransferDatum { get { return new DBOColumnDef(FbDTAJournal.TableDef, "TransferDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDTAJournal_FbDTAZugang) => FbDTAZugang.FbDTAZugangID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbDTAZugangID { get { return new DBOColumnDef(FbDTAJournal.TableDef, "FbDTAZugangID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDTAJournal_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbDTAJournal.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Transferiert { get { return new DBOColumnDef(FbDTAJournal.TableDef, "Transferiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsdaten { get { return new DBOColumnDef(FbDTAJournal.TableDef, "Zahlungsdaten", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbDTAJournalTS { get { return new DBOColumnDef(FbDTAJournal.TableDef, "FbDTAJournalTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTAZugang{
/// <summary>
/// Gets the table definition for FbDTAZugang
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbDTAZugang", "", false); } }


/// <summary>
/// Primärschlüssel für FbDTAZugang Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbDTAZugangID { get { return new DBOColumnDef(FbDTAZugang.TableDef, "FbDTAZugangID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FbDTAZugang.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef VertragNr { get { return new DBOColumnDef(FbDTAZugang.TableDef, "VertragNr", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(FbDTAZugang.TableDef, "KontoNr", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDTAZugang_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(FbDTAZugang.TableDef, "BaBankID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbDTAZugang_FbTeam) => FbTeam.FbTeamID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(FbDTAZugang.TableDef, "FbTeamID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbDTAZugangTS { get { return new DBOColumnDef(FbDTAZugang.TableDef, "FbDTAZugangTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbKonto{
/// <summary>
/// Gets the table definition for FbKonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbKonto", "", false); } }


/// <summary>
/// Primärschlüssel für FbKonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbKontoID { get { return new DBOColumnDef(FbKonto.TableDef, "FbKontoID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbKonto_FbPeriode) => FbPeriode.FbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbPeriodeID { get { return new DBOColumnDef(FbKonto.TableDef, "FbPeriodeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KontoKlasseCode { get { return new DBOColumnDef(FbKonto.TableDef, "KontoKlasseCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KontoTypCode { get { return new DBOColumnDef(FbKonto.TableDef, "KontoTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(FbKonto.TableDef, "KontoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef KontoName { get { return new DBOColumnDef(FbKonto.TableDef, "KontoName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef EroeffnungsSaldo { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldo", typeof(decimal), false, false, false, 8, false, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SaldoGruppeName { get { return new DBOColumnDef(FbKonto.TableDef, "SaldoGruppeName", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbKonto_FbDTAZugang) => FbDTAZugang.FbDTAZugangID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbDTAZugangID { get { return new DBOColumnDef(FbKonto.TableDef, "FbDTAZugangID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbKontoTS { get { return new DBOColumnDef(FbKonto.TableDef, "FbKontoTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbDepotNr { get { return new DBOColumnDef(FbKonto.TableDef, "FbDepotNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsSaldoModifier { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldoModifier", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsSaldoModified { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldoModified", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsSaldoCreator { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldoCreator", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsSaldoCreated { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldoCreated", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsSaldo_AtCreation { get { return new DBOColumnDef(FbKonto.TableDef, "EroeffnungsSaldo_AtCreation", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbKreditor{
/// <summary>
/// Gets the table definition for FbKreditor
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbKreditor", "", false); } }


/// <summary>
/// Primärschlüssel für FbKreditor Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbKreditorID { get { return new DBOColumnDef(FbKreditor.TableDef, "FbKreditorID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FbKreditor.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KurzName { get { return new DBOColumnDef(FbKreditor.TableDef, "KurzName", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(FbKreditor.TableDef, "Zusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(FbKreditor.TableDef, "Strasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(FbKreditor.TableDef, "PLZ", typeof(string), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(FbKreditor.TableDef, "Ort", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(FbKreditor.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufwandKonto { get { return new DBOColumnDef(FbKreditor.TableDef, "AufwandKonto", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(FbKreditor.TableDef, "BaLandID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbKreditor.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbKreditor.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbKreditor.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbKreditor.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbKreditorTS { get { return new DBOColumnDef(FbKreditor.TableDef, "FbKreditorTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbPeriode{
/// <summary>
/// Gets the table definition for FbPeriode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbPeriode", "", false); } }


/// <summary>
/// Primärschlüssel für FbPeriode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbPeriodeID { get { return new DBOColumnDef(FbPeriode.TableDef, "FbPeriodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbPeriode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FbPeriode.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum an welchem die Periode beginnt
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef PeriodeVon { get { return new DBOColumnDef(FbPeriode.TableDef, "PeriodeVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Datum an welchem die Periode endet
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef PeriodeBis { get { return new DBOColumnDef(FbPeriode.TableDef, "PeriodeBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Status der Periode - LOV FbPeriodeStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PeriodeStatusCode { get { return new DBOColumnDef(FbPeriode.TableDef, "PeriodeStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbPeriode_FbTeam) => FbTeam.FbTeamID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(FbPeriode.TableDef, "FbTeamID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Ablageort der Belege pro Periode - LOV FbJournalablageort
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JournalablageortCode { get { return new DBOColumnDef(FbPeriode.TableDef, "JournalablageortCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbPeriodeTS { get { return new DBOColumnDef(FbPeriode.TableDef, "FbPeriodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbTeam{
/// <summary>
/// Gets the table definition for FbTeam
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbTeam", "", false); } }


/// <summary>
/// Primärschlüssel für FbTeam Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(FbTeam.TableDef, "FbTeamID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FbTeam.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbTeamTS { get { return new DBOColumnDef(FbTeam.TableDef, "FbTeamTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbTeamMitglied{
/// <summary>
/// Gets the table definition for FbTeamMitglied
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbTeamMitglied", "", false); } }


/// <summary>
/// Primärschlüssel für FbTeamMitglied Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(FbTeamMitglied.TableDef, "FbTeamID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für FbTeamMitglied Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FbTeamMitglied.TableDef, "UserID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef StandardBereich { get { return new DBOColumnDef(FbTeamMitglied.TableDef, "StandardBereich", typeof(bool), false, false, false, 1, false, "(1)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef DepotBereich { get { return new DBOColumnDef(FbTeamMitglied.TableDef, "DepotBereich", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbTeamMitgliedTS { get { return new DBOColumnDef(FbTeamMitglied.TableDef, "FbTeamMitgliedTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class FbZahlungsweg{
/// <summary>
/// Gets the table definition for FbZahlungsweg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FbZahlungsweg", "", false); } }


/// <summary>
/// Primärschlüssel für FbZahlungsweg Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FbZahlungswegID { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "FbZahlungswegID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbZahlungsweg_FbKreditor) => FbKreditor.FbKreditorID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FbKreditorID { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "FbKreditorID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_FbZahlungsweg_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "BaBankID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Konto-Nr des Kreditors im internationalen Format.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBAN { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "IBAN", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungsArtCode { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "ZahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsfrist { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "Zahlungsfrist", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegBankKontoNr { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "BelegBankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IsActive { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "IsActive", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbZahlungswegTS { get { return new DBOColumnDef(FbZahlungsweg.TableDef, "FbZahlungswegTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die optionalen Dienstleistungen für die Zuweisung zu den Dienstleistungspaketen
/// </summary>

public static class FsDienstleistung{
/// <summary>
/// Gets the table definition for FsDienstleistung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FsDienstleistung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FsDienstleistungID { get { return new DBOColumnDef(FsDienstleistung.TableDef, "FsDienstleistungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Name/Bezeichnung der Dienstleistung
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FsDienstleistung.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Standardaufwand in Stunden pro Monat und Dienstleistung
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef StandardAufwand { get { return new DBOColumnDef(FsDienstleistung.TableDef, "StandardAufwand", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FsDienstleistung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FsDienstleistung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FsDienstleistung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FsDienstleistung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FsDienstleistungTS { get { return new DBOColumnDef(FsDienstleistung.TableDef, "FsDienstleistungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle für Zuweisung von Dienstleistungen zu Dienstleistungspaketen
/// </summary>

public static class FsDienstleistung_FsDienstleistungspaket{
/// <summary>
/// Gets the table definition for FsDienstleistung_FsDienstleistungspaket
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FsDienstleistung_FsDienstleistungspaket", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FsDienstleistung_FsDienstleistungspaketID { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "FsDienstleistung_FsDienstleistungspaketID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FsDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FsDienstleistungID { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "FsDienstleistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FsDienstleistungspaket
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FsDienstleistungspaketID { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "FsDienstleistungspaketID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FsDienstleistung_FsDienstleistungspaketTS { get { return new DBOColumnDef(FsDienstleistung_FsDienstleistungspaket.TableDef, "FsDienstleistung_FsDienstleistungspaketTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für Dienstleistungspakete, zum optionalen Gruppieren von Dienstleistungen.
/// </summary>

public static class FsDienstleistungspaket{
/// <summary>
/// Gets the table definition for FsDienstleistungspaket
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FsDienstleistungspaket", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FsDienstleistungspaketID { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "FsDienstleistungspaketID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Name/Bezeichnung des Dienstleistungspakets
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Maximale Laufzeit vom Dienstleistungspaket. Die Einheit ist Monat. Es ist die maximale Dauer einer Phase (Intake, Beratungsphase ...).
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MaximaleLaufzeit { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "MaximaleLaufzeit", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FsDienstleistungspaketTS { get { return new DBOColumnDef(FsDienstleistungspaket.TableDef, "FsDienstleistungspaketTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für die Fallarbeitszeit-Reduktionen. Diese werden benötigt, um von der verfügbaren Zeit eines MA statische oder berechnete Stunden pro Monat abzuziehen und anschliessend als Rest die Fallarbezeitszeit auszugeben.
/// </summary>

public static class FsReduktion{
/// <summary>
/// Gets the table definition for FsReduktion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FsReduktion", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FsReduktionID { get { return new DBOColumnDef(FsReduktion.TableDef, "FsReduktionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf Tabelle BDELeistungsart. Ist im Idealfall eine 1 zu 1 Beziehung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(FsReduktion.TableDef, "BDELeistungsartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Name/Bezeichnung des Reduktion
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(FsReduktion.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Standardaufwand welcher dieser Reduktion für die MA generiert. Einheit: Stunden pro Monat.
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef StandardAufwand { get { return new DBOColumnDef(FsReduktion.TableDef, "StandardAufwand", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Flag, ob der Reduktion (konkret der StandardAuwand) in Abhängigkeit des Beschäftigungsgrades des MA berechnet werden muss oder konstant für alle MA gleich ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AbhaengigVonBG { get { return new DBOColumnDef(FsReduktion.TableDef, "AbhaengigVonBG", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FsReduktion.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FsReduktion.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FsReduktion.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FsReduktion.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FsReduktionTS { get { return new DBOColumnDef(FsReduktion.TableDef, "FsReduktionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Speichern der ReduktionZeiten pro User
/// </summary>

public static class FsReduktionMitarbeiter{
/// <summary>
/// Gets the table definition for FsReduktionMitarbeiter
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FsReduktionMitarbeiter", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FsReduktionMitarbeiterID { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "FsReduktionMitarbeiterID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Tabelle FsReduktion
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FsReduktionID { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "FsReduktionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Tabelle XUser
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Die Zeit aus dem zugrundeliegenden Reduktion. Einheit: Stunden pro Monat
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef OriginalReduktionZeit { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "OriginalReduktionZeit", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Die für diesen User angepasste Zeit des Reduktions. Einheit: Stunden pro Monat
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AngepassteReduktionZeit { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "AngepassteReduktionZeit", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der Monat für welcher dieser Reduktion gültig ist. Einheit: Stunden pro Monat
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Monat", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Das Jahr als Teil des Zeitraums in welchem der Reduktion gültig ist
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FsReduktionMitarbeiterTS { get { return new DBOColumnDef(FsReduktionMitarbeiter.TableDef, "FsReduktionMitarbeiterTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet zusätzliche Informationen eines Gesuchs
/// </summary>

public static class GvAbklaerendeStelle{
/// <summary>
/// Gets the table definition for GvAbklaerendeStelle
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvAbklaerendeStelle", "", false); } }


/// <summary>
/// Primärschlüssel für GvAbklaerendeStelle Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvAbklaerendeStelleID { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "GvAbklaerendeStelleID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAbklaerendeStelle_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAbklaerendeStelle_BaZahlungsweg) => BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeantragendeStelle { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "BeantragendeStelle", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktperson { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Kontaktperson", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Strasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Zusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Region { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Region", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Telefon", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Email { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Email", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile1 { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "MitteilungZeile1", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile2 { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "MitteilungZeile2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile3 { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "MitteilungZeile3", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile4 { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "MitteilungZeile4", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsinstruktion { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Zahlungsinstruktion", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvAbklaerendeStelleTS { get { return new DBOColumnDef(GvAbklaerendeStelle.TableDef, "GvAbklaerendeStelleTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Positionen eines Antrags in der Gesuchverwaltung
/// </summary>

public static class GvAntragPosition{
/// <summary>
/// Gets the table definition for GvAntragPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvAntragPosition", "", false); } }


/// <summary>
/// Primärschlüssel für GvAntragPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvAntragPositionID { get { return new DBOColumnDef(GvAntragPosition.TableDef, "GvAntragPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAntragPosition_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvAntragPosition.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV GvAntragPositionTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvAntragPositionTypCode { get { return new DBOColumnDef(GvAntragPosition.TableDef, "GvAntragPositionTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Beinhaltet Text in "Kostenbezeichnung" bzw. "Quelle"
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Bezeichnung", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Betrag der Position
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvAntragPosition.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvAntragPositionTS { get { return new DBOColumnDef(GvAntragPosition.TableDef, "GvAntragPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Auflagen-Informationen zu einem Gesuch
/// </summary>

public static class GvAuflage{
/// <summary>
/// Gets the table definition for GvAuflage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvAuflage", "", false); } }


/// <summary>
/// Primärschlüssel für GvAuflage Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvAuflageID { get { return new DBOColumnDef(GvAuflage.TableDef, "GvAuflageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAuflage_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvAuflage.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV GvAuflageTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvAuflageTypCode { get { return new DBOColumnDef(GvAuflage.TableDef, "GvAuflageTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum der Erfassung
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Erfasst { get { return new DBOColumnDef(GvAuflage.TableDef, "Erfasst", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Gegenstand der Auflage
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Gegenstand { get { return new DBOColumnDef(GvAuflage.TableDef, "Gegenstand", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Betrag der Auflage
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Faelligkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Faellig { get { return new DBOColumnDef(GvAuflage.TableDef, "Faellig", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Gibt an, ob es sich um eine schriftliche Verpflichtung handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SchriftlicheVerpflichtung { get { return new DBOColumnDef(GvAuflage.TableDef, "SchriftlicheVerpflichtung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Gibt an, ob die Auflage erledigt wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Erledigt { get { return new DBOColumnDef(GvAuflage.TableDef, "Erledigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Gibt an, ob die Auflage erlassen wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Erlassen { get { return new DBOColumnDef(GvAuflage.TableDef, "Erlassen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(GvAuflage.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Erlassungsgrund { get { return new DBOColumnDef(GvAuflage.TableDef, "Erlassungsgrund", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate1Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate1Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate1Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate1Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate2Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate2Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate2Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate2Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate3Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate3Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate3Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate3Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate4Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate4Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate4Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate4Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate5Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate5Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate5Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate5Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate6Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate6Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate6Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate6Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate7Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate7Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate7Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate7Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate8Betrag { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate8Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rate8Datum { get { return new DBOColumnDef(GvAuflage.TableDef, "Rate8Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvAuflage.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvAuflage.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvAuflage.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvAuflage.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvAuflageTS { get { return new DBOColumnDef(GvAuflage.TableDef, "GvAuflageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Auszahlungspositionen in der Gesuchverwaltung
/// </summary>

public static class GvAuszahlungPosition{
/// <summary>
/// Gets the table definition for GvAuszahlungPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvAuszahlungPosition", "", false); } }


/// <summary>
/// Primärschlüssel für GvAuszahlungPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionID { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvAuszahlungPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_GvPositionsart) => GvPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvPositionsartID { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvPositionsartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_BaZahlungsweg) => BgZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "BaZahlungswegID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Betrag der GvAuszahlungPosition
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Valutadatum (wenn nur eines vorhanden, ansonsten in GvAuszahlungPositionValuta)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ReferenzNummer (Zahlinfo)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Freitextfeld für Zahlungsinstruktionen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsinstruktion { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Zahlungsinstruktion", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// LOV GvAuszahlungTerminArt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvAuszahlungTerminArtCode { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvAuszahlungTerminArtCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// LOV GvAuszahlungArt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvAuszahlungArtCode { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvAuszahlungArtCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Statuscode der GvAuszahlungPosition
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionStatusCode { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvAuszahlungPositionStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Mitteilungszeile 1, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile1 { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "MitteilungZeile1", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// Mitteilungszeile 2, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile2 { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "MitteilungZeile2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// Mitteilungszeile 3, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile3 { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "MitteilungZeile3", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// Mitteilungszeile 4, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile4 { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "MitteilungZeile4", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// Buchungstext, Feld für zusätzliche Kommentare zur Buchung
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BuchungsText { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "BuchungsText", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionTS { get { return new DBOColumnDef(GvAuszahlungPosition.TableDef, "GvAuszahlungPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Valuta-Auszahlungspositionen in der Gesuchverwaltung
/// </summary>

public static class GvAuszahlungPositionValuta{
/// <summary>
/// Gets the table definition for GvAuszahlungPositionValuta
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvAuszahlungPositionValuta", "", false); } }


/// <summary>
/// Primärschlüssel für GvAuszahlungPositionValuta Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionValutaID { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "GvAuszahlungPositionValutaID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPositionValuta_GvAuszahlungPosition) => GvAuszahlungPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionID { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "GvAuszahlungPositionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionValutaTS { get { return new DBOColumnDef(GvAuszahlungPositionValuta.TableDef, "GvAuszahlungPositionValutaTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu Bewilligungen in der Gesuchverwaltung
/// </summary>

public static class GvBewilligung{
/// <summary>
/// Gets the table definition for GvBewilligung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvBewilligung", "", false); } }


/// <summary>
/// Primärschlüssel für GvBewilligung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvBewilligungID { get { return new DBOColumnDef(GvBewilligung.TableDef, "GvBewilligungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvBewilligung_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvBewilligung.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvBewilligung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(GvBewilligung.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV GvBewilligung
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvBewilligungCode { get { return new DBOColumnDef(GvBewilligung.TableDef, "GvBewilligungCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvBewilligung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvBewilligung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvBewilligung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvBewilligung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvBewilligungTS { get { return new DBOColumnDef(GvBewilligung.TableDef, "GvBewilligungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den Dokumenten eines Gesuchs in der Gesuchverwaltung
/// </summary>

public static class GvDocument{
/// <summary>
/// Gets the table definition for GvDocument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvDocument", "", false); } }


/// <summary>
/// Primärschlüssel für GvDocument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvDocumentID { get { return new DBOColumnDef(GvDocument.TableDef, "GvDocumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvDocument_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvDocument.TableDef, "GvGesuchID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Autor, Fremdschlüssel (FK_GvDocument_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(GvDocument.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Adressat, Fremdschlüssel (FK_GvDocument_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(GvDocument.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Adressat, Fremdschlüssel (FK_GvDocument_BaInstitution) => BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(GvDocument.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// XDocumenteintrag, Fremdschlüssel auf XDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(GvDocument.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Stichworte für einfache Suche
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Stichworte { get { return new DBOColumnDef(GvDocument.TableDef, "Stichworte", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Bemerkungen zu dem Dokument
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(GvDocument.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datum des Dokuments
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(GvDocument.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvDocument.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvDocument.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvDocument.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvDocument.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvDocumentTS { get { return new DBOColumnDef(GvDocument.TableDef, "GvDocumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Information auf CtlFaFinanzgesuche
/// </summary>

public static class GvDokumenteInformation{
/// <summary>
/// Gets the table definition for GvDokumenteInformation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvDokumenteInformation", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvDokumenteInformationID { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "GvDokumenteInformationID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaPerson (Unique Index: IX_GvDokumenteInformation_BaPersonID)
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Der Informationstext
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Information { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "Information", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvDokumenteInformationTS { get { return new DBOColumnDef(GvDokumenteInformation.TableDef, "GvDokumenteInformationTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den Fonds in der Gesuchverwaltung
/// </summary>

public static class GvFonds{
/// <summary>
/// Gets the table definition for GvFonds
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvFonds", "", false); } }


/// <summary>
/// Primärschlüssel für GvFonds Records (nach Primärschlüssel-Standards
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvFondsID { get { return new DBOColumnDef(GvFonds.TableDef, "GvFondsID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(GvFonds.TableDef, "KbZahlungskontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fonds DatumVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(GvFonds.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fonds DatumBis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(GvFonds.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Kurze Version der Bezeichnung des Fonds. Wird typischerweise in Controls verwendet zur Auswahl eines Fonds.
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef NameKurz { get { return new DBOColumnDef(GvFonds.TableDef, "NameKurz", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Vollständige Bezeichnung des Fonds. Wird typischerweise in Reports verwendet.
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef NameLang { get { return new DBOColumnDef(GvFonds.TableDef, "NameLang", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// Hinweis zur Verwendung des Fonds.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(GvFonds.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// ID für die Übersetzung des Felds Bemerkung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungTID { get { return new DBOColumnDef(GvFonds.TableDef, "BemerkungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV GvFondsTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvFondsTypCode { get { return new DBOColumnDef(GvFonds.TableDef, "GvFondsTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Ist schweizerische oder kantonalische Fonds
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstCH { get { return new DBOColumnDef(GvFonds.TableDef, "IstCH", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvFonds.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvFonds.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvFonds.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvFonds.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvFondsTS { get { return new DBOColumnDef(GvFonds.TableDef, "GvFondsTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle für GvFonds sowie XOrgUnit
/// </summary>

public static class GvFonds_XOrgUnit{
/// <summary>
/// Gets the table definition for GvFonds_XOrgUnit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvFonds_XOrgUnit", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvFonds_XOrgUnitID { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "GvFonds_XOrgUnitID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu GvFonds Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvFondsID { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "GvFondsID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XOrgUnit Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "OrgUnitID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Zeitstempfel für das Erstellen des Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvFonds_XOrgUnitTS { get { return new DBOColumnDef(GvFonds_XOrgUnit.TableDef, "GvFonds_XOrgUnitTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen für Gesuche
/// </summary>

public static class GvGesuch{
/// <summary>
/// Gets the table definition for GvGesuch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvGesuch", "", false); } }


/// <summary>
/// Primärschlüssel für GvGesuch Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(GvGesuch.TableDef, "GvGesuchID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvGesuch_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(GvGesuch.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvGesuch_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XUserID_Autor { get { return new DBOColumnDef(GvGesuch.TableDef, "XUserID_Autor", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserIDBewilligt { get { return new DBOColumnDef(GvGesuch.TableDef, "UserIDBewilligt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// FK auf GvDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(GvGesuch.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvGesuch_GvFond) => GvFondsID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvFondsID { get { return new DBOColumnDef(GvGesuch.TableDef, "GvFondsID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// GvGesuch_ErfasstesGesuchgeprueftdurchIKS_UserID (Fremdschlüssel FK_GvGesuch_ErfasstesGesuchgeprueftdurchIKS_UserID) => UserID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ErfasstesGesuchgeprueftdurchIKS_UserID { get { return new DBOColumnDef(GvGesuch.TableDef, "ErfasstesGesuchgeprueftdurchIKS_UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// GvGesuch_AbgeschlossenesGesuchdurchIKS_UserID (Fremdschlüssel FK_GvGesuch_AbgeschlossenesGesuchdurchIKS_UserID) => UserID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef AbgeschlossenesGesuchdurchIKS_UserID { get { return new DBOColumnDef(GvGesuch.TableDef, "AbgeschlossenesGesuchdurchIKS_UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// LOV GvStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvStatusCode { get { return new DBOColumnDef(GvGesuch.TableDef, "GvStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Gesuchs
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GesuchsDatum { get { return new DBOColumnDef(GvGesuch.TableDef, "GesuchsDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Datum der Erfassung (Abschluss)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfassungAbgeschlossen { get { return new DBOColumnDef(GvGesuch.TableDef, "ErfassungAbgeschlossen", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBewilligt { get { return new DBOColumnDef(GvGesuch.TableDef, "BetragBewilligt", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Bewilligung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtAm { get { return new DBOColumnDef(GvGesuch.TableDef, "BewilligtAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Begruendung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(GvGesuch.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Kleine Bemerkung zum Gesuch
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(GvGesuch.TableDef, "Bemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Von Kompetenzstufe 1 bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBewilligtKompetenzstufe1 { get { return new DBOColumnDef(GvGesuch.TableDef, "BetragBewilligtKompetenzstufe1", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Bewillgung durch Kompetenzstufe 1
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBewilligtKompetenzstufe1 { get { return new DBOColumnDef(GvGesuch.TableDef, "DatumBewilligtKompetenzstufe1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkung zur Bewilligung durch Kompetenzstufe 1
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungBewilligungKompetenzstufe1 { get { return new DBOColumnDef(GvGesuch.TableDef, "BemerkungBewilligungKompetenzstufe1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Von Kompetenzstufe 2 bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBewilligtKompetenzstufe2 { get { return new DBOColumnDef(GvGesuch.TableDef, "BetragBewilligtKompetenzstufe2", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Bewillgung durch Kompetenzstufe 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBewilligtKompetenzstufe2 { get { return new DBOColumnDef(GvGesuch.TableDef, "DatumBewilligtKompetenzstufe2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkung zur Bewilligung durch Kompetenzstufe 2
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungBewilligungKompetenzstufe2 { get { return new DBOColumnDef(GvGesuch.TableDef, "BemerkungBewilligungKompetenzstufe2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datum, wann das Gesuch abgeschlossen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(GvGesuch.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Grund, weshalb das Gesuch abgeschlossen wurde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GvAbschlussgrundCode { get { return new DBOColumnDef(GvGesuch.TableDef, "GvAbschlussgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Grund des Gesuchs
/// [DataType: VARCHAR]
/// [Length: 40]
/// </summary>

public static DBOColumnDef Gesuchsgrund { get { return new DBOColumnDef(GvGesuch.TableDef, "Gesuchsgrund", typeof(string), false, false, false, 40, false, "", ""); } }


/// <summary>
/// Info Flag zum wissen ob das Gesuch Eigenkompetenz ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstEigenkompetenz { get { return new DBOColumnDef(GvGesuch.TableDef, "IstEigenkompetenz", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Info Flag zum wissen ob das Gesuch Kompetenz BSL ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstKompetenzBsl { get { return new DBOColumnDef(GvGesuch.TableDef, "IstKompetenzBsl", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Info Flag zum wissen ob das Gesuch Kompetenz Kanton FLB-Ko/KK ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstKompetenzKanton { get { return new DBOColumnDef(GvGesuch.TableDef, "IstKompetenzKanton", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Info Flag, ob das Gesuch extern ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Extern { get { return new DBOColumnDef(GvGesuch.TableDef, "Extern", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// ErfasstesGesuchgeprueftam
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfasstesGesuchgeprueftam { get { return new DBOColumnDef(GvGesuch.TableDef, "ErfasstesGesuchgeprueftam", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ErfasstesGesuchBesprechen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ErfasstesGesuchBesprechen { get { return new DBOColumnDef(GvGesuch.TableDef, "ErfasstesGesuchBesprechen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// ErfasstesGesuchBemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfasstesGesuchBemerkung { get { return new DBOColumnDef(GvGesuch.TableDef, "ErfasstesGesuchBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// AbgeschlossenesGesuchgeprueftam
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbgeschlossenesGesuchgeprueftam { get { return new DBOColumnDef(GvGesuch.TableDef, "AbgeschlossenesGesuchgeprueftam", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// AbgeschlossenesGesuchBesprechen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AbgeschlossenesGesuchBesprechen { get { return new DBOColumnDef(GvGesuch.TableDef, "AbgeschlossenesGesuchBesprechen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// AbgeschlossenesGesuchBemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbgeschlossenesGesuchBemerkung { get { return new DBOColumnDef(GvGesuch.TableDef, "AbgeschlossenesGesuchBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvGesuch.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvGesuch.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvGesuch.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvGesuch.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvGesuchTS { get { return new DBOColumnDef(GvGesuch.TableDef, "GvGesuchTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Positionsarten in der Gesuchverwaltung
/// </summary>

public static class GvPositionsart{
/// <summary>
/// Gets the table definition for GvPositionsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("GvPositionsart", "", false); } }


/// <summary>
/// Primärschlüssel für GvPositionsart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef GvPositionsartID { get { return new DBOColumnDef(GvPositionsart.TableDef, "GvPositionsartID", typeof(int), true, true, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvPositionsart_GvPositionsartID_CopyOf) => GvPositionsartID_CopyOf
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvPositionsartID_CopyOf { get { return new DBOColumnDef(GvPositionsart.TableDef, "GvPositionsartID_CopyOf", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_GvPositionsart_BgKostenart) => BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(GvPositionsart.TableDef, "BgKostenartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Bezeichnung der GvPositionsart
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(GvPositionsart.TableDef, "Bezeichnung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// ID für die Übersetzung der Bezeichnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungTID { get { return new DBOColumnDef(GvPositionsart.TableDef, "BezeichnungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum, ab wann die Positionsart gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(GvPositionsart.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum, bis wann die Positionsart gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(GvPositionsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Flag, ob es sich bei der Positionsart um eine für alle zugängliche oder eine nur für die Hauptstelle zugängliche handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HSOnly { get { return new DBOColumnDef(GvPositionsart.TableDef, "HSOnly", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob es sich bei der Positionsart um FLB oder eine interne nicht FLB handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsFLB { get { return new DBOColumnDef(GvPositionsart.TableDef, "IsFLB", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(GvPositionsart.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(GvPositionsart.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(GvPositionsart.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(GvPositionsart.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GvPositionsartTS { get { return new DBOColumnDef(GvPositionsart.TableDef, "GvPositionsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BaAdresse{
/// <summary>
/// Gets the table definition for Hist_BaAdresse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BaAdresse", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BaAdresseID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "BaAdresseID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlatzierungInstID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "PlatzierungInstID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmMandantID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "VmMandantID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebKontaktID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "KaBetriebKontaktID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "BaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef AusEinwohnerregister { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "AusEinwohnerregister", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Gesperrt { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Gesperrt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "AdresseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CareOf { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "CareOf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Zusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuhandenVon { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "ZuhandenVon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StrasseCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "StrasseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionName { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "InstitutionName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlatzierungsartCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "PlatzierungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnStatusCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "WohnStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnungsgroesseCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "WohnungsgroesseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef QuartierCode { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "QuartierCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BaAdresse.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BaPerson{
/// <summary>
/// Gets the table definition for Hist_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BaPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BaPersonID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StatusPersonCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "StatusPersonCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Titel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FruehererName { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "FruehererName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname2 { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Vorname2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sterbedatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Sterbedatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HaushaltVersicherungsNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HaushaltVersicherungsNummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "NNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFFNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BFFNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZARNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZARNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZIPNr { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZIPNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KantonaleReferenznummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KantonaleReferenznummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZivilstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZivilstandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HeimatgemeindeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeCodes { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HeimatgemeindeCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NationalitaetCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "NationalitaetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReligionCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ReligionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AuslaenderStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusGueltigBis { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AuslaenderStatusGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_P { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Telefon_P", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_G { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Telefon_G", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MobilTel1 { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MobilTel1", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MobilTel2 { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MobilTel2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Unterstuetzt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Unterstuetzt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Fiktiv { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Fiktiv", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinwohnerregisterAktiv { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "EinwohnerregisterAktiv", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinwohnerregisterID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "EinwohnerregisterID", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschVerstehenCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DeutschVerstehenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WichtigerHinweisCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WichtigerHinweisCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtPLZ { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrtCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtKanton { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtLandCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtSeitGeburt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugKtSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdePLZ { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrtCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeKanton { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeLandCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeSeitGeburt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZuzugGdeSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzPLZ { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UntWohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzOrt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UntWohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzKanton { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UntWohnsitzKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzLandCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UntWohnsitzLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugPLZ { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrtCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugKanton { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugLandCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WegzugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzWieBaPersonID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WohnsitzWieBaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWieBaInstitutionID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AufenthaltWieBaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbssituationCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ErwerbssituationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit1Code { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "GrundTeilzeitarbeit1Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundTeilzeitarbeit2Code { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "GrundTeilzeitarbeit2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaGrundNichtErwerbstaetigCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BaGrundNichtErwerbstaetigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErwerbsBrancheCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ErwerbsBrancheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErlernterBerufCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ErlernterBerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerufCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HoechsteAusbildungCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HoechsteAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbgebrocheneAusbildungCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AbgebrocheneAusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitSpezFaehigkeiten { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ArbeitSpezFaehigkeiten", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KbKostenstelleID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InCHSeit { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "InCHSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef InCHSeitGeburt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "InCHSeitGeburt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PUAnzahlVerlustscheine { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PUAnzahlVerlustscheine", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PUKrankenkasse { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PUKrankenkasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PraemienuebernahmeVon { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PraemienuebernahmeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PraemienuebernahmeBis { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PraemienuebernahmeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PersonOhneLeistung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PersonOhneLeistung", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef HCMCFluechtling { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HCMCFluechtling", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StellensuchendCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "StellensuchendCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ResoNr { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ResoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NEAnmeldung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "NEAnmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeBaGemeindeID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HeimatgemeindeBaGemeindeID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AktiveKopfQuote { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AktiveKopfQuote", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ALK { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ALK", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AndereSVLeistungen { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AndereSVLeistungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Anrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusbildungCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "AusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Behinderungsart2Code { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Behinderungsart2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungenAdresse { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BemerkungenAdresse", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungenSV { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BemerkungenSV", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef BeruflicheMassnahmeIV { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BeruflicheMassnahmeIV", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// Briefanrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Briefanrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BSVBehinderungsartCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BSVBehinderungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef BVGRente { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BVGRente", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CAusweisDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "CAusweisDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientenkontoNr { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KlientenkontoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DebitorNr { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DebitorNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DebitorUpdate { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DebitorUpdate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef EigenerMietvertrag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "EigenerMietvertrag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einrichtpauschale { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Einrichtpauschale", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinrichtungspauschaleCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "EinrichtungspauschaleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ErgaenzungsLeistungen { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ErgaenzungsLeistungen", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Assistenzbeitrag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Assistenzbeitrag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAssistenzbeitrag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DatumAssistenzbeitrag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IvVerfuegteAssistenzberatung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IvVerfuegteAssistenzberatung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumIvVerfuegung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DatumIvVerfuegung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErteilungVA { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ErteilungVA", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Checkbox FAZ für Familiennachzug (CAR/SRK spezifisch)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IstFamiliennachzug { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IstFamiliennachzug", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HauptBehinderungsartCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HauptBehinderungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Wird von PI auf eine HELB Anmeldung verzichtet, so wird dieses Flag auf True gesetzt und die anderen HELB-Felder geleert
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef HELBKeinAntrag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HELBKeinAntrag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HELBAb { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HELBAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HELBAnmeldung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HELBAnmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum, wann der Entscheid für oder gegen HELB getroffen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HELBEntscheid { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HELBEntscheid", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HELBEntscheidCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HELBEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HilfslosenEntschaedigungCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "HilfslosenEntschaedigungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ImKantonSeit { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ImKantonSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ImKantonSeitGeburt { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ImKantonSeitGeburt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InGemeindeSeit { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "InGemeindeSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IntensivPflegeZuschlagCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IntensivPflegeZuschlagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVBerechtigungAnfangsStatusCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVBerechtigungAnfangsStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVBerechtigungErsterEntscheidAb { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVBerechtigungErsterEntscheidAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVBerechtigungErsterEntscheidCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVBerechtigungErsterEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVBerechtigungZweiterEntscheidAb { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVBerechtigungZweiterEntscheidAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVBerechtigungZweiterEntscheidCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVBerechtigungZweiterEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IVGrad { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVGrad", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IVHilfsmittel { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVHilfsmittel", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IVTaggeld { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IVTaggeld", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// Flag, ob eine Person Serienbriefe erhalten soll oder nicht (0=Serienbrief, 1=kein Serienbrief)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KeinSerienbrief", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KonfessionCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KonfessionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KontoFuehrung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KontoFuehrung", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// BaPersonID des Dossierträgers. Fremdschlüssel (FK_BaPerson_BaPerson_Dossiertraeger) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: CAR]
/// </summary>

public static DBOColumnDef BaPersonID_Dossiertraeger { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "BaPersonID_Dossiertraeger", typeof(System.Nullable<int>), false, false, false, 4, true, "", "CAR"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kopfquote_BaInstitutionID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Kopfquote_BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopfquoteAbDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KopfquoteAbDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopfquoteBisDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KopfquoteBisDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Code für die Erfassung der Korrespondenzsprache, betrifft LOV: BaKorrespondenzSprache
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KorrespondenzSpracheCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KorrespondenzSpracheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KTG { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "KTG", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef LaufendeVollmachtErlaubnis { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "LaufendeVollmachtErlaubnis", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ManuelleAnrede", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// Neues Feld für medizinische Massnahmen IV. Nur für PI (siehe Ticket: #5022)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MedizinischeMassnahmeIV { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MedizinischeMassnahmeIV", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Mehrfachbehinderung { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Mehrfachbehinderung", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MietdepotPI { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MietdepotPI", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MobilTel { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "MobilTel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NavigatorZusatz { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "NavigatorZusatz", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PassiveKopfQuote { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PassiveKopfQuote", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PauschaleAktualDatum { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PauschaleAktualDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PersonSichtbarSDFlag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "PersonSichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProjNr { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ProjNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RentenstufeCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "RentenstufeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Sozialhilfe { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Sozialhilfe", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sprachpauschale { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Sprachpauschale", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Testperson { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Testperson", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzOrtCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UntWohnsitzOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef UVGRente { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UVGRente", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef UVGTaggeld { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "UVGTaggeld", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerstaendigungSprachCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "VerstaendigungSprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Aus der Migration von VIS nach KiSS: Spezifische VIS-Access-DB, welche als Quelle für den Datensatz diente
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36Area { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "visdat36Area", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Aus der Migration von VIS nach KiSS: ID in der Area-spezifischen VIS-Access-DB
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36ID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "visdat36ID", typeof(string), false, false, false, 6, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VormundMassnahmenCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "VormundMassnahmenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef VormundPI { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "VormundPI", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WichtigerHinweis { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WichtigerHinweis", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// Wittwen-, Wittwer-, Waisenrente
/// [DataType: BIT]
/// [Length: 1]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef WittwenWittwerWaisenrente { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WittwenWittwerWaisenrente", typeof(bool), false, false, false, 1, false, "", "PI"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnstatusCode { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "WohnstatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ZeigeDetails { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZeigeDetails", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ZeigeTelGeschaeft { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZeigeTelGeschaeft", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ZeigeTelMobil { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZeigeTelMobil", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ZeigeTelPrivat { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZeigeTelPrivat", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZEMISNummer { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "ZEMISNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IstBerechnungsperson { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "IstBerechnungsperson", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAsylgesuch { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DatumAsylgesuch", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEinbezugFaz { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "DatumEinbezugFaz", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BaPerson.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDEFerienkuerzungen_XUser{
/// <summary>
/// Gets the table definition for Hist_BDEFerienkuerzungen_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BDEFerienkuerzungen_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "UserID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "Jahr", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FerienkuerzungStd { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "FerienkuerzungStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BDEFerienkuerzungen_XUser.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDELeistung{
/// <summary>
/// Gets the table definition for Hist_BDELeistung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BDELeistung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "BDELeistungsartID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KostenstelleOrgUnitID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "KostenstelleOrgUnitID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dauer { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Dauer", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anzahl { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Anzahl", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LohnartCode { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "LohnartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Bemerkung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KeinExport { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "KeinExport", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HistKostentraeger { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "HistKostentraeger", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HistKostenstelle { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "HistKostenstelle", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HistKostenart { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "HistKostenart", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HistMandantNr { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "HistMandantNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Freigegeben", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Visiert { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Visiert", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "VerbuchtLD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Fakturiert { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "Fakturiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BDELeistungID { get { return new DBOColumnDef(Hist_BDELeistung.TableDef, "BDELeistungID", typeof(int), false, false, true, 4, false, "((-1))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDELeistungsart{
/// <summary>
/// Gets the table definition for Hist_BDELeistungsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BDELeistungsart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BDELeistungsartID { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "BDELeistungsartID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungTID { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "BezeichnungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientErfassungCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KlientErfassungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzahlCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "AnzahlCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtikelNr { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "ArtikelNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef LeistungsartTypCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "LeistungsartTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KostenartCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KostenartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRStandard { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KTRStandard", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRIV { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KTRIV", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRAHV { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KTRAHV", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KTRNichtberechtigte { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "KTRNichtberechtigte", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beschreibung { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "Beschreibung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswDienstleistungCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "AuswDienstleistungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswFakturaCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "AuswFakturaCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswProduktCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "AuswProduktCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswPIAuftragCode { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "AuswPIAuftragCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BDELeistungsart.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDESollStundenProJahr_XUser{
/// <summary>
/// Gets the table definition for Hist_BDESollStundenProJahr_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_BDESollStundenProJahr_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BDESollStundenProJahr_XUserID { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "BDESollStundenProJahr_XUserID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JanuarStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "JanuarStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FebruarStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "FebruarStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MaerzStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "MaerzStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef AprilStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "AprilStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MaiStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "MaiStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JuniStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "JuniStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef JuliStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "JuliStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef AugustStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "AugustStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef SeptemberStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "SeptemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef OktoberStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "OktoberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef NovemberStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "NovemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DezemberStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "DezemberStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef TotalStd { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "TotalStd", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ManualEdit { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "ManualEdit", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_BDESollStundenProJahr_XUser.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XOrgUnit{
/// <summary>
/// Gets the table definition for Hist_XOrgUnit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_XOrgUnit", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "OrgUnitID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "ParentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "ModulID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ChiefID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "ChiefID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechtsdienstUserID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "RechtsdienstUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RepresentativeID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "RepresentativeID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StellvertreterID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "StellvertreterID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "XProfileID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ItemName { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "ItemName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OEItemTypCode { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "OEItemTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentPosition { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "ParentPosition", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Kostenstelle", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandantennummer { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Mandantennummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StundenLohnlaufNr { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "StundenLohnlaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LeistungLohnlaufNr { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "LeistungLohnlaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sammelkonto { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Sammelkonto", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKonto { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "PCKonto", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AD_Abteilung { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AD_Abteilung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Logo { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Logo", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Adressat", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Adresse", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseKGS { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdresseKGS", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseAbteilung { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdresseAbteilung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseStrasse { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdresseStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseHausNr { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdresseHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePLZ { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdressePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseOrt { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "AdresseOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phone { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Phone", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WWW { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "WWW", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Internet { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Internet", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserProfileCode { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "UserProfileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1 { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Text1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2 { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Text2", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text3 { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Text3", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text4 { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Text4", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_XOrgUnit.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XOrgUnit_User{
/// <summary>
/// Gets the table definition for Hist_XOrgUnit_User
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_XOrgUnit_User", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef XOrgUnit_UserID { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "XOrgUnit_UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "OrgUnitID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "UserID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef OrgUnitMemberCode { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "OrgUnitMemberCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MayInsert { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "MayInsert", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MayUpdate { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "MayUpdate", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MayDelete { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "MayDelete", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_XOrgUnit_User.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XUser{
/// <summary>
/// Gets the table definition for Hist_XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_XUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_XUser.TableDef, "UserID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ChiefID { get { return new DBOColumnDef(Hist_XUser.TableDef, "ChiefID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PrimaryUserID { get { return new DBOColumnDef(Hist_XUser.TableDef, "PrimaryUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PermissionGroupID { get { return new DBOColumnDef(Hist_XUser.TableDef, "PermissionGroupID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrantPermGroupID { get { return new DBOColumnDef(Hist_XUser.TableDef, "GrantPermGroupID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(Hist_XUser.TableDef, "XProfileID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(Hist_XUser.TableDef, "ModulID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SachbearbeiterID { get { return new DBOColumnDef(Hist_XUser.TableDef, "SachbearbeiterID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitarbeiterNr { get { return new DBOColumnDef(Hist_XUser.TableDef, "MitarbeiterNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(Hist_XUser.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PasswordHash { get { return new DBOColumnDef(Hist_XUser.TableDef, "PasswordHash", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FirstName { get { return new DBOColumnDef(Hist_XUser.TableDef, "FirstName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LastName { get { return new DBOColumnDef(Hist_XUser.TableDef, "LastName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortName { get { return new DBOColumnDef(Hist_XUser.TableDef, "ShortName", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsLocked { get { return new DBOColumnDef(Hist_XUser.TableDef, "IsLocked", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsUserAdmin { get { return new DBOColumnDef(Hist_XUser.TableDef, "IsUserAdmin", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// Flag, ob Benutzer BIAG Super-Administrator ist und somit über alle Rechte verfügt
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsUserBIAGAdmin { get { return new DBOColumnDef(Hist_XUser.TableDef, "IsUserBIAGAdmin", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsMandatsTraeger { get { return new DBOColumnDef(Hist_XUser.TableDef, "IsMandatsTraeger", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GenderCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "GenderCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtstag { get { return new DBOColumnDef(Hist_XUser.TableDef, "Geburtstag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LanguageCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "LanguageCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Standard Telefonnummer (wird für PI nicht benutzt, da spezifische Telefonnummern zur Verfügung stehen)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phone { get { return new DBOColumnDef(Hist_XUser.TableDef, "Phone", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneMobile { get { return new DBOColumnDef(Hist_XUser.TableDef, "PhoneMobile", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneOffice { get { return new DBOColumnDef(Hist_XUser.TableDef, "PhoneOffice", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneIntern { get { return new DBOColumnDef(Hist_XUser.TableDef, "PhoneIntern", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhonePrivat { get { return new DBOColumnDef(Hist_XUser.TableDef, "PhonePrivat", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(Hist_XUser.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(Hist_XUser.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserProfileCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "UserProfileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Funktion { get { return new DBOColumnDef(Hist_XUser.TableDef, "Funktion", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RoleTitleCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "RoleTitleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef QualificationTitleCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "QualificationTitleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(Hist_XUser.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1 { get { return new DBOColumnDef(Hist_XUser.TableDef, "Text1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2 { get { return new DBOColumnDef(Hist_XUser.TableDef, "Text2", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JobPercentage { get { return new DBOColumnDef(Hist_XUser.TableDef, "JobPercentage", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HoursPerYearForCaseMgmt { get { return new DBOColumnDef(Hist_XUser.TableDef, "HoursPerYearForCaseMgmt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eintrittsdatum { get { return new DBOColumnDef(Hist_XUser.TableDef, "Eintrittsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Austrittsdatum { get { return new DBOColumnDef(Hist_XUser.TableDef, "Austrittsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LohntypCode { get { return new DBOColumnDef(Hist_XUser.TableDef, "LohntypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostentraeger { get { return new DBOColumnDef(Hist_XUser.TableDef, "Kostentraeger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WeitereKostentraeger { get { return new DBOColumnDef(Hist_XUser.TableDef, "WeitereKostentraeger", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenart { get { return new DBOColumnDef(Hist_XUser.TableDef, "Kostenart", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KeinBDEExport { get { return new DBOColumnDef(Hist_XUser.TableDef, "KeinBDEExport", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigHerkunft { get { return new DBOColumnDef(Hist_XUser.TableDef, "MigHerkunft", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigMAKuerzel { get { return new DBOColumnDef(Hist_XUser.TableDef, "MigMAKuerzel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef MigUserFix { get { return new DBOColumnDef(Hist_XUser.TableDef, "MigUserFix", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36Area { get { return new DBOColumnDef(Hist_XUser.TableDef, "visdat36Area", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36SourceFile { get { return new DBOColumnDef(Hist_XUser.TableDef, "visdat36SourceFile", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36ID { get { return new DBOColumnDef(Hist_XUser.TableDef, "visdat36ID", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36Name { get { return new DBOColumnDef(Hist_XUser.TableDef, "visdat36Name", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_XUser.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(Hist_XUser.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(Hist_XUser.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(Hist_XUser.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(Hist_XUser.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_XUser.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die History-Stundenansätze für die Benutzer
/// </summary>

public static class Hist_XUserStundenansatz{
/// <summary>
/// Gets the table definition for Hist_XUserStundenansatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("Hist_XUserStundenansatz", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef XUserStundenansatzID { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "XUserStundenansatzID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart1 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart1", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart2 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart2", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart3 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart3", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart4 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart4", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart5 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart5", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart6 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart6", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart7 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart7", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart8 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart8", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart9 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart9", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart10 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart10", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart11 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart11", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart12 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart12", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart13 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart13", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart14 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart14", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart15 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart15", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart16 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart16", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart17 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart17", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart18 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart18", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart19 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart19", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart20 { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Lohnart20", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "VerID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID_DELETED { get { return new DBOColumnDef(Hist_XUserStundenansatz.TableDef, "VerID_DELETED", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class HistoryVersion{
/// <summary>
/// Gets the table definition for HistoryVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("HistoryVersion", "", false); } }


/// <summary>
/// Primärschlüssel für HistoryVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(HistoryVersion.TableDef, "VerID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VersionDate { get { return new DBOColumnDef(HistoryVersion.TableDef, "VersionDate", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef HostName { get { return new DBOColumnDef(HistoryVersion.TableDef, "HostName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef SystemUser { get { return new DBOColumnDef(HistoryVersion.TableDef, "SystemUser", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef AppName { get { return new DBOColumnDef(HistoryVersion.TableDef, "AppName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 256]
/// </summary>

public static DBOColumnDef dbUser { get { return new DBOColumnDef(HistoryVersion.TableDef, "dbUser", typeof(string), false, false, false, 256, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SessionID { get { return new DBOColumnDef(HistoryVersion.TableDef, "SessionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AppUser { get { return new DBOColumnDef(HistoryVersion.TableDef, "AppUser", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserAction { get { return new DBOColumnDef(HistoryVersion.TableDef, "UserAction", typeof(string), false, false, false, 1000, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für die Inkasso-Art Abklärung
/// </summary>

public static class IkAbklaerung{
/// <summary>
/// Gets the table definition for IkAbklaerung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkAbklaerung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkAbklaerungID { get { return new DBOColumnDef(IkAbklaerung.TableDef, "IkAbklaerungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkAbklaerung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XUser
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(IkAbklaerung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Die Art der Abklärung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAbklaerungArtCode { get { return new DBOColumnDef(IkAbklaerung.TableDef, "IkAbklaerungArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Die Art der Auswertung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAbklaerungAuswertungCode { get { return new DBOColumnDef(IkAbklaerung.TableDef, "IkAbklaerungAuswertungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Das Stichdatum der Abklärung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAbklaerung { get { return new DBOColumnDef(IkAbklaerung.TableDef, "DatumAbklaerung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Das Stichdatum der Auswertung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAuswertung { get { return new DBOColumnDef(IkAbklaerung.TableDef, "DatumAuswertung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Eine Bemerkung zur Auswertung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkAbklaerung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkAbklaerung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkAbklaerung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkAbklaerung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkAbklaerung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkAbklaerungTS { get { return new DBOColumnDef(IkAbklaerung.TableDef, "IkAbklaerungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkAnzeige{
/// <summary>
/// Gets the table definition for IkAnzeige
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkAnzeige", "", false); } }


/// <summary>
/// Zeile1  Zeile2  Zeile3  Zeile4
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkAnzeigeID { get { return new DBOColumnDef(IkAnzeige.TableDef, "IkAnzeigeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkAnzeige_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkAnzeige.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef IkAnzeigeTypCode { get { return new DBOColumnDef(IkAnzeige.TableDef, "IkAnzeigeTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(IkAnzeige.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(IkAnzeige.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAnzeigeEroeffnungGrundCode { get { return new DBOColumnDef(IkAnzeige.TableDef, "IkAnzeigeEroeffnungGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 64]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungGrund { get { return new DBOColumnDef(IkAnzeige.TableDef, "EroeffnungGrund", typeof(string), false, false, false, 64, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAnzeigeAbschlussGrundCode { get { return new DBOColumnDef(IkAnzeige.TableDef, "IkAnzeigeAbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1024]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkAnzeige.TableDef, "Bemerkung", typeof(string), false, false, false, 1024, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkAnzeigeTS { get { return new DBOColumnDef(IkAnzeige.TableDef, "IkAnzeigeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkBetreibung{
/// <summary>
/// Gets the table definition for IkBetreibung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkBetreibung", "", false); } }


/// <summary>
/// Primärschlüssel für IkBetreibung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkBetreibungID { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkBetreibungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkBetreibung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkBetreibung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkBetreibung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkRechtstitelID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IkBetreibungStatusCode { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkBetreibungStatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IkVerlustscheinStatusCode { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkVerlustscheinStatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IkVerlustscheinTypCode { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkVerlustscheinTypCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BetreibungAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungAm", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungNummer { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungAmt { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungAmt", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungBetrag { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungVon { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungBis { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungFortsetzungAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungFortsetzungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungVerwertungAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungVerwertungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreibungRechtsoeffnungAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "BetreibungRechtsoeffnungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Glaeubiger { get { return new DBOColumnDef(IkBetreibung.TableDef, "Glaeubiger", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VerlustscheinAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinAm", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinNummer { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinAmt { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinAmt", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinBetrag { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinZins { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinZins", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinKosten { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinKosten", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlustscheinVerjaehrungAm { get { return new DBOColumnDef(IkBetreibung.TableDef, "VerlustscheinVerjaehrungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkBetreibung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkBetreibungTS { get { return new DBOColumnDef(IkBetreibung.TableDef, "IkBetreibungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkBetreibungAusgleich{
/// <summary>
/// Gets the table definition for IkBetreibungAusgleich
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkBetreibungAusgleich", "", false); } }


/// <summary>
/// Primärschlüssel für IkBetreibungAusgleich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkBetreibungAusgleichID { get { return new DBOColumnDef(IkBetreibungAusgleich.TableDef, "IkBetreibungAusgleichID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkBetreibungAusgleich_IkBetreibung) => IkBetreibung.IkBetreibungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkBetreibungID { get { return new DBOColumnDef(IkBetreibungAusgleich.TableDef, "IkBetreibungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkBetreibungAusgleich_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef AusgleichBuchungID { get { return new DBOColumnDef(IkBetreibungAusgleich.TableDef, "AusgleichBuchungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(IkBetreibungAusgleich.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkBetreibungAusgleichTS { get { return new DBOColumnDef(IkBetreibungAusgleich.TableDef, "IkBetreibungAusgleichTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Ik Einkommen
/// </summary>

public static class IkEinkommen{
/// <summary>
/// Gets the table definition for IkEinkommen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkEinkommen", "", false); } }


/// <summary>
/// Primärschlüssel Ik Einkommen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkEinkommenID { get { return new DBOColumnDef(IkEinkommen.TableDef, "IkEinkommenID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkEinkommen_IkRechtstitelID) => IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkEinkommen.TableDef, "IkRechtstitelID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// BaPersonID eines Gläubigers
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkEinkommen.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Code des Einkommentyps (LOV IkEinkommenTyp), wird mit Value3 in 3 DropDown gesplitet
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef IkEinkommenTypCode { get { return new DBOColumnDef(IkEinkommen.TableDef, "IkEinkommenTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Anfangsdatum der Leistung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GueltigVon { get { return new DBOColumnDef(IkEinkommen.TableDef, "GueltigVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Enddatum der Leistung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GueltigBis { get { return new DBOColumnDef(IkEinkommen.TableDef, "GueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(IkEinkommen.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkEinkommen.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkEinkommen.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkEinkommen.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkEinkommen.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkEinkommen.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkEinkommenTS { get { return new DBOColumnDef(IkEinkommen.TableDef, "IkEinkommenTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkForderung{
/// <summary>
/// Gets the table definition for IkForderung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkForderung", "", false); } }


/// <summary>
/// Primärschlüssel für IkForderung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkForderungID { get { return new DBOColumnDef(IkForderung.TableDef, "IkForderungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkForderung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkForderung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkForderung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkForderung.TableDef, "IkRechtstitelID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkForderung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkForderung.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef IkForderungPeriodischCode { get { return new DBOColumnDef(IkForderung.TableDef, "IkForderungPeriodischCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumAnpassenAb { get { return new DBOColumnDef(IkForderung.TableDef, "DatumAnpassenAb", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumGueltigBis { get { return new DBOColumnDef(IkForderung.TableDef, "DatumGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(IkForderung.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAnpassungsGrundCode { get { return new DBOColumnDef(IkForderung.TableDef, "IkAnpassungsGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAnpassungsRegelCode { get { return new DBOColumnDef(IkForderung.TableDef, "IkAnpassungsRegelCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandBeiBerechnung { get { return new DBOColumnDef(IkForderung.TableDef, "IndexStandBeiBerechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandDatum { get { return new DBOColumnDef(IkForderung.TableDef, "IndexStandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkForderung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Sollgestellt { get { return new DBOColumnDef(IkForderung.TableDef, "Sollgestellt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ALBVBerechtigt { get { return new DBOColumnDef(IkForderung.TableDef, "ALBVBerechtigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Teuerungseinsprache { get { return new DBOColumnDef(IkForderung.TableDef, "Teuerungseinsprache", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Unterstuetzungsfall { get { return new DBOColumnDef(IkForderung.TableDef, "Unterstuetzungsfall", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef TeilALBV { get { return new DBOColumnDef(IkForderung.TableDef, "TeilALBV", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeilALBVBetrag { get { return new DBOColumnDef(IkForderung.TableDef, "TeilALBVBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkForderungTS { get { return new DBOColumnDef(IkForderung.TableDef, "IkForderungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef _tmp_AiForderungID_Periodisch { get { return new DBOColumnDef(IkForderung.TableDef, "_tmp_AiForderungID_Periodisch", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um die Kostenarten die Auszahlungen generieren zu handeln
/// </summary>

public static class IkForderung_BgKostenart{
/// <summary>
/// Gets the table definition for IkForderung_BgKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkForderung_BgKostenart", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle IkForderung_BgKostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkForderung_BgKostenartID { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "IkForderung_BgKostenartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel der Auszahlungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID_Auszahlung { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "BgKostenartID_Auszahlung", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel der Auszahlungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID_Forderung { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "BgKostenartID_Forderung", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Code in der LOV IkForedungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungEinmaligCode { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "IkForderungEinmaligCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code in der LOV IkForedungPeriodisch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungPeriodischCode { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "IkForderungPeriodischCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkForderung_BgKostenartTS { get { return new DBOColumnDef(IkForderung_BgKostenart.TableDef, "IkForderung_BgKostenartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um die BgKostenartID der Forderung fachlich historisiert zu haben
/// </summary>

public static class IkForderungBgKostenartHist{
/// <summary>
/// Gets the table definition for IkForderungBgKostenartHist
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkForderungBgKostenartHist", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkForderungBgKostenartHistID { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IkForderungBgKostenartHistID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// ID der Forderungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "BgKostenartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Code in der LOV IkForedungPeriodisch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungPeriodischCode { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IkForderungPeriodischCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag zum wissen ob die periodische Forderung ALBV-Berechtigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstAlbvBerechtigt { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IstAlbvBerechtigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag zum wissen ob die periodische Forderung den ALBV max. Beitrag übersteigt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstAlbvUeberMax { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IstAlbvUeberMax", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag zum wissen ob die periodische Forderung ein Unterstützungsfall ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstUnterstuetzungsfall { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IstUnterstuetzungsfall", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Code in der LOV IkForedungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungEinmaligCode { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IkForderungEinmaligCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code der im Kontoauszug als Filter verwendet wird. Entspricht jetzt an der LOV IkForderungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef IkForderungsartFilterCode { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IkForderungsartFilterCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// gültig ab
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// gültig bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkForderungBgKostenartHistTS { get { return new DBOColumnDef(IkForderungBgKostenartHist.TableDef, "IkForderungBgKostenartHistTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkForderungPosition{
/// <summary>
/// Gets the table definition for IkForderungPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkForderungPosition", "", false); } }


/// <summary>
/// Primärschlüssel für IkForderungPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkForderungPositionID { get { return new DBOColumnDef(IkForderungPosition.TableDef, "IkForderungPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkForderungPosition_IkForderung) => IkForderung.IkForderungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkForderungID { get { return new DBOColumnDef(IkForderungPosition.TableDef, "IkForderungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkForderungPosition_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkPositionID { get { return new DBOColumnDef(IkForderungPosition.TableDef, "IkPositionID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkForderungPositionTS { get { return new DBOColumnDef(IkForderungPosition.TableDef, "IkForderungPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkGlaeubiger{
/// <summary>
/// Gets the table definition for IkGlaeubiger
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkGlaeubiger", "", false); } }


/// <summary>
/// Primärschlüssel für IkGlaeubiger Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkGlaeubigerID { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "IkGlaeubigerID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "IkRechtstitelID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_AntragStellendePerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_AntragStellendePerson { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "BaPersonID_AntragStellendePerson", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1024]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausbildung { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "Ausbildung", typeof(string), false, false, false, 1024, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkGlaeubigerTS { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "IkGlaeubigerTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Flag zum definieren ob die Auszahlung von Alimentenvermittlung erstellt werden muss beim verbuchen des Zahlungseingangs
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AuszahlungVermittlungStoppen { get { return new DBOColumnDef(IkGlaeubiger.TableDef, "AuszahlungVermittlungStoppen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// Inkasso-Landesindex mit Indexbezeichnung
/// </summary>

public static class IkLandesindex{
/// <summary>
/// Gets the table definition for IkLandesindex
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkLandesindex", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkLandesindexID { get { return new DBOColumnDef(IkLandesindex.TableDef, "IkLandesindexID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Bezeichnung des Indexes (z.B.: BFS2010)
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(IkLandesindex.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkLandesindex.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkLandesindex.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkLandesindex.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkLandesindex.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkLandesindexTS { get { return new DBOColumnDef(IkLandesindex.TableDef, "IkLandesindexTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die einzelnen Werte pro Monat und Jahr je Inkasso-Landesindex
/// </summary>

public static class IkLandesindexWert{
/// <summary>
/// Gets the table definition for IkLandesindexWert
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkLandesindexWert", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkLandesindexWertID { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "IkLandesindexWertID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf den verwendeten Landesindex (IkLandesindex.IkLandesindexID)
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkLandesindexID { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "IkLandesindexID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Das Jahr, für welches der gegebene Wert gilt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Der Monat innerhalb des Jahres, für welches der gegebene Wert gilt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Monat", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Der Wert für einen bestimmten Monat basierend auf einem IkLandesindex
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Wert { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Wert", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkLandesindexWertTS { get { return new DBOColumnDef(IkLandesindexWert.TableDef, "IkLandesindexWertTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkPosition{
/// <summary>
/// Gets the table definition for IkPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkPosition", "", false); } }


/// <summary>
/// Primärschlüssel für IkPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkPositionID { get { return new DBOColumnDef(IkPosition.TableDef, "IkPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkPosition_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkPosition.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkPosition_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkPosition.TableDef, "IkRechtstitelID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Einmalig { get { return new DBOColumnDef(IkPosition.TableDef, "Einmalig", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(IkPosition.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(IkPosition.TableDef, "Monat", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(IkPosition.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkPosition_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkPosition.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TotalAliment { get { return new DBOColumnDef(IkPosition.TableDef, "TotalAliment", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TotalAlimentSoll { get { return new DBOColumnDef(IkPosition.TableDef, "TotalAlimentSoll", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragALBV { get { return new DBOColumnDef(IkPosition.TableDef, "BetragALBV", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragALBVSoll { get { return new DBOColumnDef(IkPosition.TableDef, "BetragALBVSoll", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragKiZulage { get { return new DBOColumnDef(IkPosition.TableDef, "BetragKiZulage", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragKiZulageSoll { get { return new DBOColumnDef(IkPosition.TableDef, "BetragKiZulageSoll", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragALBVverrechnung { get { return new DBOColumnDef(IkPosition.TableDef, "BetragALBVverrechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragEinmalig { get { return new DBOColumnDef(IkPosition.TableDef, "BetragEinmalig", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragAuszahlung { get { return new DBOColumnDef(IkPosition.TableDef, "BetragAuszahlung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungCode { get { return new DBOColumnDef(IkPosition.TableDef, "IkForderungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandBeiBerechnung { get { return new DBOColumnDef(IkPosition.TableDef, "IndexStandBeiBerechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandDatum { get { return new DBOColumnDef(IkPosition.TableDef, "IndexStandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef ErledigterMonat { get { return new DBOColumnDef(IkPosition.TableDef, "ErledigterMonat", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Unterstuetzungsfall { get { return new DBOColumnDef(IkPosition.TableDef, "Unterstuetzungsfall", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef ALBVBerechtigt { get { return new DBOColumnDef(IkPosition.TableDef, "ALBVBerechtigt", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef BetragIstNegativ { get { return new DBOColumnDef(IkPosition.TableDef, "BetragIstNegativ", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkPosition.TableDef, "Bemerkung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkPositionTS { get { return new DBOColumnDef(IkPosition.TableDef, "IkPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef _tmp_AiForderungID_Einmalig { get { return new DBOColumnDef(IkPosition.TableDef, "_tmp_AiForderungID_Einmalig", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef _tmp_AiForderungID { get { return new DBOColumnDef(IkPosition.TableDef, "_tmp_AiForderungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRatenplan{
/// <summary>
/// Gets the table definition for IkRatenplan
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkRatenplan", "", false); } }


/// <summary>
/// Primärschlüssel für IkRatenplan Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkRatenplanID { get { return new DBOColumnDef(IkRatenplan.TableDef, "IkRatenplanID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRatenplan_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkRatenplan.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(IkRatenplan.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(IkRatenplan.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkRatenplanVereinbarungCode { get { return new DBOColumnDef(IkRatenplan.TableDef, "IkRatenplanVereinbarungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(IkRatenplan.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VereinbarungVom { get { return new DBOColumnDef(IkRatenplan.TableDef, "VereinbarungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GesamtBetrag { get { return new DBOColumnDef(IkRatenplan.TableDef, "GesamtBetrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BetragProMonat { get { return new DBOColumnDef(IkRatenplan.TableDef, "BetragProMonat", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef LetzterProMonat { get { return new DBOColumnDef(IkRatenplan.TableDef, "LetzterProMonat", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkRatenplan.TableDef, "Bemerkung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkRatenplanTS { get { return new DBOColumnDef(IkRatenplan.TableDef, "IkRatenplanTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRatenplanForderung{
/// <summary>
/// Gets the table definition for IkRatenplanForderung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkRatenplanForderung", "", false); } }


/// <summary>
/// Primärschlüssel für IkRatenplanForderung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkRatenplanForderungID { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkRatenplanForderungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkRatenplan) => IkRatenplan.IkRatenplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRatenplanID { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkRatenplanID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkRechtstitelID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkPositionID { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkForderung) => IkForderung.IkForderungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkForderungID { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkForderungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkRatenplanForderungTS { get { return new DBOColumnDef(IkRatenplanForderung.TableDef, "IkRatenplanForderungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRechtstitel{
/// <summary>
/// Gets the table definition for IkRechtstitel
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkRechtstitel", "", false); } }


/// <summary>
/// Primärschlüssel für IkRechtstitel Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRechtstitel_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(IkRechtstitel.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IkBezugKinderzulagenCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkBezugKinderzulagenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IkRechtstitelStatusCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkRechtstitelTypCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InkassoFallName { get { return new DBOColumnDef(IkRechtstitel.TableDef, "InkassoFallName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2048]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechtstitelInfo { get { return new DBOColumnDef(IkRechtstitel.TableDef, "RechtstitelInfo", typeof(string), false, false, false, 2048, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechtstitelDatumVon { get { return new DBOColumnDef(IkRechtstitel.TableDef, "RechtstitelDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechtstitelRechtskraeftig { get { return new DBOColumnDef(IkRechtstitel.TableDef, "RechtstitelRechtskraeftig", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkElterlicheSorgeCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkElterlicheSorgeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ElterlicheSorgeBemerkung { get { return new DBOColumnDef(IkRechtstitel.TableDef, "ElterlicheSorgeBemerkung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkRechtstitel_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkRechtstitel.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkIndexTypCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkIndexTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandPunkte { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IndexStandPunkte", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndexStandVom { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IndexStandVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkIndexRundenCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkIndexRundenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BasisKinderalimente { get { return new DBOColumnDef(IkRechtstitel.TableDef, "BasisKinderalimente", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BasisEhegattenalimente { get { return new DBOColumnDef(IkRechtstitel.TableDef, "BasisEhegattenalimente", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkInkassoBemuehungCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkInkassoBemuehungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerjaehrungAm { get { return new DBOColumnDef(IkRechtstitel.TableDef, "VerjaehrungAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkRechtstitel.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef SchuldnerMahnen { get { return new DBOColumnDef(IkRechtstitel.TableDef, "SchuldnerMahnen", typeof(System.Nullable<bool>), false, false, false, 1, true, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkAlimenteUnterartCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkAlimenteUnterartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkRueckerstattungTypCode { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRueckerstattungTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkRechtstitelGueltigVon { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelGueltigVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkRechtstitelGueltigBis { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkRechtstitelTS { get { return new DBOColumnDef(IkRechtstitel.TableDef, "IkRechtstitelTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class IkVerrechnungskonto{
/// <summary>
/// Gets the table definition for IkVerrechnungskonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("IkVerrechnungskonto", "", false); } }


/// <summary>
/// Primärschlüssel für IkVerrechnungskonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef IkVerrechnungskontoID { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IkVerrechnungskontoID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkVerrechnungskonto_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkRechtstitelID { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IkRechtstitelID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_IkVerrechnungskonto_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Grundforderung { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "Grundforderung", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VereinbarungVom { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "VereinbarungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BetragProMonat { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "BetragProMonat", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "DatumBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef LetzterMonat { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "LetzterMonat", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstErledigt { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IstErledigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstAnnulliert { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IstAnnulliert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnnulliertAm { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "AnnulliertAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkVerrechnungsartCode { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IkVerrechnungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef IkVerrechnungskontoTS { get { return new DBOColumnDef(IkVerrechnungskonto.TableDef, "IkVerrechnungskontoTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KA - Abklärung - Intake
/// </summary>

public static class KaAbklaerungIntake{
/// <summary>
/// Gets the table definition for KaAbklaerungIntake
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAbklaerungIntake", "", false); } }


/// <summary>
/// Primärschlüssel für KaAbklaerungIntake Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAbklaerungIntakeID { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungIntakeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungIntake_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Feld Modul
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungPhaseIntakeCode { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungPhaseIntakeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Feld Status Dossier
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungStatusDossierCode { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungStatusDossierCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AsdFragen { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "AsdFragen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gespraechstermin { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Gespraechstermin", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungPraesenzCode { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungPraesenzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumIntegration { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "DatumIntegration", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungIntegrBeurCode { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungIntegrBeurCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaAbklärungGrundDoss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungGrundDossCode { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungGrundDossCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Integration { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "DocumentID_Integration", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_FormularAsD { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "DocumentID_FormularAsD", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ZusammenfassungEG { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "DocumentID_ZusammenfassungEG", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAbklaerungIntakeTS { get { return new DBOColumnDef(KaAbklaerungIntake.TableDef, "KaAbklaerungIntakeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um vertiefte Abklärungen zu erfassen
/// </summary>

public static class KaAbklaerungVertieft{
/// <summary>
/// Gets the table definition for KaAbklaerungVertieft
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAbklaerungVertieft", "", false); } }


/// <summary>
/// Primärschlüssel für KaAbklaerungVertieft Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAbklaerungVertieftID { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungVertieftID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungVertieft_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungVertieft_KaKurserfassung) => KaKurserfassung.KaKurserfassungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaKurserfassungID { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaKurserfassungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Datum der Abklärung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Feld Modul
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungPhaseVertiefteAbklaerungenCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungPhaseVertiefteAbklaerungenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Feld Status Dossier
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungStatusDossierCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungStatusDossierCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum des Kursabbruchs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumKursAbbruch { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "DatumKursAbbruch", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Präsenz Kurs
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungPraesenzCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungPraesenzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Probeeinsatz in
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungProbeeinsatzInCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungProbeeinsatzInCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum von des Einsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVon { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "EinsatzVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum bis des Einsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzBis { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "EinsatzBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datum der Integration
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumIntegration { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "DatumIntegration", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Code der Integrationsbeurteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungIntegrBeurCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungIntegrBeurCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XDocument für die Integrationsbeurteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Integration { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "DocumentID_Integration", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Grund Dossierrückgabe (LOV KaAbklärungGrundDoss)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungGrundDossCode { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungGrundDossCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum des Austritts bei einer Dossierrückgabe
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAustritt { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "DatumAustritt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XDocument für das Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Schlussbericht { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "DocumentID_Schlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag ob den Datensatz auch für Benutzern aus SD sichtbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAbklaerungVertieftTS { get { return new DBOColumnDef(KaAbklaerungVertieft.TableDef, "KaAbklaerungVertieftTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KA - Abklärung - Vertiefte Abklärungen - Probeeinsatz
/// </summary>

public static class KaAbklaerungVertieftProbeeinsatz{
/// <summary>
/// Gets the table definition for KaAbklaerungVertieftProbeeinsatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAbklaerungVertieftProbeeinsatz", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle KaAbklaerungVertieftProbeeinsatz
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAbklaerungVertieftProbeeinsatzID { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "KaAbklaerungVertieftProbeeinsatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle KaAbklaerungVertieft
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaAbklaerungVertieftID { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "KaAbklaerungVertieftID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Probeeinsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Prozessschritt, gehört zum Probeeinsatz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAbklaerungProzessschrittCode { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "KaAbklaerungProzessschrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument des Probeeinsatzes
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Prozessschritt { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "DocumentID_Prozessschritt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Ob der Probeeinsatz stattgefunden hat
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HatStattgefunden { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "HatStattgefunden", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAbklaerungVertieftProbeeinsatzTS { get { return new DBOColumnDef(KaAbklaerungVertieftProbeeinsatz.TableDef, "KaAbklaerungVertieftProbeeinsatzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaAKZuweiser{
/// <summary>
/// Gets the table definition for KaAKZuweiser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAKZuweiser", "", false); } }


/// <summary>
/// Primärschlüssel für KaAKZuweiser Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAKZuweiserID { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "KaAKZuweiserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAKZuweiser_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Erfassung { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "Erfassung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungCode { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "AnmeldungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionID { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "InstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeraterID { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "BeraterID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAKZuweiserTS { get { return new DBOColumnDef(KaAKZuweiser.TableDef, "KaAKZuweiserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaAllgemein{
/// <summary>
/// Gets the table definition for KaAllgemein
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAllgemein", "", false); } }


/// <summary>
/// Primärschlüssel für KaAllgemein Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAllgemeinID { get { return new DBOColumnDef(KaAllgemein.TableDef, "KaAllgemeinID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAllgemein_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAllgemein.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAllgemeinTS { get { return new DBOColumnDef(KaAllgemein.TableDef, "KaAllgemeinTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaAllgemein.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }

}

/// <summary>
/// Type: Table
/// Sammlung von Daten für den Ausdruck der AMM - Bescheinigung
/// </summary>

public static class KaAmmBesch{
/// <summary>
/// Gets the table definition for KaAmmBesch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAmmBesch", "", false); } }


/// <summary>
/// Primärschlüssel für KaAmmBesch Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAmmBeschID { get { return new DBOColumnDef(KaAmmBesch.TableDef, "KaAmmBeschID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAmmBesch_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaAmmBesch.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAmmBesch_KaEinsatz) => KaEinsatz.KaEinsatzID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaEinsatzID { get { return new DBOColumnDef(KaAmmBesch.TableDef, "KaEinsatzID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (TODO!!!!) => KaEinsatzplatz2.KaEinsatzplatzID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(KaAmmBesch.TableDef, "KaEinsatzplatzID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (TODO!!!) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKaID { get { return new DBOColumnDef(KaAmmBesch.TableDef, "ZustaendigKaID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Monat der AMM - Bescheinigung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(KaAmmBesch.TableDef, "Monat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Jahr der AMM - Bescheinigung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(KaAmmBesch.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ProfilCode aus KaEinsatzplatz2 (LOV KaProfil)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProfilCode { get { return new DBOColumnDef(KaAmmBesch.TableDef, "ProfilCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// DatumVon aus Tabelle KaEinsatz
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KaAmmBesch.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Austritt oder DatumBis von KaEinsatz
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KaAmmBesch.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Wurde AMM - Bescheinigung gedruckt oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef gedrucktFlag { get { return new DBOColumnDef(KaAmmBesch.TableDef, "gedrucktFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp für Tabelle KaAmmBesch
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAKZuweiserTS { get { return new DBOColumnDef(KaAmmBesch.TableDef, "KaAKZuweiserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Daten der Präsenzzeiterfassung
/// </summary>

public static class KaArbeitsrapport{
/// <summary>
/// Gets the table definition for KaArbeitsrapport
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaArbeitsrapport", "", false); } }


/// <summary>
/// Primärschlüssel für KaArbeitsrapport Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaArbeitsrapportID { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "KaArbeitsrapportID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaArbeitsrapport_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (TODO) => KaEinsatz.KaEinsatzID
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaEinsatzID { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "KaEinsatzID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Tag für die Erfassung der Präsenzzeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Code Vormittag aus Werteliste KaPraesenzCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AM_AnwCode { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "AM_AnwCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Stunden für den Vormittag
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AM_Std { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "AM_Std", typeof(System.Nullable<float>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung für den Vormittag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AM_Bemerkung { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "AM_Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Code Nachmittag aus Werteliste KaPraesenzCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PM_AnwCode { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "PM_AnwCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Stunden für den Nachmittag
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PM_Std { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "PM_Std", typeof(System.Nullable<float>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung für den Nachmittag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PM_Bemerkung { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "PM_Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Flag zur Steuerung der Sichtbarkeit für den SD Bern
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp für Tabelle KaArbeitsrapport
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaArbeitsrapportTS { get { return new DBOColumnDef(KaArbeitsrapport.TableDef, "KaArbeitsrapportTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Daten der methodischen Leistung: Assistenz.
/// </summary>

public static class KaAssistenz{
/// <summary>
/// Gets the table definition for KaAssistenz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAssistenz", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAssistenzID { get { return new DBOColumnDef(KaAssistenz.TableDef, "KaAssistenzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAssistenz_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAssistenz.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Flag ob der Klient vom ALV abgemeldet ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Abgemeldet { get { return new DBOColumnDef(KaAssistenz.TableDef, "Abgemeldet", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob der Klient ohne Abmeldung nicht erschienen ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef NichtErschienen { get { return new DBOColumnDef(KaAssistenz.TableDef, "NichtErschienen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob mit dem Klienten ein Gespräch stattgefunden hat.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef GespraechStattgefunden { get { return new DBOColumnDef(KaAssistenz.TableDef, "GespraechStattgefunden", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob mit einem Programm begonnen wird.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Programmbeginn { get { return new DBOColumnDef(KaAssistenz.TableDef, "Programmbeginn", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Einsatzplatz des Klienten.
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einsatzplatz { get { return new DBOColumnDef(KaAssistenz.TableDef, "Einsatzplatz", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// Stufe des Einsatzes.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stufe { get { return new DBOColumnDef(KaAssistenz.TableDef, "Stufe", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Flag ob Personalien des Klienten erfasst wurden.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Personalien { get { return new DBOColumnDef(KaAssistenz.TableDef, "Personalien", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob Vereinbarung mit dem Klienten abgeschlossen wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Vereinbarung { get { return new DBOColumnDef(KaAssistenz.TableDef, "Vereinbarung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob Zielvereinbarung mit dem Klienten abgeschlossen wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Zielvereinbarung { get { return new DBOColumnDef(KaAssistenz.TableDef, "Zielvereinbarung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob Schlussbericht erstellt wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Schlussbericht { get { return new DBOColumnDef(KaAssistenz.TableDef, "Schlussbericht", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag ob Testat ausgestellt wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Testat { get { return new DBOColumnDef(KaAssistenz.TableDef, "Testat", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KaAssistenz.TableDef, "Bemerkungen", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Austrittsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAssistenzprojektAustrittsgrundCode { get { return new DBOColumnDef(KaAssistenz.TableDef, "KaAssistenzprojektAustrittsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Austrittsdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Austrittsdatum { get { return new DBOColumnDef(KaAssistenz.TableDef, "Austrittsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaAssistenz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaAssistenz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaAssistenz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaAssistenz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAssistenzTS { get { return new DBOColumnDef(KaAssistenz.TableDef, "KaAssistenzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KaAusbildung
/// </summary>

public static class KaAusbildung{
/// <summary>
/// Gets the table definition for KaAusbildung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaAusbildung", "", false); } }


/// <summary>
/// Primärschlüssel für KaAusbildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaAusbildungID { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaAusbildungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaAusbildung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaAusbildung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Andere
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Andere { get { return new DBOColumnDef(KaAusbildung.TableDef, "Andere", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// LOV Ausbildung Vorbildung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAusbildungVorbildungCode { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaAusbildungVorbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV BECO erlenter Beruf
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBecoErlernterBerufCode { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaBecoErlernterBerufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV BIAS Ausbildung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaVermittlBiBerufsbilCode { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaVermittlBiBerufsbilCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV BIAS Berufserfahrung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaVermittlBiBerufserfCode { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaVermittlBiBerufserfCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaAusbildung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaAusbildung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaAusbildung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaAusbildung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaAusbildungTS { get { return new DBOColumnDef(KaAusbildung.TableDef, "KaAusbildungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetrieb{
/// <summary>
/// Gets the table definition for KaBetrieb
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaBetrieb", "", false); } }


/// <summary>
/// Primärschlüssel für KaBetrieb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(KaBetrieb.TableDef, "KaBetriebID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef BetriebName { get { return new DBOColumnDef(KaBetrieb.TableDef, "BetriebName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrganisationTypCode_OBSOLETE { get { return new DBOColumnDef(KaBetrieb.TableDef, "OrganisationTypCode_OBSOLETE", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DmgAdresseID_OBSOLETE { get { return new DBOColumnDef(KaBetrieb.TableDef, "DmgAdresseID_OBSOLETE", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(KaBetrieb.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(KaBetrieb.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(KaBetrieb.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(KaBetrieb.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaBetrieb.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(KaBetrieb.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Homepage { get { return new DBOColumnDef(KaBetrieb.TableDef, "Homepage", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktPerson_OBSOLETE { get { return new DBOColumnDef(KaBetrieb.TableDef, "KontaktPerson_OBSOLETE", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaBetriebTS { get { return new DBOColumnDef(KaBetrieb.TableDef, "KaBetriebTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeilbetriebID { get { return new DBOColumnDef(KaBetrieb.TableDef, "TeilbetriebID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CharakterCode { get { return new DBOColumnDef(KaBetrieb.TableDef, "CharakterCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef InAusbildungsverbund { get { return new DBOColumnDef(KaBetrieb.TableDef, "InAusbildungsverbund", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaBetrieb.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebBesprechung{
/// <summary>
/// Gets the table definition for KaBetriebBesprechung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaBetriebBesprechung", "", false); } }


/// <summary>
/// Primärschlüssel für KaBetriebBesprechung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaBetriebBesprechungID { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KaBetriebBesprechungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaBetriebBesprechung_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktGeplant { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KontaktGeplant", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktPersonID { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KontaktPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef AutorID { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "AutorID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktArtCode { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KontaktArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "Stichwort", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Inhalt { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "Inhalt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaBetriebBesprechungTS { get { return new DBOColumnDef(KaBetriebBesprechung.TableDef, "KaBetriebBesprechungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebDokument{
/// <summary>
/// Gets the table definition for KaBetriebDokument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaBetriebDokument", "", false); } }


/// <summary>
/// Primärschlüssel für KaBetriebDokument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaBetriebDokumentID { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "KaBetriebDokumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaBetriebDokument_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbsenderID { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "AbsenderID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressatID { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "AdressatID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "Stichwort", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokumentDocID { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "DokumentDocID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaBetriebDokumentTS { get { return new DBOColumnDef(KaBetriebDokument.TableDef, "KaBetriebDokumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebKontakt{
/// <summary>
/// Gets the table definition for KaBetriebKontakt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaBetriebKontakt", "", false); } }


/// <summary>
/// Primärschlüssel für KaBetriebKontakt Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaBetriebKontaktID { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "KaBetriebKontaktID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaBetriebKontakt_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Titel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Name", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Funktion { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Funktion", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Aktiv", typeof(System.Nullable<bool>), false, false, false, 1, true, "(1)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelefonMobil { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "TelefonMobil", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "Bemerkung", typeof(string), false, false, false, 7000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaBetriebKontaktTS { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "KaBetriebKontaktTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef UseZusatzadresse { get { return new DBOColumnDef(KaBetriebKontakt.TableDef, "UseZusatzadresse", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// KA - EAF - Sozioberufliche Bilanz
/// </summary>

public static class KaEafSozioberuflicheBilanz{
/// <summary>
/// Gets the table definition for KaEafSozioberuflicheBilanz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaEafSozioberuflicheBilanz", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaEafSozioberuflicheBilanzID { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "KaEafSozioberuflicheBilanzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaEafSozioberuflicheBilanz_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnwesendTeilzeit { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AnwesendTeilzeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schwerpunkte { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "Schwerpunkte", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessEinladungErfolgt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessEinladungErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAufnahmeverfahrenErfolgt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessAufnahmeverfahrenErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessErmittlungsprogrammErstellt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessErmittlungsprogrammErstellt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessFaehigkeitsprofilMelba { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessFaehigkeitsprofilMelba", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessZwischengespraech { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessZwischengespraech", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumZwischengespraech { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessDatumZwischengespraech", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessVerzahnungsgespraech1 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessVerzahnungsgespraech1", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumVerzahnungsgespraech1 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessDatumVerzahnungsgespraech1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessVerzahnungsgespraech2 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessVerzahnungsgespraech2", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumVerzahnungsgespraech2 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessDatumVerzahnungsgespraech2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessVerzahnungsgespraech3 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessVerzahnungsgespraech3", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumVerzahnungsgespraech3 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessDatumVerzahnungsgespraech3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAbschlussgespraechErfolgt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessAbschlussgespraechErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessSchlussbericht { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessSchlussbericht", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessFaehigkeitsAnalyse { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessFaehigkeitsAnalyse", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessBewerbungskompetenz { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessBewerbungskompetenz", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAustrittsbefragungErfolgt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessAustrittsbefragungErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessBemerkungenAbschluss { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "ProzessBemerkungenAbschluss", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufnahmeZielsetzungenRAV { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AufnahmeZielsetzungenRAV", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufnahmeErgebnisseInterview { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AufnahmeErgebnisseInterview", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufnahmeErgebnisseBewerbung { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AufnahmeErgebnisseBewerbung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufnahmeErgebnisseAssessment { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AufnahmeErgebnisseAssessment", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufnahmeErgebnisseWerkstatt { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AufnahmeErgebnisseWerkstatt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenDatumAufforderung { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "InterventionenDatumAufforderung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenAufforderung { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "InterventionenAufforderung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDatum { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "AustrittDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundCode { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "KaEafAustrittsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsgrundMassnahmeBeendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundMassnahmeBeendetCode { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "KaEafAustrittsgrundMassnahmeBeendetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsgrundAbbruchAnbieter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundAbbruchAnbieterCode { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "KaEafAustrittsgrundAbbruchAnbieterCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessErmittlungsprogramm { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_ProzessErmittlungsprogramm", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessFaehigkeitsprofilMelba { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_ProzessFaehigkeitsprofilMelba", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessSchlussbericht { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_ProzessSchlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessFaehigkeitsAnalyse { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_ProzessFaehigkeitsAnalyse", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessBewerbungskompetenz { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_ProzessBewerbungskompetenz", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVereinbarung { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_InterventionenVereinbarung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVerwarnung1 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_InterventionenVerwarnung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVerwarnung2 { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_InterventionenVerwarnung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenProgrammabbruch { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "DocumentID_InterventionenProgrammabbruch", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaEafSozioberuflicheBilanzTS { get { return new DBOColumnDef(KaEafSozioberuflicheBilanz.TableDef, "KaEafSozioberuflicheBilanzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KA - EAF - Spezifische Ermittlung
/// </summary>

public static class KaEafSpezifischeErmittlung{
/// <summary>
/// Gets the table definition for KaEafSpezifischeErmittlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaEafSpezifischeErmittlung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaEafSpezifischeErmittlungID { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "KaEafSpezifischeErmittlungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaEafSpezifischeErmittlung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnwesendTeilzeit { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "AnwesendTeilzeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zielsetzungen { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "Zielsetzungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessEinladungErfolgt { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessEinladungErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessVereinbarung { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessVereinbarung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumVereinbarung { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessDatumVereinbarung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAustauschgespraech1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessAustauschgespraech1", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumAustauschgespraech1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessDatumAustauschgespraech1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAustauschgespraech2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessAustauschgespraech2", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumAustauschgespraech2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessDatumAustauschgespraech2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAustauschgespraech3 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessAustauschgespraech3", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessDatumAustauschgespraech3 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessDatumAustauschgespraech3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAbschlussgespraechErfolgt { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessAbschlussgespraechErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessSchlussbericht { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessSchlussbericht", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProzessAustrittsbefragungErfolgt { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessAustrittsbefragungErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessBemerkungenAbschluss { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "ProzessBemerkungenAbschluss", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenDatumAufforderung1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "InterventionenDatumAufforderung1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenAufforderung1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "InterventionenAufforderung1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenDatumAufforderung2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "InterventionenDatumAufforderung2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionenAufforderung2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "InterventionenAufforderung2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDatum { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "AustrittDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundCode { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "KaEafAustrittsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsgrundMassnahmeBeendet wird mit Austrittgrund Massnahme beendet gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundMassnahmeBeendetCode { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "KaEafAustrittsgrundMassnahmeBeendetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaEafAustrittsgrundAbbruchAnbieter wird mit Austrittgrund Abbruch Anbieter gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEafAustrittsgrundAbbruchAnbieterCode { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "KaEafAustrittsgrundAbbruchAnbieterCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessVereinbarung { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_ProzessVereinbarung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_ProzessSchlussbericht { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_ProzessSchlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenAufforderung1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenAufforderung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenAufforderung2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenAufforderung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenAufforderung3 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenAufforderung3", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVereinbarung1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenVereinbarung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVereinbarung2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenVereinbarung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVerwarnung1 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenVerwarnung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenVerwarnung2 { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenVerwarnung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_InterventionenProgrammabbruch { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "DocumentID_InterventionenProgrammabbruch", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaEafSpezifischeErmittlungTS { get { return new DBOColumnDef(KaEafSpezifischeErmittlung.TableDef, "KaEafSpezifischeErmittlungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaEinsatz{
/// <summary>
/// Gets the table definition for KaEinsatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaEinsatz", "", false); } }


/// <summary>
/// Primärschlüssel für KaEinsatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaEinsatzID { get { return new DBOColumnDef(KaEinsatz.TableDef, "KaEinsatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaEinsatz.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(KaEinsatz.TableDef, "KaEinsatzplatzID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die methodische Leistung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaEinsatz.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnweisungCode { get { return new DBOColumnDef(KaEinsatz.TableDef, "AnweisungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KaEinsatz.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KaEinsatz.TableDef, "DatumBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Definition ob der Einsatz an Samstagen erlaubt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SamstagAktiv { get { return new DBOColumnDef(KaEinsatz.TableDef, "SamstagAktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Definition ob der Einsatz an Sonntagen erlaubt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SonntagAktiv { get { return new DBOColumnDef(KaEinsatz.TableDef, "SonntagAktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeschGrad { get { return new DBOColumnDef(KaEinsatz.TableDef, "BeschGrad", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef APVZusatzCode { get { return new DBOColumnDef(KaEinsatz.TableDef, "APVZusatzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonenNr { get { return new DBOColumnDef(KaEinsatz.TableDef, "PersonenNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RahmenfristBis { get { return new DBOColumnDef(KaEinsatz.TableDef, "RahmenfristBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ALKasseID { get { return new DBOColumnDef(KaEinsatz.TableDef, "ALKasseID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuweiserID { get { return new DBOColumnDef(KaEinsatz.TableDef, "ZuweiserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaEinsatz.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaEinsatz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaEinsatz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaEinsatz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaEinsatz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaEinsatzTS { get { return new DBOColumnDef(KaEinsatz.TableDef, "KaEinsatzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaEinsatzplatz{
/// <summary>
/// Gets the table definition for KaEinsatzplatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaEinsatzplatz", "", false); } }


/// <summary>
/// Primärschlüssel für KaEinsatzplatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "KaEinsatzplatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrancheCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "BrancheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaEinsatzplatz_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "(1)", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaProgrammCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "KaProgrammCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKA { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "ZustaendigKA", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LehrberufCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "LehrberufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerufsAusbildungTyp { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "BerufsAusbildungTyp", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef NeuGeschaffeneLehrstelle { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "NeuGeschaffeneLehrstelle", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Details { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "Details", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfassungsDatum { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "ErfassungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzAb { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "EinsatzAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef DauerUnbefristet { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "DauerUnbefristet", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesamtPensum { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "GesamtPensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef PensumAufteilbar { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "PensumAufteilbar", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzelpensumMinimum { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "EinzelpensumMinimum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzelpensumMaximum { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "EinzelpensumMaximum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef PensumUnbestimmt { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "PensumUnbestimmt", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Fuehrerausweis { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "Fuehrerausweis", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FuehrerausweisKategorieCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "FuehrerausweisKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef PCKenntnisse { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "PCKenntnisse", typeof(System.Nullable<bool>), false, false, false, 1, true, "(0)", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschMuendlichCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "DeutschMuendlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschSchriftlichCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "DeutschSchriftlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusbildungCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "AusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WeitereAnforderungen { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "WeitereAnforderungen", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaEinsatzplatz_KaBetriebKontakt) => KaBetriebKontakt.KaBetriebKontaktID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaKontaktpersonID { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "KaKontaktpersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FunktionCode { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "FunktionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "Bemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaEinsatzplatzTS { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "KaEinsatzplatzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaEinsatzplatz.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// Liste der Einsatzplätze mit DatumVon - DatumBis
/// </summary>

public static class KaEinsatzplatz2{
/// <summary>
/// Gets the table definition for KaEinsatzplatz2
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaEinsatzplatz2", "", false); } }


/// <summary>
/// Primärschlüssel für KaEinsatzplatz2 Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "KaEinsatzplatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Bezeichnung des Einsatzplatzes
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Code aus Werteliste KaProjekt
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ProjektCode { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "ProjektCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Code aus Werteliste KaProfil
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProfilCode { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "ProfilCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code aus Werteliste KaAPV
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef APVCode { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "APVCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// DatumVon des Einsatzplatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// DatumBis des Einsatzplatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Timestamp für Tabelle KaEinsatzplatz2
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaEinsatzplatz2TS { get { return new DBOColumnDef(KaEinsatzplatz2.TableDef, "KaEinsatzplatz2TS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaExterneBildung{
/// <summary>
/// Gets the table definition for KaExterneBildung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaExterneBildung", "", false); } }


/// <summary>
/// Primärschlüssel für KaExterneBildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaExterneBildungID { get { return new DBOColumnDef(KaExterneBildung.TableDef, "KaExterneBildungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaExterneBildung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaExterneBildung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaExterneBildung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kurstyp { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Kurstyp", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kursort { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Kursort", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KaExterneBildung.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KaExterneBildung.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzahlKurstage { get { return new DBOColumnDef(KaExterneBildung.TableDef, "AnzahlKurstage", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Kursbestaetigung { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Kursbestaetigung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnteilKA { get { return new DBOColumnDef(KaExterneBildung.TableDef, "AnteilKA", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnteilDritte { get { return new DBOColumnDef(KaExterneBildung.TableDef, "AnteilDritte", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaProgrammCode { get { return new DBOColumnDef(KaExterneBildung.TableDef, "KaProgrammCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaExterneBildung.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaExterneBildung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaExterneBildungTS { get { return new DBOColumnDef(KaExterneBildung.TableDef, "KaExterneBildungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaExterneBildungZahlung{
/// <summary>
/// Gets the table definition for KaExterneBildungZahlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaExterneBildungZahlung", "", false); } }


/// <summary>
/// Primärschlüssel für KaExterneBildungZahlung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaExterneBildungZahlungID { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "KaExterneBildungZahlungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaExterneBildungZahlung_KaExterneBildung) => KaExterneBildung.KaExterneBildungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaExterneBildungID { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "KaExterneBildungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zweck { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "Zweck", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaExterneBildungZahlungTS { get { return new DBOColumnDef(KaExterneBildungZahlung.TableDef, "KaExterneBildungZahlungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Einträge für Phase Inizio
/// </summary>

public static class KaInizio{
/// <summary>
/// Gets the table definition for KaInizio
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaInizio", "", false); } }


/// <summary>
/// Primärschlüssel für KaInizio Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaInizioID { get { return new DBOColumnDef(KaInizio.TableDef, "KaInizioID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaInizio_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaInizio.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Datum Mappe verschickt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MappeVerschickt { get { return new DBOColumnDef(KaInizio.TableDef, "MappeVerschickt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Anmeldung eingegangen
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungEingegangen { get { return new DBOColumnDef(KaInizio.TableDef, "AnmeldungEingegangen", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Code aus Werteliste KaInizioAnmeldungDurch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungDurchCode { get { return new DBOColumnDef(KaInizio.TableDef, "AnmeldungDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code aus Werteliste KaInizioSchulabschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchulabschlussCode { get { return new DBOColumnDef(KaInizio.TableDef, "SchulabschlussCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code aus Werteliste KaInizioAusbildungEmpfehlung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EmpfehlungInizioCode { get { return new DBOColumnDef(KaInizio.TableDef, "EmpfehlungInizioCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code aus Werteliste KaInizioAbschlussPhase1
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussPhaseCode { get { return new DBOColumnDef(KaInizio.TableDef, "AbschlussPhaseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Timestamp für Tabelle KaInizio
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaInizioTS { get { return new DBOColumnDef(KaInizio.TableDef, "KaInizioTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaIntegBildung{
/// <summary>
/// Gets the table definition for KaIntegBildung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaIntegBildung", "", false); } }


/// <summary>
/// Primärschlüssel für KaIntegBildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaIntegBildungID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "KaIntegBildungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaIntegBildung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaIntegBildung_KaKurserfassung) => KaKurserfassung.KaKurserfassungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaKurserfassungID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "KaKurserfassungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eintritt { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Eintritt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Austritt { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Austritt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussCode { get { return new DBOColumnDef(KaIntegBildung.TableDef, "AbschlussCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDokID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "AbschlussDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RueckmeldungDokID { get { return new DBOColumnDef(KaIntegBildung.TableDef, "RueckmeldungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursbestFlag { get { return new DBOColumnDef(KaIntegBildung.TableDef, "KursbestFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaIntegBildung.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaProgrammCode { get { return new DBOColumnDef(KaIntegBildung.TableDef, "KaProgrammCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaIntegBildung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaIntegBildungTS { get { return new DBOColumnDef(KaIntegBildung.TableDef, "KaIntegBildungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaJobtimal{
/// <summary>
/// Gets the table definition for KaJobtimal
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaJobtimal", "", false); } }


/// <summary>
/// Primärschlüssel für KaJobtimal Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaJobtimalID { get { return new DBOColumnDef(KaJobtimal.TableDef, "KaJobtimalID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaJobtimal_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaJobtimal.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaInstitutionKontakt wenn es positiv ist und auf XUser wenn es negativ ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuweiserID { get { return new DBOColumnDef(KaJobtimal.TableDef, "ZuweiserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code der LOV "KaVermittlungBiBIPSiAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungCode { get { return new DBOColumnDef(KaJobtimal.TableDef, "AnmeldungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Fähigkeitsprofil
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Faehigkeitsprofil { get { return new DBOColumnDef(KaJobtimal.TableDef, "DocumentID_Faehigkeitsprofil", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum Sozialhilfebezug ab
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SozialhilfebezugAb { get { return new DBOColumnDef(KaJobtimal.TableDef, "SozialhilfebezugAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Code der LOV "KaSozialhilfebezug"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaSozialhilfebezugCode { get { return new DBOColumnDef(KaJobtimal.TableDef, "KaSozialhilfebezugCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Schlussbericht { get { return new DBOColumnDef(KaJobtimal.TableDef, "DocumentID_Schlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Abschlussdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(KaJobtimal.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittgrundCode { get { return new DBOColumnDef(KaJobtimal.TableDef, "AustrittgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code der LOV "KaVermittlungDossierRetourAnSDGrund"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierRetourAnSDGrundCode { get { return new DBOColumnDef(KaJobtimal.TableDef, "DossierRetourAnSDGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KaJobtimal.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaJobtimal.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaJobtimal.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaJobtimal.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaJobtimal.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaJobtimal.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaJobtimalTS { get { return new DBOColumnDef(KaJobtimal.TableDef, "KaJobtimalTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaJobtimalVertrag{
/// <summary>
/// Gets the table definition for KaJobtimalVertrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaJobtimalVertrag", "", false); } }


/// <summary>
/// Primärschlüssel für KaJobtimalVertrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaJobtimalVertragID { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "KaJobtimalVertragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaJobtimalVertrag_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagID { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "KaVermittlungVorschlagID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaJobtimalVertragTypCode { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "KaJobtimalVertragTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaJobtimalVertragTS { get { return new DBOColumnDef(KaJobtimalVertrag.TableDef, "KaJobtimalVertragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKontaktartProzess{
/// <summary>
/// Gets the table definition for KaKontaktartProzess
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaKontaktartProzess", "", false); } }


/// <summary>
/// Primärschlüssel für KaKontaktartProzess Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaKontaktartProzessID { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "KaKontaktartProzessID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaKontaktartProzess_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Eintrags
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// LOV KaKontaktartProzess
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaKontaktartProzessCode { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "KaKontaktartProzessCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaKontaktartProzessStatusCode { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "KaKontaktartProzessStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaKontaktartProzessTS { get { return new DBOColumnDef(KaKontaktartProzess.TableDef, "KaKontaktartProzessTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKurs{
/// <summary>
/// Gets the table definition for KaKurs
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaKurs", "", false); } }


/// <summary>
/// Primärschlüssel für KaKurs Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaKursID { get { return new DBOColumnDef(KaKurs.TableDef, "KaKursID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(KaKurs.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Nr { get { return new DBOColumnDef(KaKurs.TableDef, "Nr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzLektionen { get { return new DBOColumnDef(KaKurs.TableDef, "AnzLektionen", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Plaetze { get { return new DBOColumnDef(KaKurs.TableDef, "Plaetze", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SektionCode { get { return new DBOColumnDef(KaKurs.TableDef, "SektionCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef ClosedFlag { get { return new DBOColumnDef(KaKurs.TableDef, "ClosedFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaKursTS { get { return new DBOColumnDef(KaKurs.TableDef, "KaKursTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKurserfassung{
/// <summary>
/// Gets the table definition for KaKurserfassung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaKurserfassung", "", false); } }


/// <summary>
/// Primärschlüssel für KaKurserfassung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaKurserfassungID { get { return new DBOColumnDef(KaKurserfassung.TableDef, "KaKurserfassungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaKurserfassung_KaKurs) => KaKurs.KaKursID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KursID { get { return new DBOColumnDef(KaKurserfassung.TableDef, "KursID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursNr { get { return new DBOColumnDef(KaKurserfassung.TableDef, "KursNr", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KaKurserfassung.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KaKurserfassung.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SistiertFlag { get { return new DBOColumnDef(KaKurserfassung.TableDef, "SistiertFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaKurserfassungTS { get { return new DBOColumnDef(KaKurserfassung.TableDef, "KaKurserfassungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Qualifizierung Erwachsene - EPQ
/// </summary>

public static class KaQEEPQ{
/// <summary>
/// Gets the table definition for KaQEEPQ
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQEEPQ", "", false); } }


/// <summary>
/// Primärschlüssel für KaQEEPQ Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQEEPQID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "KaQEEPQID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQEEPQ_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// ID des ersten Dokuments für die Standortbestimmung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Standortbestimmung1 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "XDocumentID_Standortbestimmung1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des zweiten Dokuments für die Standortbestimmung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Standortbestimmung2 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "XDocumentID_Standortbestimmung2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des Dokuments für das Vorstellungsgespräch (Intake)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Vorstellungsgespraech { get { return new DBOColumnDef(KaQEEPQ.TableDef, "XDocumentID_Vorstellungsgespraech", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQEEPQ.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StaoDat { get { return new DBOColumnDef(KaQEEPQ.TableDef, "StaoDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaetigProgrammDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "TaetigProgrammDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonalblattDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "PersonalblattDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwBericht1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ZwBericht1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwBericht2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ZwBericht2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef VerlaengerungFlag { get { return new DBOColumnDef(KaQEEPQ.TableDef, "VerlaengerungFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlaengerungDat { get { return new DBOColumnDef(KaQEEPQ.TableDef, "VerlaengerungDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schlussbericht1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Schlussbericht1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schlussbericht2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Schlussbericht2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitszeugnisDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ArbeitszeugnisDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwischenzeugnisDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ZwischenzeugnisDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungDat1 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "EinladungDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungDat2 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "EinladungDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einladung1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Einladung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einladung2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Einladung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IntakeCodes { get { return new DBOColumnDef(KaQEEPQ.TableDef, "IntakeCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgBeginn { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ProgBeginn", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RueckanwortDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "RueckanwortDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungProgBeginn1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "EinladungProgBeginn1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungProgBeginn2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "EinladungProgBeginn2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndivZieleRAV { get { return new DBOColumnDef(KaQEEPQ.TableDef, "IndivZieleRAV", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndivZieleRAVDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "IndivZieleRAVDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndivZieleRAVVerl { get { return new DBOColumnDef(KaQEEPQ.TableDef, "IndivZieleRAVVerl", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IndivZieleRAVVerlDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "IndivZieleRAVVerlDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDatum { get { return new DBOColumnDef(KaQEEPQ.TableDef, "AustrittDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittGrund { get { return new DBOColumnDef(KaQEEPQ.TableDef, "AustrittGrund", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCode { get { return new DBOColumnDef(KaQEEPQ.TableDef, "AustrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittBemerkung { get { return new DBOColumnDef(KaQEEPQ.TableDef, "AustrittBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordDat1 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "muendAuffordDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordDat2 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "muendAuffordDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordBem1 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "muendAuffordBem1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordBem2 { get { return new DBOColumnDef(KaQEEPQ.TableDef, "muendAuffordBem2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Aufforderung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Aufforderung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung3DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Aufforderung3DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vereinbarung1DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Vereinbarung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vereinbarung2DokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "Vereinbarung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgAbbruchDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "ProgAbbruchDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerlaengerungDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "VerlaengerungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwRegelverstossDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "VerwRegelverstossDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwNichterscheinenDokID { get { return new DBOColumnDef(KaQEEPQ.TableDef, "VerwNichterscheinenDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQEEPQTS { get { return new DBOColumnDef(KaQEEPQ.TableDef, "KaQEEPQTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEEPQZielvereinb{
/// <summary>
/// Gets the table definition for KaQEEPQZielvereinb
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQEEPQZielvereinb", "", false); } }


/// <summary>
/// Primärschlüssel für KaQEEPQZielvereinb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQEEPQZielvereinbID { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "KaQEEPQZielvereinbID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQEEPQZielvereinb_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FeinzielDat { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "FeinzielDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Feinziel { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "Feinziel", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErreichenBis { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "ErreichenBis", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MessungZielerreichung { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "MessungZielerreichung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ergebnis { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "Ergebnis", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQEEPQZielvereinbTS { get { return new DBOColumnDef(KaQEEPQZielvereinb.TableDef, "KaQEEPQZielvereinbTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEEPQZielvereinbVerl{
/// <summary>
/// Gets the table definition for KaQEEPQZielvereinbVerl
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQEEPQZielvereinbVerl", "", false); } }


/// <summary>
/// Primärschlüssel für KaQEEPQZielvereinbVerl Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQEEPQZielvereinbVerlID { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "KaQEEPQZielvereinbVerlID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQEEPQZielvereinbVerl_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FeinzielDat { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "FeinzielDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Feinziel { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "Feinziel", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErreichenBis { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "ErreichenBis", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MessungZielerreichung { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "MessungZielerreichung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ergebnis { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "Ergebnis", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQEEPQZielvereinbVerlTS { get { return new DBOColumnDef(KaQEEPQZielvereinbVerl.TableDef, "KaQEEPQZielvereinbVerlTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEJobtimum{
/// <summary>
/// Gets the table definition for KaQEJobtimum
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQEJobtimum", "", false); } }


/// <summary>
/// Primärschlüssel für KaQEJobtimum Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQEJobtimumID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "KaQEJobtimumID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQEJobtimum_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielDat1 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielDat2 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielDat3 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielDat3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielDat4 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielDat4", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielCode1 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielCode1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielCode2 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielCode2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielCode3 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielCode3", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielCode4 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZielCode4", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ziel1DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Ziel1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ziel2DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Ziel2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ziel3DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Ziel3DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ziel4DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Ziel4DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwischenberichtDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ZwischenberichtDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchlussberichtDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "SchlussberichtDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schlussbericht1DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Schlussbericht1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeilnahmebestDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "TeilnahmebestDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungDat1 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "EinladungDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinladungDat2 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "EinladungDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einladung1DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Einladung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einladung2DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Einladung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Einladung1Flag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Einladung1Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Einladung2Flag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Einladung2Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgBeginnOLD { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ProgBeginnOLD", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgBeginnCodeOLD { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ProgBeginnCodeOLD", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ChecklisteFlag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ChecklisteFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HausordnungFlag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "HausordnungFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HausrundgangFlag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "HausrundgangFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef UnterlagenFlag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "UnterlagenFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TerminDat { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "TerminDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatzinfos { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Zusatzinfos", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordDat1 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "muendAuffordDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordDat2 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "muendAuffordDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordBem1 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "muendAuffordBem1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef muendAuffordBem2 { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "muendAuffordBem2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verwarnung1DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Verwarnung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verwarnung2DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Verwarnung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verwarnung1aDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Verwarnung1aDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verwarnung2aDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "Verwarnung2aDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgAbbruchDokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ProgAbbruchDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDatum { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "AustrittDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittGrund { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "AustrittGrund", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCode { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "AustrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittBemerkung { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "AustrittBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQEJobtimumTS { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "KaQEJobtimumTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgAbbruch2DokID { get { return new DBOColumnDef(KaQEJobtimum.TableDef, "ProgAbbruch2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJBildung{
/// <summary>
/// Gets the table definition for KaQJBildung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJBildung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJBildungID { get { return new DBOColumnDef(KaQJBildung.TableDef, "KaQJBildungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJBildung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursBewerbungFlag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursBewerbungFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursInformatikFlag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursInformatikFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursVideoFlag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursVideoFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursWissenFlag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursWissenFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom1Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom1Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom1Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom1Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom2Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom2Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom2Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom2Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom3Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom3Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom3Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom3Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom4Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom4Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom4Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom4Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom5Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom5Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom5Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom5Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KursCustom6Flag { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom6Flag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KursCustom6Text { get { return new DBOColumnDef(KaQJBildung.TableDef, "KursCustom6Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaQJBildung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaQJBildung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaQJBildung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaQJBildung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJBildung.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJBildungTS { get { return new DBOColumnDef(KaQJBildung.TableDef, "KaQJBildungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJIntake{
/// <summary>
/// Gets the table definition for KaQJIntake
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJIntake", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJIntake Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJIntakeID { get { return new DBOColumnDef(KaQJIntake.TableDef, "KaQJIntakeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJIntake_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJIntake.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuweiserID { get { return new DBOColumnDef(KaQJIntake.TableDef, "ZuweiserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuteilungCode { get { return new DBOColumnDef(KaQJIntake.TableDef, "ZuteilungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WerkstattCode { get { return new DBOColumnDef(KaQJIntake.TableDef, "WerkstattCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ExternFlag { get { return new DBOColumnDef(KaQJIntake.TableDef, "ExternFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eintritt { get { return new DBOColumnDef(KaQJIntake.TableDef, "Eintritt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WartelisteCode { get { return new DBOColumnDef(KaQJIntake.TableDef, "WartelisteCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaQjIntakeSpracheCode_Hauptsprache { get { return new DBOColumnDef(KaQJIntake.TableDef, "KaQjIntakeSpracheCode_Hauptsprache", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaQjIntakeSpracheCode_Erstsprache { get { return new DBOColumnDef(KaQJIntake.TableDef, "KaQjIntakeSpracheCode_Erstsprache", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaQJIntake.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJIntake.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbgemeldetALVFlag { get { return new DBOColumnDef(KaQJIntake.TableDef, "AbgemeldetALVFlag", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NichtErschFlag { get { return new DBOColumnDef(KaQJIntake.TableDef, "NichtErschFlag", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesprStattgefFlag { get { return new DBOColumnDef(KaQJIntake.TableDef, "GesprStattgefFlag", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Intakegespraech { get { return new DBOColumnDef(KaQJIntake.TableDef, "DocumentID_Intakegespraech", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaQJIntake.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaQJIntake.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaQJIntake.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaQJIntake.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJIntakeTS { get { return new DBOColumnDef(KaQJIntake.TableDef, "KaQJIntakeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KA - Qualifizierung Jugend - Intake
/// </summary>

public static class KaQJIntakeGespraech{
/// <summary>
/// Gets the table definition for KaQJIntakeGespraech
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJIntakeGespraech", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle KaQJIntakeGespraech
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJIntakeGespraechID { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "KaQJIntakeGespraechID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle KaQJIntake
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaQJIntakeID { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "KaQJIntakeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Gesprächs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Präsenz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaQjIntakePraesenzCode { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "KaQjIntakePraesenzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Entscheid
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaQjIntakeEntscheidCode { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "KaQjIntakeEntscheidCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJIntakeGespraechTS { get { return new DBOColumnDef(KaQJIntakeGespraech.TableDef, "KaQJIntakeGespraechTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJProzess{
/// <summary>
/// Gets the table definition for KaQJProzess
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJProzess", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJProzess Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJProzessID { get { return new DBOColumnDef(KaQJProzess.TableDef, "KaQJProzessID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJProzess_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJProzess.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KompetenzDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "KompetenzDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwischenzeugnisDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "ZwischenzeugnisDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LebenslaufDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "LebenslaufDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StandortbestDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "StandortbestDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgrammBildungDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "ProgrammBildungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeilageSEMODokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "BeilageSEMODokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgEnde { get { return new DBOColumnDef(KaQJProzess.TableDef, "ProgEnde", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeraterID { get { return new DBOColumnDef(KaQJProzess.TableDef, "BeraterID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FallfuehrungID { get { return new DBOColumnDef(KaQJProzess.TableDef, "FallfuehrungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AndereStellen { get { return new DBOColumnDef(KaQJProzess.TableDef, "AndereStellen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgEndeGrund { get { return new DBOColumnDef(KaQJProzess.TableDef, "ProgEndeGrund", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgEndeCode { get { return new DBOColumnDef(KaQJProzess.TableDef, "ProgEndeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbbruchCode { get { return new DBOColumnDef(KaQJProzess.TableDef, "AbbruchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TermineStaoDokID { get { return new DBOColumnDef(KaQJProzess.TableDef, "TermineStaoDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJProzess.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJProzessTS { get { return new DBOColumnDef(KaQJProzess.TableDef, "KaQJProzessTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZAssessment{
/// <summary>
/// Gets the table definition for KaQJPZAssessment
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJPZAssessment", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJPZAssessmentID { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "KaQJPZAssessmentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAssessment { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "DatumAssessment", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AufgA { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "AufgA", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AufgB { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "AufgB", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AufgC { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "AufgC", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AufgD { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "AufgD", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KandDokIn { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "KandDokIn", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ProjGefaehrFlag { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "ProjGefaehrFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProjGefaehrGrund { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "ProjGefaehrGrund", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef NichtAufgFlag { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "NichtAufgFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NichtAufgGrund { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "NichtAufgGrund", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJPZAssessmentTS { get { return new DBOColumnDef(KaQJPZAssessment.TableDef, "KaQJPZAssessmentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KaQJPZBericht
/// </summary>

public static class KaQJPZBericht{
/// <summary>
/// Gets the table definition for KaQJPZBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJPZBericht", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJPZBericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJPZBerichtID { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "KaQJPZBerichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJPZBericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum des Berichts
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// BerichtTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaQJPZBerichtTypCode { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "KaQJPZBerichtTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Referenz zum Document
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJPZBerichtTS { get { return new DBOColumnDef(KaQJPZBericht.TableDef, "KaQJPZBerichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZSchlussbericht{
/// <summary>
/// Gets the table definition for KaQJPZSchlussbericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJPZSchlussbericht", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJPZSchlussbericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJPZSchlussberichtID { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "KaQJPZSchlussberichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJPZSchlussbericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AQualitaetCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "AQualitaetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ATempoCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "ATempoCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AOrganisationCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "AOrganisationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LernfaehigkeitCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "LernfaehigkeitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandesspracheCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "LandesspracheCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SelbstaendigCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "SelbstaendigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuverlaessigCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "ZuverlaessigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PuenktlichCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "PuenktlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusdauerCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "AusdauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrdnungCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "OrdnungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SorgfaltCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "SorgfaltCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftretenCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "AuftretenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KommunikationCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "KommunikationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeamfaehigCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "TeamfaehigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KritikfaehigCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "KritikfaehigCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FlexibilitaetCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "FlexibilitaetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "MotivationCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErscheinungCode { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "ErscheinungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DeutschFlag { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "DeutschFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef FranzFlag { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "FranzFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemKompetenz { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BemKompetenz", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemBildung { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BemBildung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemZielvereinbarung { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BemZielvereinbarung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemAbsenzen { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BemAbsenzen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemEmpfehlung { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BemEmpfehlung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef EingVermittelbarFlag { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "EingVermittelbarFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EingVermittelbar { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "EingVermittelbar", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchlussberichtDokID { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "SchlussberichtDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeurteilungDat { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "BeurteilungDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJPZSchlussberichtTS { get { return new DBOColumnDef(KaQJPZSchlussbericht.TableDef, "KaQJPZSchlussberichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZZielvereinbarung{
/// <summary>
/// Gets the table definition for KaQJPZZielvereinbarung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJPZZielvereinbarung", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJPZZielvereinbarung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJPZZielvereinbarungID { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "KaQJPZZielvereinbarungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJPZZielvereinbarung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielDatum { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "ZielDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VereinbartesZiel { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "VereinbartesZiel", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErreichenBis { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "ErreichenBis", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KriterienPruefen { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "KriterienPruefen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeurteilungID { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "BeurteilungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBeurteilung { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "DatumBeurteilung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielvereinbarungDokID { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "ZielvereinbarungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJPZZielvereinbarungTS { get { return new DBOColumnDef(KaQJPZZielvereinbarung.TableDef, "KaQJPZZielvereinbarungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJVereinbarung{
/// <summary>
/// Gets the table definition for KaQJVereinbarung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaQJVereinbarung", "", false); } }


/// <summary>
/// Primärschlüssel für KaQJVereinbarung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaQJVereinbarungID { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "KaQJVereinbarungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQJVereinbarung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vereinbarung { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "Vereinbarung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltAm { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "ErstelltAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerCode { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "DauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Erfuellt { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "Erfuellt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundZiel { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "GrundZiel", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abmachungen { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "Abmachungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VereinbarungDokID { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "VereinbarungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaQJVereinbarungTS { get { return new DBOColumnDef(KaQJVereinbarung.TableDef, "KaQJVereinbarungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaSequenzen{
/// <summary>
/// Gets the table definition for KaSequenzen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaSequenzen", "", false); } }


/// <summary>
/// Primärschlüssel für KaSequenzen Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaSequenzenID { get { return new DBOColumnDef(KaSequenzen.TableDef, "KaSequenzenID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaSequenzen_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaSequenzen.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SequenzCode { get { return new DBOColumnDef(KaSequenzen.TableDef, "SequenzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PraesenzCode { get { return new DBOColumnDef(KaSequenzen.TableDef, "PraesenzCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaSequenzen.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaSequenzenTS { get { return new DBOColumnDef(KaSequenzen.TableDef, "KaSequenzenTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Transfer - Prozess
/// </summary>

public static class KaTransfer{
/// <summary>
/// Gets the table definition for KaTransfer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaTransfer", "", false); } }


/// <summary>
/// Primärschlüssel für KaTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaTransferID { get { return new DBOColumnDef(KaTransfer.TableDef, "KaTransferID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaQEEPQ_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaTransfer.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Flag für die Sichtbarkeit für SD
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaTransfer.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum des Telefons des Erstkontakts (Prozessübersicht)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelErstkontaktDat { get { return new DBOColumnDef(KaTransfer.TableDef, "TelErstkontaktDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ID des Dokuments für die Rückmeldung RAV (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RueckmeldungRAVDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "RueckmeldungRAVDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum VG (Prozessübersicht)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVG { get { return new DBOColumnDef(KaTransfer.TableDef, "DatumVG", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ID des Dokuments für die Situationserfassung VG (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SituationserfassungVGDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "SituationserfassungVGDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des Dokuments für den Entwicklungsverlauf (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EntwicklungsverlaufDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "EntwicklungsverlaufDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des Dokuments für das Personalblatt (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonalblattDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "PersonalblattDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des Dokuments für das Faehigkeitsprofil (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaehigkeitsprofilDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "FaehigkeitsprofilDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des ersten Dokuments für die Arbeitsproben (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitsprobenDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "ArbeitsprobenDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des zweiten Dokuments für den Schlussbericht (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchlussberichtDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "SchlussberichtDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des Dokuments für die Teilnahmebestätigung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeilnahmebestaetigungDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "TeilnahmebestaetigungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Text für allgemeine Zielsetzungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AllgZiele { get { return new DBOColumnDef(KaTransfer.TableDef, "AllgZiele", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Dokument-ID für die allgemeine Zielsetzungen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AllgZieleDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "AllgZieleDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Text für die Bewerbungsstrategie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bewerbungsstrategie { get { return new DBOColumnDef(KaTransfer.TableDef, "Bewerbungsstrategie", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Erstes Datum für die mündliche Aufforderung (Interventionen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungDat1 { get { return new DBOColumnDef(KaTransfer.TableDef, "MuendAufforderungDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Zweites Datum für die mündliche Aufforderung (Interventionen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungDat2 { get { return new DBOColumnDef(KaTransfer.TableDef, "MuendAufforderungDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Erste Bemerkung für das Feld der mündlichen Aufforderung (Interventionen)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungBem1 { get { return new DBOColumnDef(KaTransfer.TableDef, "MuendAufforderungBem1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Zweite Bemerkung für das Feld der mündlichen Aufforderung (Interventionen)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungBem2 { get { return new DBOColumnDef(KaTransfer.TableDef, "MuendAufforderungBem2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// ID des ersten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung1DokID { get { return new DBOColumnDef(KaTransfer.TableDef, "Aufforderung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des zweiten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung2DokID { get { return new DBOColumnDef(KaTransfer.TableDef, "Aufforderung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des dritten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufforderung3DokID { get { return new DBOColumnDef(KaTransfer.TableDef, "Aufforderung3DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des ersten Dokuments für die Vereinbarung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vereinbarung1DokID { get { return new DBOColumnDef(KaTransfer.TableDef, "Vereinbarung1DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des zweiten Dokuments für die Vereinbarung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vereinbarung2DokID { get { return new DBOColumnDef(KaTransfer.TableDef, "Vereinbarung2DokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des  Dokuments für den Regelverstoss (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RegelverstossDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "RegelverstossDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des  Dokuments fürs Nichterscheinen (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NichterscheinenDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "NichterscheinenDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// ID des  Dokuments für den Programmabbruch (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProgrammabbruchDokID { get { return new DBOColumnDef(KaTransfer.TableDef, "ProgrammabbruchDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Austrittsdatum (Austritt)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDat { get { return new DBOColumnDef(KaTransfer.TableDef, "AustrittDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Austrittsgrund (Austritt)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittGrund { get { return new DBOColumnDef(KaTransfer.TableDef, "AustrittGrund", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Austrittscode (Austritt)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCode { get { return new DBOColumnDef(KaTransfer.TableDef, "AustrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung für den Austritt (Austritt)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittBem { get { return new DBOColumnDef(KaTransfer.TableDef, "AustrittBem", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaTransfer.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaTransfer.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaTransfer.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaTransfer.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaTransferTS { get { return new DBOColumnDef(KaTransfer.TableDef, "KaTransferTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Transfer - Prozess - Zielvereinbarung
/// </summary>

public static class KaTransferZielvereinb{
/// <summary>
/// Gets the table definition for KaTransferZielvereinb
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaTransferZielvereinb", "", false); } }


/// <summary>
/// Primärschlüssel für KaTransferZielvereinb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaTransferZielvereinbID { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "KaTransferZielvereinbID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaTransferZielvereinb_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FeinzielDat { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "FeinzielDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Feinziel { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Feinziel", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErreichenBis { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "ErreichenBis", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzessAuftrag { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "ProzessAuftrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ergebnis { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Ergebnis", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaTransferZielvereinbTS { get { return new DBOColumnDef(KaTransferZielvereinb.TableDef, "KaTransferZielvereinbTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für Maske KA Allgemein - Verlauf
/// </summary>

public static class KaVerlauf{
/// <summary>
/// Gets the table definition for KaVerlauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVerlauf", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVerlaufID { get { return new DBOColumnDef(KaVerlauf.TableDef, "KaVerlaufID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungBIBIP_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaVerlauf.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KaVerlauf.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KaVerlauf.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAllgemKontaktartCode { get { return new DBOColumnDef(KaVerlauf.TableDef, "KaAllgemKontaktartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktperson { get { return new DBOColumnDef(KaVerlauf.TableDef, "Kontaktperson", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(KaVerlauf.TableDef, "Stichwort", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAllgemThemaCodes { get { return new DBOColumnDef(KaVerlauf.TableDef, "KaAllgemThemaCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltRTF { get { return new DBOColumnDef(KaVerlauf.TableDef, "InhaltRTF", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaVerlauf.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaVerlauf.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaVerlauf.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaVerlauf.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaVerlauf.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVerlaufTS { get { return new DBOColumnDef(KaVerlauf.TableDef, "KaVerlaufTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungBIBIP{
/// <summary>
/// Gets the table definition for KaVermittlungBIBIP
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungBIBIP", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungBIBIP Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungBIBIPID { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "KaVermittlungBIBIPID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungBIBIP_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// LOV KaVermittlungBiBIPSiAnmeldung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungCode { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "AnmeldungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Priorisiert { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Priorisiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuweiserID { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "ZuweiserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierAnCoach { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "DossierAnCoach", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DossierInaktiv { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "DossierInaktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Schlussbericht { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "DocumentID_Schlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WechselKAIntern { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "WechselKAIntern", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// LOV KaVermittlungGrundWechselKaIntern
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WechselKAInternGrundCode { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "WechselKAInternGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DossierRetourAnSD { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "DossierRetourAnSD", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// LOV KaVermittlungDossierRetourAnSDGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierRetourAnSDGrundCode { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "DossierRetourAnSDGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungBIBIPTS { get { return new DBOColumnDef(KaVermittlungBIBIP.TableDef, "KaVermittlungBIBIPTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungEinsatz{
/// <summary>
/// Gets the table definition for KaVermittlungEinsatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungEinsatz", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungEinsatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungEinsatzID { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "KaVermittlungEinsatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungEinsatz_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagID { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "KaVermittlungVorschlagID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lehrvertrag { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Lehrvertrag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVon { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzBis { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Unbefristet { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Unbefristet", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Verlaengerung { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Verlaengerung", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Arbeitspensum { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Arbeitspensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitspensumErgaenzungen { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "ArbeitspensumErgaenzungen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Leistungsfaehigkeit { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Leistungsfaehigkeit", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVereinbarungDokID { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzVereinbarungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVereinbarungErhalten { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzVereinbarungErhalten", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef EinsatzVereinbarungUnterschrieben { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzVereinbarungUnterschrieben", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzEinladungDokID { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzEinladungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZDatumVon { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZDatumBis { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BIEAZVerlaengert { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZVerlaengert", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZVereinbarungDokID { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZVereinbarungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BIEAZVereinbarungUnterschrieben { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZVereinbarungUnterschrieben", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZBemerkung { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIEAZBemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBruttolohn { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIBruttolohn", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIFinanzierungsgradEAZ { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIFinanzierungsgradEAZ", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBeteilungEAZ { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIBeteilungEAZ", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIPZwischenbericht1Datum { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIPZwischenbericht1Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BIPZwischenbericht1Erhalten { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIPZwischenbericht1Erhalten", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIPZwischenbericht2Datum { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIPZwischenbericht2Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BIPZwischenbericht2Erhalten { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIPZwischenbericht2Erhalten", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioEinsatzAbbruchDurchCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "InizioEinsatzAbbruchDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioEinsatzAbbruch { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "InizioEinsatzAbbruch", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abschluss { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Abschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioAbschlussGrund { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "InizioAbschlussGrund", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioLoesung { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "InizioLoesung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioAnschlussloesungCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "InizioAnschlussloesungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIAbschlussGrundCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIAbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIPAbschlussGrundCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIPAbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBIPSIAbschlussDurchCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "BIBIPSIAbschlussDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIAbschlussGrundCode { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "SIAbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Attest { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "Attest", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzBemerkungen { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "EinsatzBemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungEinsatzTS { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "KaVermittlungEinsatzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaVermittlungEinsatz.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungProfil{
/// <summary>
/// Gets the table definition for KaVermittlungProfil
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungProfil", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungProfil Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungProfilID { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaVermittlungProfilID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungProfil_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AeussereErscheinungCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "AeussereErscheinungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// AktuelleTaetigkeit
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AktuelleTaetigkeit { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "AktuelleTaetigkeit", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitsgebietBemerkungen { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "ArbeitsgebietBemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitszeitenCodes { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "ArbeitszeitenCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusbildungCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "AusbildungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusbildungstypWunschCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "AusbildungstypWunschCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereFaehigkeiten { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "BesondereFaehigkeiten", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereWuensche { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "BesondereWuensche", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrancheCodes { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "BrancheCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschMuendlichCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "DeutschMuendlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschSchriftlichCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "DeutschSchriftlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzbereichCodes { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinsatzbereichCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einsatzpensum { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Einsatzpensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzpensumBis { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinsatzpensumBis", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzpensumVon { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinsatzpensumVon", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FuehrerausweisCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "FuehrerausweisCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FuehrerausweisKategorieCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "FuehrerausweisKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GespraechDatum { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GespraechDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitBemerkung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitBemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitEinschraenkungen { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitEinschraenkungen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte GesundheitKoerperlichCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitKoerperlichBewertung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitKoerperlichBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitKoerperlichCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitKoerperlichCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte GesundheitPsychischCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitPsychischBewertung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitPsychischBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitPsychischCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "GesundheitPsychischCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef InfoAnSDErfolgt { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "InfoAnSDErfolgt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InizioErstgesprVerlaufDokID { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "InizioErstgesprVerlaufDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Interview { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Interview", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// zum wissen ob den Klient für andere berufliche, gesundheitliche oder soziale Integrationsmassnahmen- und/oder Abklärungen angemeldet ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstAngemeldet { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "IstAngemeldet", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebCodes { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaBetriebCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// KaLaufendeBetreibungenCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaLaufendeBetreibungenCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaLaufendeBetreibungenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// KaLohnabtretungSDCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaLohnabtretungSDCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaLohnabtretungSDCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaNachtarbeitCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaNachtarbeitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KannSichAmTelVerstaendigen { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KannSichAmTelVerstaendigen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// KaSchweizerdeutschCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaSchweizerdeutschCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaSchweizerdeutschCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// KaVerfuegbarkeitCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaVerfuegbarkeitCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaVerfuegbarkeitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kinderbetreuung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Kinderbetreuung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LehrberufCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "LehrberufCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lehrberuf2Code { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Lehrberuf2Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lehrberuf3Code { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Lehrberuf3Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LehrberufWunschCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "LehrberufWunschCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "MigrationKA", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte MotivationBIBIPSICode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationBIBIPSIBewertung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "MotivationBIBIPSIBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationBIBIPSICode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "MotivationBIBIPSICode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationInizioCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "MotivationInizioCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKenntnisseCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "PCKenntnisseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef QJExtern { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "QJExtern", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIGespraech { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "SIGespraech", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIGespraechfuehrerinID { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "SIGespraechfuehrerinID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sprachstandermittlung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Sprachstandermittlung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SuchtartCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "SuchtartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SuchtCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "SuchtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TherpieCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "TherpieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UnterstuetzungInizioCodes { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "UnterstuetzungInizioCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// EinschraenkungMO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungMO { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungMO", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungDI
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungDI { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungDI", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungMI
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungMI { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungMI", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungDO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungDO { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungDO", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungFR
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungFR { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungFR", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungSA
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungSA { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungSA", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// EinschraenkungSO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungSO { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "EinschraenkungSO", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitBemerkung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "VermittelbarkeitBemerkung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitBIBIPCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "VermittelbarkeitBIBIPCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitSICode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "VermittelbarkeitSICode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittlungsgespraechDokID { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "VermittlungsgespraechDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte ZuverlaessigkeitCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuverlaessigkeitBewertung { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "ZuverlaessigkeitBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuverlaessigkeitCode { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "ZuverlaessigkeitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungProfilTS { get { return new DBOColumnDef(KaVermittlungProfil.TableDef, "KaVermittlungProfilTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungSI{
/// <summary>
/// Gets the table definition for KaVermittlungSI
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungSI", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungSI Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungSIID { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "KaVermittlungSIID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungSI_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf BaInstitutionKontakt wenn es positiv ist und auf XUser wenn es negativ ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuweiserID { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "ZuweiserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code der LOV "KaVermittlungBiBIPSiAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnmeldungCode { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "AnmeldungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, sagt aus, ob STES vermittelt werden konnte.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Vermittelt { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Vermittelt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Beschreibt die Art der Vermittlung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaSiKategorieCode { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "KaSiKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Schlussbericht { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "DocumentID_Schlussbericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef WechselKAIntern { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "WechselKAIntern", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Code der LOV "KaVermittlungGrundWechselKaIntern"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WechselKAInternGrundCode { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "WechselKAInternGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DossierRetourAnSD { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "DossierRetourAnSD", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Code der LOV "KaVermittlungDossierRetourAnSDGrund"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierRetourAnSDGrundCode { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "DossierRetourAnSDGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "MigrationKA", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungSITS { get { return new DBOColumnDef(KaVermittlungSI.TableDef, "KaVermittlungSITS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungSIZwischenbericht{
/// <summary>
/// Gets the table definition for KaVermittlungSIZwischenbericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungSIZwischenbericht", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungSIZwischenbericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungSIZwischenberichtID { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "KaVermittlungSIZwischenberichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungSIZwischenbericht_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagID { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "KaVermittlungVorschlagID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anfrage { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "Anfrage", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mahnung { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "Mahnung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eingang { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "Eingang", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "Bemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InterventionCode { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "InterventionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorgeseheneMassnahmenCode { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "VorgeseheneMassnahmenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZwischenberichtSD { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "ZwischenberichtSD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungSIZwischenberichtTS { get { return new DBOColumnDef(KaVermittlungSIZwischenbericht.TableDef, "KaVermittlungSIZwischenberichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungVorschlag{
/// <summary>
/// Gets the table definition for KaVermittlungVorschlag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaVermittlungVorschlag", "", false); } }


/// <summary>
/// Primärschlüssel für KaVermittlungVorschlag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagID { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "KaVermittlungVorschlagID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungVorschlag_KaEinsatzplatz) => KaEinsatzplatz.KaEinsatzplatzID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "KaEinsatzplatzID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaVermittlungVorschlag_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorschlag { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "Vorschlag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierGesendet { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "DossierGesendet", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorstellungsgespraech { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "Vorstellungsgespraech", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchnuppernVon { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "SchnuppernVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchnuppernBis { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "SchnuppernBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagResultatDatum { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagResultatDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagResultat { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagResultat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagErfasst { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagErfasst", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagAblehnungsgrundBICode { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagAblehnungsgrundBICode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagAblehnungsgrundBIPCode { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagAblehnungsgrundBIPCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagAblehnungsgrundSICode { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagAblehnungsgrundSICode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VorschlagBemerkungen { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "VorschlagBemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagTS { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "KaVermittlungVorschlagTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(KaVermittlungVorschlag.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KaZuteilFachbereich{
/// <summary>
/// Gets the table definition for KaZuteilFachbereich
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KaZuteilFachbereich", "", false); } }


/// <summary>
/// Primärschlüssel für KaZuteilFachbereich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaZuteilFachbereichID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "KaZuteilFachbereichID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KaZuteilFachbereich_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuteilungVon { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "ZuteilungVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuteilungBis { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "ZuteilungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FachbereichID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "FachbereichID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NiveauCode { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "NiveauCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKaID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "ZustaendigKaID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FachleitungID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "FachleitungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuteilDokID { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "ZuteilDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KaZuteilFachbereichTS { get { return new DBOColumnDef(KaZuteilFachbereich.TableDef, "KaZuteilFachbereichTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBelegKreis{
/// <summary>
/// Gets the table definition for KbBelegKreis
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbBelegKreis", "", false); } }


/// <summary>
/// Primärschlüssel für KbBelegKreis Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbBelegKreisID { get { return new DBOColumnDef(KbBelegKreis.TableDef, "KbBelegKreisID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBelegKreis_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbBelegKreis.TableDef, "KbPeriodeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBelegKreisCode { get { return new DBOColumnDef(KbBelegKreis.TableDef, "KbBelegKreisCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBelegKreis_KbKonto) => KbKonto.KontoNr
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(KbBelegKreis.TableDef, "KontoNr", typeof(string), false, true, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NaechsteBelegNr { get { return new DBOColumnDef(KbBelegKreis.TableDef, "NaechsteBelegNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegNrVon { get { return new DBOColumnDef(KbBelegKreis.TableDef, "BelegNrVon", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegNrBis { get { return new DBOColumnDef(KbBelegKreis.TableDef, "BelegNrBis", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbBelegKreisTS { get { return new DBOColumnDef(KbBelegKreis.TableDef, "KbBelegKreisTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBuchung{
/// <summary>
/// Gets the table definition for KbBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbBuchung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(KbBuchung.TableDef, "KbBuchungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(KbBuchung.TableDef, "BaZahlungswegID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbAuszahlungsArtCode { get { return new DBOColumnDef(KbBuchung.TableDef, "KbAuszahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FlTypSourceCode { get { return new DBOColumnDef(KbBuchung.TableDef, "FlTypSourceCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FlBelegStatusCode { get { return new DBOColumnDef(KbBuchung.TableDef, "FlBelegStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IdSource { get { return new DBOColumnDef(KbBuchung.TableDef, "IdSource", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(KbBuchung.TableDef, "BelegNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_UserID_Kasse) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BarbelegUserID { get { return new DBOColumnDef(KbBuchung.TableDef, "BarbelegUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef ErstelltDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "ErstelltDatum", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TransferDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "TransferDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "BelegDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BarbelegDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "BarbelegDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(KbBuchung.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Extern { get { return new DBOColumnDef(KbBuchung.TableDef, "Extern", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(KbBuchung.TableDef, "ReferenzNummer", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AggregateInfo { get { return new DBOColumnDef(KbBuchung.TableDef, "AggregateInfo", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FibuFehlermeldung { get { return new DBOColumnDef(KbBuchung.TableDef, "FibuFehlermeldung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Remark { get { return new DBOColumnDef(KbBuchung.TableDef, "Remark", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Old_SourceID { get { return new DBOColumnDef(KbBuchung.TableDef, "Old_SourceID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbBuchungTS { get { return new DBOColumnDef(KbBuchung.TableDef, "KbBuchungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbBuchung.TableDef, "KbPeriodeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBuchungTypCode { get { return new DBOColumnDef(KbBuchung.TableDef, "KbBuchungTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbBuchungStatusCode { get { return new DBOColumnDef(KbBuchung.TableDef, "KbBuchungStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KbBuchung.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(KbBuchung.TableDef, "SollKtoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(KbBuchung.TableDef, "HabenKtoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzahlungsscheinCode { get { return new DBOColumnDef(KbBuchung.TableDef, "EinzahlungsscheinCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(KbBuchung.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(KbBuchung.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBAN { get { return new DBOColumnDef(KbBuchung.TableDef, "IBAN", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(KbBuchung.TableDef, "BaBankID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankBCN { get { return new DBOColumnDef(KbBuchung.TableDef, "BankBCN", typeof(string), false, false, false, 6, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankName { get { return new DBOColumnDef(KbBuchung.TableDef, "BankName", typeof(string), false, false, false, 70, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankStrasse { get { return new DBOColumnDef(KbBuchung.TableDef, "BankStrasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankPLZ { get { return new DBOColumnDef(KbBuchung.TableDef, "BankPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankOrt { get { return new DBOColumnDef(KbBuchung.TableDef, "BankOrt", typeof(string), false, false, false, 60, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(KbBuchung.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile1 { get { return new DBOColumnDef(KbBuchung.TableDef, "MitteilungZeile1", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile2 { get { return new DBOColumnDef(KbBuchung.TableDef, "MitteilungZeile2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile3 { get { return new DBOColumnDef(KbBuchung.TableDef, "MitteilungZeile3", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitteilungZeile4 { get { return new DBOColumnDef(KbBuchung.TableDef, "MitteilungZeile4", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtName { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtName2 { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtName2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtStrasse { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtHausNr { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtPostfach { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtPostfach", typeof(string), false, false, false, 40, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtPLZ { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtOrt { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtOrt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BeguenstigtLandCode { get { return new DBOColumnDef(KbBuchung.TableDef, "BeguenstigtLandCode", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbZahlungseingang) => KbZahlungseingang.KbZahlungseingangID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungseingangID { get { return new DBOColumnDef(KbBuchung.TableDef, "KbZahlungseingangID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ErstelltUserID { get { return new DBOColumnDef(KbBuchung.TableDef, "ErstelltUserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MutiertUserID { get { return new DBOColumnDef(KbBuchung.TableDef, "MutiertUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertDatum { get { return new DBOColumnDef(KbBuchung.TableDef, "MutiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef Schuldner_BaInstitutionID { get { return new DBOColumnDef(KbBuchung.TableDef, "Schuldner_BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef Schuldner_BaPersonID { get { return new DBOColumnDef(KbBuchung.TableDef, "Schuldner_BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbBuchungStorniert) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef StorniertKbBuchungID { get { return new DBOColumnDef(KbBuchung.TableDef, "StorniertKbBuchungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KbBuchung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(KbBuchung.TableDef, "BgBudgetID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkPositionID { get { return new DBOColumnDef(KbBuchung.TableDef, "IkPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbBuchungNeuBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef NeubuchungVonKbBuchungID { get { return new DBOColumnDef(KbBuchung.TableDef, "NeubuchungVonKbBuchungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBelegKreisID { get { return new DBOColumnDef(KbBuchung.TableDef, "KbBelegKreisID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf KbZahlungskonto. Ist für die Gesuchverwaltung verwendet um einen Zahlungskonto auf der Buchung zu definieren
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(KbBuchung.TableDef, "KbZahlungskontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf IkForderungBgKostenartHist. Ist fürs Inkasso verwendet im Belegimport und Kontoauszug
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef IkForderungBgKostenartHistID { get { return new DBOColumnDef(KbBuchung.TableDef, "IkForderungBgKostenartHistID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBuchungKostenart{
/// <summary>
/// Gets the table definition for KbBuchungKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbBuchungKostenart", "", false); } }


/// <summary>
/// Primärschlüssel für KbBuchungKostenart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KbBuchungKostenartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbKostenstelle_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KbKostenstelleID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmKontoCode { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "NrmKontoCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbBuchungKostenartTS { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KbBuchungKostenartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KbBuchungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "Buchungstext", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PositionImBeleg { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "PositionImBeleg", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbForderungArtCode { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "KbForderungArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeVon { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "VerwPeriodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeBis { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "VerwPeriodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "BgSplittingArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Weiterverrechenbar { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "Weiterverrechenbar", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Quoting { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "Quoting", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_GvAuszahlungPositionID) => GvAuszahlungPosition.GvAuszahlungPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GvAuszahlungPositionID { get { return new DBOColumnDef(KbBuchungKostenart.TableDef, "GvAuszahlungPositionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um die Verbindung zwischen den Forderungen und Auszahlungen zu haben.
/// </summary>

public static class KbForderungAuszahlung{
/// <summary>
/// Gets the table definition for KbForderungAuszahlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbForderungAuszahlung", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle KbForderungAuszahlung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbForderungAuszahlungID { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "KbForderungAuszahlungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel der Auszahlungsbuchung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungID_Auszahlung { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "KbBuchungID_Auszahlung", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel der Forderungsbuchung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungID_Forderung { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "KbBuchungID_Forderung", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel des OpAusgleiches
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbOpAusgleichID { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "KbOpAusgleichID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbForderungAuszahlungTS { get { return new DBOColumnDef(KbForderungAuszahlung.TableDef, "KbForderungAuszahlungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbFreieBelegNummer{
/// <summary>
/// Gets the table definition for KbFreieBelegNummer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbFreieBelegNummer", "", false); } }


/// <summary>
/// Primärschlüssel für KbFreieBelegNummer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBelegKreisID { get { return new DBOColumnDef(KbFreieBelegNummer.TableDef, "KbBelegKreisID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für KbFreieBelegNummer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(KbFreieBelegNummer.TableDef, "BelegNr", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbFreieBelegNummerTS { get { return new DBOColumnDef(KbFreieBelegNummer.TableDef, "KbFreieBelegNummerTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbKonto{
/// <summary>
/// Gets the table definition for KbKonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbKonto", "", false); } }


/// <summary>
/// Primärschlüssel für KbKonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbKontoID { get { return new DBOColumnDef(KbKonto.TableDef, "KbKontoID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbKonto_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbKonto.TableDef, "KbPeriodeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GruppeKontoID { get { return new DBOColumnDef(KbKonto.TableDef, "GruppeKontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Kontogruppe { get { return new DBOColumnDef(KbKonto.TableDef, "Kontogruppe", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbKontoklasseCode { get { return new DBOColumnDef(KbKonto.TableDef, "KbKontoklasseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbKontoartCodes { get { return new DBOColumnDef(KbKonto.TableDef, "KbKontoartCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(KbKonto.TableDef, "KontoNr", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef KontoName { get { return new DBOColumnDef(KbKonto.TableDef, "KontoName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Vorsaldo { get { return new DBOColumnDef(KbKonto.TableDef, "Vorsaldo", typeof(decimal), false, false, false, 8, false, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SaldoGruppeName { get { return new DBOColumnDef(KbKonto.TableDef, "SaldoGruppeName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Saldovortrag { get { return new DBOColumnDef(KbKonto.TableDef, "Saldovortrag", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbKontoTS { get { return new DBOColumnDef(KbKonto.TableDef, "KbKontoTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(KbKonto.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbKonto_KbZahlungskonto) => KbZahlungskonto.KbZahlungskontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(KbKonto.TableDef, "KbZahlungskontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbKostenstelle{
/// <summary>
/// Gets the table definition for KbKostenstelle
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbKostenstelle", "", false); } }


/// <summary>
/// Primärschlüssel für KbKostenstelle Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(KbKostenstelle.TableDef, "KbKostenstelleID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Nr { get { return new DBOColumnDef(KbKostenstelle.TableDef, "Nr", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(KbKostenstelle.TableDef, "Name", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Vorsaldo aus einem Fremdsystem
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorsaldo { get { return new DBOColumnDef(KbKostenstelle.TableDef, "Vorsaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(KbKostenstelle.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(KbKostenstelle.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbKostenstelleTS { get { return new DBOColumnDef(KbKostenstelle.TableDef, "KbKostenstelleTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Um in KiSS4 die alten KiSS3 Kostenstellen anzuzeigen wurde in diese Hilfstabelle migriert.    Muss mit Implementation der Schnittstellen überarbeitet werden!
/// </summary>

public static class KbKostenstelle_BaPerson{
/// <summary>
/// Gets the table definition for KbKostenstelle_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbKostenstelle_BaPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbKostenstelleBaPersonID { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "KbKostenstelleBaPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaPersonKbKostenstelle_BaPersonID) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_BaPersonKbKostenstelle_KbKostenstelleID) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "KbKostenstelleID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbKostenstelle_BaPersonTS { get { return new DBOColumnDef(KbKostenstelle_BaPerson.TableDef, "KbKostenstelle_BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbMandant{
/// <summary>
/// Gets the table definition for KbMandant
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbMandant", "", false); } }


/// <summary>
/// Primärschlüssel für KbMandant Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbMandantID { get { return new DBOColumnDef(KbMandant.TableDef, "KbMandantID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(KbMandant.TableDef, "Mandant", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MandantTID { get { return new DBOColumnDef(KbMandant.TableDef, "MandantTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbMandantTS { get { return new DBOColumnDef(KbMandant.TableDef, "KbMandantTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbOpAusgleich{
/// <summary>
/// Gets the table definition for KbOpAusgleich
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbOpAusgleich", "", false); } }


/// <summary>
/// Primärschlüssel für KbOpAusgleich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbOpAusgleichID { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "KbOpAusgleichID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbOpAusgleich_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OpBuchungID { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "OpBuchungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbOpAusgleich_KbBuchung1) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef AusgleichBuchungID { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "AusgleichBuchungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbOpAusgleichTS { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "KbOpAusgleichTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef _mig_AiZahlungVsForderungID { get { return new DBOColumnDef(KbOpAusgleich.TableDef, "_mig_AiZahlungVsForderungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbPeriode{
/// <summary>
/// Gets the table definition for KbPeriode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbPeriode", "", false); } }


/// <summary>
/// Primärschlüssel für KbPeriode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbPeriode.TableDef, "KbPeriodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbPeriode_KbMandant) => KbMandant.KbMandantID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbMandantID { get { return new DBOColumnDef(KbPeriode.TableDef, "KbMandantID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef PeriodeVon { get { return new DBOColumnDef(KbPeriode.TableDef, "PeriodeVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef PeriodeBis { get { return new DBOColumnDef(KbPeriode.TableDef, "PeriodeBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PeriodeStatusCode { get { return new DBOColumnDef(KbPeriode.TableDef, "PeriodeStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtBis { get { return new DBOColumnDef(KbPeriode.TableDef, "VerbuchtBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbPeriodeTS { get { return new DBOColumnDef(KbPeriode.TableDef, "KbPeriodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbPeriode_User{
/// <summary>
/// Gets the table definition for KbPeriode_User
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbPeriode_User", "", false); } }


/// <summary>
/// Primärschlüssel für KbPeriode_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbPeriode_User.TableDef, "KbPeriodeID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für KbPeriode_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KbPeriode_User.TableDef, "UserID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbPeriode_UserTS { get { return new DBOColumnDef(KbPeriode_User.TableDef, "KbPeriode_UserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbTransfer{
/// <summary>
/// Gets the table definition for KbTransfer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbTransfer", "", false); } }


/// <summary>
/// Primärschlüssel für KbTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(KbTransfer.TableDef, "KbBuchungID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für KbTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungslaufID { get { return new DBOColumnDef(KbTransfer.TableDef, "KbZahlungslaufID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (1)]
/// </summary>

public static DBOColumnDef KbTransferStatusCode { get { return new DBOColumnDef(KbTransfer.TableDef, "KbTransferStatusCode", typeof(int), false, false, false, 4, false, "(1)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbTransferTS { get { return new DBOColumnDef(KbTransfer.TableDef, "KbTransferTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVEinzelposten{
/// <summary>
/// Gets the table definition for KbWVEinzelposten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbWVEinzelposten", "", false); } }


/// <summary>
/// Primärschlüssel für KbWVEinzelposten Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbWVEinzelpostenID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbWVEinzelpostenID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbWVEinzelposten) => KbWVEinzelposten.KbWVEinzelpostenID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef StorniertKbWVEinzelpostenID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "StorniertKbWVEinzelpostenID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbWVLauf) => KbWVLauf.KbWVLaufID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbWVLaufID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbWVLaufID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BaWVCode) => BaWVCode.BaWVCodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaWVCodeID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "BaWVCodeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaWVCode { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "BaWVCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbBuchungKostenart) => KbBuchungKostenart.KbBuchungKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbBuchungKostenartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbKostenstelleID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbKostenstelleID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "BgSplittingArtCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "DatumBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SplittingDurchWVLaufDatumBis { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "SplittingDurchWVLaufDatumBis", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbWVEinzelpostenStatusCode { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbWVEinzelpostenStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Fakturiert { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Fakturiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Ungueltig { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Ungueltig", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Buchungstext", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatkantonNr { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "HeimatkantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnKantonNr { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "WohnKantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KantonKuerzel { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KantonKuerzel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auslandschweizer { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Auslandschweizer", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "Bemerkungen", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbWVEinzelpositionTS { get { return new DBOColumnDef(KbWVEinzelposten.TableDef, "KbWVEinzelpositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVEinzelpostenFehler{
/// <summary>
/// Gets the table definition for KbWVEinzelpostenFehler
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbWVEinzelpostenFehler", "", false); } }


/// <summary>
/// Primärschlüssel für KbWVEinzelpostenFehler Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbWVEinzelpostenFehlerID { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "KbWVEinzelpostenFehlerID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_KbWVLauf) => KbWVLauf.KbWVLaufID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbWVLaufID { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "KbWVLaufID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_KbBuchungKostenart) => KbBuchungKostenart.KbBuchungKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "KbBuchungKostenartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// </summary>

public static DBOColumnDef WVFehlermeldung { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "WVFehlermeldung", typeof(string), false, false, false, 2000, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbWVEinzelpostenFehlerTS { get { return new DBOColumnDef(KbWVEinzelpostenFehler.TableDef, "KbWVEinzelpostenFehlerTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVLauf{
/// <summary>
/// Gets the table definition for KbWVLauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbWVLauf", "", false); } }


/// <summary>
/// Primärschlüssel für KbWVLauf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbWVLaufID { get { return new DBOColumnDef(KbWVLauf.TableDef, "KbWVLaufID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVLauf_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KbWVLauf.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbWVLauf_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbPeriodeID { get { return new DBOColumnDef(KbWVLauf.TableDef, "KbPeriodeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumBisWVLauf { get { return new DBOColumnDef(KbWVLauf.TableDef, "DatumBisWVLauf", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef StartDatum { get { return new DBOColumnDef(KbWVLauf.TableDef, "StartDatum", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EndDatum { get { return new DBOColumnDef(KbWVLauf.TableDef, "EndDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Testlauf { get { return new DBOColumnDef(KbWVLauf.TableDef, "Testlauf", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbWVLaufTS { get { return new DBOColumnDef(KbWVLauf.TableDef, "KbWVLaufTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungseingang{
/// <summary>
/// Gets the table definition for KbZahlungseingang
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbZahlungseingang", "", false); } }


/// <summary>
/// Primärschlüssel für KbZahlungseingang Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbZahlungseingangID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "KbZahlungseingangID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Debitor { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Debitor", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mitteilung1 { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Mitteilung1", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mitteilung2 { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Mitteilung2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mitteilung3 { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Mitteilung3", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mitteilung4 { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Mitteilung4", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Ausgeglichen { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Ausgeglichen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "Freigegeben", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_ZugeteiltXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ZugeteiltUserID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "ZugeteiltUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_ErstelltXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ErstelltUserID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "ErstelltUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltDatum { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "ErstelltDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_MutiertXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MutiertUserID { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "MutiertUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertDatum { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "MutiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbZahlungseingangTS { get { return new DBOColumnDef(KbZahlungseingang.TableDef, "KbZahlungseingangTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungskonto{
/// <summary>
/// Gets the table definition for KbZahlungskonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbZahlungskonto", "", false); } }


/// <summary>
/// Primärschlüssel für KbZahlungskonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "KbZahlungskontoID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef VertragNr { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "VertragNr", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "KontoNr", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbDTAZugang_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "BaBankID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbFinanzInstitutCode { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "KbFinanzInstitutCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbDTAZugangTS { get { return new DBOColumnDef(KbZahlungskonto.TableDef, "KbDTAZugangTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle für KbZahlungskonto und XOrgUnit
/// </summary>

public static class KbZahlungskonto_XOrgUnit{
/// <summary>
/// Gets the table definition for KbZahlungskonto_XOrgUnit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbZahlungskonto_XOrgUnit", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbZahlungskonto_XOrgUnitID { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "KbZahlungskonto_XOrgUnitID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu KbZahlungskonto Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "KbZahlungskontoID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XOrgUnit Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "OrgUnitID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbZahlungskonto_XOrgUnitTS { get { return new DBOColumnDef(KbZahlungskonto_XOrgUnit.TableDef, "KbZahlungskonto_XOrgUnitTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungslauf{
/// <summary>
/// Gets the table definition for KbZahlungslauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbZahlungslauf", "", false); } }


/// <summary>
/// Primärschlüssel für KbZahlungslauf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbZahlungslaufID { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "KbZahlungslaufID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungslauf_KbZahlungskonto) => KbZahlungskonto.KbZahlungskontoID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KbZahlungskontoID { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "KbZahlungskontoID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KbZahlungslauf_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 512]
/// </summary>

public static DBOColumnDef FilePath { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "FilePath", typeof(string), false, false, false, 512, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef TotalBetrag { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "TotalBetrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TransferDatum { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "TransferDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Transferiert { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "Transferiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Zahlungsdaten { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "Zahlungsdaten", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Das Fälligkeitsdatum des Zahlungseingangs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaelligkeitDatum { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "FaelligkeitDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbZahlungslaufTS { get { return new DBOColumnDef(KbZahlungslauf.TableDef, "KbZahlungslaufTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungslaufValuta{
/// <summary>
/// Gets the table definition for KbZahlungslaufValuta
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KbZahlungslaufValuta", "", false); } }


/// <summary>
/// Primärschlüssel für KbZahlungslaufValuta Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KbZahlungslaufValutaID { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "KbZahlungslaufValutaID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "Jahr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "Monat", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatMonatlich { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatMonatlich", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatTeil1 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatTeil1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatTeil2 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatTeil2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dat14Tage1 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "Dat14Tage1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dat14Tage2 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "Dat14Tage2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dat14Tage3 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "Dat14Tage3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatWoche1 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatWoche1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatWoche2 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatWoche2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatWoche3 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatWoche3", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatWoche4 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatWoche4", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatWoche5 { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "DatWoche5", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KbZahlungslaufValutaTS { get { return new DBOColumnDef(KbZahlungslaufValuta.TableDef, "KbZahlungslaufValutaTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Kes ZGB Artikel
/// </summary>

public static class KesArtikel{
/// <summary>
/// Gets the table definition for KesArtikel
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesArtikel", "", false); } }


/// <summary>
/// Primärschlüssel für KesArtikel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesArtikelID { get { return new DBOColumnDef(KesArtikel.TableDef, "KesArtikelID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Kokes Code
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>

public static DBOColumnDef CodeKokes { get { return new DBOColumnDef(KesArtikel.TableDef, "CodeKokes", typeof(string), false, false, false, 7, false, "", ""); } }


/// <summary>
/// Artikel, z.B. 134.3 ZGB
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Artikel { get { return new DBOColumnDef(KesArtikel.TableDef, "Artikel", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Absatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Absatz { get { return new DBOColumnDef(KesArtikel.TableDef, "Absatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Ziffer
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ziffer { get { return new DBOColumnDef(KesArtikel.TableDef, "Ziffer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Gesetz, z.B. ZGB oder aZGB
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Gesetz { get { return new DBOColumnDef(KesArtikel.TableDef, "Gesetz", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Artikel Bezeichnung, z.B.: Neuregelung elterliche Sorge bei geschiedenen Eltern - Zuteilung gemeinsame elterliche Sorge
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(KesArtikel.TableDef, "Bezeichnung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Kurztext der Bezeichnung für die bessere Anzeige auf den Masken
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungKurz { get { return new DBOColumnDef(KesArtikel.TableDef, "BezeichnungKurz", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Der LOV KesMassnahmeTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesMassnahmeTypCode { get { return new DBOColumnDef(KesArtikel.TableDef, "KesMassnahmeTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Flag, ob der Artikel ein massnahmegebundenes Geschäft beschreibt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsMassnahmeGebunden { get { return new DBOColumnDef(KesArtikel.TableDef, "IsMassnahmeGebunden", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum ab wann ein Artikel für neue Massnahmen verwendet werden darf
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KesArtikel.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum bis wann ein Artikel für neue Massnahmen verwendet werden darf
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KesArtikel.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesArtikel.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesArtikel.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesArtikel.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesArtikel.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesArtikelTS { get { return new DBOColumnDef(KesArtikel.TableDef, "KesArtikelTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet Aufträge für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesAuftrag{
/// <summary>
/// Gets the table definition for KesAuftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesAuftrag", "", false); } }


/// <summary>
/// Primärschlüssel für KES-Aufträge
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesAuftragID { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesAuftragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesAuftrag_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesAuftrag.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Kindesschutz oder Erwachsenenschutz
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsKS { get { return new DBOColumnDef(KesAuftrag.TableDef, "IsKS", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum des Auftrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAuftrag { get { return new DBOColumnDef(KesAuftrag.TableDef, "DatumAuftrag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Dokument des Auftrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Auftrag { get { return new DBOColumnDef(KesAuftrag.TableDef, "DocumentID_Auftrag", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// SAR, Fremdschlüssel (FK_KesAuftrag_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesAuftrag.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fristdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumFrist { get { return new DBOColumnDef(KesAuftrag.TableDef, "DatumFrist", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Gefährdungsmelder aus LOV KesGefaehrdungsmeldungDurchES oder KesGefaehrdungsmeldungDurchKS
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesGefaehrdungsmeldungDurchCode { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesGefaehrdungsmeldungDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// AuftragDurchCode aus LOV KesAuftragDurch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAuftragDurchCode { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesAuftragDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// AuftragAbklärungsartCode aus LOV KesAuftragAbklaerungsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAuftragAbklaerungsartCode { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesAuftragAbklaerungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Anlass dieses Auftrags
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anlass { get { return new DBOColumnDef(KesAuftrag.TableDef, "Anlass", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Auftragsbeschreibung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auftrag { get { return new DBOColumnDef(KesAuftrag.TableDef, "Auftrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Abschlussdatum des Auftrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(KesAuftrag.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// AuftragsabschlussGrund aus LOV KesAuftragAbschlussgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAuftragAbschlussgrundCode { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesAuftragAbschlussgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument der Beschlussrückmeldung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_BeschlussRueckmeldung { get { return new DBOColumnDef(KesAuftrag.TableDef, "DocumentID_BeschlussRueckmeldung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesAuftrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesAuftrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesAuftrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesAuftrag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesAuftragTS { get { return new DBOColumnDef(KesAuftrag.TableDef, "KesAuftragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle von BaPerson und KesAuftrag
/// </summary>

public static class KesAuftrag_BaPerson{
/// <summary>
/// Gets the table definition for KesAuftrag_BaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesAuftrag_BaPerson", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesAuftrag_BaPersonID { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "KesAuftrag_BaPersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf Tabelle BaPerson, Spalte BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle FaDokumentAblage, Spalte KesAuftragID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesAuftragID { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "KesAuftragID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesAuftrag_BaPersonTS { get { return new DBOColumnDef(KesAuftrag_BaPerson.TableDef, "KesAuftrag_BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KesBehorde
/// </summary>

public static class KesBehoerde{
/// <summary>
/// Gets the table definition for KesBehoerde
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesBehoerde", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesBehoerdeID { get { return new DBOColumnDef(KesBehoerde.TableDef, "KesBehoerdeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// KESB-ID
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef KESBID { get { return new DBOColumnDef(KesBehoerde.TableDef, "KESBID", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Kanton
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(KesBehoerde.TableDef, "Kanton", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// KESB-Name
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef KESBName { get { return new DBOColumnDef(KesBehoerde.TableDef, "KESBName", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// Ist Aktiv ?
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsActive { get { return new DBOColumnDef(KesBehoerde.TableDef, "IsActive", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesBehoerde.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesBehoerde.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesBehoerde.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesBehoerde.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesBehoerdeTS { get { return new DBOColumnDef(KesBehoerde.TableDef, "KesBehoerdeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet Auftragsdokumente für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesDokument{
/// <summary>
/// Gets the table definition for KesDokument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesDokument", "", false); } }


/// <summary>
/// Primärschlüssel für KES-Auftragsdokumente
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesDokumentID { get { return new DBOColumnDef(KesDokument.TableDef, "KesDokumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesDokument_KesAuftrag) => KesAuftragID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesAuftragID { get { return new DBOColumnDef(KesDokument.TableDef, "KesAuftragID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesDokument_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesDokument.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// VerfasserIn, Fremdschlüssel (FK_KesDokument_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesDokument.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaPersonID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(KesDokument.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaInstitutionID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(KesDokument.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Stichwort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(KesDokument.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Resultat aus LOV KesDokumentResultat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesDokumentResultatCode { get { return new DBOColumnDef(KesDokument.TableDef, "KesDokumentResultatCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Code aus LOV KesDokumentart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesDokumentArtCode { get { return new DBOColumnDef(KesDokument.TableDef, "KesDokumentArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument, Fremdschlüssel (FK_KesDokument_XDocument) => XDocumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Dokument { get { return new DBOColumnDef(KesDokument.TableDef, "XDocumentID_Dokument", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Versand, Fremdschlüssel (FK_KesDokument_XDocument1) => XDocumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XDocumentID_Versand { get { return new DBOColumnDef(KesDokument.TableDef, "XDocumentID_Versand", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KesDokumentTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesDokumentTypCode { get { return new DBOColumnDef(KesDokument.TableDef, "KesDokumentTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesDokument.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesDokument.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesDokument.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesDokument.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesDokumentTS { get { return new DBOColumnDef(KesDokument.TableDef, "KesDokumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Mandatsführende Person' welche der Massnahme angehängt ist
/// </summary>

public static class KesMandatsfuehrendePerson{
/// <summary>
/// Gets the table definition for KesMandatsfuehrendePerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMandatsfuehrendePerson", "", false); } }


/// <summary>
/// Primärschlüssel KesMandatsfuehrendePerson
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMandatsfuehrendePersonID { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "KesMandatsfuehrendePersonID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle KesMassnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "KesMassnahmeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Mandat von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumMandatVon { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DatumMandatVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Mandat bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumMandatBis { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DatumMandatBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Dokument der Ernennungsurkunde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Ernennungsurkunde { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DocumentID_Ernennungsurkunde", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// UserID der mandatsführenden Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaInstitutionID der mandatsführenden Fachperson
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Beistandsart der mandatsführenden Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesBeistandsartCode { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "KesBeistandsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum von SD vorgeschlagen am
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVorgeschlagenAm { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DatumVorgeschlagenAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Rechnungsführung durch SD vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumRechnungsfuehrungVon { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DatumRechnungsfuehrungVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Rechnungsführung durch SD bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumRechnungsfuehrungBis { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "DatumRechnungsfuehrungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMandatsfuehrendePersonTS { get { return new DBOColumnDef(KesMandatsfuehrendePerson.TableDef, "KesMandatsfuehrendePersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Kes Massnahme
/// </summary>

public static class KesMassnahme{
/// <summary>
/// Gets the table definition for KesMassnahme
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMassnahme", "", false); } }


/// <summary>
/// Primärschlüssel Kes Massnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesMassnahmeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesMassnahme_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesMassnahme.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Kindesschutz oder Erwachsenenschutz
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsKS { get { return new DBOColumnDef(KesMassnahme.TableDef, "IsKS", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Dokument Errichtungsbeschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Errichtungsbeschluss { get { return new DBOColumnDef(KesMassnahme.TableDef, "DocumentID_Errichtungsbeschluss", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Aufhebungsbeschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Aufhebungsbeschluss { get { return new DBOColumnDef(KesMassnahme.TableDef, "DocumentID_Aufhebungsbeschluss", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Massnahme Beginn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KesMassnahme.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Massnahme Ende
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KesMassnahme.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Liste von Aufgabenbereichen (LOV KesAufgabenbereichES)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAufgabenbereichCodes { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesAufgabenbereichCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Liste von Indikationen (LOV KesIndikationES oder KesIndikationKS)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesIndikationCodes { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesIndikationCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Auftragstext
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auftragstext { get { return new DBOColumnDef(KesMassnahme.TableDef, "Auftragstext", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Elterliche Sorge (LOV KesElterlicheSorgeObhut)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesElterlicheSorgeObhutCode_ElterlicheSorge { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesElterlicheSorgeObhutCode_ElterlicheSorge", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Obhut (LOV KesElterlicheSorgeObhut)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesElterlicheSorgeObhutCode_Obhut { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesElterlicheSorgeObhutCode_Obhut", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum ÜbernahmeVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_Datum { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ortschaft ÜbernahmeVon (zeigt auf BaPlz, ist aber kein Fremdschlüssel)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_OrtschaftCode { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// PLZ ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_PLZ { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Ort ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_Ort { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Kanton ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_Kanton { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_Kanton", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// KESB ÜbernahmeVon (Fremdschlüssel FK_KesMassnahme_UebernahmeVon_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UebernahmeVon_KesBehoerdeID { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebernahmeVon_KesBehoerdeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Datum AenderungVom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AenderungVom_Datum { get { return new DBOColumnDef(KesMassnahme.TableDef, "AenderungVom_Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Änderungsgrund (LOV KesAenderungsgrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAenderungsgrundCode { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesAenderungsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum ÜbertragungAn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungAn_Datum { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ortschaft ÜbertragungAn (zeigt auf BaPlz, ist aber kein Fremdschlüssel)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungAn_OrtschaftCode { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// PLZ ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungAn_PLZ { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Ort ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungAn_Ort { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Kanton ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungAn_Kanton { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_Kanton", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// KESB ÜbertragungAn (Fremdschlüssel FK_KesMassnahme_UebertragungAn_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UebertragungAn_KesBehoerdeID { get { return new DBOColumnDef(KesMassnahme.TableDef, "UebertragungAn_KesBehoerdeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Aufhebungsgrund (LOV KesAufhebungsgrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAufhebungsgrundCode { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesAufhebungsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KesMassnahme.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// KOKES Zuständige Behörde (Fremdschlüssel FK_KesMassnahme_Zustaendig_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef Zustaendig_KesBehoerdeID { get { return new DBOColumnDef(KesMassnahme.TableDef, "Zustaendig_KesBehoerdeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMassnahme.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMassnahme.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMassnahme.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMassnahme.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMassnahmeTS { get { return new DBOColumnDef(KesMassnahme.TableDef, "KesMassnahmeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle von KesMassnahme und KesArtikel
/// </summary>

public static class KesMassnahme_KesArtikel{
/// <summary>
/// Gets the table definition for KesMassnahme_KesArtikel
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMassnahme_KesArtikel", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMassnahme_KesArtikelID { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "KesMassnahme_KesArtikelID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf Tabelle KesMassnahme, Spalte KesMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "KesMassnahmeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf Tabelle KesArtikel, Spalte KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesArtikelID { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "KesArtikelID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMassnahme_KesArtikelTS { get { return new DBOColumnDef(KesMassnahme_KesArtikel.TableDef, "KesMassnahme_KesArtikelTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Auftrag', welche der Massnahme angehängt ist
/// </summary>

public static class KesMassnahmeAuftrag{
/// <summary>
/// Gets the table definition for KesMassnahmeAuftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMassnahmeAuftrag", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMassnahmeAuftragID { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "KesMassnahmeAuftragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesMassnahmeAuftrag_KesMassnahme) => KesMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "KesMassnahmeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Dokument Beschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Beschluss { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "DocumentID_Beschluss", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beschlussdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeschlussVom { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "BeschlussVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Erledigungsdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErledigungBis { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "ErledigungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Auftrag in Textform
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auftrag { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "Auftrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// LOV KesMassnahmeGeschaeftsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesMassnahmeGeschaeftsartCode { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "KesMassnahmeGeschaeftsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Bericht/Antrag
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Bericht { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "DocumentID_Bericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Versand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Versand { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "DocumentID_Versand", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Verfügung KESB
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_VerfuegungKESB { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "DocumentID_VerfuegungKESB", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum Verfügung KESB
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVerfuegungKESB { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "DatumVerfuegungKESB", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMassnahmeAuftragTS { get { return new DBOColumnDef(KesMassnahmeAuftrag.TableDef, "KesMassnahmeAuftragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Berichte', welche der Massnahme angehängt ist
/// </summary>

public static class KesMassnahmeBericht{
/// <summary>
/// Gets the table definition for KesMassnahmeBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMassnahmeBericht", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMassnahmeBerichtID { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "KesMassnahmeBerichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle KesMassnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "KesMassnahmeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV KesMassnahmeBerichtsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesMassnahmeBerichtsartCode { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "KesMassnahmeBerichtsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Berichtsperiode von
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Berichtsperiode bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Dokument Bericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Bericht { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DocumentID_Bericht", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Rechnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Rechnung { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DocumentID_Rechnung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument Versand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Versand { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DocumentID_Versand", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument der KES-Verfügung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_VerfuegungKESB { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DocumentID_VerfuegungKESB", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum der KES-Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVerfuegungKESB { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "DatumVerfuegungKESB", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMassnahmeBerichtTS { get { return new DBOColumnDef(KesMassnahmeBericht.TableDef, "KesMassnahmeBerichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Kes Massnahme
/// </summary>

public static class KesMassnahmeBSS{
/// <summary>
/// Gets the table definition for KesMassnahmeBSS
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesMassnahmeBSS", "", false); } }


/// <summary>
/// Primärschlüssel Kes Massnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesMassnahmeBSSID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesMassnahmeBSSID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesMassnahmeBSS_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Massnahmeführender (Berufsbeistand), Fremdschlüssel (FK_KesMassnahmeBSS_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Massnahmeführender (Privatperson), Fremdschlüssel (FK_KesMassnahmeBSS_VmPriMa) => VmPriMaID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Massnahmeführender (Fachbeistand), Fremdschlüssel (FK_KesMassnahmeBSS_BaInstitution) => BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Massnahmegebundene Geschäfte, Fremdschlüssel (FK_KesMassnahmeBSS_KesArtikel) => KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesArtikelID_MassnahmegebundeneGeschaefte { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesArtikelID_MassnahmegebundeneGeschaefte", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Nicht Massnahmegebundene Geschäfte, Fremdschlüssel (FK_KesMassnahmeBSS_KesArtikel) => KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef KesArtikelID_NichtMassnahmegebundeneGeschaefte { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesArtikelID_NichtMassnahmegebundeneGeschaefte", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Platzierung in einer Institution
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef Platzierung_BaInstitutionID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Platzierung_BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Massnahmen Typ
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesMassnahmeTypCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesMassnahmeTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Beistandsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesBeistandsartCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesBeistandsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Gefährdungsmeldung durch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesGefaehrdungsmeldungDurchCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesGefaehrdungsmeldungDurchCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Änderungsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAenderungsgrundCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesAenderungsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Aufhebungsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAufhebungsgrundCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesAufhebungsgrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Verfügung/Auftrag KESB DokumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KESBDocumentID { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KESBDocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Für die eingescannte Ernennungsurkunde in KES-Massnahmen-ES
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Urkunde { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "DocumentID_Urkunde", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Errichtung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErrichtungVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "ErrichtungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Änderung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AenderungVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "AenderungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Übernahme vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebernahmeVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "UebernahmeVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Beschriftung Berichtsgenehmigung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtsgenehmigungVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "BerichtsgenehmigungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Beistandswechsel
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beistandswechsel { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Beistandswechsel", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Übertragung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UebertragungVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "UebertragungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Aufhebung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufhebungVom { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "AufhebungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Aufgabenbereich (LOV KesAufgabenbereichES)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAufgabenbereichCodes { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesAufgabenbereichCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesGrundlageCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesGrundlageCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Indikation (LOV KesIndikationES oder KesIndikationKS jenach Wert in KesMassnahmeTypCode)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesIndikationCodes { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesIndikationCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Wert der Werteliste KesElterlicheSorgeObhut im Feld 'Elterliche Sorge'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesElterlicheSorgeObhutCode_ElterlicheSorge { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesElterlicheSorgeObhutCode_ElterlicheSorge", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Wert der Werteliste KesElterlicheSorgeObhut im Feld 'Obhut'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesElterlicheSorgeObhutCode_Obhut { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesElterlicheSorgeObhutCode_Obhut", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// PLZ
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Ort
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Ortschaftscode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Kanton
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Beschriftung Fürsorgerische Unterbringung FU
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef FuersorgerischeUnterbringung { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "FuersorgerischeUnterbringung", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Massnahme Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Hat den Wert 1, wenn der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesMassnahmeBSSTS { get { return new DBOColumnDef(KesMassnahmeBSS.TableDef, "KesMassnahmeBSSTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Kes Pflegekinderaufsicht
/// </summary>

public static class KesPflegekinderaufsicht{
/// <summary>
/// Gets the table definition for KesPflegekinderaufsicht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesPflegekinderaufsicht", "", false); } }


/// <summary>
/// Primärschlüssel KesPflegekinderaufsicht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesPflegekinderaufsichtID { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "KesPflegekinderaufsichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Verantwortliche Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Tages-/Pflegeeltern des Kindes
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Pflegekinderaufsicht Beginn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Pflegekinderaufsicht Ende
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Liste von Pflegearten (LOV KesPflegeart)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesPflegeartCode { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "KesPflegeartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesPflegekinderaufsichtTS { get { return new DBOColumnDef(KesPflegekinderaufsicht.TableDef, "KesPflegekinderaufsichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet Präventionen für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesPraevention{
/// <summary>
/// Gets the table definition for KesPraevention
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesPraevention", "", false); } }


/// <summary>
/// Primärschlüssel für KES-Präventionen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesPraeventionID { get { return new DBOColumnDef(KesPraevention.TableDef, "KesPraeventionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_KesPraevention_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesPraevention.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// SAR, Fremdschlüssel (FK_KesPraevention_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesPraevention.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Beginn der Prävention
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(KesPraevention.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ende der Prävention
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(KesPraevention.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Präventionsartcode aus LOV KesPraeventionsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesPraeventionsartCode { get { return new DBOColumnDef(KesPraevention.TableDef, "KesPraeventionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Präventionsabschlusscode aus LOV KesPraeventionsabschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesPraeventionsabschlussCode { get { return new DBOColumnDef(KesPraevention.TableDef, "KesPraeventionsabschlussCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(KesPraevention.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesPraevention.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesPraevention.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesPraevention.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesPraevention.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesPraeventionTS { get { return new DBOColumnDef(KesPraevention.TableDef, "KesPraeventionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KES Verlauf (Fachstelle PriMa/FaMa - PriMa-Begleitung / Pflegekinderaufsicht - Aufsicht)
/// </summary>

public static class KesVerlauf{
/// <summary>
/// Gets the table definition for KesVerlauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("KesVerlauf", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KesVerlaufID { get { return new DBOColumnDef(KesVerlauf.TableDef, "KesVerlaufID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// FaLeistung, Fremdschlüssel (FK_KesVerlauf_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(KesVerlauf.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// LOV KesVerlaufTyp (Maske PriMa/FaMa oder Pflegekinderaufsicht)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesVerlaufTypCode { get { return new DBOColumnDef(KesVerlauf.TableDef, "KesVerlaufTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// VerfasserIn, Fremdschlüssel (FK_KesVerlauf_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(KesVerlauf.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaPersonID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(KesVerlauf.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// BaInstitutionID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(KesVerlauf.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Dazugehöriges Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(KesVerlauf.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum des Eintrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(KesVerlauf.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// LOV KesKontaktart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesKontaktartCode { get { return new DBOColumnDef(KesVerlauf.TableDef, "KesKontaktartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// LOV KesDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesDienstleistungCode { get { return new DBOColumnDef(KesVerlauf.TableDef, "KesDienstleistungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Stichwort/Titel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(KesVerlauf.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// LOV FaDauer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaDauerCode { get { return new DBOColumnDef(KesVerlauf.TableDef, "FaDauerCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Inhalt der Besprechung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Inhalt { get { return new DBOColumnDef(KesVerlauf.TableDef, "Inhalt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(KesVerlauf.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(KesVerlauf.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(KesVerlauf.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(KesVerlauf.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef KesVerlaufTS { get { return new DBOColumnDef(KesVerlauf.TableDef, "KesVerlaufTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zuweisungstabelle für Datenanonymisierung
/// </summary>

public static class MigAssignment{
/// <summary>
/// Gets the table definition for MigAssignment
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("MigAssignment", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef Lookup { get { return new DBOColumnDef(MigAssignment.TableDef, "Lookup", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef OldValue { get { return new DBOColumnDef(MigAssignment.TableDef, "OldValue", typeof(string), false, false, true, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NewValue { get { return new DBOColumnDef(MigAssignment.TableDef, "NewValue", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MigAssignmentTS { get { return new DBOColumnDef(MigAssignment.TableDef, "MigAssignmentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Logtabelle für Datenanonymisierung
/// </summary>

public static class MigLog{
/// <summary>
/// Gets the table definition for MigLog
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("MigLog", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(MigLog.TableDef, "ID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Function { get { return new DBOColumnDef(MigLog.TableDef, "Function", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Table { get { return new DBOColumnDef(MigLog.TableDef, "Table", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Column { get { return new DBOColumnDef(MigLog.TableDef, "Column", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Time { get { return new DBOColumnDef(MigLog.TableDef, "Time", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rows { get { return new DBOColumnDef(MigLog.TableDef, "Rows", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Duration_ms { get { return new DBOColumnDef(MigLog.TableDef, "Duration_ms", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Prms { get { return new DBOColumnDef(MigLog.TableDef, "Prms", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Error { get { return new DBOColumnDef(MigLog.TableDef, "Error", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MigLogTS { get { return new DBOColumnDef(MigLog.TableDef, "MigLogTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Lookup-Tabelle für Datenanonymisierung
/// </summary>

public static class MigLookup{
/// <summary>
/// Gets the table definition for MigLookup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("MigLookup", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef Lookup { get { return new DBOColumnDef(MigLookup.TableDef, "Lookup", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef RowID { get { return new DBOColumnDef(MigLookup.TableDef, "RowID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(MigLookup.TableDef, "Value", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MigLookupTS { get { return new DBOColumnDef(MigLookup.TableDef, "MigLookupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class MigXClassFrmToCtl{
/// <summary>
/// Gets the table definition for MigXClassFrmToCtl
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("MigXClassFrmToCtl", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(MigXClassFrmToCtl.TableDef, "ID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef FormName { get { return new DBOColumnDef(MigXClassFrmToCtl.TableDef, "FormName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef ControlName { get { return new DBOColumnDef(MigXClassFrmToCtl.TableDef, "ControlName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsFormClassItemInKiSS5 { get { return new DBOColumnDef(MigXClassFrmToCtl.TableDef, "IsFormClassItemInKiSS5", typeof(bool), false, false, false, 1, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class NewodPerson{
/// <summary>
/// Gets the table definition for NewodPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("NewodPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef NewodPersonID { get { return new DBOColumnDef(NewodPerson.TableDef, "NewodPersonID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(NewodPerson.TableDef, "Vorname", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(NewodPerson.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(NewodPerson.TableDef, "AHVNummer", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(NewodPerson.TableDef, "Versichertennummer", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef GeburtsdatumString { get { return new DBOColumnDef(NewodPerson.TableDef, "GeburtsdatumString", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(NewodPerson.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(NewodPerson.TableDef, "Strasse", typeof(string), false, false, false, 60, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(NewodPerson.TableDef, "HausNr", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef HausNrZusatz { get { return new DBOColumnDef(NewodPerson.TableDef, "HausNrZusatz", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(NewodPerson.TableDef, "PLZ", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(NewodPerson.TableDef, "Ort", typeof(string), false, false, false, 60, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Aufruf des Services loggen
/// </summary>

public static class ServiceCall{
/// <summary>
/// Gets the table definition for ServiceCall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("ServiceCall", "", false); } }


/// <summary>
/// PK ServiceCallID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ServiceCallID { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceCallID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Benutzer der die Aktion ausgelöst hat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(ServiceCall.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Name der Machine die die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MachineName { get { return new DBOColumnDef(ServiceCall.TableDef, "MachineName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Service das die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ServiceName { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Methode die die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MethodName { get { return new DBOColumnDef(ServiceCall.TableDef, "MethodName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Eingangsparameter
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ServiceParam { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceParam", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Info über dem Call/Aktion
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Info { get { return new DBOColumnDef(ServiceCall.TableDef, "Info", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// ServiceStartdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ServiceStart { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceStart", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ServiceEnddatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ServiceEnd { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceEnd", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// ServiceResult zB Fehlerhaft oder Erfolgreich
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ServiceResultTypeCode { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceResultTypeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(ServiceCall.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(ServiceCall.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(ServiceCall.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(ServiceCall.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ServiceCallTS { get { return new DBOColumnDef(ServiceCall.TableDef, "ServiceCallTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Log-Tabelle für Nachvollziehbarkeit von Service-Fehlern
/// </summary>

public static class ServiceProcessError{
/// <summary>
/// Gets the table definition for ServiceProcessError
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("ServiceProcessError", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ServiceProcessErrorID { get { return new DBOColumnDef(ServiceProcessError.TableDef, "ServiceProcessErrorID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(ServiceProcessError.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(ServiceProcessError.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// ID eines Fremdsystems (z.B. EinwohnerregisterID)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FremdsystemID { get { return new DBOColumnDef(ServiceProcessError.TableDef, "FremdsystemID", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Der Name des Services, wo der Fehler aufgetreten ist
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ServiceName { get { return new DBOColumnDef(ServiceProcessError.TableDef, "ServiceName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Der Name der Methode, wo der Fehler aufgetreten ist
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MethodName { get { return new DBOColumnDef(ServiceProcessError.TableDef, "MethodName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Allgemeine Informationen zum Fehler (spezifische Infos sind in der Tabelle ServiceProcessErrorMessage)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Info { get { return new DBOColumnDef(ServiceProcessError.TableDef, "Info", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(ServiceProcessError.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(ServiceProcessError.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(ServiceProcessError.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(ServiceProcessError.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ServiceProcessErrorTS { get { return new DBOColumnDef(ServiceProcessError.TableDef, "ServiceProcessErrorTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Log-Tabelle für Fehlermeldungen eines Service-Fehlers
/// </summary>

public static class ServiceProcessErrorMessage{
/// <summary>
/// Gets the table definition for ServiceProcessErrorMessage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("ServiceProcessErrorMessage", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ServiceProcessErrorMessageID { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "ServiceProcessErrorMessageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ServiceProcessErrorID { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "ServiceProcessErrorID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Eine Spezifische Fehlermeldung zum aufgetretenen Fehler
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Message { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "Message", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ServiceProcessErrorMessageTS { get { return new DBOColumnDef(ServiceProcessErrorMessage.TableDef, "ServiceProcessErrorMessageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class ShEinzelzahlung{
/// <summary>
/// Gets the table definition for ShEinzelzahlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("ShEinzelzahlung", "", false); } }


/// <summary>
/// Primärschlüssel für ShEinzelzahlung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ShEinzelzahlungID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "ShEinzelzahlungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_ShBeleg) => ShBeleg.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "BgBudgetID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_ShBeleg) => ShBeleg.ShBelegID
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ShBelegID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "ShBelegID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FlKostenartID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "FlKostenartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BgSpezkonto) => BgSpezkonto.BgSpezkontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungDatum { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "RechnungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameEinzelzahlung { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "NameEinzelzahlung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "((0))", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragAnfrage { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "BetragAnfrage", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ShStatusEinzelzahlungCode { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "ShStatusEinzelzahlungCode", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value1 { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "Value1", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value2 { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "Value2", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value3 { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "Value3", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: TEXT]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "Bemerkung", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ShEinzelzahlungTS { get { return new DBOColumnDef(ShEinzelzahlung.TableDef, "ShEinzelzahlungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Jeder Tabellen Eintrag entspricht einem ASVS-Export
/// </summary>

public static class SstASVSExport{
/// <summary>
/// Gets the table definition for SstASVSExport
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("SstASVSExport", "", false); } }


/// <summary>
/// Der Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SstASVSExportID { get { return new DBOColumnDef(SstASVSExport.TableDef, "SstASVSExportID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Export-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumExport { get { return new DBOColumnDef(SstASVSExport.TableDef, "DatumExport", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ein beliebiger Benutzer-Kommentar zum Expoort-Eintrag
/// [DataType: VARCHAR]
/// [Length: 400]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(SstASVSExport.TableDef, "Bemerkung", typeof(string), false, false, false, 400, true, "", ""); } }


/// <summary>
/// Ein Verweis auf die Exportierte XML-Datei
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(SstASVSExport.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Ersteller des Eintrages
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(SstASVSExport.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Der Zeitpunkt des Erstellen des Datensatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(SstASVSExport.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Der letzte Benutzer, welcher den Datensatz verändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(SstASVSExport.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Der Zeitpunkt der letzten Veränderung des Datensatzes
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(SstASVSExport.TableDef, "Modified", typeof(string), false, false, false, 50, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef SstASVSExportTS { get { return new DBOColumnDef(SstASVSExport.TableDef, "SstASVSExportTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Verbindungstabelle für m:n Verknüfung zwischen SstASVSExport und WhASVSEintrag
/// </summary>

public static class SstASVSExport_Eintrag{
/// <summary>
/// Gets the table definition for SstASVSExport_Eintrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("SstASVSExport_Eintrag", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SstASVSExport_EintragID { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "SstASVSExport_EintragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef SstASVSExportID { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "SstASVSExportID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef WhASVSEintragID { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "WhASVSEintragID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Beschreibt die Export-Art (normal oder zum löschen/ungültig erklären; siehe entsprechenden LOV-Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ASVSExportCode { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "ASVSExportCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "Modified", typeof(string), false, false, false, 50, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef SstASVSExport_EintragTS { get { return new DBOColumnDef(SstASVSExport_Eintrag.TableDef, "SstASVSExport_EintragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class SstNewodMapping{
/// <summary>
/// Gets the table definition for SstNewodMapping
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("SstNewodMapping", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef NewodMappingID { get { return new DBOColumnDef(SstNewodMapping.TableDef, "NewodMappingID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Attribut { get { return new DBOColumnDef(SstNewodMapping.TableDef, "Attribut", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef KissWert { get { return new DBOColumnDef(SstNewodMapping.TableDef, "KissWert", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef NewodWert { get { return new DBOColumnDef(SstNewodMapping.TableDef, "NewodWert", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KissBedeutung { get { return new DBOColumnDef(SstNewodMapping.TableDef, "KissBedeutung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NewodBedeutung { get { return new DBOColumnDef(SstNewodMapping.TableDef, "NewodBedeutung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NewodAttribut { get { return new DBOColumnDef(SstNewodMapping.TableDef, "NewodAttribut", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class SstNewodMutation{
/// <summary>
/// Gets the table definition for SstNewodMutation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("SstNewodMutation", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef NewodMutationID { get { return new DBOColumnDef(SstNewodMutation.TableDef, "NewodMutationID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef NewodNummer { get { return new DBOColumnDef(SstNewodMutation.TableDef, "NewodNummer", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Data { get { return new DBOColumnDef(SstNewodMutation.TableDef, "Data", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mutationsart { get { return new DBOColumnDef(SstNewodMutation.TableDef, "Mutationsart", typeof(string), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(SstNewodMutation.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Imported { get { return new DBOColumnDef(SstNewodMutation.TableDef, "Imported", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Processed { get { return new DBOColumnDef(SstNewodMutation.TableDef, "Processed", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// Benutzerinformationen für die Optimierung des KiSS sammeln.
/// </summary>

public static class UserSession{
/// <summary>
/// Gets the table definition for UserSession
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("UserSession", "", false); } }


/// <summary>
/// Session-ID des Benutzers
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef UserSessionID { get { return new DBOColumnDef(UserSession.TableDef, "UserSessionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// UserID der XUsertabelle durch die den Benutzer identifiziert wird
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(UserSession.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Logonname des Benutzers
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(UserSession.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// LoginDatum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef LoginDatum { get { return new DBOColumnDef(UserSession.TableDef, "LoginDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// LogoutDatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LogoutDatum { get { return new DBOColumnDef(UserSession.TableDef, "LogoutDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Benutzername
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserName { get { return new DBOColumnDef(UserSession.TableDef, "UserName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Domäne des Benutzers
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserDomainName { get { return new DBOColumnDef(UserSession.TableDef, "UserDomainName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Computername des Benutzers
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MachineName { get { return new DBOColumnDef(UserSession.TableDef, "MachineName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// KiSS-Version
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClientVersion { get { return new DBOColumnDef(UserSession.TableDef, "ClientVersion", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Version des Windows-Betriebssystems
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WindowsVersion { get { return new DBOColumnDef(UserSession.TableDef, "WindowsVersion", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// .NET-Version
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DotNetVersion { get { return new DBOColumnDef(UserSession.TableDef, "DotNetVersion", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Bildschirmauflösung Breite
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufloesungBreite { get { return new DBOColumnDef(UserSession.TableDef, "AufloesungBreite", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bildschirmauflösung Höhe
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufloesungHoehe { get { return new DBOColumnDef(UserSession.TableDef, "AufloesungHoehe", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Versionsnummer des Word
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OfficeVersionWord { get { return new DBOColumnDef(UserSession.TableDef, "OfficeVersionWord", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Versionsnummer des Excel
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OfficeVersionExcel { get { return new DBOColumnDef(UserSession.TableDef, "OfficeVersionExcel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Versionsnummer des Outlook
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OfficeVersionOutlook { get { return new DBOColumnDef(UserSession.TableDef, "OfficeVersionOutlook", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Sprachinformationen
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CultureInfo { get { return new DBOColumnDef(UserSession.TableDef, "CultureInfo", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(UserSession.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(UserSession.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(UserSession.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(UserSession.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des UserSessionRecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef UserSessionTS { get { return new DBOColumnDef(UserSession.TableDef, "UserSessionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// AHV Mindestbeträge im Modul vormundschaftliche Massnahmen, Administration
/// </summary>

public static class VmAHVMindestbeitrag{
/// <summary>
/// Gets the table definition for VmAHVMindestbeitrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmAHVMindestbeitrag", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmAHVMindestbeitragID { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "VmAHVMindestbeitragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Document, Rolle IK Auszug
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_IKAuszug { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "DocumentID_IKAuszug", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Document, Rolle "Neutral"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Neutral { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "DocumentID_Neutral", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Document, Rolle "NEAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_NEAnmeldung { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "DocumentID_NEAnmeldung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// IK Auszug Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IKAuszugDatum { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "IKAuszugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Beitrags Rechnugns Jahr
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeitragsRechnungsJahr { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "BeitragsRechnungsJahr", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Bruttolohn
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bruttolohn { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Bruttolohn", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// NE Anmeldung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NEAnmeldungDatum { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "NEAnmeldungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmQuartalCode { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "VmQuartalCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "(getdate())", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmAHVMindestbeitragTS { get { return new DBOColumnDef(VmAHVMindestbeitrag.TableDef, "VmAHVMindestbeitragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Um Anträge EKSK in Vormundschaftliche Massnahme zu handeln
/// </summary>

public static class VmAntragEKSK{
/// <summary>
/// Gets the table definition for VmAntragEKSK
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmAntragEKSK", "", false); } }


/// <summary>
/// Primärschlüssel von VmAntragEKSK
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmAntragEKSKID { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "VmAntragEKSKID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fredmschlüssel auf XDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Text des Antrages
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Antrag { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Antrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Begründung des Antrages
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Datum des Antrages
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAntrag { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "DatumAntrag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum der Genehmigung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumGenehmigtEKSK { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "DatumGenehmigtEKSK", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Flag für das logisches Löschen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Titel des Antrages
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Titel", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmAntragEKSKTS { get { return new DBOColumnDef(VmAntragEKSK.TableDef, "VmAntragEKSKTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBericht{
/// <summary>
/// Gets the table definition for VmBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmBericht", "", false); } }


/// <summary>
/// Primärschlüssel für VmBericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmBerichtID { get { return new DBOColumnDef(VmBericht.TableDef, "VmBerichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmBericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmBericht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtsperiodeVon { get { return new DBOColumnDef(VmBericht.TableDef, "BerichtsperiodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtsperiodeBis { get { return new DBOColumnDef(VmBericht.TableDef, "BerichtsperiodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Erstellung { get { return new DBOColumnDef(VmBericht.TableDef, "Erstellung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mahnung { get { return new DBOColumnDef(VmBericht.TableDef, "Mahnung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mahnung2 { get { return new DBOColumnDef(VmBericht.TableDef, "Mahnung2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Passation1 { get { return new DBOColumnDef(VmBericht.TableDef, "Passation1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Passation2 { get { return new DBOColumnDef(VmBericht.TableDef, "Passation2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versand { get { return new DBOColumnDef(VmBericht.TableDef, "Versand", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmBericht.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmBerichtTS { get { return new DBOColumnDef(VmBericht.TableDef, "VmBerichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Entschaedigung { get { return new DBOColumnDef(VmBericht.TableDef, "Entschaedigung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBeschwerdeAnfrage{
/// <summary>
/// Gets the table definition for VmBeschwerdeAnfrage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmBeschwerdeAnfrage", "", false); } }


/// <summary>
/// Primärschlüssel von VaBeschwerdeAnfrage
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmBeschwerdeAnfrageID { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "VmBeschwerdeAnfrageID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Datum Eingang  der Beschwerde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eingang { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Eingang", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Absender der Beschwerde oder Anfrage.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Absender { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Absender", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Stichworte über die Beschwerde oder Anfrage.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichworte { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Stichworte", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// LOV Code. Beispiele: EKS Kommission, Regierungsstatthalter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBsBeschwerdeBehandlungCode { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "VmBsBeschwerdeBehandlungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum Abschluss der Beschwerde oder Anfrage.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abschluss { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Abschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Die Id des binären Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob ein Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz (Beschwerde oder Anfrage) erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde (Beschwerde oder Anfrage)
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz (Beschwerde oder Anfrage) zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist (Beschwerde oder Anfrage).
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmBeschwerdeAnfrageTS { get { return new DBOColumnDef(VmBeschwerdeAnfrage.TableDef, "VmBeschwerdeAnfrageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBewertung{
/// <summary>
/// Gets the table definition for VmBewertung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmBewertung", "", false); } }


/// <summary>
/// Primärschlüssel für VmBewertung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmBewertungID { get { return new DBOColumnDef(VmBewertung.TableDef, "VmBewertungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmBewertung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmBewertung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(VmBewertung.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmMandatstypCode { get { return new DBOColumnDef(VmBewertung.TableDef, "VmMandatstypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmKriterienCodes { get { return new DBOColumnDef(VmBewertung.TableDef, "VmKriterienCodes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmKriterienListe { get { return new DBOColumnDef(VmBewertung.TableDef, "VmKriterienListe", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmBewertung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmBewertung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef VmFallgewichtungStichtagCode { get { return new DBOColumnDef(VmBewertung.TableDef, "VmFallgewichtungStichtagCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef VmFallgewichtungJahr { get { return new DBOColumnDef(VmBewertung.TableDef, "VmFallgewichtungJahr", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmMandatstypBewilligtCode { get { return new DBOColumnDef(VmBewertung.TableDef, "VmMandatstypBewilligtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProduktID { get { return new DBOColumnDef(VmBewertung.TableDef, "ProduktID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmBewertung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmBewertungTS { get { return new DBOColumnDef(VmBewertung.TableDef, "VmBewertungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Wird für die Finanzbudgets in der Vormundschaft verwendet
/// </summary>

public static class VmBudget{
/// <summary>
/// Gets the table definition for VmBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmBudget", "", false); } }


/// <summary>
/// Primärschlüssel von VmBudget
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmBudgetID { get { return new DBOColumnDef(VmBudget.TableDef, "VmBudgetID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmBudget.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmBudget.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// DokumentID des physikalischen Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmBudget.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumErstellung { get { return new DBOColumnDef(VmBudget.TableDef, "DatumErstellung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// BudgetTitel
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichworte { get { return new DBOColumnDef(VmBudget.TableDef, "Stichworte", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Datum Mutation
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumMutation { get { return new DBOColumnDef(VmBudget.TableDef, "DatumMutation", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Mutationsgrund
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Grund { get { return new DBOColumnDef(VmBudget.TableDef, "Grund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmBudget.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmBudget.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmBudget.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmBudget.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmBudget.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmBudgetTS { get { return new DBOColumnDef(VmBudget.TableDef, "VmBudgetTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// ELKrankheitskosten in Vormundschaftliche Massnahmen, Administration.
/// </summary>

public static class VmELKrankheitskosten{
/// <summary>
/// Gets the table definition for VmELKrankheitskosten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmELKrankheitskosten", "", false); } }


/// <summary>
/// Primärschlüssel.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmELKrankheitskostenID { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "VmELKrankheitskostenID", typeof(int), true, true, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur FaLeisgung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Docoument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Eingereicht.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eingereicht { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Eingereicht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Abrechnungen vom.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbrechnungenVom { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "AbrechnungenVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungVom { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "VerfuegungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Abrechnung bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbrechnungenBis { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "AbrechnungenBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Leistung als Zahl
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungLeistung { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "VerfuegungLeistung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Daensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmELKrankheitskostenTS { get { return new DBOColumnDef(VmELKrankheitskosten.TableDef, "VmELKrankheitskostenTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErbe{
/// <summary>
/// Gets the table definition for VmErbe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmErbe", "", false); } }


/// <summary>
/// Primärschlüssel für VmErbe Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmErbeID { get { return new DBOColumnDef(VmErbe.TableDef, "VmErbeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmSiegelung) => VmSiegelung.VmSiegelungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmSiegelungID { get { return new DBOColumnDef(VmErbe.TableDef, "VmSiegelungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmTestamentID { get { return new DBOColumnDef(VmErbe.TableDef, "VmTestamentID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmErbschaftsdienst) => VmErbschaftsdienst.VmErbschaftsdienstID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmErbschaftsdienstID { get { return new DBOColumnDef(VmErbe.TableDef, "VmErbschaftsdienstID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Position { get { return new DBOColumnDef(VmErbe.TableDef, "Position", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Level { get { return new DBOColumnDef(VmErbe.TableDef, "Level", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(VmErbe.TableDef, "Titel", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(VmErbe.TableDef, "Geburtsdatum", typeof(string), false, false, false, 40, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(VmErbe.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FamilienNamen { get { return new DBOColumnDef(VmErbe.TableDef, "FamilienNamen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vornamen { get { return new DBOColumnDef(VmErbe.TableDef, "Vornamen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(VmErbe.TableDef, "Zusatz", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(VmErbe.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(VmErbe.TableDef, "Ort", typeof(string), false, false, false, 80, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Land { get { return new DBOColumnDef(VmErbe.TableDef, "Land", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ergaenzung { get { return new DBOColumnDef(VmErbe.TableDef, "Ergaenzung", typeof(string), false, false, false, 4000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktAdresse { get { return new DBOColumnDef(VmErbe.TableDef, "KontaktAdresse", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktHinzufuegen { get { return new DBOColumnDef(VmErbe.TableDef, "KontaktHinzufuegen", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TestamentEroeffnungStatus { get { return new DBOColumnDef(VmErbe.TableDef, "TestamentEroeffnungStatus", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TestamentEroeffnungNr { get { return new DBOColumnDef(VmErbe.TableDef, "TestamentEroeffnungNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 5]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TestamentEroeffnungVersandart { get { return new DBOColumnDef(VmErbe.TableDef, "TestamentEroeffnungVersandart", typeof(string), false, false, false, 5, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TestamentEroeffnungVersandDatum { get { return new DBOColumnDef(VmErbe.TableDef, "TestamentEroeffnungVersandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErbCodierung { get { return new DBOColumnDef(VmErbe.TableDef, "ErbCodierung", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErbanteilDividend { get { return new DBOColumnDef(VmErbe.TableDef, "ErbanteilDividend", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErbanteilDivisor { get { return new DBOColumnDef(VmErbe.TableDef, "ErbanteilDivisor", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmErbe.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmErbeTS { get { return new DBOColumnDef(VmErbe.TableDef, "VmErbeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel2 { get { return new DBOColumnDef(VmErbe.TableDef, "Titel2", typeof(string), false, false, false, 500, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErblasser{
/// <summary>
/// Gets the table definition for VmErblasser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmErblasser", "", false); } }


/// <summary>
/// Primärschlüssel für VmErblasser Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmErblasserID { get { return new DBOColumnDef(VmErblasser.TableDef, "VmErblasserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErblasser_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmErblasser.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesDatum { get { return new DBOColumnDef(VmErblasser.TableDef, "TodesDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesDatumText { get { return new DBOColumnDef(VmErblasser.TableDef, "TodesDatumText", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesOrt { get { return new DBOColumnDef(VmErblasser.TableDef, "TodesOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(VmErblasser.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(VmErblasser.TableDef, "Anrede", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef FamilienNamen { get { return new DBOColumnDef(VmErblasser.TableDef, "FamilienNamen", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LedigName { get { return new DBOColumnDef(VmErblasser.TableDef, "LedigName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Vornamen { get { return new DBOColumnDef(VmErblasser.TableDef, "Vornamen", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Elternnamen { get { return new DBOColumnDef(VmErblasser.TableDef, "Elternnamen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zivilstand { get { return new DBOColumnDef(VmErblasser.TableDef, "Zivilstand", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandCode { get { return new DBOColumnDef(VmErblasser.TableDef, "ZivilstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(VmErblasser.TableDef, "Geburtsdatum", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Heimatorte { get { return new DBOColumnDef(VmErblasser.TableDef, "Heimatorte", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(VmErblasser.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(VmErblasser.TableDef, "Ort", typeof(string), false, false, false, 80, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aufenthalt { get { return new DBOColumnDef(VmErblasser.TableDef, "Aufenthalt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmErblasser.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmErblasserTS { get { return new DBOColumnDef(VmErblasser.TableDef, "VmErblasserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(VmErblasser.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErbschaftsdienst{
/// <summary>
/// Gets the table definition for VmErbschaftsdienst
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmErbschaftsdienst", "", false); } }


/// <summary>
/// Primärschlüssel für VmErbschaftsdienst Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmErbschaftsdienstID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "VmErbschaftsdienstID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErbschaftsdienst_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErbschaftsdienst_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufNr { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "LaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MassnahmenCodes { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "MassnahmenCodes", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnschriftErbenDokID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "AnschriftErbenDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnschriftErbenDatum { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "AnschriftErbenDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InventarCode { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "InventarCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef InventarNotarID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "InventarNotarID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "Aktiv", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VertretungsBeistandschaft { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "VertretungsBeistandschaft", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausschlagung { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "Ausschlagung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef El { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "El", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopieAnCodes { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "KopieAnCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UeberweisungRSTADokID { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "UeberweisungRSTADokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UeberweisungRSTA { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "UeberweisungRSTA", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Massnahme { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "Massnahme", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmErbschaftsdienstTS { get { return new DBOColumnDef(VmErbschaftsdienst.TableDef, "VmErbschaftsdienstTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErnennung{
/// <summary>
/// Gets the table definition for VmErnennung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmErnennung", "", false); } }


/// <summary>
/// Primärschlüssel für VmErnennung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmErnennungID { get { return new DBOColumnDef(VmErnennung.TableDef, "VmErnennungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErnennung_VmMassnahme) => VmMassnahme.VmMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmMassnahmeID { get { return new DBOColumnDef(VmErnennung.TableDef, "VmMassnahmeID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErnennung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmErnennung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmErnennung_VmPriMa) => VmPriMa.VmPriMaID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(VmErnennung.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ernennung { get { return new DBOColumnDef(VmErnennung.TableDef, "Ernennung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErnennungsurkundeDokID { get { return new DBOColumnDef(VmErnennung.TableDef, "ErnennungsurkundeDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmErnennung.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmErnennung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmErnennung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmErnennung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmErnennung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmErnennungTS { get { return new DBOColumnDef(VmErnennung.TableDef, "VmErnennungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für Vormundschaft -> Auftrag Jugendamt -> Gefährdungsmeldung
/// </summary>

public static class VmGefaehrdungsMeldung{
/// <summary>
/// Gets the table definition for VmGefaehrdungsMeldung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmGefaehrdungsMeldung", "", false); } }


/// <summary>
/// Primärschlüssel von VmGefaehrdungsMeldung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmGefaehrdungsMeldungID { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "VmGefaehrdungsMeldungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Eingangsdatum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEingang { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "DatumEingang", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Melder/In. Beispiele: Selber, Polizei
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaKontaktveranlasserCode { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "FaKontaktveranlasserCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmGefaehrdungNSBCodes { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "VmGefaehrdungNSBCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Themen wie Wohnen, Gesundheit u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaThemaCodes { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "FaThemaCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Ausgangslage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausgangslage { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Ausgangslage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Auflagen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auflagen { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Auflagen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Überprüfung/Zusammenarbeit mit anderen Institutionen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ueberpruefung { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Ueberpruefung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Konsequenzen b. Nichteinhalten der Auflagen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Konsequenzen { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Konsequenzen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Auflagen aufg.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuflageDatum { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "AuflageDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Ob der Datensatz gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmGefaehrdungsMeldungTS { get { return new DBOColumnDef(VmGefaehrdungsMeldung.TableDef, "VmGefaehrdungsMeldungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Vormundschaft Inventar
/// </summary>

public static class VmInventar{
/// <summary>
/// Gets the table definition for VmInventar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmInventar", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmInventarID { get { return new DBOColumnDef(VmInventar.TableDef, "VmInventarID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmInventar.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Mitarbeiter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmInventar.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zum Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmInventar.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum Eröffnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eroeffnung { get { return new DBOColumnDef(VmInventar.TableDef, "Eroeffnung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Erstkontakt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstKontakt { get { return new DBOColumnDef(VmInventar.TableDef, "ErstKontakt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mahnung { get { return new DBOColumnDef(VmInventar.TableDef, "Mahnung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Genehmigung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Genehmigung { get { return new DBOColumnDef(VmInventar.TableDef, "Genehmigung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Versand
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versand { get { return new DBOColumnDef(VmInventar.TableDef, "Versand", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum Inventar aufgenommen
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InventarAufgenommen { get { return new DBOColumnDef(VmInventar.TableDef, "InventarAufgenommen", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmInventar.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmInventar.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmInventar.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmInventar.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmInventar.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmInventar.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Adressrecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmInventarTS { get { return new DBOColumnDef(VmInventar.TableDef, "VmInventarTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um Klientenbudgets in Vormundschaftliche Massnahmen zu erfassen
/// </summary>

public static class VmKlientenbudget{
/// <summary>
/// Gets the table definition for VmKlientenbudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmKlientenbudget", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmKlientenbudgetID { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "VmKlientenbudgetID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XUser um den Autor zu definieren
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Status-Code des Budget aus LOV VmKlientenbudgetStatus (auch enum in C# VmKlientenbudgetStatus)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmKlientenbudgetStatusCode { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "VmKlientenbudgetStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Datum ab wenn das Budget gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GueltigAb { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "GueltigAb", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Grund zur Erstellung des Klientenbudgets. LOV VmKlientenbudgetMutationsgrund
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmKlientenbudgetMutationsgrundCode { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "VmKlientenbudgetMutationsgrundCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmKlientenbudgetTS { get { return new DBOColumnDef(VmKlientenbudget.TableDef, "VmKlientenbudgetTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmMandant{
/// <summary>
/// Gets the table definition for VmMandant
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmMandant", "", false); } }


/// <summary>
/// Primärschlüssel für VmMandant Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmMandantID { get { return new DBOColumnDef(VmMandant.TableDef, "VmMandantID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmMandant_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(VmMandant.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Version { get { return new DBOColumnDef(VmMandant.TableDef, "Version", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(VmMandant.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmMandant_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmMandant.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(VmMandant.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(VmMandant.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(VmMandant.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandCode { get { return new DBOColumnDef(VmMandant.TableDef, "ZivilstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeBaGemeindeID { get { return new DBOColumnDef(VmMandant.TableDef, "HeimatgemeindeBaGemeindeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beruf { get { return new DBOColumnDef(VmMandant.TableDef, "Beruf", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WertschriftenDepot { get { return new DBOColumnDef(VmMandant.TableDef, "WertschriftenDepot", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(VmMandant.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(VmMandant.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmMandant.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmMandantTS { get { return new DBOColumnDef(VmMandant.TableDef, "VmMandantTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Berichte in der Vormundschaft (Vormundschaftliche Massnahme -> Mandatsführung -> Berichte).
/// </summary>

public static class VmMandBericht{
/// <summary>
/// Gets the table definition for VmMandBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmMandBericht", "", false); } }


/// <summary>
/// Primärschlüssel von VmMandBericht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmMandBerichtID { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmMandBerichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmMandBericht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Autor des Antrag EKSK.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmMandBericht.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf VmBericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmBerichtID { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmMandBericht.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beispiele: Neuerrichtung, Fortsetzung, Übernahme.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmGrundMassnahmeCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmGrundMassnahmeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art des Berichts, z.B. Beistandsschaftsbericht.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtstitelCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtstitelCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bericht für die Zeit ab Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtDatumVon { get { return new DBOColumnDef(VmMandBericht.TableDef, "BerichtDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bericht für die Zeit bis Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtDatumBis { get { return new DBOColumnDef(VmMandBericht.TableDef, "BerichtDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Grund der Massnahme / Anlassproblem (T)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundMassnahmeText { get { return new DBOColumnDef(VmMandBericht.TableDef, "GrundMassnahmeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Auftrag/Zielsetzung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragZielsetzungText { get { return new DBOColumnDef(VmMandBericht.TableDef, "AuftragZielsetzungText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ziele erreicht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmZielErreichtCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmZielErreichtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Veränderung innerhalb der Berichtsperiode, Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef VeraenderungInPeriode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VeraenderungInPeriode", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Begründung, warum Ziel nicht erreicht.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(VmMandBericht.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Neue Ziele
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NeueZieleText { get { return new DBOColumnDef(VmMandBericht.TableDef, "NeueZieleText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beispiele: eigene Wohung / Hotel
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmWohnenCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmWohnenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mögliche Werte: unauffällig, krank.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmGesundheitCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmGesundheitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mögliche Werte: Auffällig, unauffällig, krank
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmVerhaltenCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmVerhaltenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beispiele: Schule, Lehre
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmTaetigkeitCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmTaetigkeitCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Familiäre Situation
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef FamiliaereSituation { get { return new DBOColumnDef(VmMandBericht.TableDef, "FamiliaereSituation", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Soziale Kompetenzen (VJ).
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SozialeKompetenzen { get { return new DBOColumnDef(VmMandBericht.TableDef, "SozialeKompetenzen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Freizeit { get { return new DBOColumnDef(VmMandBericht.TableDef, "Freizeit", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Besondere Ressourcen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Resourcen { get { return new DBOColumnDef(VmMandBericht.TableDef, "Resourcen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Beschreibung über die Wohnsituation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "WohnenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die Gesundheitliche Situation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitText { get { return new DBOColumnDef(VmMandBericht.TableDef, "GesundheitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung des Verhaltens.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerhaltenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "VerhaltenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die Tätigkeiten (z.B. Lehre).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaetigkeitText { get { return new DBOColumnDef(VmMandBericht.TableDef, "TaetigkeitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die Familiäre Situation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FamSituationText { get { return new DBOColumnDef(VmMandBericht.TableDef, "FamSituationText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die sozialen Kompetenzen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SozialeKompetenzenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "SozialeKompetenzenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die Freizeit.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FreizeitText { get { return new DBOColumnDef(VmMandBericht.TableDef, "FreizeitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die besonderen Resourcen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereRessourcenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "BesondereRessourcenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über die Handlungen und wichtigsten Aufgaben.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HandlungenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "HandlungenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Beschreibung über besondere Schwirigkeiten.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereSchwierigkeitenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "BesondereSchwierigkeitenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Klient
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Klient { get { return new DBOColumnDef(VmMandBericht.TableDef, "Klient", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Dritten
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Dritte { get { return new DBOColumnDef(VmMandBericht.TableDef, "Dritte", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Institutionen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Institutionen { get { return new DBOColumnDef(VmMandBericht.TableDef, "Institutionen", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Klient Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientText { get { return new DBOColumnDef(VmMandBericht.TableDef, "KlientText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Dritte Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DritteText { get { return new DBOColumnDef(VmMandBericht.TableDef, "DritteText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Kontakte/Gespräche mit (T), Institutionen Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionenText { get { return new DBOColumnDef(VmMandBericht.TableDef, "InstitutionenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Wie aufwändig die Mandatsführung ist (Beispiele: normal, aufwändig, schwierig, sehr schwierig).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtBelastungsangabeMCSCCode_Mandat { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtBelastungsangabeMCSCCode_Mandat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// eispiele: normal, aufwändig, schwierig, sehr schwierig.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtBelastungsangabeMCSCCode_Admin { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtBelastungsangabeMCSCCode_Admin", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Belastung für die Mandatsführung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelastungMandatText { get { return new DBOColumnDef(VmMandBericht.TableDef, "BelastungMandatText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Belastung für den Administrator.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelastungAdminText { get { return new DBOColumnDef(VmMandBericht.TableDef, "BelastungAdminText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Einnahmen, z.B. Lohn, IV, AHV u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmEinnahmenAngabenCodes { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmEinnahmenAngabenCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Versicherungen T, z.B. Krankenkasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtVersicherungenCodes { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtVersicherungenCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Besondere Angaben (T)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtBesondereAngabenCodes { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtBesondereAngabenCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Bemerkungen zu den Einnahmen (T).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinnahmenBemerkungen { get { return new DBOColumnDef(VmMandBericht.TableDef, "EinnahmenBemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Bemerkungen zu den Versicherungen (T)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersicherungenBemerkungen { get { return new DBOColumnDef(VmMandBericht.TableDef, "VersicherungenBemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Bemerkungen zu den besonderen Angaben (T).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereAngabenBemerkungen { get { return new DBOColumnDef(VmMandBericht.TableDef, "BesondereAngabenBemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Abrechnung unterschreibbar Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AbrechnungUnterschrieben { get { return new DBOColumnDef(VmMandBericht.TableDef, "AbrechnungUnterschrieben", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Nimmt an Passation teil, Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PassationTeilnahme { get { return new DBOColumnDef(VmMandBericht.TableDef, "PassationTeilnahme", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PassationBemerkung { get { return new DBOColumnDef(VmMandBericht.TableDef, "PassationBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Antrag EKSK (Erwachsenen Kind Schutz Kommission): (T / VJ). Beispiele: Weiterführung, Aufhebung, Änderung der Massnahme.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmAntragBerichtCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmAntragBerichtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Begründung zum Antrag EKSK
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragBegruendung { get { return new DBOColumnDef(VmMandBericht.TableDef, "AntragBegruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Erstellungsdatum Antrag EKSK
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstellungDatum { get { return new DBOColumnDef(VmMandBericht.TableDef, "ErstellungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Beilagen. Beispiele: Grundlageninventar, Grundlagenbericht, Erstbericht keine Grundlage
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmMfBerichtBeilagenCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmMfBerichtBeilagenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bericht Abrechnung & Belege an BS
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BsDatum { get { return new DBOColumnDef(VmMandBericht.TableDef, "BsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Belege zurück vom Revisor
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegeZurueckRevision { get { return new DBOColumnDef(VmMandBericht.TableDef, "BelegeZurueckRevision", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bericht zurück vom BS.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZurueckVomBS { get { return new DBOColumnDef(VmMandBericht.TableDef, "ZurueckVomBS", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Art des Berichts. Beipsiele: ordentlicher Bericht, Schlussbericht Todesfall.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtsartCode { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmBerichtsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmMandBericht.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmMandBericht.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmMandBericht.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmMandBericht.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmMandBericht.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmMandBerichtTS { get { return new DBOColumnDef(VmMandBericht.TableDef, "VmMandBerichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmMassnahme{
/// <summary>
/// Gets the table definition for VmMassnahme
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmMassnahme", "", false); } }


/// <summary>
/// Primärschlüssel für VmMassnahme Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmMassnahmeID { get { return new DBOColumnDef(VmMassnahme.TableDef, "VmMassnahmeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmMassnahme_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmMassnahme.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(VmMassnahme.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(VmMassnahme.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZGBCodes { get { return new DBOColumnDef(VmMassnahme.TableDef, "ZGBCodes", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 120]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WeitereZGB { get { return new DBOColumnDef(VmMassnahme.TableDef, "WeitereZGB", typeof(string), false, false, false, 120, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ElterlicheSorgeCode { get { return new DBOColumnDef(VmMassnahme.TableDef, "ElterlicheSorgeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmMassnahme.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmMassnahme.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmMassnahme.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmMassnahme.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmMassnahme.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmMassnahme.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmMassnahmeTS { get { return new DBOColumnDef(VmMassnahme.TableDef, "VmMassnahmeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um Positionen in Klientenbudgets zu erfassen
/// </summary>

public static class VmPosition{
/// <summary>
/// Gets the table definition for VmPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmPosition", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmPositionID { get { return new DBOColumnDef(VmPosition.TableDef, "VmPositionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf VmKlientenbudget
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmKlientenbudgetID { get { return new DBOColumnDef(VmPosition.TableDef, "VmKlientenbudgetID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf VmPositionsart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPositionsartID { get { return new DBOColumnDef(VmPosition.TableDef, "VmPositionsartID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// zum wissen ob die Daten dieser Position importiert werden sind
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstImportiert { get { return new DBOColumnDef(VmPosition.TableDef, "IstImportiert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Name der Position
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(VmPosition.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Bemerkung der Position
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmPosition.TableDef, "Bemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// Datum per des Saldos (für Kategorie Vermögen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumSaldoPer { get { return new DBOColumnDef(VmPosition.TableDef, "DatumSaldoPer", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Saldo des Vermögens
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Saldo { get { return new DBOColumnDef(VmPosition.TableDef, "Saldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Monatlicher Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragMonatlich { get { return new DBOColumnDef(VmPosition.TableDef, "BetragMonatlich", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Jährlicher Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragJaehrlich { get { return new DBOColumnDef(VmPosition.TableDef, "BetragJaehrlich", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Erlaubt die Sortierung innerhalb einer Kategorie
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(VmPosition.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmPosition.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmPosition.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmPosition.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmPosition.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmPositionTS { get { return new DBOColumnDef(VmPosition.TableDef, "VmPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle um Positionsarten zu erfassen. Wird für VmPosition verwendet
/// </summary>

public static class VmPositionsart{
/// <summary>
/// Gets the table definition for VmPositionsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmPositionsart", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmPositionsartID { get { return new DBOColumnDef(VmPositionsart.TableDef, "VmPositionsartID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Kategorie in welcher die Positionsart angezeigt werden muss (Vermögen, Einnahmen, Fixe Kosten, Variable Kosten). LOV VmKategorie (auch enum in C# VmKategorie)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmKategorieCode { get { return new DBOColumnDef(VmPositionsart.TableDef, "VmKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmPositionsartTypCode { get { return new DBOColumnDef(VmPositionsart.TableDef, "VmPositionsartTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zum definieren ob es eine Standardposition ist. Standardpositionen werden beim erfassen eines Klientenbudget erstellt.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IstTemplate { get { return new DBOColumnDef(VmPositionsart.TableDef, "IstTemplate", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(VmPositionsart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Um die Sortierung den Positionsarten inerhalb einer Kategorie zu definieren
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(VmPositionsart.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmPositionsart.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmPositionsart.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmPositionsart.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmPositionsart.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmPositionsartTS { get { return new DBOColumnDef(VmPositionsart.TableDef, "VmPositionsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmPriMa{
/// <summary>
/// Gets the table definition for VmPriMa
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmPriMa", "", false); } }


/// <summary>
/// Primärschlüssel für VmPriMa Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(VmPriMa.TableDef, "VmPriMaID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(VmPriMa.TableDef, "Titel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(VmPriMa.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(VmPriMa.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_P { get { return new DBOColumnDef(VmPriMa.TableDef, "Telefon_P", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_G { get { return new DBOColumnDef(VmPriMa.TableDef, "Telefon_G", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MobilTel { get { return new DBOColumnDef(VmPriMa.TableDef, "MobilTel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(VmPriMa.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(VmPriMa.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beruf { get { return new DBOColumnDef(VmPriMa.TableDef, "Beruf", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(VmPriMa.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankName { get { return new DBOColumnDef(VmPriMa.TableDef, "BankName", typeof(string), false, false, false, 70, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(VmPriMa.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmPriMa.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IsActive { get { return new DBOColumnDef(VmPriMa.TableDef, "IsActive", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmPriMaTS { get { return new DBOColumnDef(VmPriMa.TableDef, "VmPriMaTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(VmPriMa.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(VmPriMa.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(VmPriMa.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(VmPriMa.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmSachversicherung{
/// <summary>
/// Gets the table definition for VmSachversicherung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSachversicherung", "", false); } }


/// <summary>
/// Primärschlüssel von VmSachversicherung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSachversicherungID { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VmSachversicherungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSachversicherung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Adressat, falls es eine Person ist und nicht eine Institution. Siehe auch BaInstitutionId.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(VmSachversicherung.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Adressat, falls es eine Institution ist und nicht eine BaPerson ist. Siehe auch InstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(VmSachversicherung.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zu VmPriMa (Privater Mandatsträger).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Dokument "Mutation"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Mutation { get { return new DBOColumnDef(VmSachversicherung.TableDef, "DocumentID_Mutation", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument "Mitteilung / Anmeldung".
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_MittAnm { get { return new DBOColumnDef(VmSachversicherung.TableDef, "DocumentID_MittAnm", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Dokument "Aufhebung / Kündigung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_AufhKuend { get { return new DBOColumnDef(VmSachversicherung.TableDef, "DocumentID_AufhKuend", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Art der Versicherung. Beispiele: Haftpflicht, Hausrat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmVersicherungsartSachversicherungCode { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VmVersicherungsartSachversicherungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Policennummer
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Policenummer { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Policenummer", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Selbstbehalt
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Selbstbehalt { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Selbstbehalt", typeof(System.Nullable<decimal>), false, false, false, 9, true, "", ""); } }


/// <summary>
/// Grundprämie als Textfeld.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Grundpraemie { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Grundpraemie", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Zahlungsturnus. Beispiele: monatlich, zweimonatlich ...
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmZahlungsturnusCode { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VmZahlungsturnusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Laufzeit von.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufzeitVon { get { return new DBOColumnDef(VmSachversicherung.TableDef, "LaufzeitVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Laufzeit bis Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufzeitBis { get { return new DBOColumnDef(VmSachversicherung.TableDef, "LaufzeitBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Versichert seit Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersichertSeit { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VersichertSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// zusätzliche und andere versicherte Person/en
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Person { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Person", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Bemerkungen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmSachversicherung.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmSachversicherung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSachversicherungTS { get { return new DBOColumnDef(VmSachversicherung.TableDef, "VmSachversicherungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Vormundschaftliche Massnahme - Finanzen - Schulden
/// </summary>

public static class VmSchulden{
/// <summary>
/// Gets the table definition for VmSchulden
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSchulden", "", false); } }


/// <summary>
/// Primärschlüssel von VmSchulden
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSchuldenID { get { return new DBOColumnDef(VmSchulden.TableDef, "VmSchuldenID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSchulden.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Schuldtitel. Beispiele: Verlustschein, Darlehensvertrag, Hypothek
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmSchuldtitelCode { get { return new DBOColumnDef(VmSchulden.TableDef, "VmSchuldtitelCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(VmSchulden.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(VmSchulden.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TilgungDatum { get { return new DBOColumnDef(VmSchulden.TableDef, "TilgungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmSchulden.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Bemerkungen zu den Schulden
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmSchulden.TableDef, "Bemerkungen", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmSchulden.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmSchulden.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmSchulden.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmSchulden.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmSchulden.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSchuldenTS { get { return new DBOColumnDef(VmSchulden.TableDef, "VmSchuldenTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmSiegelung{
/// <summary>
/// Gets the table definition for VmSiegelung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSiegelung", "", false); } }


/// <summary>
/// Primärschlüssel für VmSiegelung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSiegelungID { get { return new DBOColumnDef(VmSiegelung.TableDef, "VmSiegelungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmSiegelung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSiegelung.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Gesperrt { get { return new DBOColumnDef(VmSiegelung.TableDef, "Gesperrt", typeof(System.Nullable<bool>), false, false, false, 1, true, "((0))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmSiegelung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmSiegelung.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezirkNr { get { return new DBOColumnDef(VmSiegelung.TableDef, "BezirkNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufNr { get { return new DBOColumnDef(VmSiegelung.TableDef, "LaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(VmSiegelung.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesmeldungDatum { get { return new DBOColumnDef(VmSiegelung.TableDef, "TodesmeldungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SiegelungsDatum { get { return new DBOColumnDef(VmSiegelung.TableDef, "SiegelungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SiegelungsFristEingehalten { get { return new DBOColumnDef(VmSiegelung.TableDef, "SiegelungsFristEingehalten", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersandDatum { get { return new DBOColumnDef(VmSiegelung.TableDef, "VersandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopieErbschaftsdienst { get { return new DBOColumnDef(VmSiegelung.TableDef, "KopieErbschaftsdienst", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopieTestamentsdienst { get { return new DBOColumnDef(VmSiegelung.TableDef, "KopieTestamentsdienst", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopieAndere { get { return new DBOColumnDef(VmSiegelung.TableDef, "KopieAndere", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungsSperren { get { return new DBOColumnDef(VmSiegelung.TableDef, "VerfuegungsSperren", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Durchsuchungen { get { return new DBOColumnDef(VmSiegelung.TableDef, "Durchsuchungen", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PliQuittung { get { return new DBOColumnDef(VmSiegelung.TableDef, "PliQuittung", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesuchUeBestattung { get { return new DBOColumnDef(VmSiegelung.TableDef, "GesuchUeBestattung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausschlagung { get { return new DBOColumnDef(VmSiegelung.TableDef, "Ausschlagung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmErbschaftInventarCode { get { return new DBOColumnDef(VmSiegelung.TableDef, "VmErbschaftInventarCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef NotarID { get { return new DBOColumnDef(VmSiegelung.TableDef, "NotarID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MassaVerwalter { get { return new DBOColumnDef(VmSiegelung.TableDef, "MassaVerwalter", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EntsiegelungsDatum { get { return new DBOColumnDef(VmSiegelung.TableDef, "EntsiegelungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OhneGebuehr { get { return new DBOColumnDef(VmSiegelung.TableDef, "OhneGebuehr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungsNr { get { return new DBOColumnDef(VmSiegelung.TableDef, "RechnungsNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungsDatum { get { return new DBOColumnDef(VmSiegelung.TableDef, "RechnungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungsBetrag { get { return new DBOColumnDef(VmSiegelung.TableDef, "RechnungsBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungAn { get { return new DBOColumnDef(VmSiegelung.TableDef, "RechnungAn", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SiegelungsProtokollDokID { get { return new DBOColumnDef(VmSiegelung.TableDef, "SiegelungsProtokollDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SDabgeschlossen { get { return new DBOColumnDef(VmSiegelung.TableDef, "SDabgeschlossen", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmSiegelung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSiegelungTS { get { return new DBOColumnDef(VmSiegelung.TableDef, "VmSiegelungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Vormundschaft Situationsbericht
/// </summary>

public static class VmSituationsBericht{
/// <summary>
/// Gets the table definition for VmSituationsBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSituationsBericht", "", false); } }


/// <summary>
/// Primärschlüssel von VmSituationsBericht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSituationsBerichtID { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "VmSituationsBerichtID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Antrag Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragDatum { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "AntragDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Beispiele: neuer Fall, Situationsbedingte Leistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VMTypSHAntragCode { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "VMTypSHAntragCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beispiele: Wohnen, Gesundheit, Verhalten u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaThemaCodes { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "FaThemaCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Aktuelle Situation / Finanzen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtFinanzen { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "BerichtFinanzen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Zielsetzung / Prognose
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielPrognose { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "ZielPrognose", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragText { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "AntragText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Id des binären Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSituationsBerichtTS { get { return new DBOColumnDef(VmSituationsBericht.TableDef, "VmSituationsBerichtTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Sozialversicherung im Modul Vormundschaftliche Massnahmen, Administration
/// </summary>

public static class VmSozialversicherung{
/// <summary>
/// Gets the table definition for VmSozialversicherung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSozialversicherung", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSozialversicherungID { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "VmSozialversicherungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zur LeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zu BaPerson (Adressat)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID_Adressat { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "BaPersonID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zur BaInstitution, Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaInstitutionID_Adressat { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "BaInstitutionID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zum VmPriMa (Private Mandatsträger) für das Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmPriMaID_Adressat { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "VmPriMaID_Adressat", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüsssel zum Dokument, Rolle Korrespondenz.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID_Korrespondenz { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "DocumentID_Korrespondenz", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Werteliste
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmSozialversicherungenBezeichnungenCode { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "VmSozialversicherungenBezeichnungenCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Grund
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Grund { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Grund", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// eingereicht am
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eingereicht { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Eingereicht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Verfügung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungVom { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "VerfuegungVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Berechnungsgrundlage
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Berechnungsgrundlage { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Berechnungsgrundlage", typeof(string), false, false, false, 300, true, "", ""); } }


/// <summary>
/// Verfügungsbetrag monatlich.
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verfuegungsbetrag { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Verfuegungsbetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSozialversicherungTS { get { return new DBOColumnDef(VmSozialversicherung.TableDef, "VmSozialversicherungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Vormundschaftliche Massnahme - Administration - Steuern
/// </summary>

public static class VmSteuern{
/// <summary>
/// Gets the table definition for VmSteuern
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmSteuern", "", false); } }


/// <summary>
/// Primärschlüssel von VmSteuern
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmSteuernID { get { return new DBOColumnDef(VmSteuern.TableDef, "VmSteuernID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmSteuern.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XDokument für das Korrespondenz-Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(VmSteuern.TableDef, "DocumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Das Steuerjahr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SteuerJahr { get { return new DBOColumnDef(VmSteuern.TableDef, "SteuerJahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob die Steuererklärung extern erledigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SteuererklaerungExternErledigt { get { return new DBOColumnDef(VmSteuern.TableDef, "SteuererklaerungExternErledigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Steuererklärung intern erledigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SteuererklaerungInternErledigt { get { return new DBOColumnDef(VmSteuern.TableDef, "SteuererklaerungInternErledigt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer die Steuererklärung erledigt hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErledigungDurch { get { return new DBOColumnDef(VmSteuern.TableDef, "ErledigungDurch", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Wann die Steuererklärung eingereicht wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SteuererklaerungEingereicht { get { return new DBOColumnDef(VmSteuern.TableDef, "SteuererklaerungEingereicht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Flag, ob Artikel 41
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Artikel41 { get { return new DBOColumnDef(VmSteuern.TableDef, "Artikel41", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum der Beantragung einer Fristverlängerung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FristverlaengerungBeantragt { get { return new DBOColumnDef(VmSteuern.TableDef, "FristverlaengerungBeantragt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum des Eingangs der definitiven Veranlagung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EingangDefVeranlagung { get { return new DBOColumnDef(VmSteuern.TableDef, "EingangDefVeranlagung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datum des Entscheids eines Steuererlasses
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEntscheidErlass { get { return new DBOColumnDef(VmSteuern.TableDef, "DatumEntscheidErlass", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Flag, ob die Steuern erlassen werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Erlass { get { return new DBOColumnDef(VmSteuern.TableDef, "Erlass", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Steuern teilweise erlassen werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Teilerlass { get { return new DBOColumnDef(VmSteuern.TableDef, "Teilerlass", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob die Steuern nicht erlassen werden (abgelehnt)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Abelehnt { get { return new DBOColumnDef(VmSteuern.TableDef, "Abelehnt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Zusätzliche Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(VmSteuern.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmSteuern.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmSteuern.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmSteuern.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmSteuern.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmSteuern.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmSteuernTS { get { return new DBOColumnDef(VmSteuern.TableDef, "VmSteuernTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestament{
/// <summary>
/// Gets the table definition for VmTestament
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmTestament", "", false); } }


/// <summary>
/// Primärschlüssel für VmTestament Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmTestamentID { get { return new DBOColumnDef(VmTestament.TableDef, "VmTestamentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmTestament_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmTestament.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufNr { get { return new DBOColumnDef(VmTestament.TableDef, "LaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmTestament_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(VmTestament.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KopieAnCodes { get { return new DBOColumnDef(VmTestament.TableDef, "KopieAnCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZeugnisseCodes { get { return new DBOColumnDef(VmTestament.TableDef, "ZeugnisseCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsRechnungBetrag { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungsRechnungBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsRechnungSAPNr { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungsRechnungSAPNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZusatzRechnungBetrag { get { return new DBOColumnDef(VmTestament.TableDef, "ZusatzRechnungBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZusatzRechnungSAPNr { get { return new DBOColumnDef(VmTestament.TableDef, "ZusatzRechnungSAPNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungDokID { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungAuszugDokID { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungAuszugDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungAdressenDokID { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungAdressenDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungAbgeschlossenDatum { get { return new DBOColumnDef(VmTestament.TableDef, "EroeffnungAbgeschlossenDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PublikationFrist { get { return new DBOColumnDef(VmTestament.TableDef, "PublikationFrist", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PublikationDatum { get { return new DBOColumnDef(VmTestament.TableDef, "PublikationDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmTestament.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmTestamentTS { get { return new DBOColumnDef(VmTestament.TableDef, "VmTestamentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef NotarID { get { return new DBOColumnDef(VmTestament.TableDef, "NotarID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(VmTestament.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestamentBescheinigung{
/// <summary>
/// Gets the table definition for VmTestamentBescheinigung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmTestamentBescheinigung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmTestamentBescheinigungID { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "VmTestamentBescheinigungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmTestamentBescheinigung_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmTestamentID { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "VmTestamentID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BescheinigungCode { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "BescheinigungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BescheinigungText { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "BescheinigungText", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BescheinigungDokID { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "BescheinigungDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gebuehr { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Gebuehr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SAPNr { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "SAPNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsDeleted { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "IsDeleted", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Wer den Datensatz anelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmTestamentBescheinigungTS { get { return new DBOColumnDef(VmTestamentBescheinigung.TableDef, "VmTestamentBescheinigungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestamentVerfuegung{
/// <summary>
/// Gets the table definition for VmTestamentVerfuegung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmTestamentVerfuegung", "", false); } }


/// <summary>
/// Primärschlüssel für VmTestamentVerfuegung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmTestamentVerfuegungID { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "VmTestamentVerfuegungID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmTestamentVerfuegung_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef VmTestamentID { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "VmTestamentID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef EingangsDatum { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "EingangsDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungsDatum { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "VerfuegungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EroeffnungsDatum { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "EroeffnungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfuegungText { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "VerfuegungText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verschlossen { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "Verschlossen", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TestamentsformCode { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "TestamentsformCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzSeiten { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "AnzSeiten", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufbewahrungsOrt { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "AufbewahrungsOrt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ABOvorherCode { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "ABOvorherCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ABOvorherText { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "ABOvorherText", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ABOnachherCode { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "ABOnachherCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ABOnachherText { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "ABOnachherText", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InventarCode { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "InventarCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmTestamentVerfuegungTS { get { return new DBOColumnDef(VmTestamentVerfuegung.TableDef, "VmTestamentVerfuegungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class VmVaterschaft{
/// <summary>
/// Gets the table definition for VmVaterschaft
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("VmVaterschaft", "", false); } }


/// <summary>
/// Primärschlüssel für VmVaterschaft Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef VmVaterschaftID { get { return new DBOColumnDef(VmVaterschaft.TableDef, "VmVaterschaftID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_VmVaterschaft_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(VmVaterschaft.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZGBCodes { get { return new DBOColumnDef(VmVaterschaft.TableDef, "ZGBCodes", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnerkennungDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "AnerkennungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnerkennungOrt { get { return new DBOColumnDef(VmVaterschaft.TableDef, "AnerkennungOrt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UHVDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "UHVDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UHVBetrag { get { return new DBOColumnDef(VmVaterschaft.TableDef, "UHVBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UHVAbschlussGrundCode { get { return new DBOColumnDef(VmVaterschaft.TableDef, "UHVAbschlussGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SorgerechtVereinbDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "SorgerechtVereinbDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VAnfechtungsurteil { get { return new DBOColumnDef(VmVaterschaft.TableDef, "VAnfechtungsurteil", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VUrteilDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "VUrteilDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VUrteilBetrag { get { return new DBOColumnDef(VmVaterschaft.TableDef, "VUrteilBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UnterhaltsurteilDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "UnterhaltsurteilDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UnterhaltsurteilBetrag { get { return new DBOColumnDef(VmVaterschaft.TableDef, "UnterhaltsurteilBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchlussberichtAnKommission { get { return new DBOColumnDef(VmVaterschaft.TableDef, "SchlussberichtAnKommission", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SchlussberichtGenehmigung { get { return new DBOColumnDef(VmVaterschaft.TableDef, "SchlussberichtGenehmigung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeburtsmitteilungDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "GeburtsmitteilungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeburtsmitteilungOrt { get { return new DBOColumnDef(VmVaterschaft.TableDef, "GeburtsmitteilungOrt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GebuehrDatum { get { return new DBOColumnDef(VmVaterschaft.TableDef, "GebuehrDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GebuehrErlass { get { return new DBOColumnDef(VmVaterschaft.TableDef, "GebuehrErlass", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 250]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzText { get { return new DBOColumnDef(VmVaterschaft.TableDef, "PendenzText", typeof(string), false, false, false, 250, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PendenzFrist { get { return new DBOColumnDef(VmVaterschaft.TableDef, "PendenzFrist", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(VmVaterschaft.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VmVaterschaftTS { get { return new DBOColumnDef(VmVaterschaft.TableDef, "VmVaterschaftTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Speichert die ASVS Anmelde- und Abmelde-Daten pro Klient und Leistung
/// </summary>

public static class WhASVSEintrag{
/// <summary>
/// Gets the table definition for WhASVSEintrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("WhASVSEintrag", "", false); } }


/// <summary>
/// Der Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef WhASVSEintragID { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "WhASVSEintragID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Die ASVS-Einträge werden pro Person und Leistung erzeugt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "FaLeistungID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Die ASVS-Einträge werden pro Person und Leistung erzeugt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "BaPersonID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// ASVS-Anmelde-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// ASVS-Abmelde-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der Zustand des Eintrages (neu erstellt, zu exportieren, ...; siehe entsprechenden LOV-Code)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ASVSEintragStatusCode { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "ASVSEintragStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Bemerkung zum ASVS Eintrag
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "Bemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Der Ersteller des Eintrages
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Zeitpunkt als der Eintrag erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Der letzte Benutzer, welcher den Datensatz verändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Der Zeitpunkt der letzten Änderung am Datensatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "Modified", typeof(string), false, false, false, 50, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für den Datensatz
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef WhASVSEintragTS { get { return new DBOColumnDef(WhASVSEintrag.TableDef, "WhASVSEintragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die GEF-Kategorien die nötig sind für das Exportieren der Differenzierung Sozialhilferechnung
/// </summary>

public static class WhGefKategorie{
/// <summary>
/// Gets the table definition for WhGefKategorie
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("WhGefKategorie", "", false); } }


/// <summary>
/// Primärschlüssel für diese Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef WhGefKategorieID { get { return new DBOColumnDef(WhGefKategorie.TableDef, "WhGefKategorieID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Code der GEF-Gruppe. Als LOV und Enum (WhGefKategorie)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef WhGefKategorieCode { get { return new DBOColumnDef(WhGefKategorie.TableDef, "WhGefKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Code vom Typ der GEF-Gruppe (Aufwand, Ertrag, ...). Als LOV und Enum (WhGefKategorieTyp)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef WhGefKategorieTypCode { get { return new DBOColumnDef(WhGefKategorie.TableDef, "WhGefKategorieTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(WhGefKategorie.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(WhGefKategorie.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(WhGefKategorie.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(WhGefKategorie.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef WhGefKategorieTS { get { return new DBOColumnDef(WhGefKategorie.TableDef, "WhGefKategorieTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XArchive{
/// <summary>
/// Gets the table definition for XArchive
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XArchive", "", false); } }


/// <summary>
/// Primärschlüssel für XArchive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ArchiveID { get { return new DBOColumnDef(XArchive.TableDef, "ArchiveID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XArchive.TableDef, "Name", typeof(string), false, false, false, 80, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Address { get { return new DBOColumnDef(XArchive.TableDef, "Address", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XArchive.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Remark { get { return new DBOColumnDef(XArchive.TableDef, "Remark", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XArchiveTS { get { return new DBOColumnDef(XArchive.TableDef, "XArchiveTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XBookmark{
/// <summary>
/// Gets the table definition for XBookmark
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XBookmark", "", false); } }


/// <summary>
/// Primärschlüssel für XBookmark Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 40]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef BookmarkName { get { return new DBOColumnDef(XBookmark.TableDef, "BookmarkName", typeof(string), false, false, true, 40, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BookmarkNameTID { get { return new DBOColumnDef(XBookmark.TableDef, "BookmarkNameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Category { get { return new DBOColumnDef(XBookmark.TableDef, "Category", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CategoryTID { get { return new DBOColumnDef(XBookmark.TableDef, "CategoryTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BookmarkCode { get { return new DBOColumnDef(XBookmark.TableDef, "BookmarkCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SQL { get { return new DBOColumnDef(XBookmark.TableDef, "SQL", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XBookmark.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DescriptionTID { get { return new DBOColumnDef(XBookmark.TableDef, "DescriptionTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XBookmark.TableDef, "TableName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// ID des Moduls, zu welchem die jeweilige Textmarke gehört (wichtig für die Filterung nach lizenzierten Modulen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XBookmark.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Flag zum Übersteuern der Sichtbarkeit durch lizenzierte Module, wobei Wert=1 bedeutet, dass die Textmarke immer sichtbar bleibt, auch ohne Lizenz für Modul
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef AlwaysVisible { get { return new DBOColumnDef(XBookmark.TableDef, "AlwaysVisible", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag zum Festlegen, ob eine Textmarke von BIAG gewartet wird oder vom Kunden erstellt wurde. Dabei gilt: Wert=1 bedeutet, dass die Textmarke von BIAG erstellt und verwaltet wird, Wert=0 bedeutet, dass der Kunde selber für Wartung und Support verantwortlich ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XBookmark.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XBookmarkTS { get { return new DBOColumnDef(XBookmark.TableDef, "XBookmarkTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet alle verfügbaren Klassen, welche in der jeweiligen Anwendung von KiSS benötigt werden (CORE und Businessdesigner Klassen)
/// </summary>

public static class XClass{
/// <summary>
/// Gets the table definition for XClass
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XClass", "", false); } }


/// <summary>
/// Primärschlüssel für XClass Records (nach Primärschlüssel-Standards). Eindeutiger Name der Klasse.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XClassID { get { return new DBOColumnDef(XClass.TableDef, "XClassID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Eindeutiger Name der Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XClass.TableDef, "ClassName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClassNameViewModel { get { return new DBOColumnDef(XClass.TableDef, "ClassNameViewModel", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XClass_XModul) => XModul.ModulID. Zugehörigkeit der Klasse zu Modul.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XClass.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Name der Maske innerhalb der Benutzerrechte, Recht-Bezeichnung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(XClass.TableDef, "MaskName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Basisklasse, auf welcher die Klasse aufbaut (von Werteliste 'Class' den Value1)
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef BaseType { get { return new DBOColumnDef(XClass.TableDef, "BaseType", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// Basisklassen-TypCode, auf welcher die Klasse aufbaut (von Werteliste 'Class' den Code)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClassCode { get { return new DBOColumnDef(XClass.TableDef, "ClassCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung des Fenstertitels bei Form-Klassen (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClassTID { get { return new DBOColumnDef(XClass.TableDef, "ClassTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Eigenschaften in Form von XML, welche aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PropertiesXML { get { return new DBOColumnDef(XClass.TableDef, "PropertiesXML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Flag, ob Assembly der Klasse aus der Datenbank (Wert=1: Design, Wert=2: HotFix) oder aus KiSS-Core (Wert=0) geladen wird
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Designer { get { return new DBOColumnDef(XClass.TableDef, "Designer", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Zusätzliche Beschreibung der Klasse, obtionale Bemerkungen, etc.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XClass.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Falls das Flag 'Designer=1' gesetzt ist, ist hier der vom Businessdesigner erstellte C#-Code hinterlegt
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CodeGenerated { get { return new DBOColumnDef(XClass.TableDef, "CodeGenerated", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Binary-Feld für zusätzliches Ressourcen-File der im Businessdesigner erzeugten Klasse. Aus dem Binary-Stream entsteht die *.resx-Datei.
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Resource { get { return new DBOColumnDef(XClass.TableDef, "Resource", typeof(byte[]), false, false, false, 16, true, "", ""); } }


/// <summary>
/// Das aus dem C#-Code compilierte Assembly der Businessdesigner-Klassen. Dieses Assembly wird bei Flag 'Designer=1' dynamisch aus der DB geholt und als zuätzliche Dll zusätzlich zum KiSS-Core geladen.
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Assembly { get { return new DBOColumnDef(XClass.TableDef, "Assembly", typeof(byte[]), false, false, false, 16, true, "", ""); } }


/// <summary>
/// DB-Name des Branches der Klasse, Herkunftsbezeichnung (entspricht bei neuen oder veränderten Klassen jeweils dem aktuellen DB-Namen)
/// [DataType: VARCHAR]
/// [Length: 128]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Branch { get { return new DBOColumnDef(XClass.TableDef, "Branch", typeof(string), false, false, false, 128, true, "", ""); } }


/// <summary>
/// Automatisch hochgezählte BuildNr der Businessdesigner-Klassen, wird nur bei erfolgreichem Build der Klasse erhöht (CtlDesignerLoader.Build())
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BuildNr { get { return new DBOColumnDef(XClass.TableDef, "BuildNr", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Flag, welches bestimmt, ob es sich um eine System-Klasse (System=1) oder um eine kundenspezifische Klasse (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XClass.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// UserID des Benutzers, welche die Klasse zurzeit augechecked hat (betrifft Spalte XUser.UserID). Falls NULL, ist die Klasse nicht ausgechecked.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_UserID { get { return new DBOColumnDef(XClass.TableDef, "CheckOut_UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Datum inklusive Zeit, wann der Benutzer aus CheckOut_UserID die Klasse ausgechecked hat. Falls NULL, ist die Klasse nicht augechecked.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Date { get { return new DBOColumnDef(XClass.TableDef, "CheckOut_Date", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Namespace-Erweiterung, welche zusätzlich zum Namespace des Modules vor den Klassennamen gesetzt wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NamespaceExtension { get { return new DBOColumnDef(XClass.TableDef, "NamespaceExtension", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XClassTS { get { return new DBOColumnDef(XClass.TableDef, "XClassTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Components einer Klasse, wobei je Klasse der Name der Component eindeutig sein muss
/// </summary>

public static class XClassComponent{
/// <summary>
/// Gets the table definition for XClassComponent
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XClassComponent", "", false); } }


/// <summary>
/// Primärschlüssel für XClassComponent Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ComponentName (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XClassComponent.TableDef, "ClassName", typeof(string), false, true, true, 255, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XClassComponent Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name einer Component der jeweiligen Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef ComponentName { get { return new DBOColumnDef(XClassComponent.TableDef, "ComponentName", typeof(string), false, false, true, 255, false, "", ""); } }


/// <summary>
/// C#-Typenbezeichnung der jeweiligen Component
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef TypeName { get { return new DBOColumnDef(XClassComponent.TableDef, "TypeName", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung einiger Component-Eigenschaften (z.B. Caption der GridColumns) (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ComponentTID { get { return new DBOColumnDef(XClassComponent.TableDef, "ComponentTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zusätzliches SQL-Statement, welches bei Components des Typs 'KiSS4.DB.SqlQuery' als SelectStatement angegeben werden kann
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SelectStatement { get { return new DBOColumnDef(XClassComponent.TableDef, "SelectStatement", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Zusätzlicher Tabellenname, welcher bei Components des Typs 'KiSS4.DB.SqlQuery' als TableName angegeben werden kann
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XClassComponent.TableDef, "TableName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Eigenschaften in Form von XML, welche für das Component aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PropertiesXML { get { return new DBOColumnDef(XClassComponent.TableDef, "PropertiesXML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Flag, welches bestimmt, ob es sich um ein System-Component (System=1) oder um ein angepasstes Component (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XClassComponent.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XClassComponentTS { get { return new DBOColumnDef(XClassComponent.TableDef, "XClassComponentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Controls einer Klasse, wobei je Klasse der Name des Controls eindeutig sein muss
/// </summary>

public static class XClassControl{
/// <summary>
/// Gets the table definition for XClassControl
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XClassControl", "", false); } }


/// <summary>
/// Primärschlüssel für XClassControl Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ControlName (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XClassControl.TableDef, "ClassName", typeof(string), false, true, true, 255, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XClassControl Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name eines Controls der jeweiligen Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef ControlName { get { return new DBOColumnDef(XClassControl.TableDef, "ControlName", typeof(string), false, false, true, 255, false, "", ""); } }


/// <summary>
/// Control-Name des Eltern-Controls, zu welchem das jeweilige Control gehört. Wird für verschachtelte Layout-Anordnungen benötigt.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentControl { get { return new DBOColumnDef(XClassControl.TableDef, "ParentControl", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// C#-Typenbezeichnung der jeweiligen Controls
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef TypeName { get { return new DBOColumnDef(XClassControl.TableDef, "TypeName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung einiger Control-Eigenschaften (z.B. Text des KissLabels) (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ControlTID { get { return new DBOColumnDef(XClassControl.TableDef, "ControlTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Wird für das DataBinding verwendet, Name der anzubindenen Spalte der gegebenen DataSource
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DataMember { get { return new DBOColumnDef(XClassControl.TableDef, "DataMember", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Wird für das DataBinding verwendet, Name der Datenquelle, welche vergebunden werden soll
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DataSource { get { return new DBOColumnDef(XClassControl.TableDef, "DataSource", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Name der Werteliste, welche zum Beispiel bei Auswahlfeldern verwendet werden soll (Referenz auf XLOV.LOVName)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(XClassControl.TableDef, "LOVName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Der zu verwendende TabIndex des jeweiligen Controls. Dieser Wert gibt gleichzeitig die Ladereihenfolge innerhalb des BusinessDesigners vor.
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TabIndex { get { return new DBOColumnDef(XClassControl.TableDef, "TabIndex", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Left-Position in Pixel auf der horizontalen Achse des Eltern-Controls innerhalb des Layouts (positiv ist nach rechts)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef X { get { return new DBOColumnDef(XClassControl.TableDef, "X", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Top-Position in Pixel auf der vertikalen Achse des Eltern-Controls innerhalb des Layouts (positiv ist nach unten)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Y { get { return new DBOColumnDef(XClassControl.TableDef, "Y", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Breite des Controls in Pixel
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Width { get { return new DBOColumnDef(XClassControl.TableDef, "Width", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Höhe des Controls in Pixel
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Height { get { return new DBOColumnDef(XClassControl.TableDef, "Height", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Eigenschaften in Form von XML, welche für das Control aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PropertiesXML { get { return new DBOColumnDef(XClassControl.TableDef, "PropertiesXML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Flag, welches bestimmt, ob es sich um ein System-Control (System=1) oder um ein angepasstes Control (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XClassControl.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XClassControlTS { get { return new DBOColumnDef(XClassControl.TableDef, "XClassControlTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Referenzen einer Klasse zu anderen Klassen, wobei je Klasse der Name der Referenz-Klasse eindeutig sein muss
/// </summary>

public static class XClassReference{
/// <summary>
/// Gets the table definition for XClassReference
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XClassReference", "", false); } }


/// <summary>
/// Primärschlüssel für XClassReference Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName_Ref (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XClassReference.TableDef, "ClassName", typeof(string), false, true, true, 255, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XClassReference Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name der jeweiligen Klasse, welche Referenziert wird. Fremdschlüssel (FK_XClassReference_XClassRef) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName_Ref { get { return new DBOColumnDef(XClassReference.TableDef, "ClassName_Ref", typeof(string), false, true, true, 255, false, "", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XClassReferenceTS { get { return new DBOColumnDef(XClassReference.TableDef, "XClassReferenceTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Regeln (C#-Code) einer Klasse
/// </summary>

public static class XClassRule{
/// <summary>
/// Gets the table definition for XClassRule
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XClassRule", "", false); } }


/// <summary>
/// Primärschlüssel für XClassRule Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XClassRuleID { get { return new DBOColumnDef(XClassRule.TableDef, "XClassRuleID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassControl) => XClassControl.ClassName, Name der Klasse, zu welcher die Regel gehört
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XClassRule.TableDef, "ClassName", typeof(string), false, true, false, 255, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassControl) => XClassControl.ControlName, Optionaler Name des Controls, welche die Regel betrifft
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ControlName { get { return new DBOColumnDef(XClassRule.TableDef, "ControlName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassComponent) => XClassComponent.ComponentName, Optionaler Name des Components, welche die Regel betrifft
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ComponentName { get { return new DBOColumnDef(XClassRule.TableDef, "ComponentName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XClassRule_XRule) => XRule.XRuleID, ID der Regel, welche den Code und weitere Angaben beinhaltet
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XRuleID { get { return new DBOColumnDef(XClassRule.TableDef, "XRuleID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Sortierungsinformation der einzelnen Regel
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((100))]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XClassRule.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "((100))", ""); } }


/// <summary>
/// Flag, ob die Regel aktiv ist oder nicht ausgewertet wird beim Compile
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Active { get { return new DBOColumnDef(XClassRule.TableDef, "Active", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XClassRuleTS { get { return new DBOColumnDef(XClassRule.TableDef, "XClassRuleTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XConfig{
/// <summary>
/// Gets the table definition for XConfig
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XConfig", "", false); } }


/// <summary>
/// Primärschlüssel für XConfig Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XConfigID { get { return new DBOColumnDef(XConfig.TableDef, "XConfigID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XNamespaceExtension.XNamespaceExtensionID, Verweis auf die NamespaceExtension für den jeweiligen XConfig-Eintrag. Wenn gesetzt, wird der Eintrag nur für diesen Namespace verwendet.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XNamespaceExtensionID { get { return new DBOColumnDef(XConfig.TableDef, "XNamespaceExtensionID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Der Konfigurationspfad, welcher als primäre Identifikation des Konfigurationswert dient
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef KeyPath { get { return new DBOColumnDef(XConfig.TableDef, "KeyPath", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// ID eines XLangText-Eintrags für die Übersetzung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeyPathTID { get { return new DBOColumnDef(XConfig.TableDef, "KeyPathTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob Config-Eintrag nur für BIAG Administratoren sichtbar und editierbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XConfig.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Datum, ab wann ein Konfigurationswert gültig ist (kann mehrere gleiche KeyPath haben, wobei immer nur einer gültig sein kann)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(XConfig.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Datentyp des Eintrags (LOV ConfigValue)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ValueCode { get { return new DBOColumnDef(XConfig.TableDef, "ValueCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Name der LOV, falls ValueCode = CSV
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(XConfig.TableDef, "LOVName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Beschreibung des Konfigurationswertes
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XConfig.TableDef, "Description", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// ID eines XLangText-Eintrags für die Übersetzung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DescriptionTID { get { return new DBOColumnDef(XConfig.TableDef, "DescriptionTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Bit/Bool-Wert (ValueCode 5)
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueBit { get { return new DBOColumnDef(XConfig.TableDef, "ValueBit", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// Der originale Bit-Wert
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueBit { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueBit", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// Der DateTime-Wert (ValueCode 6)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueDateTime { get { return new DBOColumnDef(XConfig.TableDef, "ValueDateTime", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der originale DateTime-Wert
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueDateTime { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueDateTime", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der Decimal-Wert (ValueCode 3)
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueDecimal { get { return new DBOColumnDef(XConfig.TableDef, "ValueDecimal", typeof(System.Nullable<decimal>), false, false, false, 9, true, "", ""); } }


/// <summary>
/// Der originale Decimal-Wert
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueDecimal { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueDecimal", typeof(System.Nullable<decimal>), false, false, false, 9, true, "", ""); } }


/// <summary>
/// Der Int-Wert (ValueCode 2)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueInt { get { return new DBOColumnDef(XConfig.TableDef, "ValueInt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der originale Int-Wert
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueInt { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueInt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Money-Wert (ValueCode 4)
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueMoney { get { return new DBOColumnDef(XConfig.TableDef, "ValueMoney", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der originale Money-Wert
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueMoney { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueMoney", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Der Varchar-Wert (ValueCode 1; 7-11)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueVarchar { get { return new DBOColumnDef(XConfig.TableDef, "ValueVarchar", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Der originale Varchar-Wert
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueVarchar { get { return new DBOColumnDef(XConfig.TableDef, "OriginalValueVarchar", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XConfig.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XConfig.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XConfig.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XConfig.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XConfigTS { get { return new DBOColumnDef(XConfig.TableDef, "XConfigTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XDBServerVersion{
/// <summary>
/// Gets the table definition for XDBServerVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDBServerVersion", "", false); } }


/// <summary>
/// PrimaryKey, wird als ID benutzt
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XDBServerVersionID { get { return new DBOColumnDef(XDBServerVersion.TableDef, "XDBServerVersionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Aktuelle DB-Server-Version
/// [DataType: VARCHAR]
/// [Length: 255]
/// [DefaultValue: (@@version)]
/// </summary>

public static DBOColumnDef ServerVersion { get { return new DBOColumnDef(XDBServerVersion.TableDef, "ServerVersion", typeof(string), false, false, false, 255, false, "(@@version)", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XDBServerVersion.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XDBServerVersion.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDBServerVersionTS { get { return new DBOColumnDef(XDBServerVersion.TableDef, "XDBServerVersionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// KiSS DB-Version History
/// </summary>

public static class XDBVersion{
/// <summary>
/// Gets the table definition for XDBVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDBVersion", "", false); } }


/// <summary>
/// Primärschlüssel für XDBVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XDBVersionID { get { return new DBOColumnDef(XDBVersion.TableDef, "XDBVersionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// First Version number from the full version (e.g. "4.1.37.804"), so Major would be 4 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef MajorVersion { get { return new DBOColumnDef(XDBVersion.TableDef, "MajorVersion", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Second Version number from the full version (e.g. "4.1.37.804"), so Minor would be 1 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef MinorVersion { get { return new DBOColumnDef(XDBVersion.TableDef, "MinorVersion", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Third Version number from the full version (e.g. "4.1.37.804"), so Build would be 37 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Build { get { return new DBOColumnDef(XDBVersion.TableDef, "Build", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Last Version number from the full version (e.g. "4.1.37.804"), so Revision would be 804 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Revision { get { return new DBOColumnDef(XDBVersion.TableDef, "Revision", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Date when the DBVersion-Entry was made. This is also the sort order to determine the current version!
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef VersionDate { get { return new DBOColumnDef(XDBVersion.TableDef, "VersionDate", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// SQL-Server Version information at the time when the DBVersion-Entry was made.
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef SQLServerVersionInfo { get { return new DBOColumnDef(XDBVersion.TableDef, "SQLServerVersionInfo", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// A list of all DB-Objects which where changed since the last DBVersion-Entry.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ChangesSinceLastVersion { get { return new DBOColumnDef(XDBVersion.TableDef, "ChangesSinceLastVersion", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// String representing the earliest compatible Client Version. E.g. if this is set to "4.1.37.800" it means that all Clients from 4.1.37.800 and later are compatible wit the DB-Schema and the DB-Objects.
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef BackwardCompatibleDownToClientVersion { get { return new DBOColumnDef(XDBVersion.TableDef, "BackwardCompatibleDownToClientVersion", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// Optional Description of the Version (e.g. if this Build is for a specific Customer only)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XDBVersion.TableDef, "Description", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XDBVersion.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XDBVersion.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XDBVersion.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XDBVersion.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDBVersionTS { get { return new DBOColumnDef(XDBVersion.TableDef, "XDBVersionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Definiert die Regel, die bei einer globalen Lösch-Operation angewendet werden soll. Vergleichbar mit der Delete_Rule bei einem Foreign Key im DB-Schema.
/// </summary>

public static class XDeleteRule{
/// <summary>
/// Gets the table definition for XDeleteRule
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDeleteRule", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XDeleteRuleID { get { return new DBOColumnDef(XDeleteRule.TableDef, "XDeleteRuleID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Der Name der Tabelle für die diese Regel gilt.
/// [DataType: VARCHAR]
/// [Length: 128]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XDeleteRule.TableDef, "TableName", typeof(string), false, false, false, 128, false, "", ""); } }


/// <summary>
/// Der Name der FK-Spalte für die diese Regel gilt.
/// [DataType: VARCHAR]
/// [Length: 128]
/// </summary>

public static DBOColumnDef ColumnName { get { return new DBOColumnDef(XDeleteRule.TableDef, "ColumnName", typeof(string), false, false, false, 128, false, "", ""); } }


/// <summary>
/// Code der die anzuwendende Regel definiert.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef XDeleteRuleCode { get { return new DBOColumnDef(XDeleteRule.TableDef, "XDeleteRuleCode", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XDeleteRule.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XDeleteRule.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XDeleteRule.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XDeleteRule.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDeleteRuleTS { get { return new DBOColumnDef(XDeleteRule.TableDef, "XDeleteRuleTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContext{
/// <summary>
/// Gets the table definition for XDocContext
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDocContext", "", false); } }


/// <summary>
/// Primärschlüssel für XDocContext Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DocContextID { get { return new DBOColumnDef(XDocContext.TableDef, "DocContextID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef DocContextName { get { return new DBOColumnDef(XDocContext.TableDef, "DocContextName", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XDocContext.TableDef, "Description", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XDocContext.TableDef, "System", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDocContextTS { get { return new DBOColumnDef(XDocContext.TableDef, "XDocContextTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContext_Template{
/// <summary>
/// Gets the table definition for XDocContext_Template
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDocContext_Template", "", false); } }


/// <summary>
/// Primärschlüssel für XDocContext_Template Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XDocContext_TemplateID { get { return new DBOColumnDef(XDocContext_Template.TableDef, "XDocContext_TemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocContext_Template) => XDocContext_Template.XDocContext_TemplateID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentID { get { return new DBOColumnDef(XDocContext_Template.TableDef, "ParentID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentPosition { get { return new DBOColumnDef(XDocContext_Template.TableDef, "ParentPosition", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FolderName { get { return new DBOColumnDef(XDocContext_Template.TableDef, "FolderName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocContext) => XDocContext.DocContextID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DocContextID { get { return new DBOColumnDef(XDocContext_Template.TableDef, "DocContextID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocTemplate) => XDocTemplate.DocTemplateID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DocTemplateID { get { return new DBOColumnDef(XDocContext_Template.TableDef, "DocTemplateID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDocContext_TemplateTS { get { return new DBOColumnDef(XDocContext_Template.TableDef, "XDocContext_TemplateTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XDocContext_Template.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContextType{
/// <summary>
/// Gets the table definition for XDocContextType
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDocContextType", "", false); } }


/// <summary>
/// Primärschlüssel für XDocContextType Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DocContextTypeID { get { return new DBOColumnDef(XDocContextType.TableDef, "DocContextTypeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NameDocContextType { get { return new DBOColumnDef(XDocContextType.TableDef, "NameDocContextType", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef TemplateFolder { get { return new DBOColumnDef(XDocContextType.TableDef, "TemplateFolder", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocumentFolder { get { return new DBOColumnDef(XDocContextType.TableDef, "DocumentFolder", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XDocContextType.TableDef, "Description", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDocContextTypeTS { get { return new DBOColumnDef(XDocContextType.TableDef, "XDocContextTypeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für Vorlagen inklusive Binärdaten der Vorlage (Officeintegration).
/// </summary>

public static class XDocTemplate{
/// <summary>
/// Gets the table definition for XDocTemplate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDocTemplate", "", false); } }


/// <summary>
/// Primärschlüssel für XDocTemplate Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DocTemplateID { get { return new DBOColumnDef(XDocTemplate.TableDef, "DocTemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Der User, welcher das Dokument bearbeitet.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef CheckOut_UserID { get { return new DBOColumnDef(XDocTemplate.TableDef, "CheckOut_UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(XDocTemplate.TableDef, "XProfileID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Name der Vorlage
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocTemplateName { get { return new DBOColumnDef(XDocTemplate.TableDef, "DocTemplateName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// Dateierweiterung.
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FileExtension { get { return new DBOColumnDef(XDocTemplate.TableDef, "FileExtension", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DateCreation { get { return new DBOColumnDef(XDocTemplate.TableDef, "DateCreation", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DateLastSave { get { return new DBOColumnDef(XDocTemplate.TableDef, "DateLastSave", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FileBinary { get { return new DBOColumnDef(XDocTemplate.TableDef, "FileBinary", typeof(byte[]), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocFormatCode { get { return new DBOColumnDef(XDocTemplate.TableDef, "DocFormatCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Date { get { return new DBOColumnDef(XDocTemplate.TableDef, "CheckOut_Date", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Filename { get { return new DBOColumnDef(XDocTemplate.TableDef, "CheckOut_Filename", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Machine { get { return new DBOColumnDef(XDocTemplate.TableDef, "CheckOut_Machine", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DocTemplateTS { get { return new DBOColumnDef(XDocTemplate.TableDef, "DocTemplateTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocument{
/// <summary>
/// Gets the table definition for XDocument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XDocument", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef DocumentID { get { return new DBOColumnDef(XDocument.TableDef, "DocumentID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DateCreation { get { return new DBOColumnDef(XDocument.TableDef, "DateCreation", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID_Creator { get { return new DBOColumnDef(XDocument.TableDef, "UserID_Creator", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef DateLastSave { get { return new DBOColumnDef(XDocument.TableDef, "DateLastSave", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID_LastSave { get { return new DBOColumnDef(XDocument.TableDef, "UserID_LastSave", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// </summary>

public static DBOColumnDef FileBinary { get { return new DBOColumnDef(XDocument.TableDef, "FileBinary", typeof(byte[]), false, false, false, 16, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocFormatCode { get { return new DBOColumnDef(XDocument.TableDef, "DocFormatCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FileExtension { get { return new DBOColumnDef(XDocument.TableDef, "FileExtension", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef DocReadOnly { get { return new DBOColumnDef(XDocument.TableDef, "DocReadOnly", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocTemplateID { get { return new DBOColumnDef(XDocument.TableDef, "DocTemplateID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XDocumentTS { get { return new DBOColumnDef(XDocument.TableDef, "XDocumentTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocTypeCode { get { return new DBOColumnDef(XDocument.TableDef, "DocTypeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DocTemplateName { get { return new DBOColumnDef(XDocument.TableDef, "DocTemplateName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_UserID { get { return new DBOColumnDef(XDocument.TableDef, "CheckOut_UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Date { get { return new DBOColumnDef(XDocument.TableDef, "CheckOut_Date", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Filename { get { return new DBOColumnDef(XDocument.TableDef, "CheckOut_Filename", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CheckOut_Machine { get { return new DBOColumnDef(XDocument.TableDef, "CheckOut_Machine", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID_LastRead { get { return new DBOColumnDef(XDocument.TableDef, "UserID_LastRead", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DateLastRead { get { return new DBOColumnDef(XDocument.TableDef, "DateLastRead", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlink{
/// <summary>
/// Gets the table definition for XHyperlink
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XHyperlink", "", false); } }


/// <summary>
/// Primärschlüssel für XHyperlink Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XHyperlinkID { get { return new DBOColumnDef(XHyperlink.TableDef, "XHyperlinkID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// </summary>

public static DBOColumnDef Hyperlink { get { return new DBOColumnDef(XHyperlink.TableDef, "Hyperlink", typeof(string), false, false, false, 8000, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XHyperlink.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XHyperlinkTS { get { return new DBOColumnDef(XHyperlink.TableDef, "XHyperlinkTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlinkContext{
/// <summary>
/// Gets the table definition for XHyperlinkContext
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XHyperlinkContext", "", false); } }


/// <summary>
/// Primärschlüssel für XHyperlinkContext Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XHyperlinkContextID { get { return new DBOColumnDef(XHyperlinkContext.TableDef, "XHyperlinkContextID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XHyperlinkContext.TableDef, "Name", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XHyperlinkContext.TableDef, "Description", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XHyperlinkContext.TableDef, "System", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XHyperlinkContextTS { get { return new DBOColumnDef(XHyperlinkContext.TableDef, "XHyperlinkContextTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlinkContext_Hyperlink{
/// <summary>
/// Gets the table definition for XHyperlinkContext_Hyperlink
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XHyperlinkContext_Hyperlink", "", false); } }


/// <summary>
/// Primärschlüssel für XHyperlinkContext_Hyperlink Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XHyperlinkContext_HyperlinkID { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "XHyperlinkContext_HyperlinkID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentID { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "ParentID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FolderName { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "FolderName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XHyperlinkContext_Hyperlink_XHyperlinkContext) => XHyperlinkContext.XHyperlinkContextID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XHyperlinkContextID { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "XHyperlinkContextID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XHyperlinkContext_Hyperlink_XHyperlink) => XHyperlink.XHyperlinkID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XHyperlinkID { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "XHyperlinkID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserProfileCode { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "UserProfileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XHyperlinkContext_HyperlinkTS { get { return new DBOColumnDef(XHyperlinkContext_Hyperlink.TableDef, "XHyperlinkContext_HyperlinkTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XIcon{
/// <summary>
/// Gets the table definition for XIcon
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XIcon", "", false); } }


/// <summary>
/// Primärschlüssel für XIcon Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef XIconID { get { return new DBOColumnDef(XIcon.TableDef, "XIconID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XIcon.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Icon { get { return new DBOColumnDef(XIcon.TableDef, "Icon", typeof(byte[]), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XIconTS { get { return new DBOColumnDef(XIcon.TableDef, "XIconTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Sprachtabelle für alle Deutschen und Mehrsprachigen Texte aus Controls, Components, sonstigem Code, wie auch der Datenbank. Die Standardsprache wird automatisch von KiSS Core gefüllt.
/// </summary>

public static class XLangText{
/// <summary>
/// Gets the table definition for XLangText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XLangText", "", false); } }


/// <summary>
/// Primärschlüssel für XLangText Records (nach Primärschlüssel-Standards). TID=Text-ID, zusammen mit LanguageCode als eindeutiger Schlüssel für einen Text je Sprache.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef TID { get { return new DBOColumnDef(XLangText.TableDef, "TID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XLangText Records (nach Primärschlüssel-Standards). Sprach-Code des Textes, zusammen mit TID als eindeutiger Schlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef LanguageCode { get { return new DBOColumnDef(XLangText.TableDef, "LanguageCode", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// Text, welcher für TID und Sprache geführt wird
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(XLangText.TableDef, "Text", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Für grosse Texte, wird aber zurzeit nicht verwendet (weder in KiSS Core, noch sonst)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LargeText { get { return new DBOColumnDef(XLangText.TableDef, "LargeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XLangTextTS { get { return new DBOColumnDef(XLangText.TableDef, "XLangTextTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet alle Log-Einträge aus KiSS
/// </summary>

public static class XLog{
/// <summary>
/// Gets the table definition for XLog
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XLog", "", false); } }


/// <summary>
/// Primärschlüssel für XLog Records (nach Primärschlüssel-Standards). Eindeutige ID des Log-Eintrags.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XLogID { get { return new DBOColumnDef(XLog.TableDef, "XLogID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Herkunft des Log-Eintrags: Namespace.Klassenname
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Source { get { return new DBOColumnDef(XLog.TableDef, "Source", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Zusätzlicher, optionaler Code innerhalb der Source. Dieser kann z.B. für Auswertungen eines bestimmten Typs aus gegebener Source verwendet werden.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SourceKey { get { return new DBOColumnDef(XLog.TableDef, "SourceKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Log-Level (debug, info, warn, error, fatal)
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef XLogLevelCode { get { return new DBOColumnDef(XLog.TableDef, "XLogLevelCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Log-Nachricht (z.B. Fehlermeldung)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Message { get { return new DBOColumnDef(XLog.TableDef, "Message", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Zusätzlicher Kommentar zum Log-Eintrag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Comment { get { return new DBOColumnDef(XLog.TableDef, "Comment", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Name der zum Logeintrag referenzierten Tabelle, welche zusammen mit ReferenceKey den betroffenen Datensatz beschreibt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenceTable { get { return new DBOColumnDef(XLog.TableDef, "ReferenceTable", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Eindeutiger Schlüssel (PK) innerhalb der ReferenceTable. Diese ID ist z.B. beim Erzeugen eines neuen Logeintrags betroffen.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenceID { get { return new DBOColumnDef(XLog.TableDef, "ReferenceID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob ein Eintrag beim Säubern gelöscht werden darf (=0) oder erhalten bleiben soll (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef NonPurgeable { get { return new DBOColumnDef(XLog.TableDef, "NonPurgeable", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XLog.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XLog.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XLog.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XLog.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XLogTS { get { return new DBOColumnDef(XLog.TableDef, "XLogTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Wertelisten (Codes sind in XLOVCode)
/// </summary>

public static class XLOV{
/// <summary>
/// Gets the table definition for XLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XLOV", "", false); } }


/// <summary>
/// Primärschlüssel für XLOV Records (nach Primärschlüssel-Standards). Eindeutiger Name einer Werteliste, wobei in der Regel als Prefix das Modul gewählt wird (z.B. BaXYZ)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XLOVID { get { return new DBOColumnDef(XLOV.TableDef, "XLOVID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Eindeutiger Name einer Werteliste, wobei in der Regel als Prefix das Modul gewählt wird (z.B. BaXYZ)
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(XLOV.TableDef, "LOVName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Beschreibung der Werteliste
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XLOV.TableDef, "Description", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// Flag, ob eine Werteliste Systemrelevant ist und daher nur mit entsprechendem Wissen geändert werden sollte (0=Kunde, 1=System)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XLOV.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob eine Werteliste erweiterbar ist, d.h. neue Codes enthalten kann
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Expandable { get { return new DBOColumnDef(XLOV.TableDef, "Expandable", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XLOV_XModul) => XModul.ModulID, ID des Modules, zu welcher eine Werteliste gehört.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XLOV.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Zeitstempel, wann eine Werteliste zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LastUpdated { get { return new DBOColumnDef(XLOV.TableDef, "LastUpdated", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Flag, ob eine Werteliste mehrsprachig geführt werden kann (0=nur Standard, 1=Auch Mehrsprachig möglich)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Translatable { get { return new DBOColumnDef(XLOV.TableDef, "Translatable", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Name/Begriff der Zusatzspalte Value1, wird im KiSS bei der Bearbeitung der Werteliste für Value 1 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameValue1 { get { return new DBOColumnDef(XLOV.TableDef, "NameValue1", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Name/Begriff der Zusatzspalte Value2, wird im KiSS bei der Bearbeitung der Werteliste für Value 2 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameValue2 { get { return new DBOColumnDef(XLOV.TableDef, "NameValue2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Name/Begriff der Zusatzspalte Value3, wird im KiSS bei der Bearbeitung der Werteliste für Value 3 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameValue3 { get { return new DBOColumnDef(XLOV.TableDef, "NameValue3", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XLOVTS { get { return new DBOColumnDef(XLOV.TableDef, "XLOVTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Werte/Codes der in XLOV definierten Wertelisten
/// </summary>

public static class XLOVCode{
/// <summary>
/// Gets the table definition for XLOVCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XLOVCode", "", false); } }


/// <summary>
/// Primärschlüssel für XLOVCode Records (nach Primärschlüssel-Standards). Name der Werteliste, welche in XLOV eingetragen ist, Primärschlüssel zusammen mit Code.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XLOVCodeID { get { return new DBOColumnDef(XLOVCode.TableDef, "XLOVCodeID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XLOVCode_XLOV) => XLOVID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XLOVID { get { return new DBOColumnDef(XLOVCode.TableDef, "XLOVID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Name der Werteliste, welche in XLOV eingetragen ist, Primärschlüssel zusammen mit Code.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(XLOVCode.TableDef, "LOVName", typeof(string), false, true, false, 100, false, "", ""); } }


/// <summary>
/// Eindeutiger Code der einzelnen Werteliste zusammen mit LOVName.
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(XLOVCode.TableDef, "Code", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Text, welcher für den entsprechenden Code der einzelnen Werteliste verwendet wird
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(XLOVCode.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des Textes, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TextTID { get { return new DBOColumnDef(XLOVCode.TableDef, "TextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Sortierung der einzelnen Codes innerhalb der Werteliste (wenn nicht nach Text oder Code sortiert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XLOVCode.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Abgekürzter Text der Spalte Text
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortText { get { return new DBOColumnDef(XLOVCode.TableDef, "ShortText", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des ShortTextes, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortTextTID { get { return new DBOColumnDef(XLOVCode.TableDef, "ShortTextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Für BFS relevante Wertelisten kann hier der zugehörige BFS-Code angegeben werden
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSCode { get { return new DBOColumnDef(XLOVCode.TableDef, "BFSCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 1 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value1 { get { return new DBOColumnDef(XLOVCode.TableDef, "Value1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des Value 1, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value1TID { get { return new DBOColumnDef(XLOVCode.TableDef, "Value1TID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 2 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value2 { get { return new DBOColumnDef(XLOVCode.TableDef, "Value2", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des Value 2, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value2TID { get { return new DBOColumnDef(XLOVCode.TableDef, "Value2TID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 3 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value3 { get { return new DBOColumnDef(XLOVCode.TableDef, "Value3", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des Value 3, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value3TID { get { return new DBOColumnDef(XLOVCode.TableDef, "Value3TID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beschreibung des einzelnen Codes der jeweiligen Werteliste
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XLOVCode.TableDef, "Description", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// Name des LOVCode-Eintrags, welcher für die automatische Generierung der LOVs-Enums in C# verwendet wird
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVCodeName { get { return new DBOColumnDef(XLOVCode.TableDef, "LOVCodeName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef IsActive { get { return new DBOColumnDef(XLOVCode.TableDef, "IsActive", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// Flag, ob ein spezifischer Code systemkritisch ist (0=Kunde, 1=Systemrelevant)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XLOVCode.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XLOVCodeTS { get { return new DBOColumnDef(XLOVCode.TableDef, "XLOVCodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XMenuItem{
/// <summary>
/// Gets the table definition for XMenuItem
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XMenuItem", "", false); } }


/// <summary>
/// Primärschlüssel für XMenuItem Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef MenuItemID { get { return new DBOColumnDef(XMenuItem.TableDef, "MenuItemID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XMenuItem_XMenuItem) => XMenuItem.MenuItemID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentMenuItemID { get { return new DBOColumnDef(XMenuItem.TableDef, "ParentMenuItemID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ControlName { get { return new DBOColumnDef(XMenuItem.TableDef, "ControlName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BeginMenuGroup { get { return new DBOColumnDef(XMenuItem.TableDef, "BeginMenuGroup", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Enabled { get { return new DBOColumnDef(XMenuItem.TableDef, "Enabled", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Visible { get { return new DBOColumnDef(XMenuItem.TableDef, "Visible", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Caption { get { return new DBOColumnDef(XMenuItem.TableDef, "Caption", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MenuTID { get { return new DBOColumnDef(XMenuItem.TableDef, "MenuTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ItemShortcutCtrl { get { return new DBOColumnDef(XMenuItem.TableDef, "ItemShortcutCtrl", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ItemShortcutShift { get { return new DBOColumnDef(XMenuItem.TableDef, "ItemShortcutShift", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ItemShortcutAlt { get { return new DBOColumnDef(XMenuItem.TableDef, "ItemShortcutAlt", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ItemShortcutKey { get { return new DBOColumnDef(XMenuItem.TableDef, "ItemShortcutKey", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// </summary>

public static DBOColumnDef ImageIndex { get { return new DBOColumnDef(XMenuItem.TableDef, "ImageIndex", typeof(int), false, false, false, 4, false, "((-1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// </summary>

public static DBOColumnDef ImageIndexDisabled { get { return new DBOColumnDef(XMenuItem.TableDef, "ImageIndexDisabled", typeof(int), false, false, false, 4, false, "((-1))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XMenuItem.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XMenuItem_XClass) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XMenuItem.TableDef, "ClassName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ShowInToolbar { get { return new DBOColumnDef(XMenuItem.TableDef, "ShowInToolbar", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BeginToolbarGroup { get { return new DBOColumnDef(XMenuItem.TableDef, "BeginToolbarGroup", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ToolbarSortKey { get { return new DBOColumnDef(XMenuItem.TableDef, "ToolbarSortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XMenuItem.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef HideLockedItems { get { return new DBOColumnDef(XMenuItem.TableDef, "HideLockedItems", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XMenuItem.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XMenuItemTS { get { return new DBOColumnDef(XMenuItem.TableDef, "XMenuItemTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Flag, ob Menu-Eintrag nur für BIAG Super-Administratoren sichtbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef OnlyBIAGAdminVisible { get { return new DBOColumnDef(XMenuItem.TableDef, "OnlyBIAGAdminVisible", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XMessage{
/// <summary>
/// Gets the table definition for XMessage
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XMessage", "", false); } }


/// <summary>
/// Primärschlüssel für XMessage Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(XMessage.TableDef, "MaskName", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XMessage Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef MessageName { get { return new DBOColumnDef(XMessage.TableDef, "MessageName", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MessageTID { get { return new DBOColumnDef(XMessage.TableDef, "MessageTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MessageCode { get { return new DBOColumnDef(XMessage.TableDef, "MessageCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Context { get { return new DBOColumnDef(XMessage.TableDef, "Context", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XMessageTS { get { return new DBOColumnDef(XMessage.TableDef, "XMessageTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XModul{
/// <summary>
/// Gets the table definition for XModul
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XModul", "", false); } }


/// <summary>
/// Primärschlüssel für XModul Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XModul.TableDef, "ModulID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XModul.TableDef, "Name", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortName { get { return new DBOColumnDef(XModul.TableDef, "ShortName", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XModul.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameSpace { get { return new DBOColumnDef(XModul.TableDef, "NameSpace", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DB_Prefix { get { return new DBOColumnDef(XModul.TableDef, "DB_Prefix", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef ModulTree { get { return new DBOColumnDef(XModul.TableDef, "ModulTree", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XModul.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XModul.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XModulTS { get { return new DBOColumnDef(XModul.TableDef, "XModulTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Flag, ob ein Modul lizenziert wurde oder nicht (1=Kunde hat Lizenz, 0=Kunde hat keine Lizenz)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef Licensed { get { return new DBOColumnDef(XModul.TableDef, "Licensed", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XModulTree{
/// <summary>
/// Gets the table definition for XModulTree
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XModulTree", "", false); } }


/// <summary>
/// Primärschlüssel für XModulTree Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef ModulTreeID { get { return new DBOColumnDef(XModulTree.TableDef, "ModulTreeID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XModulTree_XModulTree) => XModulTree.ModulTreeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulTreeID_Parent { get { return new DBOColumnDef(XModulTree.TableDef, "ModulTreeID_Parent", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XModulTree_XModulTree) => XModulTree.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XModulTree.TableDef, "ModulID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((9999))]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XModulTree.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "((9999))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XModulTree_XIcon) => XIcon.XIconID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XIconID { get { return new DBOColumnDef(XModulTree.TableDef, "XIconID", typeof(int), false, true, false, 4, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XModulTree.TableDef, "Name", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(XModulTree.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XModulTree_XClass) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XModulTree.TableDef, "ClassName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XModulTree_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(XModulTree.TableDef, "MaskName", typeof(string), false, true, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef sqlPreExecute { get { return new DBOColumnDef(XModulTree.TableDef, "sqlPreExecute", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef ModulTreeCode { get { return new DBOColumnDef(XModulTree.TableDef, "ModulTreeCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef sqlInsertTreeItem { get { return new DBOColumnDef(XModulTree.TableDef, "sqlInsertTreeItem", typeof(string), false, false, false, 4000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef Active { get { return new DBOColumnDef(XModulTree.TableDef, "Active", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XModulTreeTS { get { return new DBOColumnDef(XModulTree.TableDef, "XModulTreeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet alle KiSS Namespace-Extensions
/// </summary>

public static class XNamespaceExtension{
/// <summary>
/// Gets the table definition for XNamespaceExtension
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XNamespaceExtension", "", false); } }


/// <summary>
/// Primärschlüssel für XNamespaceExtension Records (nach Primärschlüssel-Standards). Eindeutige ID des Namespace-Extension-Eintrags.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XNamespaceExtensionID { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "XNamespaceExtensionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Namespace-Extension, welche für die Indentifikation einer spezifischen Implementation verwendet wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef NamespaceExtension { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "NamespaceExtension", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XNamespaceExtensionTS { get { return new DBOColumnDef(XNamespaceExtension.TableDef, "XNamespaceExtensionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Abteilungen für die Benutzerverwaltung in hierarchischer Struktur
/// </summary>

public static class XOrgUnit{
/// <summary>
/// Gets the table definition for XOrgUnit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XOrgUnit", "", true); } }


/// <summary>
/// Primärschlüssel für XOrgUnit Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(XOrgUnit.TableDef, "OrgUnitID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel: XOrgUnit.ParentID => XOrgUnit.OrgUnitID, Verweis auf das das Elternelement in der hierarchischen Abteilungsstruktur
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentID { get { return new DBOColumnDef(XOrgUnit.TableDef, "ParentID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel: XOrgUnit.ModulD => XModul.ModulID, wird für die Filterung gewisser Datensätze verwendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XOrgUnit.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel: XOrgUnit.ChiefID => XUser.UserID, ID des Leiters der Abteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ChiefID { get { return new DBOColumnDef(XOrgUnit.TableDef, "ChiefID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel: XOrgUnit.RechtsdienstUserID => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef RechtsdienstUserID { get { return new DBOColumnDef(XOrgUnit.TableDef, "RechtsdienstUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel: XOrgUnit.ReprensentativeID => XUser.UserID, Stellvertreter des XOrgUnit.ChiefID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef RepresentativeID { get { return new DBOColumnDef(XOrgUnit.TableDef, "RepresentativeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StellvertreterID { get { return new DBOColumnDef(XOrgUnit.TableDef, "StellvertreterID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel zur Tabelle XProfile. Das Profil dient als Filter für Vorlagen bei der Dokumentgeneration.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(XOrgUnit.TableDef, "XProfileID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Name der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ItemName { get { return new DBOColumnDef(XOrgUnit.TableDef, "ItemName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Typ der Abteilung gemäss Werteliste: OrganisationsEinheitTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OEItemTypCode { get { return new DBOColumnDef(XOrgUnit.TableDef, "OEItemTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Position innerhalb derselben ParentID Hierarchiestruktur
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentPosition { get { return new DBOColumnDef(XOrgUnit.TableDef, "ParentPosition", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Kostenstelle der Abteilung (kann jede Abteilung eine eigene haben)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(XOrgUnit.TableDef, "Kostenstelle", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Mandantennummer der Abteilung. Dies wird in der Businesslogik definiert, dass dieselbe Mandantennummer der Elternabteilung(en) gilt, sofern nicht selber eine eigene definiert wird
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandantennummer { get { return new DBOColumnDef(XOrgUnit.TableDef, "Mandantennummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Lohnlaufnummer für die Stundenlohnschnittstelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StundenLohnlaufNr { get { return new DBOColumnDef(XOrgUnit.TableDef, "StundenLohnlaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Lohnlaufnummer für die Leistungsdatenschnittstelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LeistungLohnlaufNr { get { return new DBOColumnDef(XOrgUnit.TableDef, "LeistungLohnlaufNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Sammelkontonummer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sammelkonto { get { return new DBOColumnDef(XOrgUnit.TableDef, "Sammelkonto", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// PC-Kontonummer
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKonto { get { return new DBOColumnDef(XOrgUnit.TableDef, "PCKonto", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AD_Abteilung { get { return new DBOColumnDef(XOrgUnit.TableDef, "AD_Abteilung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Logo der Abteilung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Logo { get { return new DBOColumnDef(XOrgUnit.TableDef, "Logo", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Adresse der Abteilung als Ganzes (Standard)
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat { get { return new DBOColumnDef(XOrgUnit.TableDef, "Adressat", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Adresse der Abteilung als Ganzes (ZH)
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(XOrgUnit.TableDef, "Adresse", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Name der KGS für die Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseKGS { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdresseKGS", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Name der Abteilung für die Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseAbteilung { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdresseAbteilung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Strasse der Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseStrasse { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdresseStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Postfach der Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(XOrgUnit.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Flag, ob das Postfach eine Nummer hat oder lediglich mit Postfach angeschrieben werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(XOrgUnit.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Hausnummer
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseHausNr { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdresseHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Postleitzahl
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePLZ { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdressePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// Ortschaft
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseOrt { get { return new DBOColumnDef(XOrgUnit.TableDef, "AdresseOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// Telefonnummer der Abteilung (TODO: Telefon vs. Phone)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phone { get { return new DBOColumnDef(XOrgUnit.TableDef, "Phone", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Telefonnummer der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(XOrgUnit.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Faxnummer der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(XOrgUnit.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Emailadresse der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(XOrgUnit.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Internet-/Intranet-Seite der Abteilung (TODO: WWW vs. Internet)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WWW { get { return new DBOColumnDef(XOrgUnit.TableDef, "WWW", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Internet-/Intranet-Seite der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Internet { get { return new DBOColumnDef(XOrgUnit.TableDef, "Internet", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Benutzerprofil (TODO: XProfileID --> Neue Vorlagenverwaltung)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserProfileCode { get { return new DBOColumnDef(XOrgUnit.TableDef, "UserProfileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Freitext 1
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1 { get { return new DBOColumnDef(XOrgUnit.TableDef, "Text1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Freitext 2
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2 { get { return new DBOColumnDef(XOrgUnit.TableDef, "Text2", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Freitext 3
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text3 { get { return new DBOColumnDef(XOrgUnit.TableDef, "Text3", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Freitext 4
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text4 { get { return new DBOColumnDef(XOrgUnit.TableDef, "Text4", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XOrgUnit.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XOrgUnit.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XOrgUnit.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XOrgUnit.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(XOrgUnit.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XOrgUnitTS { get { return new DBOColumnDef(XOrgUnit.TableDef, "XOrgUnitTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XOrgUnit_User{
/// <summary>
/// Gets the table definition for XOrgUnit_User
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XOrgUnit_User", "", true); } }


/// <summary>
/// Primärschlüssel für XOrgUnit_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XOrgUnit_UserID { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "XOrgUnit_UserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XOrgUnit_User_XOrgUnit) => XOrgUnit.OrgUnitID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "OrgUnitID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XOrgUnit_User_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef OrgUnitMemberCode { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "OrgUnitMemberCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayInsert { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "MayInsert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayUpdate { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "MayUpdate", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayDelete { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "MayDelete", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XOrgUnit_UserTS { get { return new DBOColumnDef(XOrgUnit_User.TableDef, "XOrgUnit_UserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle von XOrgUnit und XDocTemplate (Abteilung und Vorlage)
/// </summary>

public static class XOrgUnit_XDocTemplate{
/// <summary>
/// Gets the table definition for XOrgUnit_XDocTemplate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XOrgUnit_XDocTemplate", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XOrgUnit_XDocTemplateID { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "XOrgUnit_XDocTemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XOrgUnit (Abteilung).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "OrgUnitID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XDocTemplate (Vorlage).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DocTemplateID { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "DocTemplateID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zulest geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XOrgUnit_XDocTemplateTS { get { return new DBOColumnDef(XOrgUnit_XDocTemplate.TableDef, "XOrgUnit_XDocTemplateTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XPermissionGroup{
/// <summary>
/// Gets the table definition for XPermissionGroup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XPermissionGroup", "", false); } }


/// <summary>
/// Primärschlüssel für XPermissionGroup Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef PermissionGroupID { get { return new DBOColumnDef(XPermissionGroup.TableDef, "PermissionGroupID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef PermissionGroupName { get { return new DBOColumnDef(XPermissionGroup.TableDef, "PermissionGroupName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XPermissionGroup.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XPermissionGroupTS { get { return new DBOColumnDef(XPermissionGroup.TableDef, "XPermissionGroupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Definiert die Reihenfolge in der die Empfänger der Bewilligungsanfragen ermittelt werden.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kompetenzstufe { get { return new DBOColumnDef(XPermissionGroup.TableDef, "Kompetenzstufe", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XPermissionValue{
/// <summary>
/// Gets the table definition for XPermissionValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XPermissionValue", "", false); } }


/// <summary>
/// Primärschlüssel für XPermissionValue Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef PermissionValueID { get { return new DBOColumnDef(XPermissionValue.TableDef, "PermissionValueID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XPermissionValue_XPermissionGroup) => XPermissionGroup.PermissionGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef PermissionGroupID { get { return new DBOColumnDef(XPermissionValue.TableDef, "PermissionGroupID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PermissionCode { get { return new DBOColumnDef(XPermissionValue.TableDef, "PermissionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XPermissionValue_BgPositionsart) => BgPositionsart.BgPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(XPermissionValue.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(XPermissionValue.TableDef, "Value", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XPermissionValueTS { get { return new DBOColumnDef(XPermissionValue.TableDef, "XPermissionValueTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XPlausiFehler{
/// <summary>
/// Gets the table definition for XPlausiFehler
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XPlausiFehler", "", false); } }


/// <summary>
/// Primärschlüssel für XPlausiFehler Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XPlausiFehlerID { get { return new DBOColumnDef(XPlausiFehler.TableDef, "XPlausiFehlerID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XPlausiFehler_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(XPlausiFehler.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PlausiNo { get { return new DBOColumnDef(XPlausiFehler.TableDef, "PlausiNo", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VarName { get { return new DBOColumnDef(XPlausiFehler.TableDef, "VarName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(XPlausiFehler.TableDef, "Text", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef PlausiFehlerTypCode { get { return new DBOColumnDef(XPlausiFehler.TableDef, "PlausiFehlerTypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "(0)", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef Erledigt { get { return new DBOColumnDef(XPlausiFehler.TableDef, "Erledigt", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XPlausiFehlerTS { get { return new DBOColumnDef(XPlausiFehler.TableDef, "XPlausiFehlerTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DossierID { get { return new DBOColumnDef(XPlausiFehler.TableDef, "DossierID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// Ein Profil enthält eine Auswahl an Tags (XProfileTags). So kann man anhand eines Input-Profiles passende andere Profile finden. Zur Zeit nur bei Vorlagen verwendet.
/// </summary>

public static class XProfile{
/// <summary>
/// Gets the table definition for XProfile
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XProfile", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(XProfile.TableDef, "XProfileID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Typ des Profils. Es gibt Profile für Vorlagen und Profile für Abteilungen und Benutzer.
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef XProfileTypeCode { get { return new DBOColumnDef(XProfile.TableDef, "XProfileTypeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angezeigter Name des Profils (mehrsprachig). Fremdschlüsssel auf XLangText.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(XProfile.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Interner Name des Profils. Siehe auch NameTID (Name kann in mehrere Sprachen übersetzt werden).
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XProfile.TableDef, "Name", typeof(string), false, false, false, 300, true, "", ""); } }


/// <summary>
/// Beschreibung des Profils.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XProfile.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XProfile.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XProfile.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XProfile.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XProfile.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XProfileTS { get { return new DBOColumnDef(XProfile.TableDef, "XProfileTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle zwischen XProfileTag und XProfile
/// </summary>

public static class XProfile_XProfileTag{
/// <summary>
/// Gets the table definition for XProfile_XProfileTag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XProfile_XProfileTag", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XProfile_XProfileTagID { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "XProfile_XProfileTagID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XProfile
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "XProfileID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel zu XProfileTag
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XProfileTagID { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "XProfileTagID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XProfile_XProfileTagTS { get { return new DBOColumnDef(XProfile_XProfileTag.TableDef, "XProfile_XProfileTagTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Ein XProfileTag ist ein Attribut, welches einem Profil zugeordnet werden kann. Beispiele aus ProInfirmis: Deutsch, Französisch, Italienisch. Bei BSS: z.B. Sozialhilfe.
/// </summary>

public static class XProfileTag{
/// <summary>
/// Gets the table definition for XProfileTag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XProfileTag", "", false); } }


/// <summary>
/// Primärschlüssel.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XProfileTagID { get { return new DBOColumnDef(XProfileTag.TableDef, "XProfileTagID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Teil eines Fremdschlüssels auf XLangText. Der andere Teil ist LanguageCode. Pro Sprache gibt es einen Eintrag in XlangText. Siehe auch Spalte Name.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(XProfileTag.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Name des Merkmals. Kann in mehrere Sprachen übersetzt werden, siehe auch Spalte NameTID
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XProfileTag.TableDef, "Name", typeof(string), false, false, false, 300, true, "", ""); } }


/// <summary>
/// Beschreibung des Profil-Merkmals.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XProfileTag.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XProfileTag.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XProfileTag.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XProfileTag.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XProfileTag.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für Optimistic-Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XProfileTagTS { get { return new DBOColumnDef(XProfileTag.TableDef, "XProfileTagTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XQuery{
/// <summary>
/// Gets the table definition for XQuery
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XQuery", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef QueryName { get { return new DBOColumnDef(XQuery.TableDef, "QueryName", typeof(string), false, false, true, 100, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XQuery_XQuery) => XQuery.QueryName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentReportName { get { return new DBOColumnDef(XQuery.TableDef, "ParentReportName", typeof(string), false, true, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XQuery_XQuery) => XQuery.QueryCode
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef QueryCode { get { return new DBOColumnDef(XQuery.TableDef, "QueryCode", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserText { get { return new DBOColumnDef(XQuery.TableDef, "UserText", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LayoutXML { get { return new DBOColumnDef(XQuery.TableDef, "LayoutXML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParameterXML { get { return new DBOColumnDef(XQuery.TableDef, "ParameterXML", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SQLquery { get { return new DBOColumnDef(XQuery.TableDef, "SQLquery", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ContextForms { get { return new DBOColumnDef(XQuery.TableDef, "ContextForms", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReportSortKey { get { return new DBOColumnDef(XQuery.TableDef, "ReportSortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// The column name used to create a relation between two tables, usefull for subreports
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RelationColumnName { get { return new DBOColumnDef(XQuery.TableDef, "RelationColumnName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// flag ob der Report System ist oder nicht. System-Reports können nur durch biag_admin geändert werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XQuery.TableDef, "System", typeof(bool), false, false, false, 1, false, "((1))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XQueryTS { get { return new DBOColumnDef(XQuery.TableDef, "XQueryTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XRight{
/// <summary>
/// Gets the table definition for XRight
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XRight", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef RightID { get { return new DBOColumnDef(XRight.TableDef, "RightID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XRight_XClass) => XClassID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XClassID { get { return new DBOColumnDef(XRight.TableDef, "XClassID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Klassenname
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XRight.TableDef, "ClassName", typeof(string), false, true, false, 255, false, "", ""); } }


/// <summary>
/// Rechtename
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef RightName { get { return new DBOColumnDef(XRight.TableDef, "RightName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Benutzerinformationen
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef UserText { get { return new DBOColumnDef(XRight.TableDef, "UserText", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Beschreibung für Releasenotes
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XRight.TableDef, "Description", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XRight.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XRight.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XRight.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XRight.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XRightTS { get { return new DBOColumnDef(XRight.TableDef, "XRightTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XRule{
/// <summary>
/// Gets the table definition for XRule
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XRule", "", false); } }


/// <summary>
/// Primärschlüssel für XRule Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef XRuleID { get { return new DBOColumnDef(XRule.TableDef, "XRuleID", typeof(int), false, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// </summary>

public static DBOColumnDef RuleCode { get { return new DBOColumnDef(XRule.TableDef, "RuleCode", typeof(int), false, false, false, 4, false, "((3))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RuleName { get { return new DBOColumnDef(XRule.TableDef, "RuleName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RuleDescription { get { return new DBOColumnDef(XRule.TableDef, "RuleDescription", typeof(string), false, false, false, 7000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef csCode { get { return new DBOColumnDef(XRule.TableDef, "csCode", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef PublicRule { get { return new DBOColumnDef(XRule.TableDef, "PublicRule", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef TemplateRule { get { return new DBOColumnDef(XRule.TableDef, "TemplateRule", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XRule_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XRule.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DefaultSortKey { get { return new DBOColumnDef(XRule.TableDef, "DefaultSortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XRuleTS { get { return new DBOColumnDef(XRule.TableDef, "XRuleTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XSearchControlTemplate{
/// <summary>
/// Gets the table definition for XSearchControlTemplate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XSearchControlTemplate", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XSearchControlTemplateID { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "XSearchControlTemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "ClassName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulTreeID { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "ModulTreeID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ParentXSearchControlTemplateID { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "ParentXSearchControlTemplateID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ColLayout { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "ColLayout", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef SearchImmediately { get { return new DBOColumnDef(XSearchControlTemplate.TableDef, "SearchImmediately", typeof(bool), false, false, false, 1, false, "((0))", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XSearchControlTemplateField{
/// <summary>
/// Gets the table definition for XSearchControlTemplateField
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XSearchControlTemplateField", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XSearchControlTemplateFieldID { get { return new DBOColumnDef(XSearchControlTemplateField.TableDef, "XSearchControlTemplateFieldID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XSearchControlTemplateID { get { return new DBOColumnDef(XSearchControlTemplateField.TableDef, "XSearchControlTemplateID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ControlName { get { return new DBOColumnDef(XSearchControlTemplateField.TableDef, "ControlName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ControlType { get { return new DBOColumnDef(XSearchControlTemplateField.TableDef, "ControlType", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(XSearchControlTemplateField.TableDef, "Value", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTable{
/// <summary>
/// Gets the table definition for XTable
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTable", "", false); } }


/// <summary>
/// Primärschlüssel für XTable Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XTable.TableDef, "TableName", typeof(string), false, false, true, 255, false, "", ""); } }


/// <summary>
/// [DataType: CHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Alias { get { return new DBOColumnDef(XTable.TableDef, "Alias", typeof(string), false, false, false, 3, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XTable.TableDef, "System", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XTable_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XTable.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>

public static DBOColumnDef DataWareHouse { get { return new DBOColumnDef(XTable.TableDef, "DataWareHouse", typeof(bool), false, false, false, 1, false, "(0)", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Comment { get { return new DBOColumnDef(XTable.TableDef, "Comment", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTableTS { get { return new DBOColumnDef(XTable.TableDef, "XTableTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTableColumn{
/// <summary>
/// Gets the table definition for XTableColumn
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTableColumn", "", false); } }


/// <summary>
/// Primärschlüssel für XTableColumn Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XTableColumn.TableDef, "TableName", typeof(string), false, true, true, 255, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XTableColumn Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>

public static DBOColumnDef ColumnName { get { return new DBOColumnDef(XTableColumn.TableDef, "ColumnName", typeof(string), false, false, true, 255, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FieldCode { get { return new DBOColumnDef(XTableColumn.TableDef, "FieldCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayText { get { return new DBOColumnDef(XTableColumn.TableDef, "DisplayText", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayTextTID { get { return new DBOColumnDef(XTableColumn.TableDef, "DisplayTextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(XTableColumn.TableDef, "LOVName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(XTableColumn.TableDef, "System", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Comment { get { return new DBOColumnDef(XTableColumn.TableDef, "Comment", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(XTableColumn.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTableColumnTS { get { return new DBOColumnDef(XTableColumn.TableDef, "XTableColumnTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTask{
/// <summary>
/// Gets the table definition for XTask
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTask", "", false); } }


/// <summary>
/// Primärschlüssel für XTask Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTaskID { get { return new DBOColumnDef(XTask.TableDef, "XTaskID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(XTask.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaFallID { get { return new DBOColumnDef(XTask.TableDef, "FaFallID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(XTask.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Foreign Key auf Benutzer, welcher den Task erledigt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_Erledigt { get { return new DBOColumnDef(XTask.TableDef, "UserID_Erledigt", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Foreign Key auf Benutzer, welcher den Taks in Bearbeitung setzt.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID_InBearbeitung { get { return new DBOColumnDef(XTask.TableDef, "UserID_InBearbeitung", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Foreign Key auf Aktennotiz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef FaAktennotizID { get { return new DBOColumnDef(XTask.TableDef, "FaAktennotizID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// Foreign Key auf Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>

public static DBOColumnDef FaDokumenteID { get { return new DBOColumnDef(XTask.TableDef, "FaDokumenteID", typeof(System.Nullable<int>), false, false, false, 4, true, "", "ZH"); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskTypeCode { get { return new DBOColumnDef(XTask.TableDef, "TaskTypeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef TaskStatusCode { get { return new DBOColumnDef(XTask.TableDef, "TaskStatusCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef CreateDate { get { return new DBOColumnDef(XTask.TableDef, "CreateDate", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StartDate { get { return new DBOColumnDef(XTask.TableDef, "StartDate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ExpirationDate { get { return new DBOColumnDef(XTask.TableDef, "ExpirationDate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DoneDate { get { return new DBOColumnDef(XTask.TableDef, "DoneDate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Subject { get { return new DBOColumnDef(XTask.TableDef, "Subject", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskDescription { get { return new DBOColumnDef(XTask.TableDef, "TaskDescription", typeof(string), false, false, false, 2500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SenderID { get { return new DBOColumnDef(XTask.TableDef, "SenderID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskSenderCode { get { return new DBOColumnDef(XTask.TableDef, "TaskSenderCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReceiverID { get { return new DBOColumnDef(XTask.TableDef, "ReceiverID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskReceiverCode { get { return new DBOColumnDef(XTask.TableDef, "TaskReceiverCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ResponseText { get { return new DBOColumnDef(XTask.TableDef, "ResponseText", typeof(string), false, false, false, 2500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskResponseCode { get { return new DBOColumnDef(XTask.TableDef, "TaskResponseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JumpToPath { get { return new DBOColumnDef(XTask.TableDef, "JumpToPath", typeof(string), false, false, false, 1500, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTaskTS { get { return new DBOColumnDef(XTask.TableDef, "XTaskTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTaskAutoGenerated{
/// <summary>
/// Gets the table definition for XTaskAutoGenerated
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTaskAutoGenerated", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTaskAutoGeneratedID { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "XTaskAutoGeneratedID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XTask.XTaskID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XTaskID { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "XTaskID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Name der zur Pendenz referenzierten Tabelle, welche zusammen mit ReferenceID den betroffenen Datensatz beschreibt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenceTable { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "ReferenceTable", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Eindeutiger Schlüssel (PK) innerhalb der ReferenceTable. Diese ID ist z.B. beim Erzeugen eines neuer Pendenz betroffen.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenceID { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "ReferenceID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Typ des automatisch erzeugten Pendenz-Eintrages
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef XTaskAutoGeneratedTypeCode { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "XTaskAutoGeneratedTypeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTaskAutoGeneratedTS { get { return new DBOColumnDef(XTaskAutoGenerated.TableDef, "XTaskAutoGeneratedTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTaskTemplate{
/// <summary>
/// Gets the table definition for XTaskTemplate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTaskTemplate", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTaskTemplateID { get { return new DBOColumnDef(XTaskTemplate.TableDef, "XTaskTemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Typ der Pendenz. Ist in der TaskType-LOV definiert.
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TaskTypeCode { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskTypeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Status der Pendenz. Ist in der TaskStatus-LOV definiert.
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TaskStatusCode { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Betreff der Pendenz
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef TaskSubject { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskSubject", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit des Betreffs.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskSubjectTID { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskSubjectTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Beschreibung der Pendenz
/// [DataType: VARCHAR]
/// [Length: 2500]
/// </summary>

public static DBOColumnDef TaskDescription { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskDescription", typeof(string), false, false, false, 2500, false, "", ""); } }


/// <summary>
/// TID für die Mehrsprachigkeit der Beschreibung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaskDescriptionTID { get { return new DBOColumnDef(XTaskTemplate.TableDef, "TaskDescriptionTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XTaskTemplate.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XTaskTemplate.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XTaskTemplate.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XTaskTemplate.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTaskTemplateTS { get { return new DBOColumnDef(XTaskTemplate.TableDef, "XTaskTemplateTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Bezeichnet eine Aktion, die beim Erledigen einer Pendenz ausgeführt wird
/// </summary>

public static class XTaskTypeAction{
/// <summary>
/// Gets the table definition for XTaskTypeAction
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTaskTypeAction", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTaskTypeActionID { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "XTaskTypeActionID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// LOV XTaskTypeActionType
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef XTaskTypeActionTypeCode { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "XTaskTypeActionTypeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// LOV TaskType
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TaskTypeCode { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "TaskTypeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// Die Bezeichnung der Aktion (Button in Pendenzenverwaltung)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Bezeichnung", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BezeichnungTID { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "BezeichnungTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Betreff der Benachrichtigung, die beim Ausführen erstellt wird
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betreff { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Betreff", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetreffTID { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "BetreffTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Der Text der Benachrichtigung, die beim Ausführen erstellt wird
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Text", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TextTID { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "TextTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Definiert, ob beim Ausführen eine Benachrichtigung generiert wird
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef BenachrichtigungAktiv { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "BenachrichtigungAktiv", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Gibt an, ob der Ersteller der Pendenz diese Aktion ausführen darf
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef ErstellerDarfAusfuehren { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "ErstellerDarfAusfuehren", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTaskTypeActionTS { get { return new DBOColumnDef(XTaskTypeAction.TableDef, "XTaskTypeActionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XTranslateColumn{
/// <summary>
/// Gets the table definition for XTranslateColumn
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTranslateColumn", "", false); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTranslateColumnID { get { return new DBOColumnDef(XTranslateColumn.TableDef, "XTranslateColumnID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Name der Tabelle, welche die zu übersetzende Spalte enthält
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(XTranslateColumn.TableDef, "TableName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Name der Spalte, welche den Standard-Text beinhaltet
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef ColumnName { get { return new DBOColumnDef(XTranslateColumn.TableDef, "ColumnName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Name der Spalte, welche für den zugehörigen TID verwendet wird
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef TIDColumnName { get { return new DBOColumnDef(XTranslateColumn.TableDef, "TIDColumnName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Beschreibung zum Eintrag
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XTranslateColumn.TableDef, "Description", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Wer den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XTranslateColumn.TableDef, "Creator", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XTranslateColumn.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz mutiert hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XTranslateColumn.TableDef, "Modifier", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// Wann der Datensatz mutiert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XTranslateColumn.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird zur Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTranslateColumnTS { get { return new DBOColumnDef(XTranslateColumn.TableDef, "XTranslateColumnTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Liste aller Typen (z.B. Interfaces), die in Kiss dynamisch konfiguriert und so z.B. kundenspezifische Funktionalität (Services etc) instanziert werden können. Jeweils ein Lookup-Type (z.B. ein Interface) zeigt auf eine konkrete Standard-Implementierung und optional auf die Kundenspezifische Implementationsvariante dieses Lookup-Typs.
/// </summary>

public static class XTypeConfig{
/// <summary>
/// Gets the table definition for XTypeConfig
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XTypeConfig", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XTypeConfigID { get { return new DBOColumnDef(XTypeConfig.TableDef, "XTypeConfigID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Typename des Lookup-Types (z.B. eines Interfaces), ohne Namespace. Bsp. `IBaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef LookupTypeName { get { return new DBOColumnDef(XTypeConfig.TableDef, "LookupTypeName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Namespace des Lookup-Types (z.B. eines Interfaces), ohne den Namen des Typs. Bsp. `Kiss.Interfaces.BL.BA`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LookupTypeNamespace { get { return new DBOColumnDef(XTypeConfig.TableDef, "LookupTypeNamespace", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Name des Assemblies des Lookup-Types (z.B. eines Interfaces), ohne File Extension. Bsp. `Kiss.Interfaces`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LookupTypeAssemblyName { get { return new DBOColumnDef(XTypeConfig.TableDef, "LookupTypeAssemblyName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Standard-Implementation: Typename des Typs (Klasse), das den Lookup-Typ implementiert, ohne Namespace. Bsp. `BaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ConcreteStandardTypeName { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteStandardTypeName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// Standard-Implementation: Namespace des Typs (Klasse), das den Lookup-Typ implementiert, ohne den Namen des Typs. Bsp. `Kiss.BL.BA`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef ConcreteStandardTypeNamespace { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteStandardTypeNamespace", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Standard-Implementation: Name des Typs (Klasse), das den Lookup-Typ implementiert, ohne File Extension. Bsp. `Kiss.BL`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef ConcreteStandardTypeAssemblyName { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteStandardTypeAssemblyName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// Kundenspezifische Implementation: Typename des Typs (Klasse), das den Lookup-Typ implementiert, ohne Namespace. Bsp. `BaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ConcreteCustomTypeName { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteCustomTypeName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Kundenspezifische Implementation: Namespace des Typs (Klasse), das den Lookup-Typ implementiert, ohne den Namen des Typs. Bsp. `Kiss.BL.BA.ZH`
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ConcreteCustomTypeNamespace { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteCustomTypeNamespace", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// Kundenspezifische Implementation: Name des Typs (Klasse), das den Lookup-Typ implementiert, ohne File Extension. Bsp. `Kiss.BL`
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ConcreteCustomTypeAssemblyName { get { return new DBOColumnDef(XTypeConfig.TableDef, "ConcreteCustomTypeAssemblyName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// LOV InstanceScope: Singleton, PerRequest, PerThread
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>

public static DBOColumnDef InstanceScopeCode { get { return new DBOColumnDef(XTypeConfig.TableDef, "InstanceScopeCode", typeof(int), false, false, false, 4, false, "((1))", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XTypeConfigTS { get { return new DBOColumnDef(XTypeConfig.TableDef, "XTypeConfigTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Tabelle für KiSS Benutzer
/// </summary>

public static class XUser{
/// <summary>
/// Gets the table definition for XUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUser", "", true); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUser.TableDef, "UserID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ChiefID { get { return new DBOColumnDef(XUser.TableDef, "ChiefID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef PrimaryUserID { get { return new DBOColumnDef(XUser.TableDef, "PrimaryUserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef PermissionGroupID { get { return new DBOColumnDef(XUser.TableDef, "PermissionGroupID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef GrantPermGroupID { get { return new DBOColumnDef(XUser.TableDef, "GrantPermGroupID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Default Profil für die Dokumentgeneration.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(XUser.TableDef, "XProfileID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(XUser.TableDef, "ModulID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef SachbearbeiterID { get { return new DBOColumnDef(XUser.TableDef, "SachbearbeiterID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>

public static DBOColumnDef MitarbeiterNr { get { return new DBOColumnDef(XUser.TableDef, "MitarbeiterNr", typeof(string), false, false, false, 50, true, "", "PI"); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(XUser.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// [DefaultValue: ([dbo].[fnXGetUserRNDPwd](newid()))]
/// </summary>

public static DBOColumnDef PasswordHash { get { return new DBOColumnDef(XUser.TableDef, "PasswordHash", typeof(string), false, false, false, 200, true, "([dbo].[fnXGetUserRNDPwd](newid()))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FirstName { get { return new DBOColumnDef(XUser.TableDef, "FirstName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LastName { get { return new DBOColumnDef(XUser.TableDef, "LastName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortName { get { return new DBOColumnDef(XUser.TableDef, "ShortName", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsLocked { get { return new DBOColumnDef(XUser.TableDef, "IsLocked", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsUserAdmin { get { return new DBOColumnDef(XUser.TableDef, "IsUserAdmin", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Flag, ob Benutzer BIAG Super-Administrator ist und somit über alle Rechte verfügt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsUserBIAGAdmin { get { return new DBOColumnDef(XUser.TableDef, "IsUserBIAGAdmin", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef IsMandatsTraeger { get { return new DBOColumnDef(XUser.TableDef, "IsMandatsTraeger", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GenderCode { get { return new DBOColumnDef(XUser.TableDef, "GenderCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtstag { get { return new DBOColumnDef(XUser.TableDef, "Geburtstag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LanguageCode { get { return new DBOColumnDef(XUser.TableDef, "LanguageCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Standard Telefonnummer (wird für PI nicht benutzt, da spezifische Telefonnummern zur Verfügung stehen)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phone { get { return new DBOColumnDef(XUser.TableDef, "Phone", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneMobile { get { return new DBOColumnDef(XUser.TableDef, "PhoneMobile", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneOffice { get { return new DBOColumnDef(XUser.TableDef, "PhoneOffice", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhoneIntern { get { return new DBOColumnDef(XUser.TableDef, "PhoneIntern", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PhonePrivat { get { return new DBOColumnDef(XUser.TableDef, "PhonePrivat", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(XUser.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(XUser.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// Benutzerprofil (TODO: XProfileID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserProfileCode { get { return new DBOColumnDef(XUser.TableDef, "UserProfileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Funktion { get { return new DBOColumnDef(XUser.TableDef, "Funktion", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RoleTitleCode { get { return new DBOColumnDef(XUser.TableDef, "RoleTitleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef QualificationTitleCode { get { return new DBOColumnDef(XUser.TableDef, "QualificationTitleCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(XUser.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// Freitext 1
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1 { get { return new DBOColumnDef(XUser.TableDef, "Text1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// Freitext 2
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2 { get { return new DBOColumnDef(XUser.TableDef, "Text2", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JobPercentage { get { return new DBOColumnDef(XUser.TableDef, "JobPercentage", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HoursPerYearForCaseMgmt { get { return new DBOColumnDef(XUser.TableDef, "HoursPerYearForCaseMgmt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eintrittsdatum { get { return new DBOColumnDef(XUser.TableDef, "Eintrittsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Austrittsdatum { get { return new DBOColumnDef(XUser.TableDef, "Austrittsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LohntypCode { get { return new DBOColumnDef(XUser.TableDef, "LohntypCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostentraeger { get { return new DBOColumnDef(XUser.TableDef, "Kostentraeger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Spalte um weiter Kostenträger zu erfassen (Int komma separiert)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WeitereKostentraeger { get { return new DBOColumnDef(XUser.TableDef, "WeitereKostentraeger", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenart { get { return new DBOColumnDef(XUser.TableDef, "Kostenart", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag für die Stundenlohn- und Leistungsdaten-Schnittstelle. Erfasste Leistungen eines Benutzers mit BDEExport = 1 werden nicht über die Schnittstelle exportiert.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef KeinBDEExport { get { return new DBOColumnDef(XUser.TableDef, "KeinBDEExport", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigHerkunft { get { return new DBOColumnDef(XUser.TableDef, "MigHerkunft", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigMAKuerzel { get { return new DBOColumnDef(XUser.TableDef, "MigMAKuerzel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MigUserFix { get { return new DBOColumnDef(XUser.TableDef, "MigUserFix", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36Area { get { return new DBOColumnDef(XUser.TableDef, "visdat36Area", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36SourceFile { get { return new DBOColumnDef(XUser.TableDef, "visdat36SourceFile", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36ID { get { return new DBOColumnDef(XUser.TableDef, "visdat36ID", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef visdat36Name { get { return new DBOColumnDef(XUser.TableDef, "visdat36Name", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(XUser.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XUser.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XUser.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XUser.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XUser.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUserTS { get { return new DBOColumnDef(XUser.TableDef, "XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_Archive{
/// <summary>
/// Gets the table definition for XUser_Archive
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUser_Archive", "", false); } }


/// <summary>
/// Primärschlüssel für XUser_Archive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUser_Archive.TableDef, "UserID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// Primärschlüssel für XUser_Archive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ArchiveID { get { return new DBOColumnDef(XUser_Archive.TableDef, "ArchiveID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUser_ArchiveTS { get { return new DBOColumnDef(XUser_Archive.TableDef, "XUser_ArchiveTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_BDEUserGroup{
/// <summary>
/// Gets the table definition for XUser_BDEUserGroup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUser_BDEUserGroup", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUser_BDEUserGroup.TableDef, "UserID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef BDEUserGroupID { get { return new DBOColumnDef(XUser_BDEUserGroup.TableDef, "BDEUserGroupID", typeof(int), false, true, true, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUser_BDEUserGroupTS { get { return new DBOColumnDef(XUser_BDEUserGroup.TableDef, "XUser_BDEUserGroupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_UserGroup{
/// <summary>
/// Gets the table definition for XUser_UserGroup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUser_UserGroup", "", false); } }


/// <summary>
/// Primärschlüssel für XUser_UserGroup Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XUser_UserGroupID { get { return new DBOColumnDef(XUser_UserGroup.TableDef, "XUser_UserGroupID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUser_UserGroup_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUser_UserGroup.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUser_UserGroup_XUserGroup) => XUserGroup.UserGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserGroupID { get { return new DBOColumnDef(XUser_UserGroup.TableDef, "UserGroupID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUser_UserGroupTS { get { return new DBOColumnDef(XUser_UserGroup.TableDef, "XUser_UserGroupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Zwischentabelle (Many2Many), XUser und XDocTemplate
/// </summary>

public static class XUser_XDocTemplate{
/// <summary>
/// Gets the table definition for XUser_XDocTemplate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUser_XDocTemplate", "", false); } }


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XUser_XDocTemplateID { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "XUser_XDocTemplateID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XUser.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "UserID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel auf XDocTemplate (Dokument).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef DocTemplateID { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "DocTemplateID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUser_XDocTemplateTS { get { return new DBOColumnDef(XUser_XDocTemplate.TableDef, "XUser_XDocTemplateTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Benutzergruppen für die Zuweisung der Rechte zu Benutzern
/// </summary>

public static class XUserGroup{
/// <summary>
/// Gets the table definition for XUserGroup
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUserGroup", "", false); } }


/// <summary>
/// Primärschlüssel der Benutzergruppen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef UserGroupID { get { return new DBOColumnDef(XUserGroup.TableDef, "UserGroupID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Name der Benutzergruppe
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef UserGroupName { get { return new DBOColumnDef(XUserGroup.TableDef, "UserGroupName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// ID der Übersetzung für den Gruppenname (Wert in XLangText)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserGroupNameTID { get { return new DBOColumnDef(XUserGroup.TableDef, "UserGroupNameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Flag, ob eine Benutzergruppe nur von Administratoren eingesehen und bearbeitet werden kann
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef OnlyAdminVisible { get { return new DBOColumnDef(XUserGroup.TableDef, "OnlyAdminVisible", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// Optionale Beschreibung der Benutzergruppe
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Description { get { return new DBOColumnDef(XUserGroup.TableDef, "Description", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// ID der Übersetzung für die Beschreibung (Wert in XLangText)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DescriptionTID { get { return new DBOColumnDef(XUserGroup.TableDef, "DescriptionTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XUserGroup.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XUserGroup.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XUserGroup.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XUserGroup.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUserGroupTS { get { return new DBOColumnDef(XUserGroup.TableDef, "XUserGroupTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// </summary>

public static class XUserGroup_Right{
/// <summary>
/// Gets the table definition for XUserGroup_Right
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUserGroup_Right", "", false); } }


/// <summary>
/// Primärschlüssel für XUserGroup_Right Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef UserGroup_RightID { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "UserGroup_RightID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XUserGroup) => XUserGroup.UserGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserGroupID { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "UserGroupID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XRight) => XRight.RightID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef RightID { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "RightID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XClass) => XClass.XClassID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef XClassID { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "XClassID", typeof(System.Nullable<int>), false, true, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef ClassName { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "ClassName", typeof(string), false, true, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef QueryName { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "QueryName", typeof(string), false, true, false, 100, true, "", ""); } }


/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef MaskName { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "MaskName", typeof(string), false, true, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayInsert { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "MayInsert", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayUpdate { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "MayUpdate", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>

public static DBOColumnDef MayDelete { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "MayDelete", typeof(bool), false, false, false, 1, false, "((0))", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUserGroup_RightTS { get { return new DBOColumnDef(XUserGroup_Right.TableDef, "XUserGroup_RightTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: Table
/// Beinhaltet die Stundenansätze für die Benutzer
/// </summary>

public static class XUserStundenansatz{
/// <summary>
/// Gets the table definition for XUserStundenansatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("XUserStundenansatz", "", true); } }


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef XUserStundenansatzID { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "XUserStundenansatzID", typeof(int), true, false, true, 4, false, "", ""); } }


/// <summary>
/// Fremschlüssel auf XUser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "UserID", typeof(int), false, true, false, 4, false, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 1
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart1 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart1", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 2
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart2 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart2", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 3
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart3 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart3", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 4
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart4 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart4", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 5
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart5 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart5", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 6
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart6 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart6", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 7
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart7 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart7", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 8
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart8 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart8", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 9
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart9 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart9", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 10
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart10 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart10", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 11
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart11 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart11", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 12
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart12 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart12", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 13
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart13 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart13", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 14
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart14 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart14", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 15
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart15 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart15", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 16
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart16 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart16", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 17
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart17 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart17", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 18
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart18 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart18", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 19
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart19 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart19", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Stundenansatz der Lohnart 20
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart20 { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Lohnart20", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// Verweis auf HistoryVersion
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "(getdate())", ""); } }


/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUserStundenansatzTS { get { return new DBOColumnDef(XUserStundenansatz.TableDef, "XUserStundenansatzTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class AyKostenart{
/// <summary>
/// Gets the table definition for AyKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("AyKostenart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(AyKostenart.TableDef, "BgKostenartID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(AyKostenart.TableDef, "ModulID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(AyKostenart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(AyKostenart.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Quoting { get { return new DBOColumnDef(AyKostenart.TableDef, "Quoting", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(AyKostenart.TableDef, "BgSplittingArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaWVZeileCode { get { return new DBOColumnDef(AyKostenart.TableDef, "BaWVZeileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgKostenartTS { get { return new DBOColumnDef(AyKostenart.TableDef, "BgKostenartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class AyPositionsart{
/// <summary>
/// Gets the table definition for AyPositionsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("AyPositionsart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgPositionsartID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(AyPositionsart.TableDef, "ModulID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgGruppeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartCode { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgPositionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID_CopyOf { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgPositionsartID_CopyOf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(AyPositionsart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HilfeText { get { return new DBOColumnDef(AyPositionsart.TableDef, "HilfeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(AyPositionsart.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmKontoCode { get { return new DBOColumnDef(AyPositionsart.TableDef, "NrmKontoCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwaltungSD_Default { get { return new DBOColumnDef(AyPositionsart.TableDef, "VerwaltungSD_Default", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Spezkonto { get { return new DBOColumnDef(AyPositionsart.TableDef, "Spezkonto", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ProPerson { get { return new DBOColumnDef(AyPositionsart.TableDef, "ProPerson", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ProUE { get { return new DBOColumnDef(AyPositionsart.TableDef, "ProUE", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Masterbudget_EditMask { get { return new DBOColumnDef(AyPositionsart.TableDef, "Masterbudget_EditMask", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monatsbudget_EditMask { get { return new DBOColumnDef(AyPositionsart.TableDef, "Monatsbudget_EditMask", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef sqlRichtlinie { get { return new DBOColumnDef(AyPositionsart.TableDef, "sqlRichtlinie", typeof(string), false, false, false, 3000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VarName { get { return new DBOColumnDef(AyPositionsart.TableDef, "VarName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Verrechenbar { get { return new DBOColumnDef(AyPositionsart.TableDef, "Verrechenbar", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(AyPositionsart.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(AyPositionsart.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(AyPositionsart.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(AyPositionsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(AyPositionsart.TableDef, "System", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionsartTS { get { return new DBOColumnDef(AyPositionsart.TableDef, "BgPositionsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class FaFall{
/// <summary>
/// Gets the table definition for FaFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaFall", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaFallID { get { return new DBOColumnDef(FaFall.TableDef, "FaFallID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(FaFall.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaFall.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaFall.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaFall.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class FaFallPerson{
/// <summary>
/// Gets the table definition for FaFallPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("FaFallPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaFallPersonID { get { return new DBOColumnDef(FaFallPerson.TableDef, "FaFallPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaFallID { get { return new DBOColumnDef(FaFallPerson.TableDef, "FaFallID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(FaFallPerson.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(FaFallPerson.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(FaFallPerson.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class viewDauerauftrag{
/// <summary>
/// Gets the table definition for viewDauerauftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("viewDauerauftrag", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbDauerauftragID { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "FbDauerauftragID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "SollKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "HabenKtoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbZahlungswegID { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "FbZahlungswegID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PeriodizitaetCode { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "PeriodizitaetCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WochentagCode { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "WochentagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monatstag1 { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Monatstag1", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monatstag2 { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Monatstag2", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef VorWochenende { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "VorWochenende", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Status", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbDauerauftragTS { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "FbDauerauftragTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerauftragDokID { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "DauerauftragDokID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef AuftragStatus { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "AuftragStatus", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LetzteAusfuehrung { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "LetzteAusfuehrung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef AuftragPeriodizitaet { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "AuftragPeriodizitaet", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "Mandant", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoName { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "HabenKtoName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoName { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "SollKtoName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef PlzOrt { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "PlzOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(viewDauerauftrag.TableDef, "FbTeamID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class viewDTAFbBuchungen{
/// <summary>
/// Gets the table definition for viewDTAFbBuchungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("viewDTAFbBuchungen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "FbBuchungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Buchungsdatum { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Buchungsdatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbKontoId { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "FbKontoId", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbDTAZugangID { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "FbDTAZugangID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BelegNr", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBAN { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "IBAN", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DTABankId { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "DTABankId", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>

public static DBOColumnDef VertragNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "VertragNr", typeof(string), false, false, false, 20, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungsArtCode { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "ZahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Mandant", typeof(string), false, false, false, 201, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KontoNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef KontoName { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KontoName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef DTAKontoNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "DTAKontoNr", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef DTAZugang { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "DTAZugang", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 342]
/// </summary>

public static DBOColumnDef Kreditor { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Kreditor", typeof(string), false, false, false, 342, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorName { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KreditorName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorStrasse { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KreditorStrasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorZusatz { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KreditorZusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorPLZ { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KreditorPLZ", typeof(string), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorOrt { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "KreditorOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankName { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BankName", typeof(string), false, false, false, 70, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankStrasse { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BankStrasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankPLZ { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BankPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankOrt { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "BankOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClearingNr { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "ClearingNr", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef StatusText { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "StatusText", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "Status", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbDTAJournalID { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "FbDTAJournalID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef DTAStatusEdit { get { return new DBOColumnDef(viewDTAFbBuchungen.TableDef, "DTAStatusEdit", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class viewFbBuchungCode{
/// <summary>
/// Gets the table definition for viewFbBuchungCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("viewFbBuchungCode", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbBuchungCodeID { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "FbBuchungCodeID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "Code", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "SollKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "HabenKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "Text", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBuchungCodeTS { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "FbBuchungCodeTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoName { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "SollKtoName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoName { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "HabenKtoName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "Mandant", typeof(string), false, false, false, 202, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlzOrt { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "PlzOrt", typeof(string), false, false, false, 61, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MTLogon { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "MTLogon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MTName { get { return new DBOColumnDef(viewFbBuchungCode.TableDef, "MTName", typeof(string), false, false, false, 402, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class viewFbBuchungen{
/// <summary>
/// Gets the table definition for viewFbBuchungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("viewFbBuchungen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbBuchungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FbPeriodeID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbPeriodeID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BuchungTypCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BuchungTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Code", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BelegNr", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BelegNrPos { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BelegNrPos", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BuchungsDatum { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BuchungsDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "SollKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "HabenKtoNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsfrist { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Zahlungsfrist", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BuchungStatusCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BuchungStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbDauerauftragID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbDauerauftragID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfassungsDatum { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ErfassungsDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbZahlungswegID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbZahlungswegID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNr { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BankKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBAN { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "IBAN", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungsArtCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ZahlungsArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsgrund { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Zahlungsgrund", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Name", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Zusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Strasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "PLZ", typeof(string), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef FbBuchungTS { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbBuchungTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef SollKtoName { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "SollKtoName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef HabenKtoName { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "HabenKtoName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SollKontoTypCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "SollKontoTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HabenKontoTypCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "HabenKontoTypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Mandant", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef PlzOrt { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "PlzOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MTLogon { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "MTLogon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef MTName { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "MTName", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfLogon { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ErfLogon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef ErfName { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "ErfName", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Status { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "Status", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StatusText { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "StatusText", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PeriodeStatusCode { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "PeriodeStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbTeamID { get { return new DBOColumnDef(viewFbBuchungen.TableDef, "FbTeamID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaAdressate{
/// <summary>
/// Gets the table definition for vwBaAdressate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBaAdressate", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(vwBaAdressate.TableDef, "ID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef TypCode { get { return new DBOColumnDef(vwBaAdressate.TableDef, "TypCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// </summary>

public static DBOColumnDef Typ { get { return new DBOColumnDef(vwBaAdressate.TableDef, "Typ", typeof(string), false, false, false, 11, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 601]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwBaAdressate.TableDef, "Name", typeof(string), false, false, false, 601, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(vwBaAdressate.TableDef, "Strasse", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(vwBaAdressate.TableDef, "Ort", typeof(string), false, false, false, 61, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaKlientensystemPerson{
/// <summary>
/// Gets the table definition for vwBaKlientensystemPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBaKlientensystemPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaFallID { get { return new DBOColumnDef(vwBaKlientensystemPerson.TableDef, "FaFallID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwBaKlientensystemPerson.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(vwBaKlientensystemPerson.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(vwBaKlientensystemPerson.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaZahlungsweg{
/// <summary>
/// Gets the table definition for vwBaZahlungsweg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBaZahlungsweg", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaZahlungswegID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "DatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzahlungsscheinCode { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "EinzahlungsscheinCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaBankID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNummer { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BankKontoNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBANNummer { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "IBANNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostKontoNummer { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "PostKontoNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseName { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseName", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseName2 { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseName2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseStrasse { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseStrasse", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseHausNr { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseHausNr", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePostfach { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdressePostfach", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressePLZ { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdressePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseOrt { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseOrt", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseLandCode { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "AdresseLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaZahlwegModulStdCodes { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaZahlwegModulStdCodes", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaZahlungswegTS { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "BaZahlungswegTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "Name", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "Adresse", typeof(string), false, false, false, 633, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Empfaenger { get { return new DBOColumnDef(vwBaZahlungsweg.TableDef, "Empfaenger", typeof(string), false, false, false, 1135, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBFSDossier{
/// <summary>
/// Gets the table definition for vwBFSDossier
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBFSDossier", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwBFSDossier.TableDef, "FaLeistungID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FalltraegerID { get { return new DBOColumnDef(vwBFSDossier.TableDef, "FalltraegerID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBgPosition{
/// <summary>
/// Gets the table definition for vwBgPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBgPosition", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID_Parent { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionID_Parent", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID_CopyOf { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionID_CopyOf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgBudgetID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShBelegID { get { return new DBOColumnDef(vwBgPosition.TableDef, "ShBelegID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(vwBgPosition.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Reduktion { get { return new DBOColumnDef(vwBgPosition.TableDef, "Reduktion", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Abzug { get { return new DBOColumnDef(vwBgPosition.TableDef, "Abzug", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragEff { get { return new DBOColumnDef(vwBgPosition.TableDef, "BetragEff", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef MaxBeitragSD { get { return new DBOColumnDef(vwBgPosition.TableDef, "MaxBeitragSD", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(vwBgPosition.TableDef, "Buchungstext", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef VerwaltungSD { get { return new DBOColumnDef(vwBgPosition.TableDef, "VerwaltungSD", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(vwBgPosition.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(vwBgPosition.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(vwBgPosition.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwBgPosition.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DebitorBaPersonID { get { return new DBOColumnDef(vwBgPosition.TableDef, "DebitorBaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeVon { get { return new DBOColumnDef(vwBgPosition.TableDef, "VerwPeriodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeBis { get { return new DBOColumnDef(vwBgPosition.TableDef, "VerwPeriodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaelligAm { get { return new DBOColumnDef(vwBgPosition.TableDef, "FaelligAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RechnungDatum { get { return new DBOColumnDef(vwBgPosition.TableDef, "RechnungDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBewilligungStatusCode { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgBewilligungStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value1 { get { return new DBOColumnDef(vwBgPosition.TableDef, "Value1", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value2 { get { return new DBOColumnDef(vwBgPosition.TableDef, "Value2", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value3 { get { return new DBOColumnDef(vwBgPosition.TableDef, "Value3", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltUserID { get { return new DBOColumnDef(vwBgPosition.TableDef, "ErstelltUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstelltDatum { get { return new DBOColumnDef(vwBgPosition.TableDef, "ErstelltDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertUserID { get { return new DBOColumnDef(vwBgPosition.TableDef, "MutiertUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MutiertDatum { get { return new DBOColumnDef(vwBgPosition.TableDef, "MutiertDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionTS { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID_AutoForderung { get { return new DBOColumnDef(vwBgPosition.TableDef, "BgPositionID_AutoForderung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragFinanzplan { get { return new DBOColumnDef(vwBgPosition.TableDef, "BetragFinanzplan", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBudget { get { return new DBOColumnDef(vwBgPosition.TableDef, "BetragBudget", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragRechnung { get { return new DBOColumnDef(vwBgPosition.TableDef, "BetragRechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwBgPositionFinanzplan{
/// <summary>
/// Gets the table definition for vwBgPositionFinanzplan
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwBgPositionFinanzplan", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BgFinanzplanID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BgBudgetID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BgPositionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Reduktion { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "Reduktion", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Abzug { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "Abzug", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwBgPositionFinanzplan.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwInstitution{
/// <summary>
/// Gets the table definition for vwInstitution
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwInstitution", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwInstitution.TableDef, "BaInstitutionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(vwInstitution.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionNr { get { return new DBOColumnDef(vwInstitution.TableDef, "InstitutionNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionArtCode { get { return new DBOColumnDef(vwInstitution.TableDef, "BaInstitutionArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(vwInstitution.TableDef, "Aktiv", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Debitor { get { return new DBOColumnDef(vwInstitution.TableDef, "Debitor", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Kreditor { get { return new DBOColumnDef(vwInstitution.TableDef, "Kreditor", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(vwInstitution.TableDef, "KeinSerienbrief", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(vwInstitution.TableDef, "ManuelleAnrede", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(vwInstitution.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(vwInstitution.TableDef, "Briefanrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(vwInstitution.TableDef, "Titel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwInstitution.TableDef, "Name", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwInstitution.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(vwInstitution.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(vwInstitution.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon2 { get { return new DBOColumnDef(vwInstitution.TableDef, "Telefon2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon3 { get { return new DBOColumnDef(vwInstitution.TableDef, "Telefon3", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwInstitution.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwInstitution.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Homepage { get { return new DBOColumnDef(vwInstitution.TableDef, "Homepage", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(vwInstitution.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(vwInstitution.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(vwInstitution.TableDef, "Creator", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(vwInstitution.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(vwInstitution.TableDef, "Modifier", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(vwInstitution.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaInstitutionTS { get { return new DBOColumnDef(vwInstitution.TableDef, "BaInstitutionTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwInstitution.TableDef, "NameVorname", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(vwInstitution.TableDef, "Adresse", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AdresseMehrzeilig { get { return new DBOColumnDef(vwInstitution.TableDef, "AdresseMehrzeilig", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>

public static DBOColumnDef OrtStrasse { get { return new DBOColumnDef(vwInstitution.TableDef, "OrtStrasse", typeof(string), false, false, false, 163, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(vwInstitution.TableDef, "Zusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressZusatz { get { return new DBOColumnDef(vwInstitution.TableDef, "AdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(vwInstitution.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(vwInstitution.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StrasseHausNr { get { return new DBOColumnDef(vwInstitution.TableDef, "StrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(vwInstitution.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(vwInstitution.TableDef, "PostfachOhneNr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachTextD { get { return new DBOColumnDef(vwInstitution.TableDef, "PostfachTextD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(vwInstitution.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(vwInstitution.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef PLZOrt { get { return new DBOColumnDef(vwInstitution.TableDef, "PLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(vwInstitution.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(vwInstitution.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Land { get { return new DBOColumnDef(vwInstitution.TableDef, "Land", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(vwInstitution.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(vwInstitution.TableDef, "BaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaFreigabeStatusCode { get { return new DBOColumnDef(vwInstitution.TableDef, "BaFreigabeStatusCode", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwIxBDELeistung_BDELeistungsart_AuswDLCode{
/// <summary>
/// Gets the table definition for vwIxBDELeistung_BDELeistungsart_AuswDLCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwIxBDELeistung_BDELeistungsart_AuswDLCode", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwIxBDELeistung_BDELeistungsart_AuswDLCode.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(vwIxBDELeistung_BDELeistungsart_AuswDLCode.TableDef, "Datum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerSUM { get { return new DBOColumnDef(vwIxBDELeistung_BDELeistungsart_AuswDLCode.TableDef, "DauerSUM", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuswDienstleistungCode { get { return new DBOColumnDef(vwIxBDELeistung_BDELeistungsart_AuswDLCode.TableDef, "AuswDienstleistungCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIGINT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef cBig { get { return new DBOColumnDef(vwIxBDELeistung_BDELeistungsart_AuswDLCode.TableDef, "cBig", typeof(System.Nullable<long>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwKreditor{
/// <summary>
/// Gets the table definition for vwKreditor
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwKreditor", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaZahlungswegID { get { return new DBOColumnDef(vwKreditor.TableDef, "BaZahlungswegID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ZahlungswegDatumVon { get { return new DBOColumnDef(vwKreditor.TableDef, "ZahlungswegDatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungswegDatumBis { get { return new DBOColumnDef(vwKreditor.TableDef, "ZahlungswegDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzahlungsscheinCode { get { return new DBOColumnDef(vwKreditor.TableDef, "EinzahlungsscheinCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankKontoNummer { get { return new DBOColumnDef(vwKreditor.TableDef, "BankKontoNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IBANNummer { get { return new DBOColumnDef(vwKreditor.TableDef, "IBANNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostKontoNummer { get { return new DBOColumnDef(vwKreditor.TableDef, "PostKontoNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReferenzNummer { get { return new DBOColumnDef(vwKreditor.TableDef, "ReferenzNummer", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(vwKreditor.TableDef, "BaBankID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankName { get { return new DBOColumnDef(vwKreditor.TableDef, "BankName", typeof(string), false, false, false, 70, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankZusatz { get { return new DBOColumnDef(vwKreditor.TableDef, "BankZusatz", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankStrasse { get { return new DBOColumnDef(vwKreditor.TableDef, "BankStrasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankPLZ { get { return new DBOColumnDef(vwKreditor.TableDef, "BankPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "BankOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankClearingNr { get { return new DBOColumnDef(vwKreditor.TableDef, "BankClearingNr", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankPCKontoNr { get { return new DBOColumnDef(vwKreditor.TableDef, "BankPCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankGueltigAb { get { return new DBOColumnDef(vwKreditor.TableDef, "BankGueltigAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BankLandCode { get { return new DBOColumnDef(vwKreditor.TableDef, "BankLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwKreditor.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionName { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionName", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaFreigabeStatusCode { get { return new DBOColumnDef(vwKreditor.TableDef, "BaFreigabeStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionAdresse { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionAdresse", typeof(string), false, false, false, 633, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionOrtStrasse { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionOrtStrasse", typeof(string), false, false, false, 163, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionAdressZusatz { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionAdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionStrasse { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionHausNr { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionStrasseHausNr { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionStrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionPostfach { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionPostfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionPLZ { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionPLZOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionPLZOrt", typeof(string), false, false, false, 61, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionKanton { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionLand { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionLand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionBaLandID { get { return new DBOColumnDef(vwKreditor.TableDef, "InstitutionBaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwKreditor.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonName { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonVorname { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonVorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonNameVorname { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonNameVorname", typeof(string), false, false, false, 202, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonAdresse { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonAdresse", typeof(string), false, false, false, 633, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonAdressZusatz { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonAdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonStrasse { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonHausNr { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonStrasseHausNr { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonStrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonPostfach { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonPostfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonPLZ { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonPLZOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonPLZOrt", typeof(string), false, false, false, 61, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonKanton { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonLand { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonLand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersonBaLandID { get { return new DBOColumnDef(vwKreditor.TableDef, "PersonBaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kreditor { get { return new DBOColumnDef(vwKreditor.TableDef, "Kreditor", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorMehrZeilig { get { return new DBOColumnDef(vwKreditor.TableDef, "KreditorMehrZeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorEinzeilig { get { return new DBOColumnDef(vwKreditor.TableDef, "KreditorEinzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 209]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsweg { get { return new DBOColumnDef(vwKreditor.TableDef, "Zahlungsweg", typeof(string), false, false, false, 209, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 354]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZahlungswegMehrZeilig { get { return new DBOColumnDef(vwKreditor.TableDef, "ZahlungswegMehrZeilig", typeof(string), false, false, false, 354, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(vwKreditor.TableDef, "PCKontoNr", typeof(string), false, false, false, 11, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 850]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZusatzInfo { get { return new DBOColumnDef(vwKreditor.TableDef, "ZusatzInfo", typeof(string), false, false, false, 850, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IsActive { get { return new DBOColumnDef(vwKreditor.TableDef, "IsActive", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtName { get { return new DBOColumnDef(vwKreditor.TableDef, "BeguenstigtName", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtName2 { get { return new DBOColumnDef(vwKreditor.TableDef, "BeguenstigtName2", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtStrasse { get { return new DBOColumnDef(vwKreditor.TableDef, "BeguenstigtStrasse", typeof(string), false, false, false, 35, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtPLZ { get { return new DBOColumnDef(vwKreditor.TableDef, "BeguenstigtPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeguenstigtOrt { get { return new DBOColumnDef(vwKreditor.TableDef, "BeguenstigtOrt", typeof(string), false, false, false, 25, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwPerson{
/// <summary>
/// Gets the table definition for vwPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwPerson.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(vwPerson.TableDef, "Titel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwPerson.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FruehererName { get { return new DBOColumnDef(vwPerson.TableDef, "FruehererName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwPerson.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname2 { get { return new DBOColumnDef(vwPerson.TableDef, "Vorname2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(vwPerson.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sterbedatum { get { return new DBOColumnDef(vwPerson.TableDef, "Sterbedatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(vwPerson.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(vwPerson.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HaushaltVersicherungsNummer { get { return new DBOColumnDef(vwPerson.TableDef, "HaushaltVersicherungsNummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NNummer { get { return new DBOColumnDef(vwPerson.TableDef, "NNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZEMISNummer { get { return new DBOColumnDef(vwPerson.TableDef, "ZEMISNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFFNummer { get { return new DBOColumnDef(vwPerson.TableDef, "BFFNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErteilungVA { get { return new DBOColumnDef(vwPerson.TableDef, "ErteilungVA", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(vwPerson.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KonfessionCode { get { return new DBOColumnDef(vwPerson.TableDef, "KonfessionCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandCode { get { return new DBOColumnDef(vwPerson.TableDef, "ZivilstandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandDatum { get { return new DBOColumnDef(vwPerson.TableDef, "ZivilstandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeCode { get { return new DBOColumnDef(vwPerson.TableDef, "HeimatgemeindeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeCodes { get { return new DBOColumnDef(vwPerson.TableDef, "HeimatgemeindeCodes", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatgemeindeBaGemeindeID { get { return new DBOColumnDef(vwPerson.TableDef, "HeimatgemeindeBaGemeindeID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NationalitaetCode { get { return new DBOColumnDef(vwPerson.TableDef, "NationalitaetCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusCode { get { return new DBOColumnDef(vwPerson.TableDef, "AuslaenderStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuslaenderStatusGueltigBis { get { return new DBOColumnDef(vwPerson.TableDef, "AuslaenderStatusGueltigBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InGemeindeSeit { get { return new DBOColumnDef(vwPerson.TableDef, "InGemeindeSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef InCHSeitGeburt { get { return new DBOColumnDef(vwPerson.TableDef, "InCHSeitGeburt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ImKantonSeit { get { return new DBOColumnDef(vwPerson.TableDef, "ImKantonSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ImKantonSeitGeburt { get { return new DBOColumnDef(vwPerson.TableDef, "ImKantonSeitGeburt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_P { get { return new DBOColumnDef(vwPerson.TableDef, "Telefon_P", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon_G { get { return new DBOColumnDef(vwPerson.TableDef, "Telefon_G", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MobilTel { get { return new DBOColumnDef(vwPerson.TableDef, "MobilTel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwPerson.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwPerson.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(vwPerson.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Unterstuetzt { get { return new DBOColumnDef(vwPerson.TableDef, "Unterstuetzt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Fiktiv { get { return new DBOColumnDef(vwPerson.TableDef, "Fiktiv", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Testperson { get { return new DBOColumnDef(vwPerson.TableDef, "Testperson", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NavigatorZusatz { get { return new DBOColumnDef(vwPerson.TableDef, "NavigatorZusatz", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(vwPerson.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BaPersonTS { get { return new DBOColumnDef(vwPerson.TableDef, "BaPersonTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(vwPerson.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtPLZ { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrt { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtKanton { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtOrtCode { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtLandCode { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtDatum { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugKtSeitGeburt { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugKtSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdePLZ { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrt { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeKanton { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeOrtCode { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeLandCode { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeDatum { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugGdeSeitGeburt { get { return new DBOColumnDef(vwPerson.TableDef, "ZuzugGdeSeitGeburt", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzPLZ { get { return new DBOColumnDef(vwPerson.TableDef, "UntWohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzOrt { get { return new DBOColumnDef(vwPerson.TableDef, "UntWohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzKanton { get { return new DBOColumnDef(vwPerson.TableDef, "UntWohnsitzKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzOrtCode { get { return new DBOColumnDef(vwPerson.TableDef, "UntWohnsitzOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UntWohnsitzLandCode { get { return new DBOColumnDef(vwPerson.TableDef, "UntWohnsitzLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugPLZ { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrt { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugKanton { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrtCode { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugOrtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugLandCode { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugLandCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugDatum { get { return new DBOColumnDef(vwPerson.TableDef, "WegzugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(vwPerson.TableDef, "KeinSerienbrief", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(vwPerson.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(vwPerson.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(vwPerson.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(vwPerson.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwPerson.TableDef, "NameVorname", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>

public static DBOColumnDef VornameName { get { return new DBOColumnDef(vwPerson.TableDef, "VornameName", typeof(string), false, false, false, 201, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Alter { get { return new DBOColumnDef(vwPerson.TableDef, "Alter", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AlterMortal { get { return new DBOColumnDef(vwPerson.TableDef, "AlterMortal", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Nationalitaet { get { return new DBOColumnDef(vwPerson.TableDef, "Nationalitaet", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NationalitaetFR { get { return new DBOColumnDef(vwPerson.TableDef, "NationalitaetFR", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NationalitaetIT { get { return new DBOColumnDef(vwPerson.TableDef, "NationalitaetIT", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 103]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Heimatort { get { return new DBOColumnDef(vwPerson.TableDef, "Heimatort", typeof(string), false, false, false, 103, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzBaAdresseID { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzBaAdresseID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef Wohnsitz { get { return new DBOColumnDef(vwPerson.TableDef, "Wohnsitz", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef WohnsitzMehrzeilig { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzMehrzeilig", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzAdressZusatz { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzAdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzStrasse { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzHausNr { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzStrasseHausNr { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzStrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfach { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzPostfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfachOhneNr { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzPostfachOhneNr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfachD { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzPostfachD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPLZ { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzOrt { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef WohnsitzPLZOrt { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzKanton { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzLand { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzLand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzOrtschaftCode { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzOrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzBaLandID { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzBaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzBemerkung { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzWohnStatusCode { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzWohnStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzWohnungsgroesseCode { get { return new DBOColumnDef(vwPerson.TableDef, "WohnsitzWohnungsgroesseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltBaAdresseID { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltBaAdresseID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 835]
/// </summary>

public static DBOColumnDef Aufenthalt { get { return new DBOColumnDef(vwPerson.TableDef, "Aufenthalt", typeof(string), false, false, false, 835, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 835]
/// </summary>

public static DBOColumnDef AufenthaltMehrzeilig { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltMehrzeilig", typeof(string), false, false, false, 835, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltAdressZusatz { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltAdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltStrasse { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltHausNr { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltStrasseHausNr { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltStrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfach { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltPostfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfachOhneNr { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltPostfachOhneNr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfachD { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltPostfachD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPLZ { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltOrt { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef AufenthaltPLZOrt { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltKanton { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltLand { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltLand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltOrtschaftCode { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltOrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltBaLandID { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltBaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltBemerkung { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnStatusCode { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltWohnStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnungsgroesseCode { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltWohnungsgroesseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltBaInstitutionID { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltBaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltInstitutionName { get { return new DBOColumnDef(vwPerson.TableDef, "AufenthaltInstitutionName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SichtbarSDFlag { get { return new DBOColumnDef(vwPerson.TableDef, "SichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PersonSichtbarSDFlag { get { return new DBOColumnDef(vwPerson.TableDef, "PersonSichtbarSDFlag", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerstaendigungSprachCode { get { return new DBOColumnDef(vwPerson.TableDef, "VerstaendigungSprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InCHseit { get { return new DBOColumnDef(vwPerson.TableDef, "InCHseit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CAusweisDatum { get { return new DBOColumnDef(vwPerson.TableDef, "CAusweisDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(vwPerson.TableDef, "Anrede", typeof(string), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwPersonSimple{
/// <summary>
/// Gets the table definition for vwPersonSimple
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwPersonSimple", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwPersonSimple.TableDef, "BaPersonID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwPersonSimple.TableDef, "NameVorname", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(vwPersonSimple.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(vwPersonSimple.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(vwPersonSimple.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwShMassendruckPapierverfuegung{
/// <summary>
/// Gets the table definition for vwShMassendruckPapierverfuegung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwShMassendruckPapierverfuegung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "BgBudgetID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "Monat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "KbBuchungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef SAR { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "SAR", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef Klient { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "Klient", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 81]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BudgetMonat { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "BudgetMonat", typeof(string), false, false, false, 81, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Intern { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "Intern", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SelPrint { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "SelPrint", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgFinanzplanID { get { return new DBOColumnDef(vwShMassendruckPapierverfuegung.TableDef, "BgFinanzplanID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAbklPhasen{
/// <summary>
/// Gets the table definition for vwTmAbklPhasen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmAbklPhasen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaAKPhasenID { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "KaAKPhasenID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef IstIntake { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "IstIntake", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fragestellungen { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "Fragestellungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundDossier { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "GrundDossier", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IntegBeurteilung { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "IntegBeurteilung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumIntegBeurteilung { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "DatumIntegBeurteilung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef KursDatumBis { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "KursDatumBis", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>

public static DBOColumnDef KursDatumVon { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "KursDatumVon", typeof(string), false, false, false, 15, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phase { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "Phase", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>

public static DBOColumnDef PhaseDatum { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "PhaseDatum", typeof(string), false, false, false, 30, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rueckfragen { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "Rueckfragen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kursnummer { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "Kursnummer", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzIn { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "EinsatzIn", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVon { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "EinsatzVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzBis { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "EinsatzBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gespraechtstermin { get { return new DBOColumnDef(vwTmAbklPhasen.TableDef, "Gespraechtstermin", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAdressat{
/// <summary>
/// Gets the table definition for vwTmAdressat
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmAdressat", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaDokumenteID { get { return new DBOColumnDef(vwTmAdressat.TableDef, "FaDokumenteID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 126]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeehrteFrauHerr { get { return new DBOColumnDef(vwTmAdressat.TableDef, "GeehrteFrauHerr", typeof(string), false, false, false, 126, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErsteZeile { get { return new DBOColumnDef(vwTmAdressat.TableDef, "ErsteZeile", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1237]
/// </summary>

public static DBOColumnDef AdresseMehrzeilig { get { return new DBOColumnDef(vwTmAdressat.TableDef, "AdresseMehrzeilig", typeof(string), false, false, false, 1237, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(vwTmAdressat.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(vwTmAdressat.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZOrt { get { return new DBOColumnDef(vwTmAdressat.TableDef, "PLZOrt", typeof(string), false, false, false, 61, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(vwTmAdressat.TableDef, "Strasse", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatzzeile { get { return new DBOColumnDef(vwTmAdressat.TableDef, "Zusatzzeile", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwTmAdressat.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAllgemein{
/// <summary>
/// Gets the table definition for vwTmAllgemein
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmAllgemein", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaIntegBildungID { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "KaIntegBildungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kursabschluss { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "Kursabschluss", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>

public static DBOColumnDef Kursaustritt { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "Kursaustritt", typeof(string), false, false, false, 30, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>

public static DBOColumnDef Kurseintritt { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "Kurseintritt", typeof(string), false, false, false, 30, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kursname { get { return new DBOColumnDef(vwTmAllgemein.TableDef, "Kursname", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmBDEZLEUebersicht{
/// <summary>
/// Gets the table definition for vwTmBDEZLEUebersicht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmBDEZLEUebersicht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatJahrText { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "MonatJahrText", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PensumProzent { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "PensumProzent", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollArbeitszeitProTag { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "SollArbeitszeitProTag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZIstArbeitszeitProMonat { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSollArbeitszeitProMonat { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZSollArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZMonatsSaldo { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZMonatsSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVorjahr { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVormonate { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZUebertragVormonate", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZKorrekturen { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZAusbezahlteUeberstunden { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZAusbezahlteUeberstunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSaldo { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "GZSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SLIstArbeitszeitProMonat { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "SLIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienUebertragVorjahr { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienAnspruchProJahr { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienAnspruchProJahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBisherBezogen { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienBisherBezogen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienZugabenKuerzungen { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienZugabenKuerzungen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienKorrekturen { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienSaldo { get { return new DBOColumnDef(vwTmBDEZLEUebersicht.TableDef, "FerienSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmErblasser{
/// <summary>
/// Gets the table definition for vwTmErblasser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmErblasser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmErblasser.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNr { get { return new DBOColumnDef(vwTmErblasser.TableDef, "AHVNr", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DerDes { get { return new DBOColumnDef(vwTmErblasser.TableDef, "DerDes", typeof(System.Nullable<char>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DerDesBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "DerDesBesch", typeof(System.Nullable<char>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>

public static DBOColumnDef DieDer { get { return new DBOColumnDef(vwTmErblasser.TableDef, "DieDer", typeof(string), false, false, false, 7, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>

public static DBOColumnDef DieDerBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "DieDerBesch", typeof(string), false, false, false, 7, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Todesdatum { get { return new DBOColumnDef(vwTmErblasser.TableDef, "Todesdatum", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesdatumBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "TodesdatumBesch", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TodesdatumOderBereich { get { return new DBOColumnDef(vwTmErblasser.TableDef, "TodesdatumOderBereich", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Todesort { get { return new DBOColumnDef(vwTmErblasser.TableDef, "Todesort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 182]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserAdresseEinzeln { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserAdresseEinzeln", typeof(string), false, false, false, 182, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 182]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserAdresseEinzelnBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserAdresseEinzelnBesch", typeof(string), false, false, false, 182, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserAnrede { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserAnrede", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserAnredeBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserAnredeBesch", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserElternnamen { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserElternnamen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserElternnamenBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserElternnamenBesch", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ErblasserFamilienNamen { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserFamilienNamen", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ErblasserFamilienNamenBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserFamilienNamenBesch", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserGeburtsdatum { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserGeburtsdatum", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserGeburtsdatumBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserGeburtsdatumBesch", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserHeimatorte { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserHeimatorte", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserHeimatorteBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserHeimatorteBesch", typeof(string), false, false, false, 150, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ErblasserVornamen { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserVornamen", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ErblasserVornamenBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserVornamenBesch", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserZivilstand { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserZivilstand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserZivilstandBesch { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserZivilstandBesch", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef lasserLasserin { get { return new DBOColumnDef(vwTmErblasser.TableDef, "lasserLasserin", typeof(string), false, false, false, 11, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 929]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserInfo1 { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserInfo1", typeof(string), false, false, false, 929, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 797]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserInfo2 { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserInfo2", typeof(string), false, false, false, 797, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 696]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserInfo3 { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserInfo3", typeof(string), false, false, false, 696, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 602]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErblasserInfo4 { get { return new DBOColumnDef(vwTmErblasser.TableDef, "ErblasserInfo4", typeof(string), false, false, false, 602, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmFaAktennotizen{
/// <summary>
/// Gets the table definition for vwTmFaAktennotizen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmFaAktennotizen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaAktennotizID { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "FaAktennotizID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "ID", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Datum", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dauer { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Dauer", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zeit { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Zeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktart { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Kontaktart", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GespraechsStatus { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "GespraechsStatus", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gespraechstyp { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Gespraechstyp", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktpartner { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Kontaktpartner", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AlimentenstelleTyp { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "AlimentenstelleTyp", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Stichwort", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltMitFmt { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "InhaltMitFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltOhneFmt { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "InhaltOhneFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Themen { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Themen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Vertraulich { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Vertraulich", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BesprechungThema1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThema1", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BesprechungThema2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThema2", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BesprechungThema3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThema3", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BesprechungThema4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThema4", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThemaText1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThemaText2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThemaText3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungThemaText4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungThemaText4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZiel1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZiel2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZiel3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZiel4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZiel4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZielGrad1", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZielGrad2", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZielGrad3", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesprechungZielGrad4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "BesprechungZielGrad4", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Pendenz1", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Pendenz2", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Pendenz3", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Pendenz4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "Pendenz4", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PendenzErledigt1 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "PendenzErledigt1", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PendenzErledigt2 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "PendenzErledigt2", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PendenzErledigt3 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "PendenzErledigt3", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PendenzErledigt4 { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "PendenzErledigt4", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserLogin { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserLogin", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserNachname { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserNachname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserVorname { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserKuerzel { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserKuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserNameVorname { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserNameVorname", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserNameVornameOhneKomma { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserNameVornameOhneKomma", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserVornameName { get { return new DBOColumnDef(vwTmFaAktennotizen.TableDef, "UserVornameName", typeof(string), false, false, false, 401, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmGvGesuch{
/// <summary>
/// Gets the table definition for vwTmGvGesuch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmGvGesuch", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GvGesuchID { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "GvGesuchID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef GesuchsDatum { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "GesuchsDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// </summary>

public static DBOColumnDef Gesuchsgrund { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Gesuchsgrund", typeof(string), false, false, false, 40, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBewilligt { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BetragBewilligt", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtAm { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligtAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BegruendungMitFmt { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BegruendungMitFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BegruendungOhneFmt { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BegruendungOhneFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Bemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungBetragKS1 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungBetragKS1", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungDatumKS1 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungDatumKS1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungBemerkungKS1 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungBemerkungKS1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungBetragKS2 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungBetragKS2", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungDatumKS2 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungDatumKS2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligungBemerkungKS2 { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligungBemerkungKS2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtVonName { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligtVonName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtVonVorname { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligtVonVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtVonAbteilung { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BewilligtVonAbteilung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussDatum { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "AbschlussDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundD { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "AbschlussgrundD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundF { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "AbschlussgrundF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundI { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "AbschlussgrundI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragBeantragt { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BetragBeantragt", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BetragEigenleistung { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "BetragEigenleistung", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef TotalAusFLBFond { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "TotalAusFLBFond", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kuerzung { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Kuerzung", typeof(object), false, false, false, 8016, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef Mitarbeiter { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Mitarbeiter", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KGS { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "KGS", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Kostenstelle", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef Klient { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Klient", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef FondsNameKurz { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsNameKurz", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef FondsNameLang { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsNameLang", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsBemerkungD { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsBemerkungD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsBemerkungF { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsBemerkungF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsBemerkungI { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsBemerkungI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsTypD { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsTypD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsTypF { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsTypF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FondsTypI { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "FondsTypI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 517]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verteiler { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "Verteiler", typeof(string), false, false, false, 517, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1189]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerteilerMehrzeilig { get { return new DBOColumnDef(vwTmGvGesuch.TableDef, "VerteilerMehrzeilig", typeof(string), false, false, false, 1189, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmInstitution{
/// <summary>
/// Gets the table definition for vwTmInstitution
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmInstitution", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(vwTmInstitution.TableDef, "BaInstitutionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionNr { get { return new DBOColumnDef(vwTmInstitution.TableDef, "InstitutionNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Name", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwTmInstitution.TableDef, "NameVorname", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwTmInstitution.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Homepage { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Homepage", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CareOf { get { return new DBOColumnDef(vwTmInstitution.TableDef, "CareOf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressZusatz { get { return new DBOColumnDef(vwTmInstitution.TableDef, "AdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuhandenVon { get { return new DBOColumnDef(vwTmInstitution.TableDef, "ZuhandenVon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(vwTmInstitution.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(vwTmInstitution.TableDef, "PostfachOhneNr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachTextD { get { return new DBOColumnDef(vwTmInstitution.TableDef, "PostfachTextD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(vwTmInstitution.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(vwTmInstitution.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(vwTmInstitution.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StrasseHausNr { get { return new DBOColumnDef(vwTmInstitution.TableDef, "StrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>

public static DBOColumnDef OrtStrasse { get { return new DBOColumnDef(vwTmInstitution.TableDef, "OrtStrasse", typeof(string), false, false, false, 163, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef PLZOrt { get { return new DBOColumnDef(vwTmInstitution.TableDef, "PLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandD { get { return new DBOColumnDef(vwTmInstitution.TableDef, "LandD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandF { get { return new DBOColumnDef(vwTmInstitution.TableDef, "LandF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandI { get { return new DBOColumnDef(vwTmInstitution.TableDef, "LandI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandE { get { return new DBOColumnDef(vwTmInstitution.TableDef, "LandE", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseEinzeilig { get { return new DBOColumnDef(vwTmInstitution.TableDef, "AdresseEinzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AdresseEinzOhneName { get { return new DBOColumnDef(vwTmInstitution.TableDef, "AdresseEinzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseMehrzeilig { get { return new DBOColumnDef(vwTmInstitution.TableDef, "AdresseMehrzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AdresseMehrzOhneName { get { return new DBOColumnDef(vwTmInstitution.TableDef, "AdresseMehrzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaBetrieb{
/// <summary>
/// Gets the table definition for vwTmKaBetrieb
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaBetrieb", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "KaBetriebID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressZusatz { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "AdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 431]
/// </summary>

public static DBOColumnDef AdresseMehrzeilig { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "AdresseMehrzeilig", typeof(string), false, false, false, 431, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Land { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Land", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TeilbetriebVon { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "TeilbetriebVon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Internet { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Internet", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Akt { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Akt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuVe { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "AuVe", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Charakter { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "Charakter", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebDokumentID { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "KaBetriebDokumentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokDatum { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokStichworte { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokStichworte", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAbsenderVornameName { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAbsenderVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>

public static DBOColumnDef DokAdressatAnrede { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatAnrede", typeof(string), false, false, false, 9, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 225]
/// </summary>

public static DBOColumnDef DokAdressatSehrGeehrte { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatSehrGeehrte", typeof(string), false, false, false, 225, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>

public static DBOColumnDef DokAdressatLieberLiebe { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatLieberLiebe", typeof(string), false, false, false, 14, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAdressatName { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAdressatVorname { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAdressatVornameName { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAdressatTel { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatTel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokAdressatMobil { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatMobil", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef DokAdressatAdresseMehrz { get { return new DBOColumnDef(vwTmKaBetrieb.TableDef, "DokAdressatAdresseMehrz", typeof(string), false, false, false, 633, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaBetriebVerlauf{
/// <summary>
/// Gets the table definition for vwTmKaBetriebVerlauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaBetriebVerlauf", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaBetriebBesprechungID { get { return new DBOColumnDef(vwTmKaBetriebVerlauf.TableDef, "KaBetriebBesprechungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(vwTmKaBetriebVerlauf.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktperson { get { return new DBOColumnDef(vwTmKaBetriebVerlauf.TableDef, "Kontaktperson", typeof(string), false, false, false, 202, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Autor { get { return new DBOColumnDef(vwTmKaBetriebVerlauf.TableDef, "Autor", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(vwTmKaBetriebVerlauf.TableDef, "Stichwort", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEafSozioberuflicheBilanz{
/// <summary>
/// Gets the table definition for vwTmKaEafSozioberuflicheBilanz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaEafSozioberuflicheBilanz", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungIDRelation { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "FaLeistungIDRelation", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnwTeilzeit { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "AnwTeilzeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schwerpunkte { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "Schwerpunkte", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemAbschluss { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "BemAbschluss", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielRav { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "ZielRav", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Ergebnisse { get { return new DBOColumnDef(vwTmKaEafSozioberuflicheBilanz.TableDef, "Ergebnisse", typeof(string), false, false, false, -1, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEafSpezifischeErmittlung{
/// <summary>
/// Gets the table definition for vwTmKaEafSpezifischeErmittlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaEafSpezifischeErmittlung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaEafSpezifischeErmittlung.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungIDRelation { get { return new DBOColumnDef(vwTmKaEafSpezifischeErmittlung.TableDef, "FaLeistungIDRelation", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnwTeilzeit { get { return new DBOColumnDef(vwTmKaEafSpezifischeErmittlung.TableDef, "AnwTeilzeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zielsetzungen { get { return new DBOColumnDef(vwTmKaEafSpezifischeErmittlung.TableDef, "Zielsetzungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemAbschluss { get { return new DBOColumnDef(vwTmKaEafSpezifischeErmittlung.TableDef, "BemAbschluss", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEinsatzplatz{
/// <summary>
/// Gets the table definition for vwTmKaEinsatzplatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaEinsatzplatz", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KaEinsatzplatzID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Aktiv", typeof(string), false, false, false, 7, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Bezeichnung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Branche { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Branche", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrieb { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Betrieb", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 174]
/// </summary>

public static DBOColumnDef BetriebAdresse { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "BetriebAdresse", typeof(string), false, false, false, 174, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stellenbeschreibung { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Stellenbeschreibung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KAProgramm { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KAProgramm", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKA { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "ZustaendigKA", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lehrberuf { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Lehrberuf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TypAusbildung { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "TypAusbildung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef NeuGeschLehrstelle { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "NeuGeschLehrstelle", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErfasstAm { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "ErfasstAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzAb { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "EinsatzAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef unbefristet { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "unbefristet", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gesamtpensum { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Gesamtpensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef aufteilbar { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "aufteilbar", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PensumUnbestimmt { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "PensumUnbestimmt", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzelpensumVon { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "EinzelpensumVon", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinzelpensumBis { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "EinzelpensumBis", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Fuehrerausweis { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Fuehrerausweis", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FuehrerausweisKat { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "FuehrerausweisKat", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PCKenntnisse { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "PCKenntnisse", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geschlecht { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Geschlecht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WeitereAnforderungen { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "WeitereAnforderungen", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschMuendlich { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "DeutschMuendlich", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschSchriftlich { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "DeutschSchriftlich", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausbildung { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Ausbildung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef Kontaktperson { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "Kontaktperson", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktFunktion { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktFunktion", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktBemerkung { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktBemerkung", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktTelefon { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktTelefonMobil { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktTelefonMobil", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktFax { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktEMail { get { return new DBOColumnDef(vwTmKaEinsatzplatz.TableDef, "KontaktEMail", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaQJFallfuehrung{
/// <summary>
/// Gets the table definition for vwTmKaQJFallfuehrung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaQJFallfuehrung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaQJProzessID { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "KaQJProzessID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Vorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Name", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Adressat", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1538]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adresse { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Adresse", typeof(string), false, false, false, 1538, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Briefanrede", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Anrede", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Institution { get { return new DBOColumnDef(vwTmKaQJFallfuehrung.TableDef, "Institution", typeof(string), false, false, false, 500, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaTransfer{
/// <summary>
/// Gets the table definition for vwTmKaTransfer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaTransfer", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef KaTransferID { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "KaTransferID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelErstkontaktDat { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "TelErstkontaktDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVG { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "DatumVG", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AllgZiele { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "AllgZiele", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bewerbungsstrategie { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "Bewerbungsstrategie", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungDat1 { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "MuendAufforderungDat1", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungDat2 { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "MuendAufforderungDat2", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungBem1 { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "MuendAufforderungBem1", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MuendAufforderungBem2 { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "MuendAufforderungBem2", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDat { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "AustrittDat", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittGrund { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "AustrittGrund", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCode { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "AustrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittBem { get { return new DBOColumnDef(vwTmKaTransfer.TableDef, "AustrittBem", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVerlauf{
/// <summary>
/// Gets the table definition for vwTmKaVerlauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaVerlauf", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaVerlaufID { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "KaVerlaufID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef Autor { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Autor", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktart { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Kontaktart", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktperson { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Kontaktperson", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Stichwort", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Thema { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "Thema", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltRTF { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "InhaltRTF", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InhaltNORTF { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "InhaltNORTF", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SichtbarSD { get { return new DBOColumnDef(vwTmKaVerlauf.TableDef, "SichtbarSD", typeof(bool), false, false, false, 1, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlung{
/// <summary>
/// Gets the table definition for vwTmKaVermittlung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaVermittlung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIZuweiserVornameName { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "SIZuweiserVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SIZuweiserAnrede { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "SIZuweiserAnrede", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIZuweiserSektion { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "SIZuweiserSektion", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBIPZuweiserVornameName { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "BIBIPZuweiserVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BIBIPZuweiserAnrede { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "BIBIPZuweiserAnrede", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBIPZuweiserSektion { get { return new DBOColumnDef(vwTmKaVermittlung.TableDef, "BIBIPZuweiserSektion", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlungBIBIP{
/// <summary>
/// Gets the table definition for vwTmKaVermittlungBIBIP
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaVermittlungBIBIP", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaVermittlungBIBIPID { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "KaVermittlungBIBIPID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumEroeffnung { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "DatumEroeffnung", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEroeffnungAbklaerung { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "DatumEroeffnungAbklaerung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAbschluss { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "DatumAbschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKA { get { return new DBOColumnDef(vwTmKaVermittlungBIBIP.TableDef, "ZustaendigKA", typeof(string), false, false, false, 402, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlungSI{
/// <summary>
/// Gets the table definition for vwTmKaVermittlungSI
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKaVermittlungSI", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaVermittlungSIID { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "KaVermittlungSIID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef DatumEroeffnung { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "DatumEroeffnung", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEroeffnungAbklaerung { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "DatumEroeffnungAbklaerung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAbschluss { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "DatumAbschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustaendigKA { get { return new DBOColumnDef(vwTmKaVermittlungSI.TableDef, "ZustaendigKA", typeof(string), false, false, false, 402, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesAuftrag{
/// <summary>
/// Gets the table definition for vwTmKesAuftrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKesAuftrag", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesAuftragID { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KesAuftragID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragVom { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AuftragVom", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbklaerungDurch { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbklaerungDurch", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MeldungDurchD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "MeldungDurchD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MeldungDurchF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "MeldungDurchF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MeldungDurchI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "MeldungDurchI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragDurchD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AuftragDurchD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragDurchF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AuftragDurchF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragDurchI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AuftragDurchI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbklaerungsartDE { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbklaerungsartDE", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbklaerungsartFR { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbklaerungsartFR", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbklaerungsartIT { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbklaerungsartIT", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anlass { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "Anlass", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auftrag { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "Auftrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DokumentDatum { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "DokumentDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FristBis { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "FristBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abschluss { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "Abschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbschlussgrundD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbschlussgrundF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbschlussgrundI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "AbschlussgrundI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BeschlussRueckmeldung { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "BeschlussRueckmeldung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetroffenePersonen { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "BetroffenePersonen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientKindD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientKindD", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientKindF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientKindF", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientKindI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientKindI", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientVaterD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientVaterD", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientVaterF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientVaterF", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientVaterI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientVaterI", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientMutterD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientMutterD", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientMutterF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientMutterF", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientMutterI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientMutterI", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientGeschwisterD { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientGeschwisterD", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientGeschwisterF { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientGeschwisterF", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientGeschwisterI { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "KlientGeschwisterI", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumHeute { get { return new DBOColumnDef(vwTmKesAuftrag.TableDef, "DatumHeute", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesDokument{
/// <summary>
/// Gets the table definition for vwTmKesDokument
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKesDokument", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesAuftragID { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "KesAuftragID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesDokumentID { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "KesDokumentID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserInUserID { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserInUserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserFrauHerr { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserFrauHerr", typeof(string), false, false, false, 9, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserFrauHerrn { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserFrauHerrn", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNameVorname { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserNameVorname", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNameVornameOhneKomma { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserNameVornameOhneKomma", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserVornameName { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungEMail { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserAbteilungEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungFax { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserAbteilungFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungName { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserAbteilungName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungTelefon { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserAbteilungTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNachname { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserNachname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserVorname { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserKuerzel { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserKuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserTelephon { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserTelephon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserEMail { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VerfasserEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ResultatD { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ResultatD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ResultatF { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ResultatF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ResultatI { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ResultatI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtDE { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ArtDE", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtFR { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ArtFR", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtIT { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "ArtIT", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersandDatum { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "VersandDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumHeute { get { return new DBOColumnDef(vwTmKesDokument.TableDef, "DatumHeute", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesMassnahmeBericht{
/// <summary>
/// Gets the table definition for vwTmKesMassnahmeBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKesMassnahmeBericht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesMassnahmeID { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "KesMassnahmeID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtikelNummer { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ArtikelNummer", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtikelTextKurz { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ArtikelTextKurz", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtikelTextLang { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ArtikelTextLang", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtNmrTextKurz { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ArtNmrTextKurz", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArtNmrTextLang { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ArtNmrTextLang", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatErchtsbschlss { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "DatErchtsbschlss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPNameVorname { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPNameVorname", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPNmVrnmOhnKmma { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPNmVrnmOhnKmma", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPVornameName { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPAdrssEinzeilg { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPAdrssEinzeilg", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPAdrssMhrzeilg { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPAdrssMhrzeilg", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPErnanntSeit { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPErnanntSeit", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPPrmVrgchlSDAm { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPPrmVrgchlSDAm", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPPrmRchfrngVon { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPPrmRchfrngVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MFPPrmRchfrngBis { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MFPPrmRchfrngBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>

public static DBOColumnDef SARFrauHerr { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARFrauHerr", typeof(string), false, false, false, 9, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef SARFrauHerrn { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARFrauHerrn", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef SARNameVorname { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARNameVorname", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef SARNamVrnmOhnKma { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARNamVrnmOhnKma", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef SARVornameName { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARVornameName", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARAbteilungEMai { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARAbteilungEMai", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARAbteilungFax { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARAbteilungFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARAbteilungName { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARAbteilungName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARAbteilungTel { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARAbteilungTel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef SARNachname { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARNachname", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARVorname { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARKuerzel { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARKuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SARTelephon { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SARTelephon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SAREMail { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "SAREMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ElterlicheSorgeD { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ElterlicheSorgeD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ElterlicheSorgeF { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ElterlicheSorgeF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ElterlicheSorgeI { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "ElterlicheSorgeI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MassAuftragstext { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "MassAuftragstext", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesMassnahmeBerichtID { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "KesMassnahmeBerichtID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PeriodeVon { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "PeriodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PeriodeBis { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "PeriodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Berichtsdatum { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "Berichtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rechnungsdatum { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "Rechnungsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrchtArtDsBrchtD { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "BrchtArtDsBrchtD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrchtArtDsBrchtF { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "BrchtArtDsBrchtF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BrchtArtDsBrchtI { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "BrchtArtDsBrchtI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KesMassnahmeAuftragID { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "KesMassnahmeAuftragID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragAuftrag { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "AuftragAuftrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftrgrtGschftsD { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "AuftrgrtGschftsD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftrgrtGschftsF { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "AuftrgrtGschftsF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftrgrtGschftsI { get { return new DBOColumnDef(vwTmKesMassnahmeBericht.TableDef, "AuftrgrtGschftsI", typeof(string), false, false, false, 200, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesVerlauf{
/// <summary>
/// Gets the table definition for vwTmKesVerlauf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmKesVerlauf", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KesVerlaufID { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "KesVerlaufID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktartDE { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "KontaktartDE", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktartFR { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "KontaktartFR", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktartIT { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "KontaktartIT", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DienstleistungD { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DienstleistungD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DienstleistungF { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DienstleistungF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DienstleistungI { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DienstleistungI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichwort { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "Stichwort", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserFrauHerr { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserFrauHerr", typeof(string), false, false, false, 9, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserFrauHerrn { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserFrauHerrn", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNameVorname { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserNameVorname", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNameVornameOhneKomma { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserNameVornameOhneKomma", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserVornameName { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungEMail { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserAbteilungEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungFax { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserAbteilungFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungName { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserAbteilungName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserAbteilungTelefon { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserAbteilungTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserNachname { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserNachname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserVorname { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserKuerzel { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserKuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserTelephon { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserTelephon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerfasserEMail { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "VerfasserEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerD { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DauerD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerF { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DauerF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DauerI { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "DauerI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Inhalt { get { return new DBOColumnDef(vwTmKesVerlauf.TableDef, "Inhalt", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmPerson{
/// <summary>
/// Gets the table definition for vwTmPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmPerson", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwTmPerson.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PersonenNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "PersonenNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(vwTmPerson.TableDef, "Anrede", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(vwTmPerson.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FruehererName { get { return new DBOColumnDef(vwTmPerson.TableDef, "FrühererName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwTmPerson.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>

public static DBOColumnDef VornameName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VornameName", typeof(string), false, false, false, 201, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname2 { get { return new DBOColumnDef(vwTmPerson.TableDef, "Vorname2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwTmPerson.TableDef, "NameVorname", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>

public static DBOColumnDef NameVornameOhneKomma { get { return new DBOColumnDef(vwTmPerson.TableDef, "NameVornameOhneKomma", typeof(string), false, false, false, 201, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameGB { get { return new DBOColumnDef(vwTmPerson.TableDef, "NameGB", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameGBVorname { get { return new DBOColumnDef(vwTmPerson.TableDef, "NameGBVorname", typeof(string), false, false, false, 202, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameGBVornameOhneKomma { get { return new DBOColumnDef(vwTmPerson.TableDef, "NameGBVornameOhneKomma", typeof(string), false, false, false, 201, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Nationalitaet { get { return new DBOColumnDef(vwTmPerson.TableDef, "Nationalitaet", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(vwTmPerson.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geschlecht { get { return new DBOColumnDef(vwTmPerson.TableDef, "Geschlecht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(vwTmPerson.TableDef, "Geburtsdatum", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeburtsdatumAmerikanisch { get { return new DBOColumnDef(vwTmPerson.TableDef, "GeburtsdatumAmerikanisch", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GestorbenAm { get { return new DBOColumnDef(vwTmPerson.TableDef, "GestorbenAm", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AHVNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "AHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersichertennummerSonstAHVNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "VersichertennummerSonstAHVNr", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungOhneFmt { get { return new DBOColumnDef(vwTmPerson.TableDef, "BemerkungOhneFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BemerkungMitFmt { get { return new DBOColumnDef(vwTmPerson.TableDef, "BemerkungMitFmt", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "NNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFFNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "BFFNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HaushaltVersicherungsNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "HaushaltVersicherungsNummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Konfession { get { return new DBOColumnDef(vwTmPerson.TableDef, "Konfession", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 103]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Heimatort { get { return new DBOColumnDef(vwTmPerson.TableDef, "Heimatort", typeof(string), false, false, false, 103, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatortNationalitaet { get { return new DBOColumnDef(vwTmPerson.TableDef, "HeimatortNationalitaet", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatortNationalitaetD { get { return new DBOColumnDef(vwTmPerson.TableDef, "HeimatortNationalitaetD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatortNationalitaetF { get { return new DBOColumnDef(vwTmPerson.TableDef, "HeimatortNationalitaetF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HeimatortNationalitaetI { get { return new DBOColumnDef(vwTmPerson.TableDef, "HeimatortNationalitaetI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 131]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZHeimatort { get { return new DBOColumnDef(vwTmPerson.TableDef, "PLZHeimatort", typeof(string), false, false, false, 131, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sprache { get { return new DBOColumnDef(vwTmPerson.TableDef, "Sprache", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SpracheVertsaendigung { get { return new DBOColumnDef(vwTmPerson.TableDef, "SpracheVertsaendigung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Permis { get { return new DBOColumnDef(vwTmPerson.TableDef, "Permis", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PermisBis { get { return new DBOColumnDef(vwTmPerson.TableDef, "PermisBis", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PermisSeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "PermisSeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltGueltigBis { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltGueltigBis", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InCHseit { get { return new DBOColumnDef(vwTmPerson.TableDef, "InCHseit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EndeZustaendigkeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "EndeZustaendigkeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelefonP { get { return new DBOColumnDef(vwTmPerson.TableDef, "TelefonP", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelefonG { get { return new DBOColumnDef(vwTmPerson.TableDef, "TelefonG", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TelefonMobil { get { return new DBOColumnDef(vwTmPerson.TableDef, "TelefonMobil", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwTmPerson.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(vwTmPerson.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Navigatorzusatz { get { return new DBOColumnDef(vwTmPerson.TableDef, "Navigatorzusatz", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugDatum { get { return new DBOColumnDef(vwTmPerson.TableDef, "WegzugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "WegzugOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WegzugPLZ { get { return new DBOColumnDef(vwTmPerson.TableDef, "WegzugPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zivilstand { get { return new DBOColumnDef(vwTmPerson.TableDef, "Zivilstand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandD { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZivilstandD", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandF { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZivilstandF", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandI { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZivilstandI", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZivilstandSeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZivilstandSeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugDatum { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZuzugDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZuzugOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuzugPLZ { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZuzugPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZEMISNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "ZEMISNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ErSie { get { return new DBOColumnDef(vwTmPerson.TableDef, "ErSie", typeof(string), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>

public static DBOColumnDef ErSieGross { get { return new DBOColumnDef(vwTmPerson.TableDef, "ErSieGross", typeof(string), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef HerrFrau { get { return new DBOColumnDef(vwTmPerson.TableDef, "HerrFrau", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 105]
/// </summary>

public static DBOColumnDef HerrFrauName { get { return new DBOColumnDef(vwTmPerson.TableDef, "HerrFrauName", typeof(string), false, false, false, 105, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// </summary>

public static DBOColumnDef GeehrterHerrFrau { get { return new DBOColumnDef(vwTmPerson.TableDef, "GeehrterHerrFrau", typeof(string), false, false, false, 25, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 126]
/// </summary>

public static DBOColumnDef GeehrterHerrFrauName { get { return new DBOColumnDef(vwTmPerson.TableDef, "GeehrterHerrFrauName", typeof(string), false, false, false, 126, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 5]
/// </summary>

public static DBOColumnDef HerrnFrau { get { return new DBOColumnDef(vwTmPerson.TableDef, "HerrnFrau", typeof(string), false, false, false, 5, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 106]
/// </summary>

public static DBOColumnDef HerrnFrauName { get { return new DBOColumnDef(vwTmPerson.TableDef, "HerrnFrauName", typeof(string), false, false, false, 106, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 206]
/// </summary>

public static DBOColumnDef FrauHerrVornameName { get { return new DBOColumnDef(vwTmPerson.TableDef, "FrauHerrVornameName", typeof(string), false, false, false, 206, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>

public static DBOColumnDef IhmIhr { get { return new DBOColumnDef(vwTmPerson.TableDef, "IhmIhr", typeof(string), false, false, false, 9, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>

public static DBOColumnDef LieberLiebe { get { return new DBOColumnDef(vwTmPerson.TableDef, "LieberLiebe", typeof(string), false, false, false, 14, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef SeinIhr { get { return new DBOColumnDef(vwTmPerson.TableDef, "SeinIhr", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 12]
/// </summary>

public static DBOColumnDef SeineIhre { get { return new DBOColumnDef(vwTmPerson.TableDef, "SeineIhre", typeof(string), false, false, false, 12, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>

public static DBOColumnDef SeinerIhrer { get { return new DBOColumnDef(vwTmPerson.TableDef, "SeinerIhrer", typeof(string), false, false, false, 14, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 34]
/// </summary>

public static DBOColumnDef ProjektteilnehmerIn { get { return new DBOColumnDef(vwTmPerson.TableDef, "ProjektteilnehmerIn", typeof(string), false, false, false, 34, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 33]
/// </summary>

public static DBOColumnDef TeilnehmerIn { get { return new DBOColumnDef(vwTmPerson.TableDef, "TeilnehmerIn", typeof(string), false, false, false, 33, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltsortAdresseEinzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortAdresseEinzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AufenthaltsortAdresseEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortAdresseEinzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltsortAdresseMehrzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortAdresseMehrzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AufenthaltsortAdresseMehrzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortAdresseMehrzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltsortStrasseNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortStrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef AufenthaltsortPLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltsortPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnortAdrEinzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnortAdrEinzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AufenthaltWohnortAdrEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnortAdrEinzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnortAdrMehrzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnortAdrMehrzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AufenthaltWohnortAdrMehrzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnortAdrMehrzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnsitzStrasseNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnsitzStrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef AufenthaltWohnsitzPLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnsitzPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnsitzPLZ { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltWohnsitzOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltWohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfachD { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltPostfachD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfachF { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltPostfachF", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltPostfachI { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltPostfachI", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AufenthaltInstitutionName { get { return new DBOColumnDef(vwTmPerson.TableDef, "AufenthaltInstitutionName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzAdresseEinzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzAdresseEinzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzAdresseEinzeiligGB { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzAdresseEinzeiligGB", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef WohnsitzAdresseEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzAdresseEinzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzAdresseMehrzeilig { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzAdresseMehrzeilig", typeof(string), false, false, false, 836, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef WohnsitzAdresseMehrzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzAdresseMehrzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzStrasseNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzStrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef WohnsitzPLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPLZ { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfachD { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzPostfachD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfachF { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzPostfachF", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnsitzPostfachI { get { return new DBOColumnDef(vwTmPerson.TableDef, "WohnsitzPostfachI", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Wohnsituation { get { return new DBOColumnDef(vwTmPerson.TableDef, "Wohnsituation", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Wohnungsgroesse { get { return new DBOColumnDef(vwTmPerson.TableDef, "Wohnungsgroesse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitslosSeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "ArbeitslosSeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusgesteuertSeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "AusgesteuertSeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Beruf { get { return new DBOColumnDef(vwTmPerson.TableDef, "Beruf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErlernterBeruf { get { return new DBOColumnDef(vwTmPerson.TableDef, "ErlernterBeruf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Schulbildung { get { return new DBOColumnDef(vwTmPerson.TableDef, "Schulbildung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermieterName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterName", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>

public static DBOColumnDef VermieterAdresseEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdresseEinzOhneName", typeof(string), false, false, false, 376, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>

public static DBOColumnDef VermieterAdresseMehrzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdresseMehrzOhneName", typeof(string), false, false, false, 376, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermieterAdresseStrasseNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdresseStrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef VermieterAdressePLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdressePLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermieterAdressePLZ { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdressePLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermieterAdresseOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "VermieterAdresseOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGName { get { return new DBOColumnDef(vwTmPerson.TableDef, "KVGName", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGMitgliedNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "KVGMitgliedNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>

public static DBOColumnDef KVGAdresseEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "KVGAdresseEinzOhneName", typeof(string), false, false, false, 376, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VVGName", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGMitgliedNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "VVGMitgliedNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>

public static DBOColumnDef VVGAdresseEinzOhneName { get { return new DBOColumnDef(vwTmPerson.TableDef, "VVGAdresseEinzOhneName", typeof(string), false, false, false, 376, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerNachname { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerNachname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerVorname { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerVorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerVorname2 { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerVorname2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerNachnameVorname { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerNachnameVorname", typeof(string), false, false, false, 201, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerNNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerNNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerBFFNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerBFFNummer", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerInCHseit { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerInCHseit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerNationalitaet { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerNationalitaet", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerZivilstand { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerZivilstand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerBeruf { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerBeruf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerEndeZustaendigkeit { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerEndeZustaendigkeit", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerErteilungVA { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerErteilungVA", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerGeschlecht { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerGeschlecht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerPermis { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerPermis", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerPersonenNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerPersonenNummer", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerGebDatum { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerGebDatum", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerAHVNummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerAHVNummer", typeof(string), false, false, false, 16, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerVersichertennummer { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerVersichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerAnrede { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerAnrede", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef EhepartnerPLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerPLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EhepartnerStrasseNr { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerStrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 174]
/// </summary>

public static DBOColumnDef EhepartnerStrassePLZOrt { get { return new DBOColumnDef(vwTmPerson.TableDef, "EhepartnerStrassePLZOrt", typeof(string), false, false, false, 174, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(vwTmPerson.TableDef, "Kostenstelle", typeof(string), false, false, false, 100, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmUser{
/// <summary>
/// Gets the table definition for vwTmUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwTmUser.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BenutzerNr { get { return new DBOColumnDef(vwTmUser.TableDef, "BenutzerNr", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Login { get { return new DBOColumnDef(vwTmUser.TableDef, "Login", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Nachname { get { return new DBOColumnDef(vwTmUser.TableDef, "Nachname", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(vwTmUser.TableDef, "Vorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kuerzel { get { return new DBOColumnDef(vwTmUser.TableDef, "Kuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telephon { get { return new DBOColumnDef(vwTmUser.TableDef, "Telephon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwTmUser.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErSieGross { get { return new DBOColumnDef(vwTmUser.TableDef, "ErSieGross", typeof(string), false, false, false, 3, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>

public static DBOColumnDef FrauHerr { get { return new DBOColumnDef(vwTmUser.TableDef, "FrauHerr", typeof(string), false, false, false, 9, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef FrauHerrn { get { return new DBOColumnDef(vwTmUser.TableDef, "FrauHerrn", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(vwTmUser.TableDef, "Briefanrede", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwTmUser.TableDef, "NameVorname", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef NameVornameOhneKomma { get { return new DBOColumnDef(vwTmUser.TableDef, "NameVornameOhneKomma", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef VornameName { get { return new DBOColumnDef(vwTmUser.TableDef, "VornameName", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "Text1MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "Text1OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "Text2MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "Text2OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungEMail { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungFax { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungName { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungTelefon { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungTelFaxWWW { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungTelFaxWWW", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText1MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText1MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText1OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText1OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText2MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText2MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText2OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText2OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText3MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText3MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText3OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText3OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText4MitFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText4MitFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungText4OhneFmt { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungText4OhneFmt", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AbteilungWWW { get { return new DBOColumnDef(vwTmUser.TableDef, "AbteilungWWW", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CareOf { get { return new DBOColumnDef(vwTmUser.TableDef, "CareOf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdressZusatz { get { return new DBOColumnDef(vwTmUser.TableDef, "AdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuhandenVon { get { return new DBOColumnDef(vwTmUser.TableDef, "ZuhandenVon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(vwTmUser.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(vwTmUser.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(vwTmUser.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(vwTmUser.TableDef, "PostfachOhneNr", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PostfachTextD { get { return new DBOColumnDef(vwTmUser.TableDef, "PostfachTextD", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(vwTmUser.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(vwTmUser.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(vwTmUser.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(vwTmUser.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(vwTmUser.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StrasseHausNr { get { return new DBOColumnDef(vwTmUser.TableDef, "StrasseHausNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>

public static DBOColumnDef OrtStrasse { get { return new DBOColumnDef(vwTmUser.TableDef, "OrtStrasse", typeof(string), false, false, false, 163, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>

public static DBOColumnDef PLZOrt { get { return new DBOColumnDef(vwTmUser.TableDef, "PLZOrt", typeof(string), false, false, false, 61, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandD { get { return new DBOColumnDef(vwTmUser.TableDef, "LandD", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandF { get { return new DBOColumnDef(vwTmUser.TableDef, "LandF", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandI { get { return new DBOColumnDef(vwTmUser.TableDef, "LandI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LandE { get { return new DBOColumnDef(vwTmUser.TableDef, "LandE", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseEinzeilig { get { return new DBOColumnDef(vwTmUser.TableDef, "AdresseEinzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AdresseEinzOhneName { get { return new DBOColumnDef(vwTmUser.TableDef, "AdresseEinzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseMehrzeilig { get { return new DBOColumnDef(vwTmUser.TableDef, "AdresseMehrzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>

public static DBOColumnDef AdresseMehrzOhneName { get { return new DBOColumnDef(vwTmUser.TableDef, "AdresseMehrzOhneName", typeof(string), false, false, false, 633, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVermittlungEinsatz{
/// <summary>
/// Gets the table definition for vwTmVermittlungEinsatz
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVermittlungEinsatz", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaVermittlungEinsatzID { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KaVermittlungEinsatzID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaVermittlungVorschlagID { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KaVermittlungVorschlagID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaEinsatzplatzID { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KaEinsatzplatzID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzVon { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EinsatzVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzBis { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EinsatzBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verlaengerung { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "Verlaengerung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Arbeitspensum { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "Arbeitspensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZDatumVon { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BIEAZDatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZDatumBis { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BIEAZDatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZVerl { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BIEAZVerl", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIBruttolohn { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BIBruttolohn", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BIEAZFinanzierungsgrad { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BIEAZFinanzierungsgrad", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abschluss { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "Abschluss", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKANachname { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKANachname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKAVorname { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKAVorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKAKuerzel { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKAKuerzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKATelephon { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKATelephon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKAEMail { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKAEMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKANameVorname { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKANameVorname", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKANameVornameOhneKomma { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKANameVornameOhneKomma", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZustKAVornameName { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "ZustKAVornameName", typeof(string), false, false, false, 401, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einsatzplatz { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "Einsatzplatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EPBranche { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EPBranche", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EPKaProgramm { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EPKaProgramm", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EPLehrberuf { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EPLehrberuf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EPBerufsausbildung { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "EPBerufsausbildung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrieb { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "Betrieb", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebAdressZusatz { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebAdressZusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebStrasse { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebStrasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebHausNr { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebHausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebPostfach { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebPostfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebPLZ { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebPLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebOrt { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebKanton { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebKanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetriebLand { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebLand", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 478]
/// </summary>

public static DBOColumnDef BetriebAdresseMehrzeilig { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "BetriebAdresseMehrzeilig", typeof(string), false, false, false, 478, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktTitel { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktTitel", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktName { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktVorname { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktVorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktGeschlecht { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktGeschlecht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktTelefon { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktTelefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktTelefonMobil { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktTelefonMobil", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktFax { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontaktEmail { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktEmail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>

public static DBOColumnDef KontaktNameVorname { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktNameVorname", typeof(string), false, false, false, 202, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>

public static DBOColumnDef KontaktVornameName { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktVornameName", typeof(string), false, false, false, 201, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>

public static DBOColumnDef KontaktLieberLiebe { get { return new DBOColumnDef(vwTmVermittlungEinsatz.TableDef, "KontaktLieberLiebe", typeof(string), false, false, false, 14, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVermittlungProfil{
/// <summary>
/// Gets the table definition for vwTmVermittlungProfil
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVermittlungProfil", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KaVermittlungProfilID { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "KaVermittlungProfilID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LeistungID { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "LeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Branchen { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Branchen", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betriebe { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Betriebe", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einsatzbereiche { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Einsatzbereiche", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lehrberuf { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Lehrberuf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschMuendlich { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "DeutschMuendlich", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DeutschSchriftlich { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "DeutschSchriftlich", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef AmTelVerst { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "AmTelVerst", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sprachstandermittlung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Sprachstandermittlung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitBIBIP { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "VermittelbarkeitBIBIP", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitSI { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "VermittelbarkeitSI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VermittelbarkeitBemerkung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "VermittelbarkeitBemerkung", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sucht { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Sucht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Suchtart { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Suchtart", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gesundheit { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Gesundheit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitEinschraenkungen { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitEinschraenkungen", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitKoerperlich { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitKoerperlich", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinschraenkungenKoerperlich { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "EinschraenkungenKoerperlich", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitBemerkung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitBemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitPsychisch { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitPsychisch", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Therapie { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Therapie", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zuverlaessigkeit { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Zuverlaessigkeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationInizio { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "MotivationInizio", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationBIBIPSI { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "MotivationBIBIPSI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AeussereErscheinungBIBIP { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "AeussereErscheinungBIBIP", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AeussereErscheinungSI { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "AeussereErscheinungSI", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef InfoAnSDErfolgt { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "InfoAnSDErfolgt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kinderbetreuung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Kinderbetreuung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einsatzpensum { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Einsatzpensum", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzpensumVon { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "EinsatzpensumVon", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinsatzpensumBis { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "EinsatzpensumBis", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereWuensche { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "BesondereWuensche", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereFaehigkeiten { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "BesondereFaehigkeiten", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fuehrerausweis { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Fuehrerausweis", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FuehrerausweisKategorie { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "FuehrerausweisKategorie", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKenntnisse { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "PCKenntnisse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausbildung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Ausbildung", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Arbeitszeiten { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Arbeitszeiten", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Unterstuetzung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Unterstützung", typeof(string), false, false, false, 8000, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIGespraech { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "SIGespraech", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SIGespraechfuehrerin { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "SIGespraechfuehrerin", typeof(string), false, false, false, 402, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GespraechInizio { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GespraechInizio", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausbildungswunsch { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Ausbildungswunsch", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Berufswunsch { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Berufswunsch", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "Bemerkungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ArbeitsgebietBemerkung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "ArbeitsgebietBemerkung", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitKoerperlichBewertung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitKoerperlichBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitPsychischBewertung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "GesundheitPsychischBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuverlaessigkeitBewertung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "ZuverlaessigkeitBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MotivationBIBIPSIBewertung { get { return new DBOColumnDef(vwTmVermittlungProfil.TableDef, "MotivationBIBIPSIBewertung", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmAntragEKSK{
/// <summary>
/// Gets the table definition for vwTmVmAntragEKSK
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmAntragEKSK", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmAntragEKSKID { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "VmAntragEKSKID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "Titel", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumAntrag { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "DatumAntrag", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Antrag { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "Antrag", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GenehmigtEKSK { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "GenehmigtEKSK", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Autor { get { return new DBOColumnDef(vwTmVmAntragEKSK.TableDef, "Autor", typeof(string), false, false, false, 401, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmGefaehrdungsMeldung{
/// <summary>
/// Gets the table definition for vwTmVmGefaehrdungsMeldung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmGefaehrdungsMeldung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmGefaehrdungsMeldungID { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "VmGefaehrdungsMeldungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumEingang { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "DatumEingang", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kontaktveranlasser { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Kontaktveranlasser", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GefaehrdungNSB { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "GefaehrdungNSB", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Themen { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Themen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausgangslage { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Ausgangslage", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auflagen { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Auflagen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ueberpruefung { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Ueberpruefung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Konsequenzen { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "Konsequenzen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuflageDatum { get { return new DBOColumnDef(vwTmVmGefaehrdungsMeldung.TableDef, "AuflageDatum", typeof(string), false, false, false, 10, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmMandBericht{
/// <summary>
/// Gets the table definition for vwTmVmMandBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmMandBericht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmMandBerichtID { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VmMandBerichtID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmBerichtID { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VmBerichtID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundMassnahme { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "GrundMassnahme", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Berichtstitel { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Berichtstitel", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtDatumVon { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtDatumVon", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtDatumBis { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtDatumBis", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrundMassnahmeText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "GrundMassnahmeText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuftragZielsetzungText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "AuftragZielsetzungText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielErreicht { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "ZielErreicht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef VIP { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VIP", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VeraenderungInPeriodCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VeraenderungInPeriodCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Begruendung { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Begruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NeueZieleText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "NeueZieleText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Wohnen { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Wohnen", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Gesundheit { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Gesundheit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verhalten { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Verhalten", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Taetigkeit { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Taetigkeit", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef FS { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FS", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FamiliaereSituationCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FamiliaereSituationCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SK { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "SK", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SozialeKompetenzenCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "SozialeKompetenzenCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef FZ { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FZ", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FreizeitCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FreizeitCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef RES { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "RES", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ResourcenCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "ResourcenCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "WohnenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GesundheitText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "GesundheitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerhaltenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VerhaltenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TaetigkeitText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "TaetigkeitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FamSituationText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FamSituationText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SozialeKompetenzenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "SozialeKompetenzenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FreizeitText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "FreizeitText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereRessourcenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BesondereRessourcenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HandlungenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "HandlungenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesSchwierigkeitenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BesSchwierigkeitenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KL { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "KL", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KlientCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "KlientCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef DR { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "DR", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef DritteCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "DritteCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef I { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "I", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef InstitutionenCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "InstitutionenCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KlientText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "KlientText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DritteText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "DritteText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionenText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "InstitutionenText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MCSCMandat { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "MCSCMandat", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtBelastAngMCSCAdmin { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtBelastAngMCSCAdmin", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelastungMandatText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BelastungMandatText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelastungAdminText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BelastungAdminText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinnahmenAngaben { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "EinnahmenAngaben", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EA { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "EA", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtVersicherungen { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtVersicherungen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BV { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BV", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtBesondereAngaben { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtBesondereAngaben", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BBA { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BBA", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinnahmenBemerkungen { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "EinnahmenBemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersicherungenBemerkungen { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "VersicherungenBemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BesondereAngabenBem { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BesondereAngabenBem", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef AU { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "AU", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef AbrechnungUnterschrieben { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "AbrechnungUnterschrieben", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PT { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "PT", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>

public static DBOColumnDef PassationTeilnahmeCBText { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "PassationTeilnahmeCBText", typeof(string), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PassationBemerkung { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "PassationBemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragBericht { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "AntragBericht", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragBegruendung { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "AntragBegruendung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErstellungDatum { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "ErstellungDatum", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtBeilagen { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BerichtBeilagen", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BsDatum { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BsDatum", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegeZurueckRevision { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "BelegeZurueckRevision", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZurueckVomBS { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "ZurueckVomBS", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Berichtsart { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Berichtsart", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Autor { get { return new DBOColumnDef(vwTmVmMandBericht.TableDef, "Autor", typeof(string), false, false, false, 401, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmSachversicherung{
/// <summary>
/// Gets the table definition for vwTmVmSachversicherung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmSachversicherung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmSachversicherungID { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "VmSachversicherungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerArt { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "VerArt", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Policenummer { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Policenummer", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Selbstbehalt { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Selbstbehalt", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Grundpraemie { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Grundpraemie", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsturnus { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Zahlungsturnus", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufzeitVon { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "LaufzeitVon", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LaufzeitBis { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "LaufzeitBis", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VersichertSeit { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "VersichertSeit", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Person { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Person", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkungen { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Bemerkungen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat_NameVorname { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Adressat_NameVorname", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat_StrasseNr { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Adressat_StrasseNr", typeof(string), false, false, false, 111, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat_PLZOrt { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Adressat_PLZOrt", typeof(string), false, false, false, 61, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat_AdrMehrzeilig { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Adressat_AdrMehrzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Adressat_AdrEinzeilig { get { return new DBOColumnDef(vwTmVmSachversicherung.TableDef, "Adressat_AdrEinzeilig", typeof(string), false, false, false, 1135, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmSituationsBericht{
/// <summary>
/// Gets the table definition for vwTmVmSituationsBericht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmSituationsBericht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef VmSituationsBerichtID { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "VmSituationsBerichtID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragDatum { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "AntragDatum", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TypSHAntrag { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "TypSHAntrag", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Themen { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "Themen", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BerichtFinanzen { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "BerichtFinanzen", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZielPrognose { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "ZielPrognose", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AntragText { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "AntragText", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Autor { get { return new DBOColumnDef(vwTmVmSituationsBericht.TableDef, "Autor", typeof(string), false, false, false, 401, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmVaterschaft{
/// <summary>
/// Gets the table definition for vwTmVmVaterschaft
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwTmVmVaterschaft", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnerkennungDat { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "AnerkennungDat", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnerkennungOrt { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "AnerkennungOrt", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UHVDat { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "UHVDat", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SgeVDat { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "SgeVDat", typeof(string), false, false, false, 30, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GenehmDat { get { return new DBOColumnDef(vwTmVmVaterschaft.TableDef, "GenehmDat", typeof(string), false, false, false, 30, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwUser{
/// <summary>
/// Gets the table definition for vwUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwUser.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(vwUser.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FirstName { get { return new DBOColumnDef(vwUser.TableDef, "FirstName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LastName { get { return new DBOColumnDef(vwUser.TableDef, "LastName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ShortName { get { return new DBOColumnDef(vwUser.TableDef, "ShortName", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsUserAdmin { get { return new DBOColumnDef(vwUser.TableDef, "IsUserAdmin", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsUserBIAGAdmin { get { return new DBOColumnDef(vwUser.TableDef, "IsUserBIAGAdmin", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PasswordHash { get { return new DBOColumnDef(vwUser.TableDef, "PasswordHash", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef IsLocked { get { return new DBOColumnDef(vwUser.TableDef, "IsLocked", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GenderCode { get { return new DBOColumnDef(vwUser.TableDef, "GenderCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LanguageCode { get { return new DBOColumnDef(vwUser.TableDef, "LanguageCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(vwUser.TableDef, "ModulID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef isMandatsTraeger { get { return new DBOColumnDef(vwUser.TableDef, "isMandatsTraeger", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Phone { get { return new DBOColumnDef(vwUser.TableDef, "Phone", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(vwUser.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ChiefID { get { return new DBOColumnDef(vwUser.TableDef, "ChiefID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PermissionGroupID { get { return new DBOColumnDef(vwUser.TableDef, "PermissionGroupID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GrantPermGroupID { get { return new DBOColumnDef(vwUser.TableDef, "GrantPermGroupID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text1 { get { return new DBOColumnDef(vwUser.TableDef, "Text1", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text2 { get { return new DBOColumnDef(vwUser.TableDef, "Text2", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JobPercentage { get { return new DBOColumnDef(vwUser.TableDef, "JobPercentage", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HoursPerYearForCaseMgmt { get { return new DBOColumnDef(vwUser.TableDef, "HoursPerYearForCaseMgmt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef XUserTS { get { return new DBOColumnDef(vwUser.TableDef, "XUserTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XProfileID { get { return new DBOColumnDef(vwUser.TableDef, "XProfileID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwUser.TableDef, "NameVorname", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef NameVornameOhneKomma { get { return new DBOColumnDef(vwUser.TableDef, "NameVornameOhneKomma", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>

public static DBOColumnDef VornameName { get { return new DBOColumnDef(vwUser.TableDef, "VornameName", typeof(string), false, false, false, 401, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 708]
/// </summary>

public static DBOColumnDef LogonNameVornameOrgUnit { get { return new DBOColumnDef(vwUser.TableDef, "LogonNameVornameOrgUnit", typeof(string), false, false, false, 708, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(vwUser.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ParentID { get { return new DBOColumnDef(vwUser.TableDef, "ParentID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgEinheitName { get { return new DBOColumnDef(vwUser.TableDef, "OrgEinheitName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgUnit { get { return new DBOColumnDef(vwUser.TableDef, "OrgUnit", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgEinheitEmail { get { return new DBOColumnDef(vwUser.TableDef, "OrgEinheitEmail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgEinheitFax { get { return new DBOColumnDef(vwUser.TableDef, "OrgEinheitFax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgEinheitWWW { get { return new DBOColumnDef(vwUser.TableDef, "OrgEinheitWWW", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 708]
/// </summary>

public static DBOColumnDef DisplayText { get { return new DBOColumnDef(vwUser.TableDef, "DisplayText", typeof(string), false, false, false, 708, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwUserSimple{
/// <summary>
/// Gets the table definition for vwUserSimple
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwUserSimple", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(vwUserSimple.TableDef, "UserID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(vwUserSimple.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LastName { get { return new DBOColumnDef(vwUserSimple.TableDef, "LastName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FirstName { get { return new DBOColumnDef(vwUserSimple.TableDef, "FirstName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>

public static DBOColumnDef NameVorname { get { return new DBOColumnDef(vwUserSimple.TableDef, "NameVorname", typeof(string), false, false, false, 402, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 605]
/// </summary>

public static DBOColumnDef DisplayText { get { return new DBOColumnDef(vwUserSimple.TableDef, "DisplayText", typeof(string), false, false, false, 605, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class vwXConfig_public{
/// <summary>
/// Gets the table definition for vwXConfig_public
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("vwXConfig_public", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef XNamespaceExtensionID { get { return new DBOColumnDef(vwXConfig_public.TableDef, "XNamespaceExtensionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>

public static DBOColumnDef KeyPath { get { return new DBOColumnDef(vwXConfig_public.TableDef, "KeyPath", typeof(string), false, false, false, 500, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(vwXConfig_public.TableDef, "System", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(vwXConfig_public.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ValueCode { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LOVName { get { return new DBOColumnDef(vwXConfig_public.TableDef, "LOVName", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueBit { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueBit", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueBit { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueBit", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueDateTime { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueDateTime", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueDateTime { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueDateTime", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueDecimal { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueDecimal", typeof(System.Nullable<decimal>), false, false, false, 9, true, "", ""); } }


/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueDecimal { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueDecimal", typeof(System.Nullable<decimal>), false, false, false, 9, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueInt { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueInt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueInt { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueInt", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueMoney { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueMoney", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueMoney { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueMoney", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueVarchar { get { return new DBOColumnDef(vwXConfig_public.TableDef, "ValueVarchar", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalValueVarchar { get { return new DBOColumnDef(vwXConfig_public.TableDef, "OriginalValueVarchar", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class WhKostenart{
/// <summary>
/// Gets the table definition for WhKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("WhKostenart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(WhKostenart.TableDef, "BgKostenartID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(WhKostenart.TableDef, "ModulID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(WhKostenart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(WhKostenart.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Quoting { get { return new DBOColumnDef(WhKostenart.TableDef, "Quoting", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(WhKostenart.TableDef, "BgSplittingArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaWVZeileCode { get { return new DBOColumnDef(WhKostenart.TableDef, "BaWVZeileCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgKostenartTS { get { return new DBOColumnDef(WhKostenart.TableDef, "BgKostenartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: View
/// </summary>

public static class WhPositionsart{
/// <summary>
/// Gets the table definition for WhPositionsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("WhPositionsart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgPositionsartID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgGruppeCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartCode { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgPositionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID_CopyOf { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgPositionsartID_CopyOf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(WhPositionsart.TableDef, "Name", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Hilfetext { get { return new DBOColumnDef(WhPositionsart.TableDef, "Hilfetext", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(WhPositionsart.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NrmKontoCode { get { return new DBOColumnDef(WhPositionsart.TableDef, "NrmKontoCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwaltungSD_Default { get { return new DBOColumnDef(WhPositionsart.TableDef, "VerwaltungSD_Default", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Spezkonto { get { return new DBOColumnDef(WhPositionsart.TableDef, "Spezkonto", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ProPerson { get { return new DBOColumnDef(WhPositionsart.TableDef, "ProPerson", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef ProUE { get { return new DBOColumnDef(WhPositionsart.TableDef, "ProUE", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Masterbudget_EditMask { get { return new DBOColumnDef(WhPositionsart.TableDef, "Masterbudget_EditMask", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Monatsbudget_EditMask { get { return new DBOColumnDef(WhPositionsart.TableDef, "Monatsbudget_EditMask", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef ModulID { get { return new DBOColumnDef(WhPositionsart.TableDef, "ModulID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef sqlRichtlinie { get { return new DBOColumnDef(WhPositionsart.TableDef, "sqlRichtlinie", typeof(string), false, false, false, 3000, true, "", ""); } }


/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BgPositionsartTS { get { return new DBOColumnDef(WhPositionsart.TableDef, "BgPositionsartTS", typeof(byte[]), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VarName { get { return new DBOColumnDef(WhPositionsart.TableDef, "VarName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Verrechenbar { get { return new DBOColumnDef(WhPositionsart.TableDef, "Verrechenbar", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(WhPositionsart.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NameTID { get { return new DBOColumnDef(WhPositionsart.TableDef, "NameTID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(WhPositionsart.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(WhPositionsart.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef System { get { return new DBOColumnDef(WhPositionsart.TableDef, "System", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef KreditorEingeschraenkt { get { return new DBOColumnDef(WhPositionsart.TableDef, "KreditorEingeschraenkt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// </summary>

public static DBOColumnDef KontoNrName { get { return new DBOColumnDef(WhPositionsart.TableDef, "KontoNrName", typeof(string), false, false, false, 111, false, "", ""); } }

}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class BLOV{
/// <summary>
/// Gets the table definition for BLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("BLOV", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class LOV{
/// <summary>
/// Gets the table definition for LOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("LOV", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class SEL{
/// <summary>
/// Gets the table definition for SEL
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("SEL", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_alterdiagram{
/// <summary>
/// Gets the table definition for sp_alterdiagram
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_alterdiagram", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_creatediagram{
/// <summary>
/// Gets the table definition for sp_creatediagram
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_creatediagram", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_dropdiagram{
/// <summary>
/// Gets the table definition for sp_dropdiagram
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_dropdiagram", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_helpdiagramdefinition{
/// <summary>
/// Gets the table definition for sp_helpdiagramdefinition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_helpdiagramdefinition", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_helpdiagrams{
/// <summary>
/// Gets the table definition for sp_helpdiagrams
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_helpdiagrams", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_renamediagram{
/// <summary>
/// Gets the table definition for sp_renamediagram
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_renamediagram", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_upgraddiagrams{
/// <summary>
/// Gets the table definition for sp_upgraddiagrams
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("sp_upgraddiagrams", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOV{
/// <summary>
/// Gets the table definition for spAddReplaceLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAddReplaceLOV", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVCode{
/// <summary>
/// Gets the table definition for spAddReplaceLOVCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAddReplaceLOVCode", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVCodeExt{
/// <summary>
/// Gets the table definition for spAddReplaceLOVCodeExt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAddReplaceLOVCodeExt", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVExt{
/// <summary>
/// Gets the table definition for spAddReplaceLOVExt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAddReplaceLOVExt", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddXConfig{
/// <summary>
/// Gets the table definition for spAddXConfig
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAddXConfig", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAdTranslationFields{
/// <summary>
/// Gets the table definition for spAdTranslationFields
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAdTranslationFields", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Abzahlungskonto{
/// <summary>
/// Gets the table definition for spAyBudget_Abzahlungskonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_Abzahlungskonto", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Create{
/// <summary>
/// Gets the table definition for spAyBudget_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_CreateKbBuchung{
/// <summary>
/// Gets the table definition for spAyBudget_CreateKbBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_CreateKbBuchung", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Delete{
/// <summary>
/// Gets the table definition for spAyBudget_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Reset{
/// <summary>
/// Gets the table definition for spAyBudget_Reset
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_Reset", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Update{
/// <summary>
/// Gets the table definition for spAyBudget_Update
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyBudget_Update", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyEinzelzahlung_CreateKbBuchung{
/// <summary>
/// Gets the table definition for spAyEinzelzahlung_CreateKbBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyEinzelzahlung_CreateKbBuchung", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyEinzelzahlung_Delete{
/// <summary>
/// Gets the table definition for spAyEinzelzahlung_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyEinzelzahlung_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Bewilligen{
/// <summary>
/// Gets the table definition for spAyFinanzplan_Bewilligen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyFinanzplan_Bewilligen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Check{
/// <summary>
/// Gets the table definition for spAyFinanzplan_Check
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyFinanzplan_Check", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Create{
/// <summary>
/// Gets the table definition for spAyFinanzplan_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyFinanzplan_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Delete{
/// <summary>
/// Gets the table definition for spAyFinanzplan_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyFinanzplan_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Update{
/// <summary>
/// Gets the table definition for spAyFinanzplan_Update
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyFinanzplan_Update", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyGetBeleg{
/// <summary>
/// Gets the table definition for spAyGetBeleg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAyGetBeleg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAySpezkonto_UpdateBudget{
/// <summary>
/// Gets the table definition for spAySpezkonto_UpdateBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spAySpezkonto_UpdateBudget", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBaGetPersonInfoTitel{
/// <summary>
/// Gets the table definition for spBaGetPersonInfoTitel
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBaGetPersonInfoTitel", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBDEGetLeistungWoche{
/// <summary>
/// Gets the table definition for spBDEGetLeistungWoche
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBDEGetLeistungWoche", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSCheckAndCreateAnfangsdossiers{
/// <summary>
/// Gets the table definition for spBFSCheckAndCreateAnfangsdossiers
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSCheckAndCreateAnfangsdossiers", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSDossier_Create{
/// <summary>
/// Gets the table definition for spBFSDossier_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSDossier_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSDossier_Delete{
/// <summary>
/// Gets the table definition for spBFSDossier_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSDossier_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSGetDossierTree{
/// <summary>
/// Gets the table definition for spBFSGetDossierTree
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSGetDossierTree", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSGetImportDossiers{
/// <summary>
/// Gets the table definition for spBFSGetImportDossiers
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSGetImportDossiers", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSKennzahlen{
/// <summary>
/// Gets the table definition for spBFSKennzahlen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSKennzahlen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSPerformImport{
/// <summary>
/// Gets the table definition for spBFSPerformImport
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSPerformImport", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSQueryBFSVariablen{
/// <summary>
/// Gets the table definition for spBFSQueryBFSVariablen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spBFSQueryBFSVariablen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spCopyFall{
/// <summary>
/// Gets the table definition for spCopyFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spCopyFall", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spCreateInsertForTableCopy{
/// <summary>
/// Gets the table definition for spCreateInsertForTableCopy
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spCreateInsertForTableCopy", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDBO{
/// <summary>
/// Gets the table definition for spDBO
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spDBO", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropLOV{
/// <summary>
/// Gets the table definition for spDropLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spDropLOV", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropObject{
/// <summary>
/// Gets the table definition for spDropObject
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spDropObject", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropTableRef{
/// <summary>
/// Gets the table definition for spDropTableRef
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spDropTableRef", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDuplicateRows{
/// <summary>
/// Gets the table definition for spDuplicateRows
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spDuplicateRows", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaDeleteFaFall{
/// <summary>
/// Gets the table definition for spFaDeleteFaFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaDeleteFaFall", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaDeleteFaFallPerson{
/// <summary>
/// Gets the table definition for spFaDeleteFaFallPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaDeleteFaFallPerson", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetFallIconsOfPerson{
/// <summary>
/// Gets the table definition for spFaGetFallIconsOfPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaGetFallIconsOfPerson", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetFallZugriff{
/// <summary>
/// Gets the table definition for spFaGetFallZugriff
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaGetFallZugriff", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetModulIcon{
/// <summary>
/// Gets the table definition for spFaGetModulIcon
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaGetModulIcon", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetSozialsystem{
/// <summary>
/// Gets the table definition for spFaGetSozialsystem
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaGetSozialsystem", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetTreeFallNavigator{
/// <summary>
/// Gets the table definition for spFaGetTreeFallNavigator
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaGetTreeFallNavigator", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaInsertFaFall{
/// <summary>
/// Gets the table definition for spFaInsertFaFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaInsertFaFall", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaInsertFaFallPerson{
/// <summary>
/// Gets the table definition for spFaInsertFaFallPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaInsertFaFallPerson", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaUpdateFaFall{
/// <summary>
/// Gets the table definition for spFaUpdateFaFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaUpdateFaFall", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaUpdateFaFallPerson{
/// <summary>
/// Gets the table definition for spFaUpdateFaFallPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFaUpdateFaFallPerson", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbDauerAuftragBuchungen{
/// <summary>
/// Gets the table definition for spFbDauerAuftragBuchungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbDauerAuftragBuchungen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetBilanzErfolg{
/// <summary>
/// Gets the table definition for spFbGetBilanzErfolg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetBilanzErfolg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetBuchungsJournal{
/// <summary>
/// Gets the table definition for spFbGetBuchungsJournal
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetBuchungsJournal", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetKontoblaetter{
/// <summary>
/// Gets the table definition for spFbGetKontoblaetter
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetKontoblaetter", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetKontoblatt{
/// <summary>
/// Gets the table definition for spFbGetKontoblatt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetKontoblatt", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetLastBookings{
/// <summary>
/// Gets the table definition for spFbGetLastBookings
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetLastBookings", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetSaldo{
/// <summary>
/// Gets the table definition for spFbGetSaldo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbGetSaldo", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbNextBelegNr{
/// <summary>
/// Gets the table definition for spFbNextBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbNextBelegNr", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbSaldiVortragen{
/// <summary>
/// Gets the table definition for spFbSaldiVortragen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spFbSaldiVortragen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetDataExplorerItems{
/// <summary>
/// Gets the table definition for spGetDataExplorerItems
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spGetDataExplorerItems", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetDynaFldIDfromTextmarke{
/// <summary>
/// Gets the table definition for spGetDynaFldIDfromTextmarke
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spGetDynaFldIDfromTextmarke", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetFallMemberTyp{
/// <summary>
/// Gets the table definition for spGetFallMemberTyp
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spGetFallMemberTyp", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkForderung_Delete_Check{
/// <summary>
/// Gets the table definition for spIkForderung_Delete_Check
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkForderung_Delete_Check", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkForderung_Insert_Index{
/// <summary>
/// Gets the table definition for spIkForderung_Insert_Index
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkForderung_Insert_Index", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkGetKontoauszug{
/// <summary>
/// Gets the table definition for spIkGetKontoauszug
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkGetKontoauszug", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkMonatszahlen_Detail{
/// <summary>
/// Gets the table definition for spIkMonatszahlen_Detail
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkMonatszahlen_Detail", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkMonatszahlen_DetailAll{
/// <summary>
/// Gets the table definition for spIkMonatszahlen_DetailAll
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkMonatszahlen_DetailAll", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchung_Create{
/// <summary>
/// Gets the table definition for spIkSollstellung_KbBuchung_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkSollstellung_KbBuchung_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchung_Undo{
/// <summary>
/// Gets the table definition for spIkSollstellung_KbBuchung_Undo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkSollstellung_KbBuchung_Undo", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchungKstArt_Create{
/// <summary>
/// Gets the table definition for spIkSollstellung_KbBuchungKstArt_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spIkSollstellung_KbBuchungKstArt_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaAllgemein_RowMerge{
/// <summary>
/// Gets the table definition for spKaAllgemein_RowMerge
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaAllgemein_RowMerge", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaFillAMMBesch{
/// <summary>
/// Gets the table definition for spKaFillAMMBesch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaFillAMMBesch", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetAbklStatSektion{
/// <summary>
/// Gets the table definition for spKaGetAbklStatSektion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetAbklStatSektion", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetAbklStatSektionRohdaten{
/// <summary>
/// Gets the table definition for spKaGetAbklStatSektionRohdaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetAbklStatSektionRohdaten", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetBelegMotivation{
/// <summary>
/// Gets the table definition for spKaGetBelegMotivation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetBelegMotivation", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetKandidaten{
/// <summary>
/// Gets the table definition for spKaGetKandidaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetKandidaten", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeit{
/// <summary>
/// Gets the table definition for spKaGetPraesenzzeit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetPraesenzzeit", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeit2{
/// <summary>
/// Gets the table definition for spKaGetPraesenzzeit2
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetPraesenzzeit2", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeitAMM{
/// <summary>
/// Gets the table definition for spKaGetPraesenzzeitAMM
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetPraesenzzeitAMM", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeitReport{
/// <summary>
/// Gets the table definition for spKaGetPraesenzzeitReport
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetPraesenzzeitReport", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetStatistikGEF{
/// <summary>
/// Gets the table definition for spKaGetStatistikGEF
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetStatistikGEF", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetStatistikQJ{
/// <summary>
/// Gets the table definition for spKaGetStatistikQJ
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetStatistikQJ", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetTeilnehmerstruktur{
/// <summary>
/// Gets the table definition for spKaGetTeilnehmerstruktur
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKaGetTeilnehmerstruktur", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbAbrechnungASVS{
/// <summary>
/// Gets the table definition for spKbAbrechnungASVS
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbAbrechnungASVS", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbAuszahlungAlimentenvermittlungErstellen{
/// <summary>
/// Gets the table definition for spKbAuszahlungAlimentenvermittlungErstellen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbAuszahlungAlimentenvermittlungErstellen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbBelegimportAusGesuchverwaltung{
/// <summary>
/// Gets the table definition for spKbBelegimportAusGesuchverwaltung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbBelegimportAusGesuchverwaltung", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbErstelle_Rueckforderung_Krankenkasse{
/// <summary>
/// Gets the table definition for spKbErstelle_Rueckforderung_Krankenkasse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbErstelle_Rueckforderung_Krankenkasse", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBatchKVGVVG{
/// <summary>
/// Gets the table definition for spKbGetBatchKVGVVG
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbGetBatchKVGVVG", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBelegNr{
/// <summary>
/// Gets the table definition for spKbGetBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbGetBelegNr", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBilanzErfolg{
/// <summary>
/// Gets the table definition for spKbGetBilanzErfolg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbGetBilanzErfolg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbKostenstelleAnlegen{
/// <summary>
/// Gets the table definition for spKbKostenstelleAnlegen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbKostenstelleAnlegen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbRecycleBelegNr{
/// <summary>
/// Gets the table definition for spKbRecycleBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbRecycleBelegNr", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbSaldiVortragen{
/// <summary>
/// Gets the table definition for spKbSaldiVortragen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbSaldiVortragen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbSozialhilferechnungDifferenziert{
/// <summary>
/// Gets the table definition for spKbSozialhilferechnungDifferenziert
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbSozialhilferechnungDifferenziert", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbUpdateKbBuchungZahlInfo{
/// <summary>
/// Gets the table definition for spKbUpdateKbBuchungZahlInfo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbUpdateKbBuchungZahlInfo", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbWVEinzelpostenGenerieren{
/// <summary>
/// Gets the table definition for spKbWVEinzelpostenGenerieren
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbWVEinzelpostenGenerieren", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbZahlungslaufValuta_InsertNewYear{
/// <summary>
/// Gets the table definition for spKbZahlungslaufValuta_InsertNewYear
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spKbZahlungslaufValuta_InsertNewYear", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenz_AblaufEFBErwerbsaufnahme{
/// <summary>
/// Gets the table definition for spPendenz_AblaufEFBErwerbsaufnahme
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenz_AblaufEFBErwerbsaufnahme", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_AHVVorbezugPensionFrau{
/// <summary>
/// Gets the table definition for spPendenzCheck_AHVVorbezugPensionFrau
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_AHVVorbezugPensionFrau", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_AHVVorbezugPensionMann{
/// <summary>
/// Gets the table definition for spPendenzCheck_AHVVorbezugPensionMann
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_AHVVorbezugPensionMann", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_BeratungAusstattungVertragAuswertungAm{
/// <summary>
/// Gets the table definition for spPendenzCheck_BeratungAusstattungVertragAuswertungAm
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_BeratungAusstattungVertragAuswertungAm", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_FallsteuerungDLP{
/// <summary>
/// Gets the table definition for spPendenzCheck_FallsteuerungDLP
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_FallsteuerungDLP", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_FristKategorisierung{
/// <summary>
/// Gets the table definition for spPendenzCheck_FristKategorisierung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_FristKategorisierung", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_IntakeAusstattungVertragAuswertungAm{
/// <summary>
/// Gets the table definition for spPendenzCheck_IntakeAusstattungVertragAuswertungAm
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_IntakeAusstattungVertragAuswertungAm", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_PensionsalterFrau{
/// <summary>
/// Gets the table definition for spPendenzCheck_PensionsalterFrau
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_PensionsalterFrau", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_PensionsalterMann{
/// <summary>
/// Gets the table definition for spPendenzCheck_PensionsalterMann
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_PensionsalterMann", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person14{
/// <summary>
/// Gets the table definition for spPendenzCheck_Person14
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_Person14", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person18{
/// <summary>
/// Gets the table definition for spPendenzCheck_Person18
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_Person18", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person25{
/// <summary>
/// Gets the table definition for spPendenzCheck_Person25
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_Person25", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_WarnungVorEndeFinanzplan{
/// <summary>
/// Gets the table definition for spPendenzCheck_WarnungVorEndeFinanzplan
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spPendenzCheck_WarnungVorEndeFinanzplan", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spQRYStundenProLeistungsart{
/// <summary>
/// Gets the table definition for spQRYStundenProLeistungsart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spQRYStundenProLeistungsart", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spRenameColumn{
/// <summary>
/// Gets the table definition for spRenameColumn
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spRenameColumn", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spRenameTable{
/// <summary>
/// Gets the table definition for spRenameTable
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spRenameTable", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spReportWhAuszahlungsbeleg{
/// <summary>
/// Gets the table definition for spReportWhAuszahlungsbeleg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spReportWhAuszahlungsbeleg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spReportWhMonatsbudgetGemeinde2013{
/// <summary>
/// Gets the table definition for spReportWhMonatsbudgetGemeinde2013
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spReportWhMonatsbudgetGemeinde2013", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spSSTCalculateNewodFlags{
/// <summary>
/// Gets the table definition for spSSTCalculateNewodFlags
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spSSTCalculateNewodFlags", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spVmGetProdukte{
/// <summary>
/// Gets the table definition for spVmGetProdukte
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spVmGetProdukte", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhAlleKVGVVGAnpassen{
/// <summary>
/// Gets the table definition for spWhAlleKVGVVGAnpassen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhAlleKVGVVGAnpassen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhASVSExport{
/// <summary>
/// Gets the table definition for spWhASVSExport
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhASVSExport", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBgUebersicht{
/// <summary>
/// Gets the table definition for spWhBgUebersicht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBgUebersicht", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Abzahlungskonto{
/// <summary>
/// Gets the table definition for spWhBudget_Abzahlungskonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Abzahlungskonto", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Create{
/// <summary>
/// Gets the table definition for spWhBudget_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_CreateKbBuchung{
/// <summary>
/// Gets the table definition for spWhBudget_CreateKbBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_CreateKbBuchung", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_CreateQuotedZahlinfo{
/// <summary>
/// Gets the table definition for spWhBudget_CreateQuotedZahlinfo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_CreateQuotedZahlinfo", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Delete{
/// <summary>
/// Gets the table definition for spWhBudget_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Reset{
/// <summary>
/// Gets the table definition for spWhBudget_Reset
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Reset", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Runden{
/// <summary>
/// Gets the table definition for spWhBudget_Runden
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Runden", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Update{
/// <summary>
/// Gets the table definition for spWhBudget_Update
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_Update", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_UpdateBuchungsstatusOfBgPosition{
/// <summary>
/// Gets the table definition for spWhBudget_UpdateBuchungsstatusOfBgPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_UpdateBuchungsstatusOfBgPosition", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_UpdateKbBuchungZahlInfo{
/// <summary>
/// Gets the table definition for spWhBudget_UpdateKbBuchungZahlInfo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudget_UpdateKbBuchungZahlInfo", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudgetSyncDependentKreditorAndValuta{
/// <summary>
/// Gets the table definition for spWhBudgetSyncDependentKreditorAndValuta
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhBudgetSyncDependentKreditorAndValuta", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Bewilligen{
/// <summary>
/// Gets the table definition for spWhFinanzplan_Bewilligen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhFinanzplan_Bewilligen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Check{
/// <summary>
/// Gets the table definition for spWhFinanzplan_Check
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhFinanzplan_Check", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Create{
/// <summary>
/// Gets the table definition for spWhFinanzplan_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhFinanzplan_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Delete{
/// <summary>
/// Gets the table definition for spWhFinanzplan_Delete
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhFinanzplan_Delete", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Update{
/// <summary>
/// Gets the table definition for spWhFinanzplan_Update
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhFinanzplan_Update", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhKontoauszug{
/// <summary>
/// Gets the table definition for spWhKontoauszug
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhKontoauszug", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhKVGVVGAnpassen{
/// <summary>
/// Gets the table definition for spWhKVGVVGAnpassen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhKVGVVGAnpassen", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhPositionsart_Masterbudget_Terminieren{
/// <summary>
/// Gets the table definition for spWhPositionsart_Masterbudget_Terminieren
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhPositionsart_Masterbudget_Terminieren", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhPositionsart_Terminieren{
/// <summary>
/// Gets the table definition for spWhPositionsart_Terminieren
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhPositionsart_Terminieren", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhSpezkonto_UpdateBudget{
/// <summary>
/// Gets the table definition for spWhSpezkonto_UpdateBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spWhSpezkonto_UpdateBudget", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXAddDbObjectMLMsg{
/// <summary>
/// Gets the table definition for spXAddDbObjectMLMsg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXAddDbObjectMLMsg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXAnonymizeField{
/// <summary>
/// Gets the table definition for spXAnonymizeField
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXAnonymizeField", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDbObjectMLMsg{
/// <summary>
/// Gets the table definition for spXDbObjectMLMsg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXDbObjectMLMsg", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDBVersionAddEntry{
/// <summary>
/// Gets the table definition for spXDBVersionAddEntry
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXDBVersionAddEntry", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDBVersionGetCurrentVersion{
/// <summary>
/// Gets the table definition for spXDBVersionGetCurrentVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXDBVersionGetCurrentVersion", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDocument_Lock{
/// <summary>
/// Gets the table definition for spXDocument_Lock
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXDocument_Lock", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDocument_UnLock{
/// <summary>
/// Gets the table definition for spXDocument_UnLock
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXDocument_UnLock", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXExecuteSQLFile{
/// <summary>
/// Gets the table definition for spXExecuteSQLFile
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXExecuteSQLFile", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXExtendedProperty{
/// <summary>
/// Gets the table definition for spXExtendedProperty
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXExtendedProperty", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetBookmark{
/// <summary>
/// Gets the table definition for spXGetBookmark
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetBookmark", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetDBScheme{
/// <summary>
/// Gets the table definition for spXGetDBScheme
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetDBScheme", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetLOVScheme{
/// <summary>
/// Gets the table definition for spXGetLOVScheme
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetLOVScheme", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetModulTree{
/// <summary>
/// Gets the table definition for spXGetModulTree
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetModulTree", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetRightsAssignedUnassigned{
/// <summary>
/// Gets the table definition for spXGetRightsAssignedUnassigned
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetRightsAssignedUnassigned", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetTreeDynaFields{
/// <summary>
/// Gets the table definition for spXGetTreeDynaFields
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetTreeDynaFields", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetTreeLOV{
/// <summary>
/// Gets the table definition for spXGetTreeLOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXGetTreeLOV", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXHistoryChanges{
/// <summary>
/// Gets the table definition for spXHistoryChanges
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXHistoryChanges", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXHistoryVersion{
/// <summary>
/// Gets the table definition for spXHistoryVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXHistoryVersion", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXLogAddEntry{
/// <summary>
/// Gets the table definition for spXLogAddEntry
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXLogAddEntry", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXParentChildCopy{
/// <summary>
/// Gets the table definition for spXParentChildCopy
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXParentChildCopy", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXRowMerge{
/// <summary>
/// Gets the table definition for spXRowMerge
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXRowMerge", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSaveProfileTags{
/// <summary>
/// Gets the table definition for spXSaveProfileTags
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXSaveProfileTags", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetMLText{
/// <summary>
/// Gets the table definition for spXSetMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXSetMLText", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetMsgBox{
/// <summary>
/// Gets the table definition for spXSetMsgBox
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXSetMsgBox", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetTableColumnText{
/// <summary>
/// Gets the table definition for spXSetTableColumnText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXSetTableColumnText", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetXLangText{
/// <summary>
/// Gets the table definition for spXSetXLangText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXSetXLangText", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXTask_Create{
/// <summary>
/// Gets the table definition for spXTask_Create
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXTask_Create", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXTreeDesigner{
/// <summary>
/// Gets the table definition for spXTreeDesigner
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXTreeDesigner", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXValidateDBO{
/// <summary>
/// Gets the table definition for spXValidateDBO
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXValidateDBO", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXWriteLogFile{
/// <summary>
/// Gets the table definition for spXWriteLogFile
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("spXWriteLogFile", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class TBL{
/// <summary>
/// Gets the table definition for TBL
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("TBL", "", false); } }
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class USR{
/// <summary>
/// Gets the table definition for USR
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("USR", "", false); } }
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnABAGetLeistungsdaten{
/// <summary>
/// Gets the table definition for fnABAGetLeistungsdaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnABAGetLeistungsdaten", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef Id_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Id$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "UserID$", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Periodendatum_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Periodendatum$", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandanten_Nr_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Mandanten-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Perioden_Nr_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Perioden-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MA_Nr_ { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "MA-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Name", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Vorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohntyp { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Lohntyp", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Lohnart", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SumTotalStunden { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "SumTotalStunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SumPartialStunden { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "SumPartialStunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SumPartialProzent { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "SumPartialProzent", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Kostenstelle", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenart { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Kostenart", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostentraeger { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Kostenträger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Freigabe { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Freigabe", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Visum { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Visum", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Verbucht", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "VerbuchtLD", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeinExport { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "KeinExport", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Periode { get { return new DBOColumnDef(fnABAGetLeistungsdaten.TableDef, "Periode", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnABAGetStundenlohn{
/// <summary>
/// Gets the table definition for fnABAGetStundenlohn
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnABAGetStundenlohn", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "ID$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "UserID$", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Periodendatum_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Periodendatum$", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandanten_Nr_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Mandanten-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Perioden_Nr_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Perioden-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MA_Nr_ { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "MA-Nr.", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Name", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Vorname", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohntyp { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohntyp", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1100 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1100", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1110 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1110", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1120 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1120", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1130 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1130", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1140 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1140", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1150 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1150", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1160 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1160", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1170 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1170", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1180 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1180", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1190 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1190", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1200 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1200", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1210 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1210", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1220 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1220", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1230 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1230", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1240 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1240", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1250 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1250", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1260 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1260", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1270 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1270", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1280 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1280", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Lohnart_1290 { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Lohnart 1290", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Kostenstelle", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenart { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Kostenart", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostentraeger { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Kostenträger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Freigabe { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Freigabe", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Visum { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Visum", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Verbucht", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeinExport { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "KeinExport", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Periode { get { return new DBOColumnDef(fnABAGetStundenlohn.TableDef, "Periode", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnAyGetBudget{
/// <summary>
/// Gets the table definition for fnAyGetBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnAyGetBudget", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KOA { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "KOA", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgZahlungsmodusID { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "BgZahlungsmodusID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dritte { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Dritte", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Abtretung { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Abtretung", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zahlungsmodus { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Zahlungsmodus", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnAyGetBudget.TableDef, "Bemerkung", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnAyPersonEinAustritt{
/// <summary>
/// Gets the table definition for fnAyPersonEinAustritt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnAyPersonEinAustritt", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Eintritt { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "Eintritt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Austritt { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "Austritt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EinGrundCode { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "EinGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AusGrundCode { get { return new DBOColumnDef(fnAyPersonEinAustritt.TableDef, "AusGrundCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetHistKostentraegerPerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistKostentraegerPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistKostentraegerPerDate", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostentraeger { get { return new DBOColumnDef(fnBDEGetHistKostentraegerPerDate.TableDef, "Kostentraeger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLeistungMonat{
/// <summary>
/// Gets the table definition for fnBDEGetLeistungMonat
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetLeistungMonat", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef Id_ { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Id$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Monat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatText { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "MonatText", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatStartDatum { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "MonatStartDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatEndDatum { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "MonatEndDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "GZIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSollArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "GZSollArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZMonatsSaldo { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "GZMonatsSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SLIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "SLIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Freigegeben", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Visiert { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Visiert", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "VerbuchtLD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IstVerbucht { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "IstVerbucht", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IstVerbuchtLD { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "IstVerbuchtLD", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeinExport { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "KeinExport", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fakturiert { get { return new DBOColumnDef(fnBDEGetLeistungMonat.TableDef, "Fakturiert", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLeistungMonatView{
/// <summary>
/// Gets the table definition for fnBDEGetLeistungMonatView
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetLeistungMonatView", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef Id_ { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Id$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Jahr { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Jahr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Monat { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Monat", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatText { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "MonatText", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatStartDatum { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "MonatStartDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatEndDatum { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "MonatEndDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EndOfLastYear { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "EndOfLastYear", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Freigegeben", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Visiert { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Visiert", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "VerbuchtLD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IstVerbucht { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "IstVerbucht", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IstVerbuchtLD { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "IstVerbuchtLD", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fakturiert { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "Fakturiert", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PensumProzent { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "PensumProzent", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSollArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZSollArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZMonatsSaldo { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZMonatsSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZKorrekturen { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZAusbezahlteUeberstunden { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZAusbezahlteUeberstunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSaldo { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "GZSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SLIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "SLIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienAnspruchProJahr { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienAnspruchProJahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBisherBezogen { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienBisherBezogen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBezogenMonat { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienBezogenMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienZugabenKuerzungen { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienZugabenKuerzungen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienKorrekturen { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienSaldo { get { return new DBOColumnDef(fnBDEGetLeistungMonatView.TableDef, "FerienSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLohnartDropDown{
/// <summary>
/// Gets the table definition for fnBDEGetLohnartDropDown
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetLohnartDropDown", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnBDEGetLohnartDropDown.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnBDEGetLohnartDropDown.TableDef, "Text", typeof(string), false, false, false, 200, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEOrgUnitList{
/// <summary>
/// Gets the table definition for fnBDEGetOEOrgUnitList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetOEOrgUnitList", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnBDEGetOEOrgUnitList.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnBDEGetOEOrgUnitList.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEOrgUnitListZLE{
/// <summary>
/// Gets the table definition for fnBDEGetOEOrgUnitListZLE
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetOEOrgUnitListZLE", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnBDEGetOEOrgUnitListZLE.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnBDEGetOEOrgUnitListZLE.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle_ { get { return new DBOColumnDef(fnBDEGetOEOrgUnitListZLE.TableDef, "Kostenstelle$", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEUserList{
/// <summary>
/// Gets the table definition for fnBDEGetOEUserList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetOEUserList", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnBDEGetOEUserList.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnBDEGetOEUserList.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEUserListExtended{
/// <summary>
/// Gets the table definition for fnBDEGetOEUserListExtended
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetOEUserListExtended", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnBDEGetOEUserListExtended.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnBDEGetOEUserListExtended.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IsLocked { get { return new DBOColumnDef(fnBDEGetOEUserListExtended.TableDef, "IsLocked", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetUebersicht{
/// <summary>
/// Gets the table definition for fnBDEGetUebersicht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetUebersicht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "UserID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MonatJahrText { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "MonatJahrText", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PensumProzent { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "PensumProzent", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollArbeitszeitProTag { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "SollArbeitszeitProTag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSollArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZSollArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZMonatsSaldo { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZMonatsSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVormonate { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZUebertragVormonate", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZKorrekturen { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZAusbezahlteUeberstunden { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZAusbezahlteUeberstunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSaldo { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "GZSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SLIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "SLIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienAnspruchProJahr { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienAnspruchProJahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBisherBezogen { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienBisherBezogen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienZugabenKuerzungen { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienZugabenKuerzungen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienKorrekturen { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienSaldo { get { return new DBOColumnDef(fnBDEGetUebersicht.TableDef, "FerienSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetVisumKostenstelleView{
/// <summary>
/// Gets the table definition for fnBDEGetVisumKostenstelleView
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetVisumKostenstelleView", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auswahl { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Auswahl", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Kostenstelle", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mitarbeiter { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Mitarbeiter", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MitarbeiterNr { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "MitarbeiterNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Freigegeben { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Freigegeben", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Visiert { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Visiert", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Verbucht { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Verbucht", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerbuchtLD { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "VerbuchtLD", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PensumProzent { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "PensumProzent", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSollArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZSollArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZMonatsSaldo { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZMonatsSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZSaldo { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZKorrekturen { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GZAusbezahlteUeberstunden { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "GZAusbezahlteUeberstunden", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SLIstArbeitszeitProMonat { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "SLIstArbeitszeitProMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBezogenMonat { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienBezogenMonat", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienSaldo { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienUebertragVorjahr { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienUebertragVorjahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienAnspruchProJahr { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienAnspruchProJahr", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienBisherBezogen { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienBisherBezogen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienZugabenKuerzungen { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienZugabenKuerzungen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FerienKorrekturen { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "FerienKorrekturen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zeitraum { get { return new DBOColumnDef(fnBDEGetVisumKostenstelleView.TableDef, "Zeitraum", typeof(string), false, false, false, 50, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSBudget{
/// <summary>
/// Gets the table definition for fnBFSBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSBudget", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgBudgetID { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgBudgetID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgPositionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgKategorieCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartCode { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BgPositionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnBFSBudget.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnBFSBudget.TableDef, "Betrag", typeof(decimal), false, false, false, 9, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VarName { get { return new DBOColumnDef(fnBFSBudget.TableDef, "VarName", typeof(string), false, false, false, 10, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetKrankenkasseDaten{
/// <summary>
/// Gets the table definition for fnBFSGetKrankenkasseDaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetKrankenkasseDaten", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnBFSGetKrankenkasseDaten.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGBetrag { get { return new DBOColumnDef(fnBFSGetKrankenkasseDaten.TableDef, "KVGBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGReduktion { get { return new DBOColumnDef(fnBFSGetKrankenkasseDaten.TableDef, "KVGReduktion", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KVGKasse { get { return new DBOColumnDef(fnBFSGetKrankenkasseDaten.TableDef, "KVGKasse", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VVGBetrag { get { return new DBOColumnDef(fnBFSGetKrankenkasseDaten.TableDef, "VVGBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetRelevanteBuchungen{
/// <summary>
/// Gets the table definition for fnBFSGetRelevanteBuchungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetRelevanteBuchungen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaProzessCode { get { return new DBOColumnDef(fnBFSGetRelevanteBuchungen.TableDef, "FaProzessCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnBFSGetRelevanteBuchungen.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausgleichsdatum { get { return new DBOColumnDef(fnBFSGetRelevanteBuchungen.TableDef, "Ausgleichsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnBFSGetRelevanteBuchungen.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID_Glaeubiger { get { return new DBOColumnDef(fnBFSGetRelevanteBuchungen.TableDef, "BaPersonID_Glaeubiger", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetZahlungDatum{
/// <summary>
/// Gets the table definition for fnBFSGetZahlungDatum
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetZahlungDatum", "", false); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ErsteAuszahlung { get { return new DBOColumnDef(fnBFSGetZahlungDatum.TableDef, "ErsteAuszahlung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LetzteAuszahlung { get { return new DBOColumnDef(fnBFSGetZahlungDatum.TableDef, "LetzteAuszahlung", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSMonatsBelege{
/// <summary>
/// Gets the table definition for fnBFSMonatsBelege
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSMonatsBelege", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartCode { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BgPositionsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BFSVariable { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BFSVariable", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KontoNr { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "KontoNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NettoBetrag { get { return new DBOColumnDef(fnBFSMonatsBelege.TableDef, "NettoBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDlgPersonSuchenKGS{
/// <summary>
/// Gets the table definition for fnDlgPersonSuchenKGS
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDlgPersonSuchenKGS", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID_ { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "BaPersonID$", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Nr_ { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "Nr.", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "Strasse", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "Ort", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburt { get { return new DBOColumnDef(fnDlgPersonSuchenKGS.TableDef, "Geburt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDlgPersonSuchenKGSGastrecht{
/// <summary>
/// Gets the table definition for fnDlgPersonSuchenKGSGastrecht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDlgPersonSuchenKGSGastrecht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID_ { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "BaPersonID$", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Nr_ { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "Nr.", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "Strasse", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "Ort", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburt { get { return new DBOColumnDef(fnDlgPersonSuchenKGSGastrecht.TableDef, "Geburt", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_GridRowID{
/// <summary>
/// Gets the table definition for fnDynaValue_GridRowID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDynaValue_GridRowID", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnDynaValue_GridRowID.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(fnDynaValue_GridRowID.TableDef, "FaPhaseID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GridRowID { get { return new DBOColumnDef(fnDynaValue_GridRowID.TableDef, "GridRowID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_LOV{
/// <summary>
/// Gets the table definition for fnDynaValue_LOV
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDynaValue_LOV", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnDynaValue_LOV.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(fnDynaValue_LOV.TableDef, "FaPhaseID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GridRowID { get { return new DBOColumnDef(fnDynaValue_LOV.TableDef, "GridRowID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnDynaValue_LOV.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnDynaValue_LOV.TableDef, "Text", typeof(string), false, false, false, 200, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_LOVList{
/// <summary>
/// Gets the table definition for fnDynaValue_LOVList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDynaValue_LOVList", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnDynaValue_LOVList.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(fnDynaValue_LOVList.TableDef, "FaPhaseID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GridRowID { get { return new DBOColumnDef(fnDynaValue_LOVList.TableDef, "GridRowID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Codes { get { return new DBOColumnDef(fnDynaValue_LOVList.TableDef, "Codes", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnDynaValue_LOVList.TableDef, "Text", typeof(string), false, false, false, 1000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_Value{
/// <summary>
/// Gets the table definition for fnDynaValue_Value
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDynaValue_Value", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnDynaValue_Value.TableDef, "FaLeistungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef FaPhaseID { get { return new DBOColumnDef(fnDynaValue_Value.TableDef, "FaPhaseID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef GridRowID { get { return new DBOColumnDef(fnDynaValue_Value.TableDef, "GridRowID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(fnDynaValue_Value.TableDef, "Value", typeof(object), false, false, false, 8016, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnFaGetBeteiligtePersonenInstitutionen{
/// <summary>
/// Gets the table definition for fnFaGetBeteiligtePersonenInstitutionen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFaGetBeteiligtePersonenInstitutionen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID_ { get { return new DBOColumnDef(fnFaGetBeteiligtePersonenInstitutionen.TableDef, "ID$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnFaGetBeteiligtePersonenInstitutionen.TableDef, "Code", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnFaGetBeteiligtePersonenInstitutionen.TableDef, "Text", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Typ { get { return new DBOColumnDef(fnFaGetBeteiligtePersonenInstitutionen.TableDef, "Typ", typeof(string), false, false, false, 50, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnFbGetBarauszahlungListe{
/// <summary>
/// Gets the table definition for fnFbGetBarauszahlungListe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFbGetBarauszahlungListe", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungAuftragID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbBarauszahlungAuftragID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungZyklusID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbBarauszahlungZyklusID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbPeriodeID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbPeriodeID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbBuchungID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbBuchungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandant { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Mandant", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MandantVornameName { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "MandantVornameName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersStrasse { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersStrasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersPLZ { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersPLZ", typeof(string), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersOrt { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersOrt", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersGeburtsdatum { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersGeburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersAHVNummer { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersAHVNummer", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PersVersNummer { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "PersVersNummer", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "BelegNr", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Stichtag { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Stichtag", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuszahlungAb { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "AuszahlungAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuszahlungBis { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "AuszahlungBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BewilligtDurch { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "BewilligtDurch", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auszahldatum { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Auszahldatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StatusCode { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "StatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "SollKtoNr", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SollKtoName { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "SollKtoName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "HabenKtoNr", typeof(string), false, false, false, 25, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HabenKtoName { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "HabenKtoName", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Buchungstext", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Mandatstraeger { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "Mandatstraeger", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AuszahlungDurch { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "AuszahlungDurch", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungAuftragTS { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbBarauszahlungAuftragTS", typeof(byte[]), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FbBarauszahlungZyklusTS { get { return new DBOColumnDef(fnFbGetBarauszahlungListe.TableDef, "FbBarauszahlungZyklusTS", typeof(byte[]), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetAddress{
/// <summary>
/// Gets the table definition for fnGetAddress
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetAddress", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaAdresseID { get { return new DBOColumnDef(fnGetAddress.TableDef, "BaAdresseID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnGetAddress.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(fnGetAddress.TableDef, "BaInstitutionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlatzierungInstID { get { return new DBOColumnDef(fnGetAddress.TableDef, "PlatzierungInstID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmMandantID { get { return new DBOColumnDef(fnGetAddress.TableDef, "VmMandantID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VmPriMaID { get { return new DBOColumnDef(fnGetAddress.TableDef, "VmPriMaID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebID { get { return new DBOColumnDef(fnGetAddress.TableDef, "KaBetriebID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KaBetriebKontaktID { get { return new DBOColumnDef(fnGetAddress.TableDef, "KaBetriebKontaktID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaLandID { get { return new DBOColumnDef(fnGetAddress.TableDef, "BaLandID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumVon { get { return new DBOColumnDef(fnGetAddress.TableDef, "DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DatumBis { get { return new DBOColumnDef(fnGetAddress.TableDef, "DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Gesperrt { get { return new DBOColumnDef(fnGetAddress.TableDef, "Gesperrt", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AdresseCode { get { return new DBOColumnDef(fnGetAddress.TableDef, "AdresseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef CareOf { get { return new DBOColumnDef(fnGetAddress.TableDef, "CareOf", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Zusatz { get { return new DBOColumnDef(fnGetAddress.TableDef, "Zusatz", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ZuhandenVon { get { return new DBOColumnDef(fnGetAddress.TableDef, "ZuhandenVon", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(fnGetAddress.TableDef, "Strasse", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HausNr { get { return new DBOColumnDef(fnGetAddress.TableDef, "HausNr", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Postfach { get { return new DBOColumnDef(fnGetAddress.TableDef, "Postfach", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef PostfachOhneNr { get { return new DBOColumnDef(fnGetAddress.TableDef, "PostfachOhneNr", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(fnGetAddress.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(fnGetAddress.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrtschaftCode { get { return new DBOColumnDef(fnGetAddress.TableDef, "OrtschaftCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kanton { get { return new DBOColumnDef(fnGetAddress.TableDef, "Kanton", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezirk { get { return new DBOColumnDef(fnGetAddress.TableDef, "Bezirk", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnGetAddress.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PlatzierungsartCode { get { return new DBOColumnDef(fnGetAddress.TableDef, "PlatzierungsartCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnStatusCode { get { return new DBOColumnDef(fnGetAddress.TableDef, "WohnStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WohnungsgroesseCode { get { return new DBOColumnDef(fnGetAddress.TableDef, "WohnungsgroesseCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef MigrationKA { get { return new DBOColumnDef(fnGetAddress.TableDef, "MigrationKA", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerID { get { return new DBOColumnDef(fnGetAddress.TableDef, "VerID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(fnGetAddress.TableDef, "Creator", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(fnGetAddress.TableDef, "Created", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(fnGetAddress.TableDef, "Modifier", typeof(string), false, false, false, 50, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(fnGetAddress.TableDef, "Modified", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetBaBankUpdated{
/// <summary>
/// Gets the table definition for fnGetBaBankUpdated
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetBaBankUpdated", "", false); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaBankID { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "BaBankID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "Name", typeof(string), false, false, false, 70, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Strasse { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "Strasse", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PLZ { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "PLZ", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ort { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "Ort", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClearingNr { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "ClearingNr", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FilialeNr { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "FilialeNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HauptsitzBCL { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "HauptsitzBCL", typeof(string), false, false, false, 15, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef PCKontoNr { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "PCKontoNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GueltigAb { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "GueltigAb", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Land { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "Land", typeof(string), false, false, false, 2, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ClearingNrNeu { get { return new DBOColumnDef(fnGetBaBankUpdated.TableDef, "ClearingNrNeu", typeof(string), false, false, false, 15, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetBaInstitutionByBaInstitutionTypList{
/// <summary>
/// Gets the table definition for fnGetBaInstitutionByBaInstitutionTypList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetBaInstitutionByBaInstitutionTypList", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaInstitutionID { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "BaInstitutionID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef InstitutionNr { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "InstitutionNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionArtCode { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "BaInstitutionArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Aktiv { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Aktiv", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Debitor { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Debitor", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kreditor { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Kreditor", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeinSerienbrief { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "KeinSerienbrief", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ManuelleAnrede { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "ManuelleAnrede", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Anrede { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Anrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Briefanrede { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Briefanrede", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Titel { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Titel", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Name", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Vorname { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Vorname", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GeschlechtCode { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "GeschlechtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Geburtsdatum { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Geburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Versichertennummer { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Versichertennummer", typeof(string), false, false, false, 18, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Telefon", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon2 { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Telefon2", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Telefon3 { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Telefon3", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Fax { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Fax", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EMail { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "EMail", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Homepage { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Homepage", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SprachCode { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "SprachCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Creator { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Creator", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Created { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Created", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Modifier { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Modifier", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Modified { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "Modified", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaInstitutionTS { get { return new DBOColumnDef(fnGetBaInstitutionByBaInstitutionTypList.TableDef, "BaInstitutionTS", typeof(byte[]), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnits{
/// <summary>
/// Gets the table definition for fnGetCantonsOrgUnits
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetCantonsOrgUnits", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(fnGetCantonsOrgUnits.TableDef, "OrgUnitID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ItemName { get { return new DBOColumnDef(fnGetCantonsOrgUnits.TableDef, "ItemName", typeof(string), false, false, false, 100, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef Level { get { return new DBOColumnDef(fnGetCantonsOrgUnits.TableDef, "Level", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnitsPersons{
/// <summary>
/// Gets the table definition for fnGetCantonsOrgUnitsPersons
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetCantonsOrgUnitsPersons", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnGetCantonsOrgUnitsPersons.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnitsUsers{
/// <summary>
/// Gets the table definition for fnGetCantonsOrgUnitsUsers
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetCantonsOrgUnitsUsers", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UserID { get { return new DBOColumnDef(fnGetCantonsOrgUnitsUsers.TableDef, "UserID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Name { get { return new DBOColumnDef(fnGetCantonsOrgUnitsUsers.TableDef, "Name", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kuerzel { get { return new DBOColumnDef(fnGetCantonsOrgUnitsUsers.TableDef, "Kürzel", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef LogonName { get { return new DBOColumnDef(fnGetCantonsOrgUnitsUsers.TableDef, "LogonName", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef Abteilung { get { return new DBOColumnDef(fnGetCantonsOrgUnitsUsers.TableDef, "Abteilung", typeof(string), false, false, false, 255, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetInstStammUserORGList{
/// <summary>
/// Gets the table definition for fnGetInstStammUserORGList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetInstStammUserORGList", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(fnGetInstStammUserORGList.TableDef, "OrgUnitID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>

public static DBOColumnDef ItemName { get { return new DBOColumnDef(fnGetInstStammUserORGList.TableDef, "ItemName", typeof(string), false, false, false, 100, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetStandardBookmarks{
/// <summary>
/// Gets the table definition for fnGetStandardBookmarks
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetStandardBookmarks", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BookmarkName { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "BookmarkName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DisplayName { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "DisplayName", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Category { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "Category", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BookmarkCode { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "BookmarkCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef TableColumn { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "TableColumn", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SQL { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "SQL", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ReplaceCode { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "ReplaceCode", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ColumnDisplayText { get { return new DBOColumnDef(fnGetStandardBookmarks.TableDef, "ColumnDisplayText", typeof(string), false, false, false, 50, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnIkGetIkForderungBgKostenart{
/// <summary>
/// Gets the table definition for fnIkGetIkForderungBgKostenart
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIkGetIkForderungBgKostenart", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(fnIkGetIkForderungBgKostenart.TableDef, "ID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef IkForderungBgKostenartHistID { get { return new DBOColumnDef(fnIkGetIkForderungBgKostenart.TableDef, "IkForderungBgKostenartHistID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKostenartID { get { return new DBOColumnDef(fnIkGetIkForderungBgKostenart.TableDef, "BgKostenartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKaGetAustrittDatumCode{
/// <summary>
/// Gets the table definition for fnKaGetAustrittDatumCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKaGetAustrittDatumCode", "", false); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDatum { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCode { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCodeText { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittCodeText", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCodeTextKurz { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittCodeTextKurz", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittCodeTextLang { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittCodeTextLang", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDurchOrg { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittDurchOrg", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittDurchVers { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittDurchVers", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AustrittGegenseitig { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "AustrittGegenseitig", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef UKCheckID { get { return new DBOColumnDef(fnKaGetAustrittDatumCode.TableDef, "UKCheckID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbAuszahlTermine{
/// <summary>
/// Gets the table definition for fnKbAuszahlTermine
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbAuszahlTermine", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgAuszahlungsTerminCode { get { return new DBOColumnDef(fnKbAuszahlTermine.TableDef, "BgAuszahlungsTerminCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgWochentagCode { get { return new DBOColumnDef(fnKbAuszahlTermine.TableDef, "BgWochentagCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Datum { get { return new DBOColumnDef(fnKbAuszahlTermine.TableDef, "Datum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetRelevanteBuchungen{
/// <summary>
/// Gets the table definition for fnKbGetRelevanteBuchungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetRelevanteBuchungen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "KbBuchungKostenartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "KbBuchungID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef SollKtoNr { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "SollKtoNr", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>

public static DBOColumnDef HabenKtoNr { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "HabenKtoNr", typeof(string), false, false, false, 10, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "Betrag", typeof(decimal), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef Ausgabe { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "Ausgabe", typeof(bool), false, false, false, 1, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef BelegDatum { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "BelegDatum", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GemeindeCode { get { return new DBOColumnDef(fnKbGetRelevanteBuchungen.TableDef, "GemeindeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetWVReportData{
/// <summary>
/// Gets the table definition for fnKbGetWVReportData
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetWVReportData", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef Id_ { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Id$", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef FaLeistungID { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "FaLeistungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KostenstelleNr { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "KostenstelleNr", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_DatumVon { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_DatumVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_DatumBis { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_DatumBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_PersonName { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_PersonName", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_PersonGeburtsdatum { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_PersonGeburtsdatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_Heimatgemeinden { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_Heimatgemeinden", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_Kantone { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_Kantone", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_Wohnort { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_Wohnort", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_WohnkantonNr { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_WohnkantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_HeimatkantonNr { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_HeimatkantonNr", typeof(string), false, false, false, 50, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Header_Bemerkung { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Header_Bemerkung", typeof(string), false, false, false, -1, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag1 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag1", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag2 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag2", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag3 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag3", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag4 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag4", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag5 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag5", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag5a { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag5a", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag5b { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag5b", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag5c { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag5c", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag6 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag6", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_TotalAusgaben { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_TotalAusgaben", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag8 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag8", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag8a { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag8a", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag9 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag9", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag10 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag10", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag11 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag11", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_TotalEinnahmen { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_TotalEinnahmen", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag14 { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag14", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Sub_Betrag15Total { get { return new DBOColumnDef(fnKbGetWVReportData.TableDef, "Sub_Betrag15Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetZugehoerigeBelegNr{
/// <summary>
/// Gets the table definition for fnKbGetZugehoerigeBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetZugehoerigeBelegNr", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OriginalBelegNr { get { return new DBOColumnDef(fnKbGetZugehoerigeBelegNr.TableDef, "OriginalBelegNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef StornoBelegNr { get { return new DBOColumnDef(fnKbGetZugehoerigeBelegNr.TableDef, "StornoBelegNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NeubuchungBelegNr { get { return new DBOColumnDef(fnKbGetZugehoerigeBelegNr.TableDef, "NeubuchungBelegNr", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbWVEinzelposten_WVEinheitenProBuchung{
/// <summary>
/// Gets the table definition for fnKbWVEinzelposten_WVEinheitenProBuchung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbWVEinzelposten_WVEinheitenProBuchung", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ResultID { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "ResultID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "KbBuchungKostenartID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaWVCodeID { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "BaWVCodeID", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef AnzahlTageVonBis { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "AnzahlTageVonBis", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ProzentAnteil { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "ProzentAnteil", typeof(System.Nullable<float>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef WEPDatumVon { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPDatumVon", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>

public static DBOColumnDef WEPDatumBis { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPDatumBis", typeof(System.DateTime), false, false, false, 8, false, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WEPSplittingDurchWVLaufDatumBis { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPSplittingDurchWVLaufDatumBis", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef WEPBgSplittingArtCode { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPBgSplittingArtCode", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WEPBetrag { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPBetrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef WEPStatus { get { return new DBOColumnDef(fnKbWVEinzelposten_WVEinheitenProBuchung.TableDef, "WEPStatus", typeof(string), false, false, false, 2000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbWVGetBuchungKandidaten{
/// <summary>
/// Gets the table definition for fnKbWVGetBuchungKandidaten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbWVGetBuchungKandidaten", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef KbBuchungKostenartID { get { return new DBOColumnDef(fnKbWVGetBuchungKandidaten.TableDef, "KbBuchungKostenartID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnQryGetKostenstelleDropDown{
/// <summary>
/// Gets the table definition for fnQryGetKostenstelleDropDown
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnQryGetKostenstelleDropDown", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnQryGetKostenstelleDropDown.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnQryGetKostenstelleDropDown.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Kostenstelle_ { get { return new DBOColumnDef(fnQryGetKostenstelleDropDown.TableDef, "Kostenstelle$", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnQryGetMitarbeiterDropDown{
/// <summary>
/// Gets the table definition for fnQryGetMitarbeiterDropDown
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnQryGetMitarbeiterDropDown", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Code { get { return new DBOColumnDef(fnQryGetMitarbeiterDropDown.TableDef, "Code", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Text { get { return new DBOColumnDef(fnQryGetMitarbeiterDropDown.TableDef, "Text", typeof(string), false, false, false, 255, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnSplit{
/// <summary>
/// Gets the table definition for fnSplit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnSplit", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Value { get { return new DBOColumnDef(fnSplit.TableDef, "Value", typeof(string), false, false, false, -1, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnSplitStringToValues{
/// <summary>
/// Gets the table definition for fnSplitStringToValues
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnSplitStringToValues", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef OccurenceID { get { return new DBOColumnDef(fnSplitStringToValues.TableDef, "OccurenceID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef SplitValue { get { return new DBOColumnDef(fnSplitStringToValues.TableDef, "SplitValue", typeof(string), false, false, false, 200, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnTmGeschwister{
/// <summary>
/// Gets the table definition for fnTmGeschwister
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnTmGeschwister", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnTmGeschwister.TableDef, "BaPersonID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudget{
/// <summary>
/// Gets the table definition for fnWhGetBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetBudget", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgAuszahlungPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragRechnung { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BetragRechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KOA { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "KOA", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dritte { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Dritte", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnWhGetBudget.TableDef, "Bemerkung", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudgetML{
/// <summary>
/// Gets the table definition for fnWhGetBudgetML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetBudgetML", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgPositionID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgPositionsartID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgPositionsartID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgAuszahlungPersonID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgAuszahlungPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragRechnung { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BetragRechnung", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KOA { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "KOA", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSpezkontoID { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "BgSpezkontoID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Dritte { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Dritte", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnWhGetBudgetML.TableDef, "Bemerkung", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudgetUebersicht{
/// <summary>
/// Gets the table definition for fnWhGetBudgetUebersicht
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetBudgetUebersicht", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bemerkung { get { return new DBOColumnDef(fnWhGetBudgetUebersicht.TableDef, "Bemerkung", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplan{
/// <summary>
/// Gets the table definition for fnWhGetFinanzplan
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetFinanzplan", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "SortKey", typeof(int), false, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Info { get { return new DBOColumnDef(fnWhGetFinanzplan.TableDef, "Info", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplanIndent{
/// <summary>
/// Gets the table definition for fnWhGetFinanzplanIndent
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetFinanzplanIndent", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Info { get { return new DBOColumnDef(fnWhGetFinanzplanIndent.TableDef, "Info", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplanML{
/// <summary>
/// Gets the table definition for fnWhGetFinanzplanML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetFinanzplanML", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Rec_ID { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Rec_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Parent_ID { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Parent_ID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "SortKey", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Style { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Style", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgKategorieCode { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "BgKategorieCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgGruppeCode { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "BgGruppeCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Bezeichnung { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Bezeichnung", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Total { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Total", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Info { get { return new DBOColumnDef(fnWhGetFinanzplanML.TableDef, "Info", typeof(string), false, false, false, 4000, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhKennzahlen{
/// <summary>
/// Gets the table definition for fnWhKennzahlen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhKennzahlen", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HgGrundbedarf { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "HgGrundbedarf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UeGrundbedarf { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "UeGrundbedarf", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HgWohnkosten { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "HgWohnkosten", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UeWohnkosten { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "UeWohnkosten", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef HgZuschlagI { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "HgZuschlagI", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef UeZuschlagI { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "UeZuschlagI", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef B23Amount { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "B23Amount", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GBUseHgUeFactor { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "GBUseHgUeFactor", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RntUseHgUeFactor { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "RntUseHgUeFactor", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef GBHgUeFactor { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "GBHgUeFactor", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RntHgUeFactor { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "RntHgUeFactor", typeof(System.Nullable<double>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef RefDate { get { return new DBOColumnDef(fnWhKennzahlen.TableDef, "RefDate", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhKontoauszug{
/// <summary>
/// Gets the table definition for fnWhKontoauszug
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhKontoauszug", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "ID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgName { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "OrgName", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgAdresse { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "OrgAdresse", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef OrgPLZOrt { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "OrgPLZOrt", typeof(string), false, false, false, 1000, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef NeueSeite { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "NeueSeite", typeof(System.Nullable<bool>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef DruckDatum { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "DruckDatum", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auswertungszeitraum { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Auswertungszeitraum", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbBuchungID { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "KbBuchungID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegDatum { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "BelegDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValutaDatum { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "ValutaDatum", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BaPersonID { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "BaPersonID", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Klient { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Klient", typeof(string), false, false, false, 200, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BelegNr { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "BelegNr", typeof(string), false, false, false, 20, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LA { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "LA", typeof(string), false, false, false, 10, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 110]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef LAText { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "LAText", typeof(string), false, false, false, 110, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 400]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Buchungstext { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Buchungstext", typeof(string), false, false, false, 400, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeVon { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "VerwPeriodeVon", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef VerwPeriodeBis { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "VerwPeriodeBis", typeof(System.Nullable<System.DateTime>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BgSplittingArtCode { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "BgSplittingArtCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Betrag", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef BetragSaldo { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "BetragSaldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Betrag100 { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Betrag100", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef EA { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "EA", typeof(System.Nullable<char>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KbBuchungStatusCode { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "KbBuchungStatusCode", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Doc { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Doc", typeof(System.Nullable<char>), false, false, false, 1, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Auszahlart { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Auszahlart", typeof(string), false, false, false, 100, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KreditorDebitor { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "KreditorDebitor", typeof(string), false, false, false, 2000, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Einnahme { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Einnahme", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Ausgabe { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Ausgabe", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Saldo { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "Saldo", typeof(System.Nullable<decimal>), false, false, false, 8, true, "", ""); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef SortKey { get { return new DBOColumnDef(fnWhKontoauszug.TableDef, "SortKey", typeof(System.Nullable<int>), false, false, false, 4, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXConfigChild{
/// <summary>
/// Gets the table definition for fnXConfigChild
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXConfigChild", "", false); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef KeyPath { get { return new DBOColumnDef(fnXConfigChild.TableDef, "KeyPath", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef Child { get { return new DBOColumnDef(fnXConfigChild.TableDef, "Child", typeof(string), false, false, false, 500, true, "", ""); } }


/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef ValueVar { get { return new DBOColumnDef(fnXConfigChild.TableDef, "ValueVar", typeof(object), false, false, false, 8016, true, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXOrgUnitsOfUser{
/// <summary>
/// Gets the table definition for fnXOrgUnitsOfUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXOrgUnitsOfUser", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>

public static DBOColumnDef OrgUnitID { get { return new DBOColumnDef(fnXOrgUnitsOfUser.TableDef, "OrgUnitID", typeof(int), false, false, false, 4, false, "", ""); } }

}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXRowMerge_PersonCheck{
/// <summary>
/// Gets the table definition for fnXRowMerge_PersonCheck
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXRowMerge_PersonCheck", "", false); } }


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>

public static DBOColumnDef ID { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "ID", typeof(int), true, false, false, 4, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>

public static DBOColumnDef TableName { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "TableName", typeof(string), false, false, false, 255, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>

public static DBOColumnDef Problem { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "Problem", typeof(string), false, false, false, 200, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>

public static DBOColumnDef Solution { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "Solution", typeof(string), false, false, false, -1, false, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JumpToPathA { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "JumpToPathA", typeof(string), false, false, false, 1500, true, "", ""); } }


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>

public static DBOColumnDef JumpToPathB { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "JumpToPathB", typeof(string), false, false, false, 1500, true, "", ""); } }


/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>

public static DBOColumnDef SelectDeleteOne { get { return new DBOColumnDef(fnXRowMerge_PersonCheck.TableDef, "SelectDeleteOne", typeof(bool), false, false, false, 1, false, "", ""); } }

}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fn_diagramobjects{
/// <summary>
/// Gets the table definition for fn_diagramobjects
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fn_diagramobjects", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnAySpezkonto{
/// <summary>
/// Gets the table definition for fnAySpezkonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnAySpezkonto", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaCKBaPersonRelationIntegrity{
/// <summary>
/// Gets the table definition for fnBaCKBaPersonRelationIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaCKBaPersonRelationIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaInstitution{
/// <summary>
/// Gets the table definition for fnBaGetAnredeAnschriftBaInstitution
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetAnredeAnschriftBaInstitution", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaInstitutionKontakt{
/// <summary>
/// Gets the table definition for fnBaGetAnredeAnschriftBaInstitutionKontakt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetAnredeAnschriftBaInstitutionKontakt", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaPerson{
/// <summary>
/// Gets the table definition for fnBaGetAnredeAnschriftBaPerson
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetAnredeAnschriftBaPerson", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaAdresseID{
/// <summary>
/// Gets the table definition for fnBaGetBaAdresseID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetBaAdresseID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaInstitutionTypen{
/// <summary>
/// Gets the table definition for fnBaGetBaInstitutionTypen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetBaInstitutionTypen", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaZahlungswegID{
/// <summary>
/// Gets the table definition for fnBaGetBaZahlungswegID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetBaZahlungswegID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetPostfachText{
/// <summary>
/// Gets the table definition for fnBaGetPostfachText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGetPostfachText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGleicheAdresse{
/// <summary>
/// Gets the table definition for fnBaGleicheAdresse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaGleicheAdresse", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaRelation{
/// <summary>
/// Gets the table definition for fnBaRelation
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBaRelation", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEConvertMoneyToHHMM{
/// <summary>
/// Gets the table definition for fnBDEConvertMoneyToHHMM
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEConvertMoneyToHHMM", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEExportPlausibilisierungsfehler{
/// <summary>
/// Gets the table definition for fnBDEExportPlausibilisierungsfehler
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEExportPlausibilisierungsfehler", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetAusbezahlteUeberstunden{
/// <summary>
/// Gets the table definition for fnBDEGetAusbezahlteUeberstunden
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetAusbezahlteUeberstunden", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetErfassteFerien{
/// <summary>
/// Gets the table definition for fnBDEGetErfassteFerien
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetErfassteFerien", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienAnspruch{
/// <summary>
/// Gets the table definition for fnBDEGetFerienAnspruch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetFerienAnspruch", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienKorrekturen{
/// <summary>
/// Gets the table definition for fnBDEGetFerienKorrekturen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetFerienKorrekturen", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienSaldo{
/// <summary>
/// Gets the table definition for fnBDEGetFerienSaldo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetFerienSaldo", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienZugabenKuerzungen{
/// <summary>
/// Gets the table definition for fnBDEGetFerienZugabenKuerzungen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetFerienZugabenKuerzungen", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetGleitzeitKorrekturen{
/// <summary>
/// Gets the table definition for fnBDEGetGleitzeitKorrekturen
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetGleitzeitKorrekturen", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetGleitzeitSaldo{
/// <summary>
/// Gets the table definition for fnBDEGetGleitzeitSaldo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetGleitzeitSaldo", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKostenartPerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistKostenartPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistKostenartPerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKostenstellePerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistKostenstellePerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistKostenstellePerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKSTOrgUnitItemName{
/// <summary>
/// Gets the table definition for fnBDEGetHistKSTOrgUnitItemName
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistKSTOrgUnitItemName", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistLAValue{
/// <summary>
/// Gets the table definition for fnBDEGetHistLAValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistLAValue", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistLeistungLohnlaufNrPerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistLeistungLohnlaufNrPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistLeistungLohnlaufNrPerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistMandantenNrPerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistMandantenNrPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistMandantenNrPerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistStundenLohnlaufNrPerDate{
/// <summary>
/// Gets the table definition for fnBDEGetHistStundenLohnlaufNrPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetHistStundenLohnlaufNrPerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetLohnartText{
/// <summary>
/// Gets the table definition for fnBDEGetLohnartText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetLohnartText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetNextExportMonth{
/// <summary>
/// Gets the table definition for fnBDEGetNextExportMonth
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetNextExportMonth", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetOrgUnitIDFromMandantenNr{
/// <summary>
/// Gets the table definition for fnBDEGetOrgUnitIDFromMandantenNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetOrgUnitIDFromMandantenNr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetPensumPercent{
/// <summary>
/// Gets the table definition for fnBDEGetPensumPercent
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetPensumPercent", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetSollProMonat{
/// <summary>
/// Gets the table definition for fnBDEGetSollProMonat
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetSollProMonat", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetSollProTag{
/// <summary>
/// Gets the table definition for fnBDEGetSollProTag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetSollProTag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetWeekDayFromDate{
/// <summary>
/// Gets the table definition for fnBDEGetWeekDayFromDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetWeekDayFromDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetZLEHoursForModule{
/// <summary>
/// Gets the table definition for fnBDEGetZLEHoursForModule
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEGetZLEHoursForModule", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEIsMonatFreigegeben{
/// <summary>
/// Gets the table definition for fnBDEIsMonatFreigegeben
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEIsMonatFreigegeben", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEIsZeitrechnerRangeValid{
/// <summary>
/// Gets the table definition for fnBDEIsZeitrechnerRangeValid
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBDEIsZeitrechnerRangeValid", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSBetrag{
/// <summary>
/// Gets the table definition for fnBFSBetrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSBetrag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSCode{
/// <summary>
/// Gets the table definition for fnBFSCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSConcatDossierNr{
/// <summary>
/// Gets the table definition for fnBFSConcatDossierNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSConcatDossierNr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetAlbvBetrag{
/// <summary>
/// Gets the table definition for fnBFSGetAlbvBetrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetAlbvBetrag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetKatalogVersion{
/// <summary>
/// Gets the table definition for fnBFSGetKatalogVersion
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetKatalogVersion", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetLeistungsartCode{
/// <summary>
/// Gets the table definition for fnBFSGetLeistungsartCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSGetLeistungsartCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSIsNewDossierGap{
/// <summary>
/// Gets the table definition for fnBFSIsNewDossierGap
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSIsNewDossierGap", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSLeistungsartTOProzess{
/// <summary>
/// Gets the table definition for fnBFSLeistungsartTOProzess
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSLeistungsartTOProzess", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSLetzteBudget{
/// <summary>
/// Gets the table definition for fnBFSLetzteBudget
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBFSLetzteBudget", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetCurrentOrPreviousFinanzplanID{
/// <summary>
/// Gets the table definition for fnBgGetCurrentOrPreviousFinanzplanID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBgGetCurrentOrPreviousFinanzplanID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetKostenartIDByKontoNr{
/// <summary>
/// Gets the table definition for fnBgGetKostenartIDByKontoNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBgGetKostenartIDByKontoNr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetPositionenCount{
/// <summary>
/// Gets the table definition for fnBgGetPositionenCount
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBgGetPositionenCount", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetValutaTermine{
/// <summary>
/// Gets the table definition for fnBgGetValutaTermine
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBgGetValutaTermine", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgSpezkonto{
/// <summary>
/// Gets the table definition for fnBgSpezkonto
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnBgSpezkonto", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCheckMod10Nummer{
/// <summary>
/// Gets the table definition for fnCheckMod10Nummer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCheckMod10Nummer", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCheckReferenznummer{
/// <summary>
/// Gets the table definition for fnCheckReferenznummer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCheckReferenznummer", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCKXLovCodeIntegrity{
/// <summary>
/// Gets the table definition for fnCKXLovCodeIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCKXLovCodeIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCombineKSTOrgUnitItemName{
/// <summary>
/// Gets the table definition for fnCombineKSTOrgUnitItemName
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCombineKSTOrgUnitItemName", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCombineRTFTexts{
/// <summary>
/// Gets the table definition for fnCombineRTFTexts
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCombineRTFTexts", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCSVSplit{
/// <summary>
/// Gets the table definition for fnCSVSplit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnCSVSplit", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateAsVarchar{
/// <summary>
/// Gets the table definition for fnDateAsVarchar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDateAsVarchar", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateChangeToWorkingDay{
/// <summary>
/// Gets the table definition for fnDateChangeToWorkingDay
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDateChangeToWorkingDay", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateLong{
/// <summary>
/// Gets the table definition for fnDateLong
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDateLong", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateOf{
/// <summary>
/// Gets the table definition for fnDateOf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDateOf", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateSerial{
/// <summary>
/// Gets the table definition for fnDateSerial
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDateSerial", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDatumUeberschneidung{
/// <summary>
/// Gets the table definition for fnDatumUeberschneidung
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDatumUeberschneidung", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDaysInMonthOf{
/// <summary>
/// Gets the table definition for fnDaysInMonthOf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDaysInMonthOf", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDynaFieldID{
/// <summary>
/// Gets the table definition for fnDynaFieldID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnDynaFieldID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaCKFaLeistungZugriffFaLeistungUserIntegrity{
/// <summary>
/// Gets the table definition for fnFaCKFaLeistungZugriffFaLeistungUserIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFaCKFaLeistungZugriffFaLeistungUserIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaGetBaPersonIdFalltraeger{
/// <summary>
/// Gets the table definition for fnFaGetBaPersonIdFalltraeger
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFaGetBaPersonIdFalltraeger", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaGetKategorie{
/// <summary>
/// Gets the table definition for fnFaGetKategorie
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFaGetKategorie", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFbGetBuchungstext{
/// <summary>
/// Gets the table definition for fnFbGetBuchungstext
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFbGetBuchungstext", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFirstDayOf{
/// <summary>
/// Gets the table definition for fnFirstDayOf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFirstDayOf", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFormatNumber{
/// <summary>
/// Gets the table definition for fnFormatNumber
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnFormatNumber", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAdressText{
/// <summary>
/// Gets the table definition for fnGetAdressText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetAdressText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAge{
/// <summary>
/// Gets the table definition for fnGetAge
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetAge", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAppCodeNamedValue{
/// <summary>
/// Gets the table definition for fnGetAppCodeNamedValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetAppCodeNamedValue", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDateFromInts{
/// <summary>
/// Gets the table definition for fnGetDateFromInts
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetDateFromInts", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDBRowCreatorModifier{
/// <summary>
/// Gets the table definition for fnGetDBRowCreatorModifier
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetDBRowCreatorModifier", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDefaultGemeindeCode{
/// <summary>
/// Gets the table definition for fnGetDefaultGemeindeCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetDefaultGemeindeCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetEhepaarName{
/// <summary>
/// Gets the table definition for fnGetEhepaarName
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetEhepaarName", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetForeignKeyColumnsOfForeignKey{
/// <summary>
/// Gets the table definition for fnGetForeignKeyColumnsOfForeignKey
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetForeignKeyColumnsOfForeignKey", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetGenderMLTitle{
/// <summary>
/// Gets the table definition for fnGetGenderMLTitle
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetGenderMLTitle", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetGenderMLTitleMF{
/// <summary>
/// Gets the table definition for fnGetGenderMLTitleMF
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetGenderMLTitleMF", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetHauptpersonFuerMitglied{
/// <summary>
/// Gets the table definition for fnGetHauptpersonFuerMitglied
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetHauptpersonFuerMitglied", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetHistKGSOfUserOrOrgUnit{
/// <summary>
/// Gets the table definition for fnGetHistKGSOfUserOrOrgUnit
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetHistKGSOfUserOrOrgUnit", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetKeyColumnsOfIndex{
/// <summary>
/// Gets the table definition for fnGetKeyColumnsOfIndex
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetKeyColumnsOfIndex", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetLastFirstName{
/// <summary>
/// Gets the table definition for fnGetLastFirstName
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetLastFirstName", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetLOVMLText{
/// <summary>
/// Gets the table definition for fnGetLOVMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetLOVMLText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLText{
/// <summary>
/// Gets the table definition for fnGetMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetMLText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextByDefault{
/// <summary>
/// Gets the table definition for fnGetMLTextByDefault
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetMLTextByDefault", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextFromName{
/// <summary>
/// Gets the table definition for fnGetMLTextFromName
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetMLTextFromName", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextFromTable{
/// <summary>
/// Gets the table definition for fnGetMLTextFromTable
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetMLTextFromTable", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetNumberOfDaysInMonth{
/// <summary>
/// Gets the table definition for fnGetNumberOfDaysInMonth
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetNumberOfDaysInMonth", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetPersonSichtbarFlag{
/// <summary>
/// Gets the table definition for fnGetPersonSichtbarFlag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetPersonSichtbarFlag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetReferencedKeyColumnsOfForeignKey{
/// <summary>
/// Gets the table definition for fnGetReferencedKeyColumnsOfForeignKey
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetReferencedKeyColumnsOfForeignKey", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetSecondsFromDateTime{
/// <summary>
/// Gets the table definition for fnGetSecondsFromDateTime
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetSecondsFromDateTime", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetShortedVarchar{
/// <summary>
/// Gets the table definition for fnGetShortedVarchar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetShortedVarchar", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetSQLMLText{
/// <summary>
/// Gets the table definition for fnGetSQLMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetSQLMLText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetTextAtPosition{
/// <summary>
/// Gets the table definition for fnGetTextAtPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetTextAtPosition", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetWeekDayFromDate{
/// <summary>
/// Gets the table definition for fnGetWeekDayFromDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetWeekDayFromDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetWorkingDays{
/// <summary>
/// Gets the table definition for fnGetWorkingDays
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetWorkingDays", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Name{
/// <summary>
/// Gets the table definition for fnGetZahlungsweg_Name
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetZahlungsweg_Name", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Name_ML{
/// <summary>
/// Gets the table definition for fnGetZahlungsweg_Name_ML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetZahlungsweg_Name_ML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Nummer{
/// <summary>
/// Gets the table definition for fnGetZahlungsweg_Nummer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetZahlungsweg_Nummer", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZeitraumString{
/// <summary>
/// Gets the table definition for fnGetZeitraumString
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGetZeitraumString", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGleicheAdresse{
/// <summary>
/// Gets the table definition for fnGleicheAdresse
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGleicheAdresse", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGleicherHaushalt{
/// <summary>
/// Gets the table definition for fnGleicherHaushalt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGleicherHaushalt", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGvGesuchAbschliessbar{
/// <summary>
/// Gets the table definition for fnGvGesuchAbschliessbar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGvGesuchAbschliessbar", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGvGetValutaTermine{
/// <summary>
/// Gets the table definition for fnGvGetValutaTermine
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnGvGetValutaTermine", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkAlimenteRunden{
/// <summary>
/// Gets the table definition for fnIkAlimenteRunden
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIkAlimenteRunden", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkCKIkForderung_BgKostenartIntegrity{
/// <summary>
/// Gets the table definition for fnIkCKIkForderung_BgKostenartIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIkCKIkForderung_BgKostenartIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkGetBaPersonForderungTyp{
/// <summary>
/// Gets the table definition for fnIkGetBaPersonForderungTyp
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIkGetBaPersonForderungTyp", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkGetLandesindexWert{
/// <summary>
/// Gets the table definition for fnIkGetLandesindexWert
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIkGetLandesindexWert", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnImage2VarChar{
/// <summary>
/// Gets the table definition for fnImage2VarChar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnImage2VarChar", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsInteger{
/// <summary>
/// Gets the table definition for fnIsInteger
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIsInteger", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsNullOrEmpty{
/// <summary>
/// Gets the table definition for fnIsNullOrEmpty
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIsNullOrEmpty", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsUserAdmin{
/// <summary>
/// Gets the table definition for fnIsUserAdmin
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIsUserAdmin", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsUserBIAGAdmin{
/// <summary>
/// Gets the table definition for fnIsUserBIAGAdmin
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnIsUserBIAGAdmin", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKaGetPersonKontaktString{
/// <summary>
/// Gets the table definition for fnKaGetPersonKontaktString
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKaGetPersonKontaktString", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCheckBelegDatum{
/// <summary>
/// Gets the table definition for fnKbCheckBelegDatum
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbCheckBelegDatum", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCheckBelegNr{
/// <summary>
/// Gets the table definition for fnKbCheckBelegNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbCheckBelegNr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCKKbBuchungIntegrity{
/// <summary>
/// Gets the table definition for fnKbCKKbBuchungIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbCKKbBuchungIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCKKbPeriodeIntegrity{
/// <summary>
/// Gets the table definition for fnKbCKKbPeriodeIntegrity
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbCKKbPeriodeIntegrity", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetKontoVorsaldo{
/// <summary>
/// Gets the table definition for fnKbGetKontoVorsaldo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetKontoVorsaldo", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetKostenstelle{
/// <summary>
/// Gets the table definition for fnKbGetKostenstelle
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetKostenstelle", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeID{
/// <summary>
/// Gets the table definition for fnKbGetPeriodeID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetPeriodeID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeIDByDate{
/// <summary>
/// Gets the table definition for fnKbGetPeriodeIDByDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetPeriodeIDByDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeInfo{
/// <summary>
/// Gets the table definition for fnKbGetPeriodeInfo
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetPeriodeInfo", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetZustaendigeGemeinde{
/// <summary>
/// Gets the table definition for fnKbGetZustaendigeGemeinde
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnKbGetZustaendigeGemeinde", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLandMLText{
/// <summary>
/// Gets the table definition for fnLandMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLandMLText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLastDayOf{
/// <summary>
/// Gets the table definition for fnLastDayOf
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLastDayOf", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVColumnListe{
/// <summary>
/// Gets the table definition for fnLOVColumnListe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVColumnListe", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVMLColumnListe{
/// <summary>
/// Gets the table definition for fnLOVMLColumnListe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVMLColumnListe", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVMLText{
/// <summary>
/// Gets the table definition for fnLOVMLText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVMLText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVShortText{
/// <summary>
/// Gets the table definition for fnLOVShortText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVShortText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVText{
/// <summary>
/// Gets the table definition for fnLOVText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVTextListe{
/// <summary>
/// Gets the table definition for fnLOVTextListe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnLOVTextListe", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnMAX{
/// <summary>
/// Gets the table definition for fnMAX
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnMAX", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnMIN{
/// <summary>
/// Gets the table definition for fnMIN
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnMIN", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitHierarchyValue{
/// <summary>
/// Gets the table definition for fnOrgUnitHierarchyValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnOrgUnitHierarchyValue", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitHistoryHierarchyValue{
/// <summary>
/// Gets the table definition for fnOrgUnitHistoryHierarchyValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnOrgUnitHistoryHierarchyValue", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUser{
/// <summary>
/// Gets the table definition for fnOrgUnitOfUser
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnOrgUnitOfUser", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUserHistoryPerDate{
/// <summary>
/// Gets the table definition for fnOrgUnitOfUserHistoryPerDate
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnOrgUnitOfUserHistoryPerDate", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUserMandantenNr{
/// <summary>
/// Gets the table definition for fnOrgUnitOfUserMandantenNr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnOrgUnitOfUserMandantenNr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnQryGetHashCode{
/// <summary>
/// Gets the table definition for fnQryGetHashCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnQryGetHashCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnRemoveCharactersByRegex{
/// <summary>
/// Gets the table definition for fnRemoveCharactersByRegex
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnRemoveCharactersByRegex", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnReplaceWildcard{
/// <summary>
/// Gets the table definition for fnReplaceWildcard
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnReplaceWildcard", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetBetragGBL{
/// <summary>
/// Gets the table definition for fnShGetBetragGBL
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGetBetragGBL", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetKuerzungBetrag{
/// <summary>
/// Gets the table definition for fnShGetKuerzungBetrag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGetKuerzungBetrag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetPositionsartIdByCode{
/// <summary>
/// Gets the table definition for fnShGetPositionsartIdByCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGetPositionsartIdByCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetSpezkontoEnddatum{
/// <summary>
/// Gets the table definition for fnShGetSpezkontoEnddatum
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGetSpezkontoEnddatum", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI{
/// <summary>
/// Gets the table definition for fnShGrundbedarfI
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfI", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI_Hg{
/// <summary>
/// Gets the table definition for fnShGrundbedarfI_Hg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfI_Hg", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI_Person{
/// <summary>
/// Gets the table definition for fnShGrundbedarfI_Person
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfI_Person", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII{
/// <summary>
/// Gets the table definition for fnShGrundbedarfII
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfII", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII_Hg{
/// <summary>
/// Gets the table definition for fnShGrundbedarfII_Hg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfII_Hg", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII_Person{
/// <summary>
/// Gets the table definition for fnShGrundbedarfII_Person
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfII_Person", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfIZuschlag{
/// <summary>
/// Gets the table definition for fnShGrundbedarfIZuschlag
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfIZuschlag", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfIZuschlag_Hg{
/// <summary>
/// Gets the table definition for fnShGrundbedarfIZuschlag_Hg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShGrundbedarfIZuschlag_Hg", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten{
/// <summary>
/// Gets the table definition for fnShWohnkosten
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShWohnkosten", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten_Hg{
/// <summary>
/// Gets the table definition for fnShWohnkosten_Hg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShWohnkosten_Hg", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten_Person{
/// <summary>
/// Gets the table definition for fnShWohnkosten_Person
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnShWohnkosten_Person", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnSortLOVList{
/// <summary>
/// Gets the table definition for fnSortLOVList
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnSortLOVList", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace{
/// <summary>
/// Gets the table definition for fnStringReplace
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnStringReplace", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace2{
/// <summary>
/// Gets the table definition for fnStringReplace2
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnStringReplace2", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace3{
/// <summary>
/// Gets the table definition for fnStringReplace3
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnStringReplace3", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace4{
/// <summary>
/// Gets the table definition for fnStringReplace4
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnStringReplace4", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace5{
/// <summary>
/// Gets the table definition for fnStringReplace5
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnStringReplace5", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnTmKinder{
/// <summary>
/// Gets the table definition for fnTmKinder
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnTmKinder", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnTnToPc{
/// <summary>
/// Gets the table definition for fnTnToPc
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnTnToPc", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUnterstuetzt{
/// <summary>
/// Gets the table definition for fnUnterstuetzt
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnUnterstuetzt", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserAccessGastrechtGueltigkeitZeitbereich{
/// <summary>
/// Gets the table definition for fnUserAccessGastrechtGueltigkeitZeitbereich
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnUserAccessGastrechtGueltigkeitZeitbereich", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserHasRight{
/// <summary>
/// Gets the table definition for fnUserHasRight
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnUserHasRight", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserMayReadFall{
/// <summary>
/// Gets the table definition for fnUserMayReadFall
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnUserMayReadFall", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserMayReadFallBasicCheck{
/// <summary>
/// Gets the table definition for fnUserMayReadFallBasicCheck
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnUserMayReadFallBasicCheck", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetDateFrom{
/// <summary>
/// Gets the table definition for fnVmGetDateFrom
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnVmGetDateFrom", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetLeistungID{
/// <summary>
/// Gets the table definition for fnVmGetLeistungID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnVmGetLeistungID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetMandatstypCode{
/// <summary>
/// Gets the table definition for fnVmGetMandatstypCode
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnVmGetMandatstypCode", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhExistsBelegForPosition{
/// <summary>
/// Gets the table definition for fnWhExistsBelegForPosition
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhExistsBelegForPosition", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhGetBetragKontoauszug{
/// <summary>
/// Gets the table definition for fnWhGetBetragKontoauszug
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetBetragKontoauszug", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhGetPositionStatus{
/// <summary>
/// Gets the table definition for fnWhGetPositionStatus
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhGetPositionStatus", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhPosition_Permission{
/// <summary>
/// Gets the table definition for fnWhPosition_Permission
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnWhPosition_Permission", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXAHVNummer{
/// <summary>
/// Gets the table definition for fnXAHVNummer
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXAHVNummer", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCodeListsHaveMatch{
/// <summary>
/// Gets the table definition for fnXCodeListsHaveMatch
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXCodeListsHaveMatch", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCompareSQL_VARIANT{
/// <summary>
/// Gets the table definition for fnXCompareSQL_VARIANT
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXCompareSQL_VARIANT", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCompareTEXT{
/// <summary>
/// Gets the table definition for fnXCompareTEXT
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXCompareTEXT", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConfig{
/// <summary>
/// Gets the table definition for fnXConfig
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXConfig", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConfigVarchar{
/// <summary>
/// Gets the table definition for fnXConfigVarchar
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXConfigVarchar", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConvertRTF2Text{
/// <summary>
/// Gets the table definition for fnXConvertRTF2Text
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXConvertRTF2Text", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCreateTableScript{
/// <summary>
/// Gets the table definition for fnXCreateTableScript
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXCreateTableScript", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXDbObjectMLMsg{
/// <summary>
/// Gets the table definition for fnXDbObjectMLMsg
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXDbObjectMLMsg", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXDBVersionGetCurrentDBVersionID{
/// <summary>
/// Gets the table definition for fnXDBVersionGetCurrentDBVersionID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXDBVersionGetCurrentDBVersionID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetClassUserText{
/// <summary>
/// Gets the table definition for fnXGetClassUserText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetClassUserText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetHistUserValue{
/// <summary>
/// Gets the table definition for fnXGetHistUserValue
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetHistUserValue", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetISOWeekNumber{
/// <summary>
/// Gets the table definition for fnXGetISOWeekNumber
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetISOWeekNumber", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetNumberFromText{
/// <summary>
/// Gets the table definition for fnXGetNumberFromText
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetNumberFromText", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetPostfachTextML{
/// <summary>
/// Gets the table definition for fnXGetPostfachTextML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetPostfachTextML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetSystemUserID{
/// <summary>
/// Gets the table definition for fnXGetSystemUserID
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetSystemUserID", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetUserRNDPwd{
/// <summary>
/// Gets the table definition for fnXGetUserRNDPwd
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXGetUserRNDPwd", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXIsDocTemplatePublic{
/// <summary>
/// Gets the table definition for fnXIsDocTemplatePublic
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXIsDocTemplatePublic", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonat{
/// <summary>
/// Gets the table definition for fnXKurzMonat
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXKurzMonat", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatJahr{
/// <summary>
/// Gets the table definition for fnXKurzMonatJahr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXKurzMonatJahr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatJahrML{
/// <summary>
/// Gets the table definition for fnXKurzMonatJahrML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXKurzMonatJahrML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatML{
/// <summary>
/// Gets the table definition for fnXKurzMonatML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXKurzMonatML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXModul10{
/// <summary>
/// Gets the table definition for fnXModul10
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXModul10", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonat{
/// <summary>
/// Gets the table definition for fnXMonat
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXMonat", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatJahr{
/// <summary>
/// Gets the table definition for fnXMonatJahr
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXMonatJahr", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatJahrML{
/// <summary>
/// Gets the table definition for fnXMonatJahrML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXMonatJahrML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatML{
/// <summary>
/// Gets the table definition for fnXMonatML
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXMonatML", "", false); } }
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXProfileTagsTextListe{
/// <summary>
/// Gets the table definition for fnXProfileTagsTextListe
/// </summary>
public static DBOTableDef TableDef { get { return new DBOTableDef("fnXProfileTagsTextListe", "", false); } }
}
}}