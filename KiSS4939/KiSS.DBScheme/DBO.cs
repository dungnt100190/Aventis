
            // ============================================================
//   This code was generated by the tool [DBToClass].
//   
//   Changes to this file may result in incorrect behavior
//   and will be lost when the code is regenerated.
// ============================================================
//   ServerName:  sql2014.diartislocal.local\sql2014
//   DBName:      KiSS_BSS_TestRelease_R4906
//   MachineName: BISRV1085
//   UserName:    rbvm
//   Version:     2.0.0.27111
// ============================================================


            using System;
            using System.Text;

            namespace KiSS.DBScheme
            {

            /// <summary>
            /// Class that contains all the object schemes
            /// </summary>
            public static class DBO
            {
/// <summary>
/// Type: Table
/// </summary>

public static class _tmp_deleted_BgAuszahlungPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "_tmp_deleted_BgAuszahlungPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgAuszahlungPersonID = "BgAuszahlungPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgZahlungsmodusID = "BgZahlungsmodusID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbAuszahlungsArtCode = "KbAuszahlungsArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgAuszahlungsTerminCode = "BgAuszahlungsTerminCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BgWochentagCodes = "BgWochentagCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile1 = "MitteilungZeile1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile2 = "MitteilungZeile2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile3 = "MitteilungZeile3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile4 = "MitteilungZeile4";
}

/// <summary>
/// Type: Table
/// Adressinformation für Personen und Institutionen
/// </summary>

public static class BaAdresse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaAdresse"; }
}


/// <summary>
/// Primärschlüssel für Adress Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaAdresseID = "BaAdresseID";

/// <summary>
/// Eindeutige Identifikation der zugehörigen Person. Foreign Key der Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Eindeutige Identifikation der zugehörigen Institution. Foreign Key der Institution.   Entweder ist BaPersonID oder BaInstitutionID gefüllt.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel zu XUser, Privatadresse des Benutzers
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// ck: TODO Leo weisst du wozu die ist?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string PlatzierungInstID = "PlatzierungInstID";

/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmMandantID = "VmMandantID";

/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// TODO Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebKontaktID = "KaBetriebKontaktID";

/// <summary>
/// Land-Angabe des Adressrecords; Wert aus Werteliste BaLand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// Angedachte Historisierung der Adressenrecords. In Berner Standard nicht verwendet! TODO
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Angedachte Historisierung der Adressenrecords. In Berner Standard nicht verwendet! TODO
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AusEinwohnerregister = "AusEinwohnerregister";

/// <summary>
/// Flag, ob eine Adresse gesperrt ist oder nicht (TODO: wird das benötigt?)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Gesperrt = "Gesperrt";

/// <summary>
/// Spezifiziert den Typ der Adresse anhand der Werteliste BaAdressTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AdresseCode = "AdresseCode";

/// <summary>
/// Angaben zur Institution (=Name der Institution) oder Person (=Name und Vorname der Person), welche für die Anschrift als c/o verwendet werden soll
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string CareOf = "CareOf";

/// <summary>
/// Ein Vermerk über Besonderheiten der Wohngegebenheiten  z. B. "Zur Untermiete bei Herrn/Frau X".
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// Optionale Zuhanden-Von Angaben, welche für die Anschrift verwendet werden sollen
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZuhandenVon = "ZuhandenVon";

/// <summary>
/// Strassen-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// BaStrasseID auf BaHaus oder in Alpha-Import gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string StrasseCode = "StrasseCode";

/// <summary>
/// Hausnr-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// Postfach-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// Flag, ob das Postfach eine Nummer hat oder lediglich mit Postfach angeschrieben werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// Postleitzahl-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// Ort-Angabe des Adressrecords TODO: Ort vs. OrtschaftCode
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// TODO OrtschaftCode vs. Ort
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// Kanton-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// Bezirk-Angabe des Adressrecords
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// Bemerkungsfeld für weitere Angaben des Adressrecords
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Name der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string InstitutionName = "InstitutionName";

/// <summary>
/// TODO? Leo?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PlatzierungsartCode = "PlatzierungsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnStatusCode = "WohnStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnungsgroesseCode = "WohnungsgroesseCode";

/// <summary>
/// Quartier Code von Alpha
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string QuartierCode = "QuartierCode";

/// <summary>
/// Migrationsfeld; TODO Feld löschen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// VersionsID des Adressrecords für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Adressrecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaAdresseTS = "BaAdresseTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaArbeit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaArbeit"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaArbeit_ = "BaArbeit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TypCode = "TypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PensumCode = "PensumCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaSprachniveauCode = "BaSprachniveauCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaArbeitTS = "BaArbeitTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaArbeitAusbildung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaArbeitAusbildung"; }
}


/// <summary>
/// Primärschlüssel für BaArbeitAusbildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationStatus1Code = "ErwerbssituationStatus1Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationStatus2Code = "ErwerbssituationStatus2Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationStatus3Code = "ErwerbssituationStatus3Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationStatus4Code = "ErwerbssituationStatus4Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeschaeftigungsGradCode = "BeschaeftigungsGradCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrundTeilzeitarbeit1Code = "GrundTeilzeitarbeit1Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrundTeilzeitarbeit2Code = "GrundTeilzeitarbeit2Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BrancheCode = "BrancheCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErlernterBerufCode = "ErlernterBerufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BerufCode = "BerufCode";

/// <summary>
/// Fremdschlüssel (FK_BaArbeitAusbildung_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HoechsteAusbildungCode = "HoechsteAusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbgebrochenAusbildungCode = "AbgebrochenAusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnstellungCode = "AnstellungCode";

/// <summary>
/// [DataType: NUMERIC]
/// [Length: 5]
/// [AllowNulls: True]
/// </summary>
public const string Arbeitszeit = "Arbeitszeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsVariableArbeitszeit = "IsVariableArbeitszeit";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string StempelDatum = "StempelDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WieOftArbeitslos = "WieOftArbeitslos";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusgesteuertUnbekanntCode = "AusgesteuertUnbekanntCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AusgesteuertDatum = "AusgesteuertDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaArbeitAusbildungTS = "BaArbeitAusbildungTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IntegrationsstandCode = "IntegrationsstandCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string FinanziellUnabhaengig = "FinanziellUnabhaengig";
}

/// <summary>
/// Type: Table
/// Bankenstamm
/// </summary>

public static class BaBank{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaBank"; }
}


/// <summary>
/// Primärschlüssel für BaBank Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// Feld auf Maske CtlBaBank entfernt. Wäre momentan also überflüssig. In nächstem Schritt entfernen?!?
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string LandCode = "LandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Feld auf Maske CtlBaBank entfernt. Wäre momentan also überflüssig. In nächstem Schritt entfernen?!?
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string ClearingNr = "ClearingNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string ClearingNrNeu = "ClearingNrNeu";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FilialeNr = "FilialeNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string HauptsitzBCL = "HauptsitzBCL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GueltigAb = "GueltigAb";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SicUpdated = "SicUpdated";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaBankTS = "BaBankTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaBeruf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaBeruf"; }
}


/// <summary>
/// Primärschlüssel für BaBeruf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BaBerufID = "BaBerufID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Beruf = "Beruf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungM = "BezeichnungM";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungW = "BezeichnungW";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSCode = "BFSCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaBerufTS = "BaBerufTS";
}

/// <summary>
/// Type: Table
/// Tabelle um die Daten der Ereignisse zu speichern
/// </summary>

public static class BaEinwohnerregisterEmpfangeneEreignisse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaEinwohnerregisterEmpfangeneEreignisse"; }
}


/// <summary>
/// Primärschlüssel der vom Einwohnerregister empfangenen Ereignisse
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseID = "BaEinwohnerregisterEmpfangeneEreignisseID";

/// <summary>
/// Fremdschlüssel auf die Rohdaten von empfangenen Ereignissen
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseRohdatenID = "BaEinwohnerregisterEmpfangeneEreignisseRohdatenID";

/// <summary>
/// ID der Person im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string FremdsystemID = "FremdsystemID";

/// <summary>
/// Header. Beinhaltet unter anderem die Person ID im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string deliveryHeader = "deliveryHeader";

/// <summary>
/// Abwesenheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string absence = "absence";

/// <summary>
/// Ereignismeldung 27 = Anerkennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string acknowledgement = "acknowledgement";

/// <summary>
/// Ereignismeldung 22 = Änderung Datensperre
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string addressLock = "addressLock";

/// <summary>
/// Ereignismeldung 24 = Adoption
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string adoption = "adoption";

/// <summary>
/// Ereignismeldung 1 = Geburt
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string birth = "birth";

/// <summary>
/// Ereignismeldung 39 = Änderung Sorgerecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string care = "care";

/// <summary>
/// Ereignismeldung 28 = Kindesverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string childRelationship = "childRelationship";

/// <summary>
/// Ereignismeldung 21 = Zustelladresse
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string contact = "contact";

/// <summary>
/// Ereignismeldung 2 = Tod
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string death = "death";

/// <summary>
/// Person gelöscht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string deletePerson = "deletePerson";

/// <summary>
/// Ereignismeldung 8 = Scheidung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string divorce = "divorce";

/// <summary>
/// Ereignismeldung 25 = Vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string gardianMeasure = "gardianMeasure";

/// <summary>
/// Ereignismeldung 10 = Zivilstandsänderung Partner/in
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string maritalStatusPartner = "maritalStatusPartner";

/// <summary>
/// Ereignismeldung 4 = Eheschliessung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string marriage = "marriage";

/// <summary>
/// Ereignismeldung 3 = Verschollen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string missing = "missing";

/// <summary>
/// Ereignismeldung 20 = Umzug (innerhalb Gemeinde)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string move = "move";

/// <summary>
/// Ereignismeldung 18 = Zuzug
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string moveIn = "moveIn";

/// <summary>
/// Ereignismeldung 19 = Wegzug
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string moveOut = "moveOut";

/// <summary>
/// Ereignismeldung 12 = Einbürgerung Ausländer
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string naturalizeForeigner = "naturalizeForeigner";

/// <summary>
/// Ereignismeldung 13 = Einbürgerung Schweizer in Gemeinde
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string naturalizeSwiss = "naturalizeSwiss";

/// <summary>
/// Ereignismeldung 38 = Änderung Schriftensperre
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string paperLock = "paperLock";

/// <summary>
/// Ereignismeldung 36 = Eintragung Partnerschaft
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string partnership = "partnership";

/// <summary>
/// Ereignismeldung 35 = Antrag Verlängerung Ausländerbewilligung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string renewPermit = "renewPermit";

/// <summary>
/// PID bisher
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string replacePerson = "replacePerson";

/// <summary>
/// Ereignismeldung 6 = Trennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string separation = "separation";

/// <summary>
/// Ereignismeldung 46 = Änderung Bürgerrecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeCitizen = "changeCitizen";

/// <summary>
/// Ereignismeldung 47 = Wechsel vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeGardian = "changeGardian";

/// <summary>
/// Ereignismeldung 29 = Namensänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeName = "changeName";

/// <summary>
/// Ereignismeldung 17 = Wechsel der Staatsangehörigkeit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeNationality = "changeNationality";

/// <summary>
/// NEST Registerdatenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeNestRegister = "changeNestRegister";

/// <summary>
/// NEST Solldatenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeNestTarget = "changeNestTarget";

/// <summary>
/// Ereignismeldung 30 = Arbeitgeber-/Berufswechsel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeOccupation = "changeOccupation";

/// <summary>
/// OKV Datenänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeOKV = "changeOKV";

/// <summary>
/// Ereignismeldung 31 = Konfessionswechsel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeReligion = "changeReligion";

/// <summary>
/// Ereignismeldung 16 = Wechsel Ausländerkategorie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeResidencePermit = "changeResidencePermit";

/// <summary>
/// Ereignismeldung 23 = Umwandlung Meldeverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeResidenceType = "changeResidenceType";

/// <summary>
/// Ereignismeldung 32 = Geschlechtsänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string changeSex = "changeSex";

/// <summary>
/// Korrektur Abwesenheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctAbsence = "correctAbsence";

/// <summary>
/// Korrektur zusätzliche Adressen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctAdditionalAddresses = "correctAdditionalAddresses";

/// <summary>
/// Ereignismeldung 43 = Korrektur Adressdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctAddress = "correctAddress";

/// <summary>
/// Korrektur Kodierungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctCodes = "correctCodes";

/// <summary>
/// Ereignismeldung 53 = Korrektur Zustelladresse
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctContact = "correctContact";

/// <summary>
/// Ereignismeldung 59 = Korrektur Todesdatum
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctDateOfDeath = "correctDateOfDeath";

/// <summary>
/// Korrektur Rechtskraftsdatum Namensänderung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctDateOfNameChange = "correctDateOfNameChange";

/// <summary>
/// Korrektur Einbürgerungsdatum
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctDateOfNaturalization = "correctDateOfNaturalization";

/// <summary>
/// Korrektur Drittmeldepflichtdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctDMP = "correctDMP";

/// <summary>
/// Ereignismeldung 50 = Korrektur Identifikatoren
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctIdentification = "correctIdentification";

/// <summary>
/// Ereignismeldung 60 = Korrektur Korrespondenzsprache
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctLanguageOfCorrespondance = "correctLanguageOfCorrespondance";

/// <summary>
/// Korrektur Pflichten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctLiabilities = "correctLiabilities";

/// <summary>
/// Ereignismeldung 57 = Korrektur Zivilstand
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctMaritalData = "correctMaritalData";

/// <summary>
/// Ereignismeldung 51 = Korrektur Zusatznamen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctName = "correctName";

/// <summary>
/// Ereignismeldung 52 = Korrektur Nationalität
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctNationality = "correctNationality";

/// <summary>
/// Ereignismeldung 45 = Korrektur Berufsdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctOccupation = "correctOccupation";

/// <summary>
/// Ereignismeldung 55 = Korrektur Heimatort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctOrigin = "correctOrigin";

/// <summary>
/// Ereignismeldung 41 = Korrektur Person
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctPerson = "correctPerson";

/// <summary>
/// Ereignismeldung 58 = Korrektur Geburtsort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctPlaceOfBirth = "correctPlaceOfBirth";

/// <summary>
/// Ereignismeldung 44 = Änderung Beziehungsdaten
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctRelationship = "correctRelationship";

/// <summary>
/// Ereignismeldung 54 = Korrektur Konfession
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctReligion = "correctReligion";

/// <summary>
/// Ereignismeldung 42 = Korrektur Meldeverhältnis
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctReporting = "correctReporting";

/// <summary>
/// Ereignismeldung 56 = Korrektur Ausländerkategorie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string correctResidencePermit = "correctResidencePermit";

/// <summary>
/// Abwesenheit beenden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoAbsence = "undoAbsence";

/// <summary>
/// Ereignismeldung 14 = Bürgerrechtsentlassung aus Gemeinde
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoCitizen = "undoCitizen";

/// <summary>
/// Ereignismeldung 26 = Aufhebung vormundschaftliche Massnahme
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoGardian = "undoGardian";

/// <summary>
/// Ereignismeldung 11 = Ungültigerklärung Ehe
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoMarriage = "undoMarriage";

/// <summary>
/// Ereignismeldung 34 = Aufhebung Verschollenerklärung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoMissing = "undoMissing";

/// <summary>
/// Ereignismeldung 37 = Auflösung Partnerschaft
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoPartnership = "undoPartnership";

/// <summary>
/// Ereignismeldung 7 = Aufhebung Trennung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoSeparation = "undoSeparation";

/// <summary>
/// Ereignismeldung 15 = Aberkennung Schweizer Bürgerrecht
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string undoSwiss = "undoSwiss";

/// <summary>
/// Datensynchronisationsmeldung. Meldung Gesamtdatenbestand: Anzahl Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string baseDelivery_numberOfMessages = "baseDelivery_numberOfMessages";

/// <summary>
/// Datensynchronisationsmeldung. Meldung Gesamtdatenbestand: Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string baseDelivery_messages = "baseDelivery_messages";

/// <summary>
/// Datensynchronisationsmeldung. Schlüsselaustausch: Anzahl Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string keyDelivery_numberOfKeyMessages = "keyDelivery_numberOfKeyMessages";

/// <summary>
/// Datensynchronisationsmeldung. Schlüsselaustausch: Meldungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string keyDelivery_messages = "keyDelivery_messages";

/// <summary>
/// Datensynchronisationsmeldung. Datenanfrage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string dataRequest = "dataRequest";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseTS = "BaEinwohnerregisterEmpfangeneEreignisseTS";
}

/// <summary>
/// Type: Table
/// Tabelle um das XML mit den Ereignissen zu speichern
/// </summary>

public static class BaEinwohnerregisterEmpfangeneEreignisseRohdaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaEinwohnerregisterEmpfangeneEreignisseRohdaten"; }
}


/// <summary>
/// Primärschlüssel der vom Einwohnerregister empfangenen Ereignisse
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseRohdatenID = "BaEinwohnerregisterEmpfangeneEreignisseRohdatenID";

/// <summary>
/// XML mit den Ereignissen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Xml = "Xml";

/// <summary>
/// Status des Eintrags; wird für die wiederholte Ausführung bei einem Importfehler benötigt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode = "BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS = "BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS";
}

/// <summary>
/// Type: Table
/// Anmeldung und Abmeldung von Klienten
/// </summary>

public static class BaEinwohnerregisterPersonAnAbmeldung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaEinwohnerregisterPersonAnAbmeldung"; }
}


/// <summary>
/// Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaEinwohnerregisterPersonAnAbmeldungID = "BaEinwohnerregisterPersonAnAbmeldungID";

/// <summary>
/// Fremdschlüssel auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// ID der PersonID im Fremdsystem
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string FremdsystemID = "FremdsystemID";

/// <summary>
/// 1 = Anmeldung und 0 = Abmeldung
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Status = "Status";

/// <summary>
/// Datum der An/Abmeldung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des BaEinwohnerregisterPersonAnAbmeldung Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaEinwohnerregisterPersonAnAbmeldungTS = "BaEinwohnerregisterPersonAnAbmeldungTS";
}

/// <summary>
/// Type: Table
/// Liste der BaPersonID in Omega (oder anderes Fremdsystem) registriert sind (Nachbarische Tabelle ist log.BaWinwohnerRegisterPersonAnAbMeldung)
/// </summary>

public static class BaEinwohnerregisterPersonStatus{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaEinwohnerregisterPersonStatus"; }
}


/// <summary>
/// Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaEinwohnerregisterPersonStatusID = "BaEinwohnerregisterPersonStatusID";

/// <summary>
/// FK BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaEinwohnerregisterPersonStatusTS = "BaEinwohnerregisterPersonStatusTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaGemeinde{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaGemeinde"; }
}


/// <summary>
/// Primärschlüssel für BaGemeinde Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaGemeindeID = "BaGemeindeID";

/// <summary>
/// BFSCode der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSCode = "BFSCode";

/// <summary>
/// Postleitzahl der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// Name der Gemeinde
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Amtlicher Name der Gemeinde
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string NameLang = "NameLang";

/// <summary>
/// Gemeindename TID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Art des Gemeindeeintrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeEintragArt = "GemeindeEintragArt";

/// <summary>
/// Status der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeStatus = "GemeindeStatus";

/// <summary>
/// Mutationssnummer Aufnahme der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufnahmeNummer = "GemeindeAufnahmeNummer";

/// <summary>
/// Art der Gemeindeaufnahme
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufnahmeModus = "GemeindeAufnahmeModus";

/// <summary>
/// Datum der Gemeindeaufnahme
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufnahmeDatum = "GemeindeAufnahmeDatum";

/// <summary>
/// Mutationsnummer Aufhebung der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufhebungNummer = "GemeindeAufhebungNummer";

/// <summary>
/// Art der Gemeindeaufhebung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufhebungModus = "GemeindeAufhebungModus";

/// <summary>
/// Datum der Gemeindeaufhebung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAufhebungDatum = "GemeindeAufhebungDatum";

/// <summary>
/// Aenderungsdatum der Gemeinde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeAenderungDatum = "GemeindeAenderungDatum";

/// <summary>
/// Historisierungsnummer der Gemeinde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeHistorisierungID = "GemeindeHistorisierungID";

/// <summary>
/// BezirkCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkCode = "BezirkCode";

/// <summary>
/// Name des Bezirks
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BezirkName = "BezirkName";

/// <summary>
/// Amtlicher Name des Bezirks
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string BezirkNameLang = "BezirkNameLang";

/// <summary>
/// Bezirksname TID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkNameTID = "BezirkNameTID";

/// <summary>
/// Art des Bezirkseinrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkEintragArt = "BezirkEintragArt";

/// <summary>
/// Mutationsnummer Aufnahme des Bezirks
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufnahmeNummer = "BezirkAufnahmeNummer";

/// <summary>
/// Art der Bezirksaufnahme
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufnahmeModus = "BezirkAufnahmeModus";

/// <summary>
/// Datum der Bezirksaufnahme
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufnahmeDatum = "BezirkAufnahmeDatum";

/// <summary>
/// Mutationsnummer Aufhebung des Bezirks
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufhebungNummer = "BezirkAufhebungNummer";

/// <summary>
/// Art der Bezirksaufhebung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufhebungModus = "BezirkAufhebungModus";

/// <summary>
/// Datum der Bezirksaufhebung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAufhebungDatum = "BezirkAufhebungDatum";

/// <summary>
/// Aenderungsdatum des Bezirks
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BezirkAenderungDatum = "BezirkAenderungDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KantonID = "KantonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KantonNameLang = "KantonNameLang";

/// <summary>
/// True wenn das BFS die Daten bei einer aktualisierung neu geliefert hat.
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BFSDelivered = "BFSDelivered";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaGemeindeTS = "BaGemeindeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaGesundheit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaGesundheit"; }
}


/// <summary>
/// Primärschlüssel für BaGesundheit Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaGesundheitID = "BaGesundheitID";

/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Jahr des Datensatzes
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (datepart(year,getdate()))]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution_KVG) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KVGOrganisationID = "KVGOrganisationID";

/// <summary>
/// Freitextangabe. Gedacht für Kontaktperson der zugehörigen KVG-Krankenkasse (KVGOrganisationID)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KVGKontaktPerson = "KVGKontaktPerson";

/// <summary>
/// Freitextangabe. Gedacht für Telefonnummer der zugehörigen KVG-Krankenkasse (KVGOrganisationID) bzw. deren Kontaktperson (KVGKontaktPerson)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KVGKontaktTelefon = "KVGKontaktTelefon";

/// <summary>
/// Freitextangabe. Gedacht für Mitglied-Nr der zugehörigen KVG-Krankenkasse (KVGOrganisationID).
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KVGMitgliedNr = "KVGMitgliedNr";

/// <summary>
/// Datum des Vertragsbeginns mit der zugehörigen KVG-Krankenkasse
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGVersichertSeit = "KVGVersichertSeit";

/// <summary>
/// Betrag der KVG Grundprämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGGrundPraemie = "KVGGrundPraemie";

/// <summary>
/// Betrag der KVG-Unfallprämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGUnfallPraemie = "KVGUnfallPraemie";

/// <summary>
/// Betrag der KVG Gesundheits-Förderungs-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGGesundFoerdPraemie = "KVGGesundFoerdPraemie";

/// <summary>
/// Betrag des KVG-Zuschuss (Prämienverbilligung)
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGZuschussBetrag = "KVGZuschussBetrag";

/// <summary>
/// Betrag der KVG-Umweltabgabe
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGUmweltabgabeBetrag = "KVGUmweltabgabeBetrag";

/// <summary>
/// Betrag der KVG-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGPraemie = "KVGPraemie";

/// <summary>
/// Betrag der KVG-Franchise
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGFranchise = "KVGFranchise";

/// <summary>
/// Zahlungs-Periode der KVG-Krankenkasse
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KVGZahlungsPeriodeCode = "KVGZahlungsPeriodeCode";

/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution_VVG) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VVGOrganisationID = "VVGOrganisationID";

/// <summary>
/// Freitextangabe. Gedacht für Kontaktperson der zugehörigen VVG-Krankenkasse (VVGOrganisationID)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VVGKontaktPerson = "VVGKontaktPerson";

/// <summary>
/// Freitextangabe. Gedacht für Telefonnummer der zugehörigen VVG-Krankenkasse (VVGOrganisationID) bzw. deren Kontaktperson (VVGKontaktPerson)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VVGKontaktTelefon = "VVGKontaktTelefon";

/// <summary>
/// Freitextangabe. Gedacht für Mitglied-Nr der zugehörigen VVG-Krankenkasse (VVGOrganisationID).
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VVGMitgliedNr = "VVGMitgliedNr";

/// <summary>
/// Datum des Vertragsbeginns mit der zugehörigen VVG-Krankenkasse
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VVGVersichertSeit = "VVGVersichertSeit";

/// <summary>
/// Betrag der VVG-Prämie
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VVGPraemie = "VVGPraemie";

/// <summary>
/// Betrag der VVG-Franchise
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VVGFranchise = "VVGFranchise";

/// <summary>
/// Zahlungs-Periode der VVG-Krankenkasse
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VVGZahlungsPeriodeCode = "VVGZahlungsPeriodeCode";

/// <summary>
/// Freitextfeld zur Erfassung weitere Zusatzversicherungen
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string VVGZusaetzeRTF = "VVGZusaetzeRTF";

/// <summary>
/// Flag ob KVG Prämienverbilligung zurzeit abgeklärt wird
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string ZuschussInAbklaerungFlag = "ZuschussInAbklaerungFlag";

/// <summary>
/// Angabe ob Person IV erhält
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IVEingliederungsmassnahmeCode = "IVEingliederungsmassnahmeCode";

/// <summary>
/// Angabe durch wen Person geflegt wird.   Darf nur Wert enthalten, wenn PflegebeduerftigFlag = 1
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PflegeDurchCode = "PflegeDurchCode";

/// <summary>
/// Flag ob Person pflegebedürftig ist
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string PflegebeduerftigFlag = "PflegebeduerftigFlag";

/// <summary>
/// TODO: DELETE! War wohl für Historisierung gedacht
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum der Abmeldung ASV (Amt für Sozialversicherung)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ASVSAbmeldung = "ASVSAbmeldung";

/// <summary>
/// Datum der Anmeldung ASV (Amt für Sozialversicherung)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ASVSAnmeldung = "ASVSAnmeldung";

/// <summary>
/// Freitextfeld Maske BaGesundheit
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AbtretungKK = "AbtretungKK";

/// <summary>
/// Datum EVAZ
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EVAZDatum = "EVAZDatum";

/// <summary>
/// Fremdschlüssel (FK_BaGesundheit_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ZahnarztBaInstitutionID = "ZahnarztBaInstitutionID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaGesundheitTS = "BaGesundheitTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaInstitution{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaInstitution"; }
}


/// <summary>
/// Primärschlüssel für BaInstitution Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel auf XOrgUnit.OrgUnitID, um einer Institution eine Abteilung als Besitzer zuzuweisen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionNr = "InstitutionNr";

/// <summary>
/// Art der Institution anhand der Werteliste BaInstitutionArt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionArtCode = "BaInstitutionArtCode";

/// <summary>
/// Flag ob Institution aktiv ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// Flag ob Institution ein Debitor ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Debitor = "Debitor";

/// <summary>
/// Flag ob Institution ein Kreditor ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Kreditor = "Kreditor";

/// <summary>
/// Flag, ob die Institution Serienbriefe erhalten soll oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// Anrede der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// Briefanrede der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// Titel der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// Name der Institution (Mehrzeilig) oder Name der Fachperson (Einzeilig)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Vorname der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// Geschlecht der Institution, sofern die Institution eine Fachperson ist (abhängig vom ByInstitutionTypCode)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// Geburtsdatum einer Fachperson
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// Versichertennummer einer Fachperson
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// Zweite Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon2 = "Telefon2";

/// <summary>
/// Dritte Telefon-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon3 = "Telefon3";

/// <summary>
/// Fax-Nummer der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// E-Mail Adresse der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// Homepage der Institution
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Homepage = "Homepage";

/// <summary>
/// Korrespondenzsprache der Institution
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// Bemerkungsfeld
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionName = "InstitutionName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionTypCode = "InstitutionTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaFreigabeStatusCode = "BaFreigabeStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DefinitivUserID = "DefinitivUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DefinitivDatum = "DefinitivDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltUserID = "ErstelltUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltDatum = "ErstelltDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MutiertUserID = "MutiertUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MutiertDatum = "MutiertDatum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitutionTS = "BaInstitutionTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle, um einer BaInstitution 0..n verschiedene BaInstitutionTyp-en zuzuweisen
/// </summary>

public static class BaInstitution_BaInstitutionTyp{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaInstitution_BaInstitutionTyp"; }
}


/// <summary>
/// Primärschlüssel für BaInstitution_BaInstitutionTyp Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaInstitution_BaInstitutionTypID = "BaInstitution_BaInstitutionTypID";

/// <summary>
/// Fremdschlüssel auf BaInstitution.BaInstitutionID, Institution, welche einen Typ zugewiesen erhalten soll
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel auf BaInstitutionTyp.BaInstitutionTypID, Zuweisung eines Typen zu einer Institution
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionTypID = "BaInstitutionTypID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitution_BaInstitutionTypTS = "BaInstitution_BaInstitutionTypTS";
}

/// <summary>
/// Type: Table
/// Dokumente im Institutionenstamm
/// </summary>

public static class BaInstitutionDokument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaInstitutionDokument"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaInstitutionDokumentID = "BaInstitutionDokumentID";

/// <summary>
/// zugehörige Institution
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Verfasser des Dokuments
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// BaPersonID, falls Adressat eine Person ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// BaInstitutionID, falls Adressat eine Institution ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// LOV BaInstitutionDokumentKontaktart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionDokumentKontaktartCode = "BaInstitutionDokumentKontaktartCode";

/// <summary>
/// LOV BaInstitutionDokumentDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionDokumentDienstleistungCode = "BaInstitutionDokumentDienstleistungCode";

/// <summary>
/// LOV FaDauer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaDauerCode = "FaDauerCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Inhalt = "Inhalt";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitutionDokumentTS = "BaInstitutionDokumentTS";
}

/// <summary>
/// Type: Table
/// Institutionen können 0:n Kontaktpersonen zugewiesen werden
/// </summary>

public static class BaInstitutionKontakt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaInstitutionKontakt"; }
}


/// <summary>
/// Primärschlüssel für BaInstitutionKontakt Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaInstitutionKontaktID = "BaInstitutionKontaktID";

/// <summary>
/// Fremdschlüssel: BaInstitutionKontakt.BaInstitutionID => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Flag ob eine Kontaktperson aktiv ist oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// Anrede der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// Briefanrede der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// Titel der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// Name der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Vorname der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// Geschlecht der Kontaktperson (LOVName: Geschlecht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// Telefon-Nr. der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// Fax-Nr. der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// E-Mail Adresse der Kontaktperson
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// Sprachcode der Kontaktperson
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// Bemerkungsfeld
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitutionKontaktTS = "BaInstitutionKontaktTS";
}

/// <summary>
/// Type: Table
/// Mögliche Typen einer Institution, in Verwendung mit der Tabelle BaInstitution_BaInstitutionTyp
/// </summary>

public static class BaInstitutionTyp{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaInstitutionTyp"; }
}


/// <summary>
/// Primärschlüssel für BaInstitutionTyp Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaInstitutionTypID = "BaInstitutionTypID";

/// <summary>
/// Fremdschlüssel auf XOrgUnit.OrgUnitID, um einen Typ einer Abteilung zuzuweisen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Name/Bezeichnung eines Types
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// TID der Name-Spalte, wird für die Mehrsprachigkeit verwendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Flag, ob ein Typ aktiv verwendet wird oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// Zusätzliche Bemerkungen eines Types
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitutionTypTS = "BaInstitutionTypTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaKantonalerZuschuss{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaKantonalerZuschuss"; }
}


/// <summary>
/// PrimaryKey, wird als ID benutzt
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaKantonalerZuschussID = "BaKantonalerZuschussID";

/// <summary>
/// Bezeichnung des kantonalen Zuschusses
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// Multilanguage-TID der Bezeichnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungTID = "BezeichnungTID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KantonCode = "KantonCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaKantonalerZuschussTS = "BaKantonalerZuschussTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaKopfquote{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaKopfquote"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaKopfquoteID = "BaKopfquoteID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string RechnungDatum = "RechnungDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zeitspanne = "Zeitspanne";

/// <summary>
/// [DataType: NCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BaKopfquoteTS = "BaKopfquoteTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaLand{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaLand"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// Name des Landes
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string TextFR = "TextFR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string TextIT = "TextIT";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string TextEN = "TextEN";

/// <summary>
/// Zweistelliger ISO Code; 3166 Alpha-2
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>
public const string Iso2Code = "Iso2Code";

/// <summary>
/// Dreistelliger ISO Code; 3166 Alpha-3
/// [DataType: VARCHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>
public const string Iso3Code = "Iso3Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSCode = "BFSCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Ländercodes für die Schnittstelle zu SAP
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string SAPCode = "SAPCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Ob der Wert von BFS geliefert wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string BFSDelivered = "BFSDelivered";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Zeitpunkt der Erstellung.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz als letzter verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Zeitpunkt der letzten Änderung.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaLandTS = "BaLandTS";
}

/// <summary>
/// Type: Table
/// Einer Person können 0:n Mietverträge zugeordnet werden.   Die Maske CtlHaushalt unterstützt bisher jedoch nur die Erfassung eines Mietvertrages!
/// </summary>

public static class BaMietvertrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaMietvertrag"; }
}


/// <summary>
/// Primärschlüssel für BaMietvertrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaMietvertragID = "BaMietvertragID";

/// <summary>
/// Datum von des Mietvertrages. Miete ab auf CtlHaushalt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum bis des Mietvertrages. Miete bis auf CtlHaushalt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Mietkosten gemäss Mietvertrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mietkosten = "Mietkosten";

/// <summary>
/// Nebenkosten gemäss Mietvertrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Nebenkosten = "Nebenkosten";

/// <summary>
/// Kostenanteil der Unterstützungseinheit des Mietvertrags
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KostenanteilUE = "KostenanteilUE";

/// <summary>
/// Betrag des Mietdepots des Mietvertrags
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mietdepot = "Mietdepot";

/// <summary>
/// Fremdschlüssel (FK_BaMietvertrag_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Bemerkungsfeld zum Mietvertrag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaMietvertragTS = "BaMietvertragTS";

/// <summary>
/// Fremdschlüssel (FK_BaMietvertrag_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GarantieBis = "GarantieBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string MieteAbgetreten = "MieteAbgetreten";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mietzinsgarantie = "Mietzinsgarantie";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string StatusPersonCode = "StatusPersonCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FruehererName = "FruehererName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname2 = "Vorname2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sterbedatum = "Sterbedatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// Policen-Nummer der Haushaltsversicherung
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string HaushaltVersicherungsNummer = "HaushaltVersicherungsNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string NNummer = "NNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BFFNummer = "BFFNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZARNummer = "ZARNummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ZIPNr = "ZIPNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string KantonaleReferenznummer = "KantonaleReferenznummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandCode = "ZivilstandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandDatum = "ZivilstandDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string HeimatgemeindeCode = "HeimatgemeindeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string HeimatgemeindeCodes = "HeimatgemeindeCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string NationalitaetCode = "NationalitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ReligionCode = "ReligionCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusCode = "AuslaenderStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusGueltigBis = "AuslaenderStatusGueltigBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_P = "Telefon_P";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_G = "Telefon_G";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string MobilTel1 = "MobilTel1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string MobilTel2 = "MobilTel2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Unterstuetzt = "Unterstuetzt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Fiktiv = "Fiktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string EinwohnerregisterAktiv = "EinwohnerregisterAktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string EinwohnerregisterID = "EinwohnerregisterID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string DeutschVerstehenCode = "DeutschVerstehenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string WichtigerHinweisCode = "WichtigerHinweisCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtPLZ = "ZuzugKtPLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrtCode = "ZuzugKtOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrt = "ZuzugKtOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtKanton = "ZuzugKtKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ZuzugKtLandCode = "ZuzugKtLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtDatum = "ZuzugKtDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtSeitGeburt = "ZuzugKtSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdePLZ = "ZuzugGdePLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ZuzugGdeOrtCode = "ZuzugGdeOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeOrt = "ZuzugGdeOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeKanton = "ZuzugGdeKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ZuzugGdeLandCode = "ZuzugGdeLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeDatum = "ZuzugGdeDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeSeitGeburt = "ZuzugGdeSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzPLZ = "UntWohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzOrt = "UntWohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzKanton = "UntWohnsitzKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UntWohnsitzLandCode = "UntWohnsitzLandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugPLZ = "WegzugPLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string WegzugOrtCode = "WegzugOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrt = "WegzugOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugKanton = "WegzugKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string WegzugLandCode = "WegzugLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string WegzugDatum = "WegzugDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string WohnsitzWieBaPersonID = "WohnsitzWieBaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string AufenthaltWieBaInstitutionID = "AufenthaltWieBaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationCode = "ErwerbssituationCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string GrundTeilzeitarbeit1Code = "GrundTeilzeitarbeit1Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string GrundTeilzeitarbeit2Code = "GrundTeilzeitarbeit2Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string BaGrundNichtErwerbstaetigCode = "BaGrundNichtErwerbstaetigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ErwerbsBrancheCode = "ErwerbsBrancheCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ErlernterBerufCode = "ErlernterBerufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string BerufCode = "BerufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string HoechsteAusbildungCode = "HoechsteAusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string AbgebrocheneAusbildungCode = "AbgebrocheneAusbildungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ArbeitSpezFaehigkeiten = "ArbeitSpezFaehigkeiten";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InCHSeit = "InCHSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string InCHSeitGeburt = "InCHSeitGeburt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PUAnzahlVerlustscheine = "PUAnzahlVerlustscheine";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PUKrankenkasse = "PUKrankenkasse";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PraemienuebernahmeVon = "PraemienuebernahmeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PraemienuebernahmeBis = "PraemienuebernahmeBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PersonOhneLeistung = "PersonOhneLeistung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: ZH]
/// </summary>
public const string HCMCFluechtling = "HCMCFluechtling";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string StellensuchendCode = "StellensuchendCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string ResoNr = "ResoNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string NEAnmeldung = "NEAnmeldung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string HeimatgemeindeBaGemeindeID = "HeimatgemeindeBaGemeindeID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string AktiveKopfQuote = "AktiveKopfQuote";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ALK = "ALK";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string AndereSVLeistungen = "AndereSVLeistungen";

/// <summary>
/// Anrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string AusbildungCode = "AusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Behinderungsart2Code = "Behinderungsart2Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BemerkungenAdresse = "BemerkungenAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BemerkungenSV = "BemerkungenSV";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string BeruflicheMassnahmeIV = "BeruflicheMassnahmeIV";

/// <summary>
/// Briefanrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BSVBehinderungsartCode = "BSVBehinderungsartCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string BVGRente = "BVGRente";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string CAusweisDatum = "CAusweisDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string KlientenkontoNr = "KlientenkontoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string DebitorNr = "DebitorNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string DebitorUpdate = "DebitorUpdate";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string EigenerMietvertrag = "EigenerMietvertrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Einrichtpauschale = "Einrichtpauschale";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string EinrichtungspauschaleCode = "EinrichtungspauschaleCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ErgaenzungsLeistungen = "ErgaenzungsLeistungen";

/// <summary>
/// Flag zum wissen ob die Person Assistenzbeitrag hat
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Assistenzbeitrag = "Assistenzbeitrag";

/// <summary>
/// Datum des Beitrages
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAssistenzbeitrag = "DatumAssistenzbeitrag";

/// <summary>
/// Anzahl Stunden für die IV verfügte Assistenzberatung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IvVerfuegteAssistenzberatung = "IvVerfuegteAssistenzberatung";

/// <summary>
/// Datum der Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumIvVerfuegung = "DatumIvVerfuegung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string ErteilungVA = "ErteilungVA";

/// <summary>
/// Checkbox FAZ für Familiennachzug (CAR/SRK spezifisch)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: IBE]
/// </summary>
public const string IstFamiliennachzug = "IstFamiliennachzug";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HauptBehinderungsartCode = "HauptBehinderungsartCode";

/// <summary>
/// Wird von PI auf eine HELB Anmeldung verzichtet, so wird dieses Flag auf True gesetzt und die anderen HELB-Felder geleert
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HELBKeinAntrag = "HELBKeinAntrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HELBAb = "HELBAb";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HELBAnmeldung = "HELBAnmeldung";

/// <summary>
/// Datum, wann der Entscheid für oder gegen HELB getroffen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HELBEntscheid = "HELBEntscheid";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HELBEntscheidCode = "HELBEntscheidCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string HilfslosenEntschaedigungCode = "HilfslosenEntschaedigungCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string ImKantonSeit = "ImKantonSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string ImKantonSeitGeburt = "ImKantonSeitGeburt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string InGemeindeSeit = "InGemeindeSeit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IntensivPflegeZuschlagCode = "IntensivPflegeZuschlagCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVBerechtigungAnfangsStatusCode = "IVBerechtigungAnfangsStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVBerechtigungErsterEntscheidAb = "IVBerechtigungErsterEntscheidAb";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVBerechtigungErsterEntscheidCode = "IVBerechtigungErsterEntscheidCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVBerechtigungZweiterEntscheidAb = "IVBerechtigungZweiterEntscheidAb";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVBerechtigungZweiterEntscheidCode = "IVBerechtigungZweiterEntscheidCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVGrad = "IVGrad";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVHilfsmittel = "IVHilfsmittel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string IVTaggeld = "IVTaggeld";

/// <summary>
/// Flag, ob eine Person Serienbriefe erhalten soll oder nicht (0=Serienbrief, 1=kein Serienbrief)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KonfessionCode = "KonfessionCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string KontoFuehrung = "KontoFuehrung";

/// <summary>
/// BaPersonID des Dossierträgers. Fremdschlüssel (FK_BaPerson_BaPerson_Dossiertraeger) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: CAR]
/// </summary>
public const string BaPersonID_Dossiertraeger = "BaPersonID_Dossiertraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Kopfquote_BaInstitutionID = "Kopfquote_BaInstitutionID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KopfquoteAbDatum = "KopfquoteAbDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KopfquoteBisDatum = "KopfquoteBisDatum";

/// <summary>
/// Code für die Erfassung der Korrespondenzsprache, betrifft LOV: BaKorrespondenzSprache
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string KorrespondenzSpracheCode = "KorrespondenzSpracheCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string KTG = "KTG";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string LaufendeVollmachtErlaubnis = "LaufendeVollmachtErlaubnis";

/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// Neues Feld für medizinische Massnahmen IV. Nur für PI (siehe Ticket: #5022)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string MedizinischeMassnahmeIV = "MedizinischeMassnahmeIV";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string Mehrfachbehinderung = "Mehrfachbehinderung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string MietdepotPI = "MietdepotPI";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string MobilTel = "MobilTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string NavigatorZusatz = "NavigatorZusatz";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string PassiveKopfQuote = "PassiveKopfQuote";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string PauschaleAktualDatum = "PauschaleAktualDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string PersonSichtbarSDFlag = "PersonSichtbarSDFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string ProjNr = "ProjNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string RentenstufeCode = "RentenstufeCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string Sozialhilfe = "Sozialhilfe";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Sprachpauschale = "Sprachpauschale";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Testperson = "Testperson";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string UntWohnsitzOrtCode = "UntWohnsitzOrtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string UVGRente = "UVGRente";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string UVGTaggeld = "UVGTaggeld";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string VerstaendigungSprachCode = "VerstaendigungSprachCode";

/// <summary>
/// Aus der Migration von VIS nach KiSS: Spezifische VIS-Access-DB, welche als Quelle für den Datensatz diente
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string visdat36Area = "visdat36Area";

/// <summary>
/// Aus der Migration von VIS nach KiSS: ID in der Area-spezifischen VIS-Access-DB
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string visdat36ID = "visdat36ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string VormundMassnahmenCode = "VormundMassnahmenCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string VormundPI = "VormundPI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string WichtigerHinweis = "WichtigerHinweis";

/// <summary>
/// Wittwen-, Wittwer-, Waisenrente
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string WittwenWittwerWaisenrente = "WittwenWittwerWaisenrente";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string WohnstatusCode = "WohnstatusCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ZeigeDetails = "ZeigeDetails";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ZeigeTelGeschaeft = "ZeigeTelGeschaeft";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ZeigeTelMobil = "ZeigeTelMobil";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: PI]
/// </summary>
public const string ZeigeTelPrivat = "ZeigeTelPrivat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string ZEMISNummer = "ZEMISNummer";

/// <summary>
/// Flag ob die Person eine Berechnungsperson ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstBerechnungsperson = "IstBerechnungsperson";

/// <summary>
/// Asylgesuch-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAsylgesuch = "DatumAsylgesuch";

/// <summary>
/// Datum Einbezug FAZ / Geburt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEinbezugFaz = "DatumEinbezugFaz";

/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [NamespaceExtension: PI]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// [NamespaceExtension: PI]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [NamespaceExtension: PI]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// [NamespaceExtension: PI]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPersonTS = "BaPersonTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle, um Institutionen einer Person zuzuordnen
/// </summary>

public static class BaPerson_BaInstitution{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPerson_BaInstitution"; }
}


/// <summary>
/// Primärschlüssel für BaPerson_BaInstitution Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPerson_BaInstitutionID = "BaPerson_BaInstitutionID";

/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaPersonID => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionID => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionKontaktID => BaInstitutionKontakt.BaInstitutionKontaktID (optionaler Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionKontaktID = "BaInstitutionKontaktID";

/// <summary>
/// Fremdschlüssel: BaPerson_BaInstitution.BaInstitutionTypID => BaInstitutionTyp.BaInstitutionTypID (optionaler Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionTypID = "BaInstitutionTypID";

/// <summary>
/// Zusätzliche Bemerkungen zu der Beziehung BaPerson > BaInstitution
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPerson_BaInstitutionTS = "BaPerson_BaInstitutionTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson_KantonalerZuschuss{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPerson_KantonalerZuschuss"; }
}


/// <summary>
/// PrimaryKey, wird als ID verwendet
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPerson_KantonalerZuschussID = "BaPerson_KantonalerZuschussID";

/// <summary>
/// Fremdschlüssel auf BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel auf BaKantonalerZuschuss.BaKantonalerZuschussID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaKantonalerZuschussID = "BaKantonalerZuschussID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPerson_KantonalerZuschussTS = "BaPerson_KantonalerZuschussTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPerson_NewodPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPerson_NewodPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string NewodPersonID = "NewodPersonID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AuslaenderAktiveSozialhilfe = "AuslaenderAktiveSozialhilfe";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SchweizerAktiveSozialhilfe = "SchweizerAktiveSozialhilfe";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SchweizerAktiveVormundschaft = "SchweizerAktiveVormundschaft";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Aktualisiert = "Aktualisiert";
}

/// <summary>
/// Type: Table
/// Zur Erfassung einer Beziehung (Relation) zwischen Person 1 und Person 2.    Z.B. Person 1 ist Mutter von Person 2
/// </summary>

public static class BaPerson_Relation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPerson_Relation"; }
}


/// <summary>
/// Primärschlüssel für BaPerson_Relation Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPerson_RelationID = "BaPerson_RelationID";

/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaPerson1) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_1 = "BaPersonID_1";

/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaPerson2) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_2 = "BaPersonID_2";

/// <summary>
/// Fremdschlüssel (FK_BaPerson_Relation_BaRelation) => BaRelation.BaRelationID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaRelationID = "BaRelationID";

/// <summary>
/// Beginn der Relation zwischen Person 1 und Person 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Ende der Relation zwischen Person 1 und Person 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Bemerkungsfeld,
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPerson_RelationTS = "BaPerson_RelationTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPLZ{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPLZ"; }
}


/// <summary>
/// Primärschlüssel für BaPLZ Records. Entspricht der ONRP von der Post.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPLZID = "BaPLZID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PLZ6 = "PLZ6";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PLZSuffix = "PLZSuffix";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSCode = "BFSCode";

/// <summary>
/// Die Ordnungsnummer Post ist der eindeutige, unveränderliche Schlüsselbegriff der Postleitzahl
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ONRP = "ONRP";

/// <summary>
/// Datum ab welchem die PLZ gilt.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum bis welchem die PLZ gilt.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPLZTS = "BaPLZTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaPraemienverbilligung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaPraemienverbilligung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaPraemienverbilligungID = "BaPraemienverbilligungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Folgenummer = "Folgenummer";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragAnspruch = "BetragAnspruch";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragAuszahlung = "BetragAuszahlung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungAn = "ZahlungAn";

/// <summary>
/// BAG-Nummer der Krankenkasse
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungAn_Krankenkassennummer = "ZahlungAn_Krankenkassennummer";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LetzteMutation = "LetzteMutation";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Grund = "Grund";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPraemienverbilligungTS = "BaPraemienverbilligungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BaRelation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaRelation"; }
}


/// <summary>
/// Primärschlüssel für BaRelation Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaRelationID = "BaRelationID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string NameRelation = "NameRelation";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 75]
/// </summary>
public const string NameGenerisch1 = "NameGenerisch1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 75]
/// </summary>
public const string NameGenerisch2 = "NameGenerisch2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NameMaennlich1 = "NameMaennlich1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NameWeiblich1 = "NameWeiblich1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NameMaennlich2 = "NameMaennlich2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NameWeiblich2 = "NameWeiblich2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string symmetrisch = "symmetrisch";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BfsCode12 = "BfsCode12";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BfsCode21 = "BfsCode21";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaRelationTS = "BaRelationTS";
}

/// <summary>
/// Type: Table
/// WeiterverrechnungsCode einer Person. (@@TODO das ist nicht nach Namingkonvention!!!)    Dadurch können erbrachte Leistungen an andere Stellen (wie den Bund oder den Herkunftskanton) weiterverrechnet werden.
/// </summary>

public static class BaWVCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaWVCode"; }
}


/// <summary>
/// Primärschlüssel für BaWVCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaWVCodeID = "BaWVCodeID";

/// <summary>
/// Fremdschlüssel (FK_BaWVCode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Weiterverrechnungs-Code der Person (LOV BaWVCode)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaWVCode_ = "BaWVCode";

/// <summary>
/// Beginn der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Ende der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Gibt an ob der WV-Status gültig oder ungültig ist (LOV: BaWVStatus)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StatusCode = "StatusCode";

/// <summary>
/// Bemerkungsfeld für zusätzliche Benutzerangaben
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Nummer des Heimatkantons (@@TODO woher weiss man die? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string HeimatKantonNr = "HeimatKantonNr";

/// <summary>
/// Nummer des Wohnkantons  (@@TODO woher weiss man die? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WohnKantonNr = "WohnKantonNr";

/// <summary>
/// Kürzel des Kantons(@@TODO woher weiss man den? Keine Prüfung, kein LOV)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KantonKuerzel = "KantonKuerzel";

/// <summary>
/// Flag ob die Person Auslandschweizer ist (@@TODO: weshalb auf BaWVCode?)
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Auslandschweizer = "Auslandschweizer";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaWVCodeTS = "BaWVCodeTS";
}

/// <summary>
/// Type: Table
/// Zur Erfassung von Zahlungswegen einer Person oder Institution
/// </summary>

public static class BaZahlungsweg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BaZahlungsweg"; }
}


/// <summary>
/// Primärschlüssel für BaZahlungsweg Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Beginn der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Ende der Gültigkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Art der Überweisung, auf Maske Zahlwegtyp genannt (LOV: BgEinzahlungsschein)  @@TODO Konsistenz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzahlungsscheinCode = "EinzahlungsscheinCode";

/// <summary>
/// Fremdschlüssel (FK_BaZahlungsweg_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// Nummer des Bankkontos
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNummer = "BankKontoNummer";

/// <summary>
/// IBAN-Nummer des Kontos. Bei neu erfassten Kreditoren, wird die IBAN-Nummer von KiSS automatisch errechnet.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBANNummer = "IBANNummer";

/// <summary>
/// Nummer des Postkontos
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string PostKontoNummer = "PostKontoNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseName = "AdresseName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseName2 = "AdresseName2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseStrasse = "AdresseStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseHausNr = "AdresseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdressePostfach = "AdressePostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdressePLZ = "AdressePLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string AdresseOrt = "AdresseOrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string AdresseLandCode = "AdresseLandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BaZahlwegModulStdCodes = "BaZahlwegModulStdCodes";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaZahlungswegTS = "BaZahlungswegTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEAusbezahlteUeberstunden_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEAusbezahlteUeberstunden_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDEAusbezahlteUeberstunden_XUserID = "BDEAusbezahlteUeberstunden_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string AusbezahlteStd = "AusbezahlteStd";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEAusbezahlteUeberstunden_XUserTS = "BDEAusbezahlteUeberstunden_XUserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEFerienanspruch_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEFerienanspruch_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDEFerienanspruch_XUserID = "BDEFerienanspruch_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string FerienanspruchStdProJahr = "FerienanspruchStdProJahr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEFerienanspruch_XUserTS = "BDEFerienanspruch_XUserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEFerienkuerzungen_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEFerienkuerzungen_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string FerienkuerzungStd = "FerienkuerzungStd";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEFerienkuerzungen_XUserTS = "BDEFerienkuerzungen_XUserTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";
}

/// <summary>
/// Type: Table
/// [NamespaceExtension: PI]
/// </summary>

public static class BDELeistung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDELeistung"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BDELeistungID = "BDELeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>
public const string KostenstelleOrgUnitID = "KostenstelleOrgUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [NamespaceExtension: PI]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Dauer = "Dauer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Anzahl = "Anzahl";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string LohnartCode = "LohnartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Flag, ob diese Leistung über die Schnittstelle exportiert werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string KeinExport = "KeinExport";

/// <summary>
/// Historisierter, berechneter Wert des Kostenträgers
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>
public const string HistKostentraeger = "HistKostentraeger";

/// <summary>
/// Historisierter, berechneter Wert der Kostenstelle
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>
public const string HistKostenstelle = "HistKostenstelle";

/// <summary>
/// Historisierter, berechneter Wert der Kostenart
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>
public const string HistKostenart = "HistKostenart";

/// <summary>
/// Historisierter, berechneter Wert der MandantenNummer
/// [DataType: INT]
/// [Length: 4]
/// [NamespaceExtension: PI]
/// </summary>
public const string HistMandantNr = "HistMandantNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string Visiert = "Visiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// [NamespaceExtension: PI]
/// </summary>
public const string BDELeistungTS = "BDELeistungTS";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: PI]
/// </summary>
public const string Fakturiert = "Fakturiert";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDELeistungsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDELeistungsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungTID = "BezeichnungTID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KlientErfassungCode = "KlientErfassungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzahlCode = "AnzahlCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ArtikelNr = "ArtikelNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string LeistungsartTypCode = "LeistungsartTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KostenartCode = "KostenartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRStandard = "KTRStandard";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRIV = "KTRIV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRAHV = "KTRAHV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRNichtberechtigte = "KTRNichtberechtigte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Beschreibung = "Beschreibung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswDienstleistungCode = "AuswDienstleistungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswFakturaCode = "AuswFakturaCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswProduktCode = "AuswProduktCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswPIAuftragCode = "AuswPIAuftragCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDELeistungsartTS = "BDELeistungsartTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEPensum_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEPensum_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDEPensum_XUserID = "BDEPensum_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PensumProzent = "PensumProzent";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEPensum_XUserTS = "BDEPensum_XUserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDESollProTag_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDESollProTag_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDESollProTag_XUserID = "BDESollProTag_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string SollStundenProTag = "SollStundenProTag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDESollProTag_XUserTS = "BDESollProTag_XUserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDESollStundenProJahr_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDESollStundenProJahr_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDESollStundenProJahr_XUserID = "BDESollStundenProJahr_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JanuarStd = "JanuarStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string FebruarStd = "FebruarStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string MaerzStd = "MaerzStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string AprilStd = "AprilStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string MaiStd = "MaiStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JuniStd = "JuniStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JuliStd = "JuliStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string AugustStd = "AugustStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string SeptemberStd = "SeptemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string OktoberStd = "OktoberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string NovemberStd = "NovemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string DezemberStd = "DezemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string TotalStd = "TotalStd";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDESollStundenProJahr_XUserTS = "BDESollStundenProJahr_XUserTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEUserGroup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEUserGroup"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDEUserGroupID = "BDEUserGroupID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string UserGroupName = "UserGroupName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserGroupNameTID = "UserGroupNameTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Beschreibung = "Beschreibung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEUserGroupTS = "BDEUserGroupTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEUserGroup_BDELeistungsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEUserGroup_BDELeistungsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BDEUserGroupID = "BDEUserGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEUserGroup_BDELeistungsartTS = "BDEUserGroup_BDELeistungsartTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BDEZeitrechner{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BDEZeitrechner"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BDEZeitrechnerID = "BDEZeitrechnerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string ZeitVon = "ZeitVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZeitBis = "ZeitBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BDEZeitrechnerTS = "BDEZeitrechnerTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die einzelnen BFS-Dossiers (Anfangszustands- und Folgedossiers)
/// </summary>

public static class BFSDossier{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSDossier"; }
}


/// <summary>
/// Primärschlüssel für BFSDossier Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BFSDossierID = "BFSDossierID";

/// <summary>
/// Fremdschlüssel (FK_BFSDossier_BFSKatalogVersion) => BFSKatalogVersion.BFSKatalogVersionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSKatalogVersionID = "BFSKatalogVersionID";

/// <summary>
/// Fremdschlüssel (FK_BFSDossier_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_BFSDossier_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Die LaufNr wird für das Erstellen der BFS-Dossiernummer benötigt. Nach einen Unterbruch von mehr als 6 Monate wird die LaufNr incrementiert. (BFS-DossierNr = BaPersonID + ZustaendigeGemerinde + LaufNr)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string LaufNr = "LaufNr";

/// <summary>
/// BFS-Code der zuständige Gemeinde. Wird für die BFS-DossierNr benötigt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ZustaendigeGemeinde = "ZustaendigeGemeinde";

/// <summary>
/// Datum der erste Zahlung (Aufnahmedatum). Wird für die BFS-DossierNr benötigt
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// zum definieren ob es ein Stichtag- oder ein Anfangszustand-Dossier ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Stichtag = "Stichtag";

/// <summary>
/// ?? obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSDossierStatusCode = "BFSDossierStatusCode";

/// <summary>
/// Code der BFS-Leistungsart aus BFSLOV-Tabelle
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSLeistungsartCode = "BFSLeistungsartCode";

/// <summary>
/// Datum des Imports
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ImportDatum = "ImportDatum";

/// <summary>
/// Datum der Plausibilisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PlausibilisierungDatum = "PlausibilisierungDatum";

/// <summary>
/// Datum des Exports
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ExportDatum = "ExportDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string XML = "XML";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSDossierTS = "BFSDossierTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSDossierPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSDossierPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BFSDossierPersonID = "BFSDossierPersonID";

/// <summary>
/// Fremdschlüssel (FK_BFSDossierPerson_BFSDossier) => BFSDossier.BFSDossierID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSDossierID = "BFSDossierID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSPersonCode = "BFSPersonCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PersonIndex = "PersonIndex";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PersonName = "PersonName";

/// <summary>
/// Fremdschlüssel (FK_BFSDossierPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSDossierPersonTS = "BFSDossierPersonTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSFarbCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSFarbCode"; }
}


/// <summary>
/// Primärschlüssel für BFSFarbCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BFSFarbCodeID = "BFSFarbCodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Leistungsfilter = "Leistungsfilter";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ExcelFarbCode = "ExcelFarbCode";

/// <summary>
/// Fremdschlüssel (FK_BFSFarbCode_BFSFrage) => BFSFrage.BFSFrageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSFrageID = "BFSFrageID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSFrage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSFrage"; }
}


/// <summary>
/// Primärschlüssel für BFSFrage Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BFSFrageID = "BFSFrageID";

/// <summary>
/// Fremdschlüssel (FK_BFSFrage_BFSKatalogVersion) => BFSKatalogVersion.BFSKatalogVersionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSKatalogVersionID = "BFSKatalogVersionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string Variable = "Variable";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Frage = "Frage";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BFSLeistungsfilterCodes = "BFSLeistungsfilterCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSPersonCode = "BFSPersonCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PersonIndex = "PersonIndex";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BFSFeldCode = "BFSFeldCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BFSFormat = "BFSFormat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FFLOVName = "FFLOVName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BFSLOVName = "BFSLOVName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSValidierungCode = "BFSValidierungCode";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Vorgabewert = "Vorgabewert";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSKategorieCode = "BFSKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HerkunftCode = "HerkunftCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HerkunftBeschreibung = "HerkunftBeschreibung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HerkunftSQL = "HerkunftSQL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FFTabelle = "FFTabelle";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FFFeld = "FFFeld";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FFPKFeld = "FFPKFeld";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Editierbar = "Editierbar";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ExportNode = "ExportNode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ExportAttribute = "ExportAttribute";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ExportPredicate = "ExportPredicate";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string HilfeTitel = "HilfeTitel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HilfeText = "HilfeText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Reihenfolge = "Reihenfolge";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSFrageTS = "BFSFrageTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string FilterRegel = "FilterRegel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string UpdateOK = "UpdateOK";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VariableAntragsteller = "VariableAntragsteller";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string VariableExpandiert = "VariableExpandiert";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSKatalogVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSKatalogVersion"; }
}


/// <summary>
/// Primärschlüssel für BFSKatalogVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BFSKatalogVersionID = "BFSKatalogVersionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PlausexVersion = "PlausexVersion";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string DossierXML = "DossierXML";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSLOV"; }
}


/// <summary>
/// Primärschlüssel für BFSLOV Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSLOVTS = "BFSLOVTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSLOVCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSLOVCode"; }
}


/// <summary>
/// Primärschlüssel für BFSLOVCode Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// Primärschlüssel für BFSLOVCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TextTID = "TextTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KurzText = "KurzText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KurzTextTID = "KurzTextTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Filter = "Filter";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSLOVCodeTS = "BFSLOVCodeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BFSWert{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BFSWert"; }
}


/// <summary>
/// Primärschlüssel für BFSWert Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BFSWertID = "BFSWertID";

/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSDossier) => BFSDossier.BFSDossierID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSDossierID = "BFSDossierID";

/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSDossierPerson) => BFSDossierPerson.BFSDossierPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BFSDossierPersonID = "BFSDossierPersonID";

/// <summary>
/// Fremdschlüssel (FK_BFSWert_BFSFrage) => BFSFrage.BFSFrageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BFSFrageID = "BFSFrageID";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Wert = "Wert";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PlausiFehler = "PlausiFehler";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BFSWertTS = "BFSWertTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgAuszahlungPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgAuszahlungPerson"; }
}


/// <summary>
/// Primärschlüssel für BgAuszahlungPerson Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgAuszahlungPersonID = "BgAuszahlungPersonID";

/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BgZahlungsmodus) => BgZahlungsmodus.BgZahlungsmodusID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgZahlungsmodusID = "BgZahlungsmodusID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbAuszahlungsArtCode = "KbAuszahlungsArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: (1)]
/// </summary>
public const string BgAuszahlungsTerminCode = "BgAuszahlungsTerminCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BgWochentagCodes = "BgWochentagCodes";

/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPerson_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile1 = "MitteilungZeile1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile2 = "MitteilungZeile2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile3 = "MitteilungZeile3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile4 = "MitteilungZeile4";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgAuszahlungPersonTS = "BgAuszahlungPersonTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgAuszahlungPersonTermin{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgAuszahlungPersonTermin"; }
}


/// <summary>
/// Primärschlüssel für BgAuszahlungPersonTermin Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgAuszahlungPersonTerminID = "BgAuszahlungPersonTerminID";

/// <summary>
/// Fremdschlüssel (FK_BgAuszahlungPersonTermin_BgAuszahlungPerson) => BgAuszahlungPerson.BgAuszahlungPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgAuszahlungPersonID = "BgAuszahlungPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgAuszahlungPersonTerminTS = "BgAuszahlungPersonTerminTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgBewilligung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgBewilligung"; }
}


/// <summary>
/// Primärschlüssel für BgBewilligung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgBewilligungID = "BgBewilligungID";

/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_User) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_User_An) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_An = "UserID_An";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBewilligungCode = "BgBewilligungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PerDatum = "PerDatum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgBewilligungTS = "BgBewilligungTS";

/// <summary>
/// Fremdschlüssel (FK_BgBewilligung_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// UserID vom Benutzer der für diese Aktion zuständig ist, unabhängig von der Stellvertretung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Zustaendig = "UserID_Zustaendig";

/// <summary>
/// ID der Abteilung des Leiters der Abteilung von UserID_Zustaendig.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID_ChefZustaendig = "OrgUnitID_ChefZustaendig";

/// <summary>
/// Zum wissen ob die Weiterempfehlung oder die Anfrage zurückgewiesen wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Zurueckgewiesen = "Zurueckgewiesen";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgBudget"; }
}


/// <summary>
/// Primärschlüssel für BgBudget Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBewilligungStatusCode = "BgBewilligungStatusCode";

/// <summary>
/// Fremdschlüssel (FK_BgBudget_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OldID = "OldID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgBudgetTS = "BgBudgetTS";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MasterBudget = "MasterBudget";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgDokument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgDokument"; }
}


/// <summary>
/// Primärschlüssel für BgDokument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgDokumentID = "BgDokumentID";

/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// Fremdschlüssel (FK_BgDokument_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgDokumentTypCode = "BgDokumentTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgDocumentTS = "BgDocumentTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgFinanzplan{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgFinanzplan"; }
}


/// <summary>
/// Primärschlüssel für BgFinanzplan Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string BgBewilligungStatusCode = "BgBewilligungStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGrundEroeffnenCode = "BgGrundEroeffnenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGrundAbschlussCode = "BgGrundAbschlussCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>
public const string WhHilfeTypCode = "WhHilfeTypCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GeplantVon = "GeplantVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GeplantBis = "GeplantBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgFinanzplanTS = "BgFinanzplanTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WhGrundbedarfTypCode = "WhGrundbedarfTypCode";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgFinanzplan_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgFinanzplan_BaPerson"; }
}


/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_BgFinanzplan) => BgFinanzplan.BgFinanzplanID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// Fremdschlüssel (FK_ShFinanzPlan_BaPerson_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string IstUnterstuetzt = "IstUnterstuetzt";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_KbKostenstelle_KVG) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbKostenstelleID_KVG = "KbKostenstelleID_KVG";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_ShNrmVerrechnungsbasis) => ShNrmVerrechnungsbasis.ShNrmVerrechnungsbasisID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string ShNrmVerrechnungsbasisID = "ShNrmVerrechnungsbasisID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PrsNummerKanton = "PrsNummerKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PrsNummerHeimat = "PrsNummerHeimat";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string NrmVerrechnungVon = "NrmVerrechnungVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string NrmVerrechnungBis = "NrmVerrechnungBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NrmVerrechnungsAnteilCode = "NrmVerrechnungsAnteilCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstAuslandCh = "IstAuslandCh";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslandChVon = "AuslandChVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslandChBis = "AuslandChBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslandChMeldungAm = "AuslandChMeldungAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AuslandChReferenzNrBund = "AuslandChReferenzNrBund";

/// <summary>
/// Fremdschlüssel (FK_BgFinanzplan_BaPerson_ShBurgergemeinde) => ShBurgergemeinde.BurgergemeindeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BurgergemeindeID = "BurgergemeindeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgFinanzplan_BaPersonTS = "BgFinanzplan_BaPersonTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgGruppe_BFSFrage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgGruppe_BFSFrage"; }
}


/// <summary>
/// Primärschlüssel dieser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgGruppe_BFSFrageID = "BgGruppe_BFSFrageID";

/// <summary>
/// Fremdschlüssel auf LOV 'BgGruppe'
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// Fremdschlüssel auf BFSFrage (KatalogVersion unabhängig, darum auf das Feld Variable und nicht auf BFSFrageID)
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string Variable = "Variable";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgKostenart"; }
}


/// <summary>
/// Primärschlüssel für BgKostenart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// Fremdschlüssel (FK_BgKostenart_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// ID für die Übersetzung des Namen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Quoting = "Quoting";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// Definiert in welcher Zeile die Kostenart im ZUG Report angezeigt werden soll.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaWVZeileCode = "BaWVZeileCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgKostenartTS = "BgKostenartTS";
}

/// <summary>
/// Type: Table
/// Mapping Tabelle zwischen Kostenarten und GEF-Gruppen. Dies ist für die Differenzierung der Sozialhilferechnung relevant
/// </summary>

public static class BgKostenart_WhGefKategorie{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgKostenart_WhGefKategorie"; }
}


/// <summary>
/// Primärschlüssel dieser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgKostenart_WhGefKategorieID = "BgKostenart_WhGefKategorieID";

/// <summary>
/// Fremdschlüssel auf der Tabelle BgKostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// Fremdschlüssel auf der Tabelle WhGefKategorie
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string WhGefKategorieID = "WhGefKategorieID";

/// <summary>
/// Zum wissen ob die Kostenart eine Inkassoprovision ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsInkassoprovision = "IsInkassoprovision";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgKostenart_WhGefKategorieTS = "BgKostenart_WhGefKategorieTS";
}

/// <summary>
/// Type: Table
/// Daten über eine Position in einem Budget
/// </summary>

public static class BgPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgPosition"; }
}


/// <summary>
/// Primärschlüssel für BgPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgPosition) => BgPosition.BgPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID_Parent = "BgPositionID_Parent";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID_CopyOf = "BgPositionID_CopyOf";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgBudget) => BgBudget.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_BgSpezkonto) => BgSpezkonto.BgSpezkontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string DebitorBaPersonID = "DebitorBaPersonID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ErstelltUserID = "ErstelltUserID";

/// <summary>
/// Fremdschlüssel (FK_BgPosition_XUser1) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string MutiertUserID = "MutiertUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID_AutoForderung = "BgPositionID_AutoForderung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ShBelegID = "ShBelegID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>
public const string Reduktion = "Reduktion";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>
public const string Abzug = "Abzug";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragEff = "BetragEff";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((999999999))]
/// </summary>
public const string MaxBeitragSD = "MaxBeitragSD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string VerwaltungSD = "VerwaltungSD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OldID = "OldID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeVon = "VerwPeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeBis = "VerwPeriodeBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FaelligAm = "FaelligAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechnungDatum = "RechnungDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string BgBewilligungStatusCode = "BgBewilligungStatusCode";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value1 = "Value1";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value2 = "Value2";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value3 = "Value3";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragAnfrage = "BetragAnfrage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgAuszahlungID = "BgAuszahlungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEff = "DatumEff";

/// <summary>
/// Der Benutzer kann über die Saldierung eine Bemerkung hinzufügen. Siehe CtlQueryWhZahlungseingaenge.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungSaldierung = "BemerkungSaldierung";

/// <summary>
/// Der Benutzer kann manuell eine BgPosition eines Monatsbudgets als saldiert markieren.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Saldiert = "Saldiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltDatum = "ErstelltDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MutiertDatum = "MutiertDatum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionTS = "BgPositionTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgPositionsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgPositionsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HilfeText = "HilfeText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Fremdschlüssel (FK_ShPositionTyp_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NrmKontoCode = "NrmKontoCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string VerwaltungSD_Default = "VerwaltungSD_Default";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Spezkonto = "Spezkonto";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProPerson = "ProPerson";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProUE = "ProUE";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((16773120))]
/// </summary>
public const string Masterbudget_EditMask = "Masterbudget_EditMask";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((4095))]
/// </summary>
public const string Monatsbudget_EditMask = "Monatsbudget_EditMask";

/// <summary>
/// Fremdschlüssel (FK_BgPositionsart_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>
public const string sqlRichtlinie = "sqlRichtlinie";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionsartTS = "BgPositionsartTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VarName = "VarName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Verrechenbar = "Verrechenbar";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ErzeugtBfsDossier = "ErzeugtBfsDossier";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Beginn der Gültigkeit der Positionsart
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Ende der Gültigkeit der Positionsart
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Identifikationsnummer einer Positionsart, die für terminierte Positionsarten und ihre Nachfolge-Positionsarten identisch ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartCode = "BgPositionsartCode";

/// <summary>
/// Fremdschlüssel einer Nachfolge-Positionsart auf ihre terminierte Vorgänger-Positionsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID_CopyOf = "BgPositionsartID_CopyOf";

/// <summary>
/// Sagt aus, ob die Positionsart vom System vorgegeben oder kundenspezifisch ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Die Auswahl des Kreditors beschränkt sich auf die Zahlungsverbindungen im Klientensystem (Personen + Institutionen) sowie auf die Instititution des Spezialkontos bei einer Einzelzahlung ab Spezialkonto mit konfigurierter Institution die Institution des Spezialkontos.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KreditorEingeschraenkt = "KreditorEingeschraenkt";
}

/// <summary>
/// Type: Table
/// Tabelle um Buchungstextvorschläge pro Positionsart zu speichern
/// </summary>

public static class BgPositionsartBuchungstext{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgPositionsartBuchungstext"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgPositionsartBuchungstextID = "BgPositionsartBuchungstextID";

/// <summary>
/// Fremdschlüssel auf der BgPositionsart für welche den Buchungstext gesetzt ist
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// Fremdschlüssel auf der BgPositionsart in welcher den Buchungstext definiert ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID_UseText = "BgPositionsartID_UseText";

/// <summary>
/// Buchungstext für eine Positionsart
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// zum definieren ob diesen Eintrag der Standard-Buchungstext ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Standardwert = "Standardwert";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionsartBuchungstextTS = "BgPositionsartBuchungstextTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgSpezkonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgSpezkonto"; }
}


/// <summary>
/// Primärschlüssel für BgSpezkonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgSpezkontoTypCode = "BgSpezkontoTypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string NameSpezkonto = "NameSpezkonto";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0.0000))]
/// </summary>
public const string StartSaldo = "StartSaldo";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string OhneEinzelzahlung = "OhneEinzelzahlung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragProMonat = "BetragProMonat";

/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BgPositionsart) => BgPositionsart.BgPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErsterMonat = "ErsterMonat";

/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OldID = "OldID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgSpezkontoTS = "BgSpezkontoTS";

/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel (FK_BgSpezkonto_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Inaktiv = "Inaktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KuerzungLaufzeitMonate = "KuerzungLaufzeitMonate";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KuerzungAnteilGBL = "KuerzungAnteilGBL";

/// <summary>
/// Begründung des Abschluss
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussBegruendung = "AbschlussBegruendung";

/// <summary>
/// Rückerstattung des Abzahlungskontos. Code aus LOV AbzahlungskontoRueckerstattung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbzahlungskontoRueckerstattungCode = "AbzahlungskontoRueckerstattungCode";

/// <summary>
/// Abschlussgrund des Abzahlungskontos. Code aus LOV AbzahlungskontoAbschlussgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundCode = "AbschlussgrundCode";
}

/// <summary>
/// Type: Table
/// Tabelle um einen Spezialkonto abzuschliessen. (neu für Abzahlungskonto in Ticket #4918)
/// </summary>

public static class BgSpezkontoAbschluss{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgSpezkontoAbschluss"; }
}


/// <summary>
/// Primärschlüssel der Tabelle BgSpezkontoAbschluss
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgSpezkontoAbschlussID = "BgSpezkontoAbschlussID";

/// <summary>
/// Fremdschlüssel des Spezialkonto
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// Abschlussbetrag
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Abschlusstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgSpezkontoAbschlussTS = "BgSpezkontoAbschlussTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgZahlungsmodus{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgZahlungsmodus"; }
}


/// <summary>
/// Primärschlüssel für BgZahlungsmodus Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgZahlungsmodusID = "BgZahlungsmodusID";

/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodus_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string NameZahlungsmodus = "NameZahlungsmodus";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbAuszahlungsArtCode = "KbAuszahlungsArtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string KontoKlient = "KontoKlient";

/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodus_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OldID = "OldID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgZahlungsmodusTS = "BgZahlungsmodusTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class BgZahlungsmodusTermin{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BgZahlungsmodusTermin"; }
}


/// <summary>
/// Primärschlüssel für BgZahlungsmodusTermin Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string BgZahlungsmodusTerminID = "BgZahlungsmodusTerminID";

/// <summary>
/// Fremdschlüssel (FK_BgZahlungsmodusTermin_BgZahlungsmodus) => BgZahlungsmodus.BgZahlungsmodusID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgZahlungsmodusID = "BgZahlungsmodusID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TagImMonat = "TagImMonat";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string ImVormonat = "ImVormonat";

/// <summary>
/// [DataType: SMALLINT]
/// [Length: 2]
/// [DefaultValue: (1)]
/// </summary>
public const string nMonatlich = "nMonatlich";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>
public const string BetragGleich = "BetragGleich";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgZahlungsmodusTerminTS = "BgZahlungsmodusTerminTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaField{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "DynaField"; }
}


/// <summary>
/// Primärschlüssel für DynaField Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DynaFieldID = "DynaFieldID";

/// <summary>
/// Fremdschlüssel (FK_DynaField_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsForeignKey: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string FieldName = "FieldName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FieldCode = "FieldCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DisplayText = "DisplayText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TabPosition = "TabPosition";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string X = "X";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Y = "Y";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Width = "Width";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Height = "Height";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Length = "Length";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string SQL = "SQL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DefaultValue = "DefaultValue";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Mandatory = "Mandatory";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string TabName = "TabName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string GridColTitle = "GridColTitle";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GridColWidth = "GridColWidth";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GridColPosition = "GridColPosition";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AppCode = "AppCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string DynaFieldTS = "DynaFieldTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GridColTitleTID = "GridColTitleTID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DisplayTextTID = "DisplayTextTID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaMask{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "DynaMask"; }
}


/// <summary>
/// Primärschlüssel für DynaMask Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ParentMaskName = "ParentMaskName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentPosition = "ParentPosition";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaModulCode = "FaModulCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaPhaseCode = "FaPhaseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmProzessCode = "VmProzessCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string DisplayText = "DisplayText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IconID = "IconID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string TabNames = "TabNames";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GridHeight = "GridHeight";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string Active = "Active";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AppCode = "AppCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string DynaMaskTS = "DynaMaskTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaProzessCode = "KaProzessCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DisplayTextTID = "DisplayTextTID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class DynaValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "DynaValue"; }
}


/// <summary>
/// Primärschlüssel für DynaValue Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DynaValueID = "DynaValueID";

/// <summary>
/// Fremdschlüssel (FK_DynaValue_FaPhase) => FaPhase.FaPhaseID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// Fremdschlüssel (FK_DynaValue_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_DynaValue_DynaField) => DynaField.DynaFieldID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string DynaFieldID = "DynaFieldID";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ValueText = "ValueText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GridRowID = "GridRowID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string CreationDate = "CreationDate";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string DynaValueTS = "DynaValueTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaAktennotizen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaAktennotizen"; }
}


/// <summary>
/// Primärschlüssel des Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaAktennotizID = "FaAktennotizID";

/// <summary>
/// Fremdschlüssel auf FaLeistung.FaLeistungID. Weisst die Aktennotiz zu einer Leistung zu.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf XUser.UserID. Weisst die Aktennotiz zu einem Mitarbeiter zu.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Zeit = "Zeit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaDauerCode = "FaDauerCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaGespraechsStatusCode = "FaGespraechsStatusCode";

/// <summary>
/// Verschiedene Themen wie Wohnen, Gesundheit u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string FaThemaCodes = "FaThemaCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaGespraechstypCode = "FaGespraechstypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktpartner = "Kontaktpartner";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AlimentenstelleTypCode = "AlimentenstelleTypCode";

/// <summary>
/// BaPersonIDs der betroffenen Personen, kommasepariert
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonIDs = "BaPersonIDs";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltRTF = "InhaltRTF";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Vertraulich = "Vertraulich";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BesprechungThema1 = "BesprechungThema1";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BesprechungThema2 = "BesprechungThema2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BesprechungThema3 = "BesprechungThema3";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BesprechungThema4 = "BesprechungThema4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText1 = "BesprechungThemaText1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText2 = "BesprechungThemaText2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText3 = "BesprechungThemaText3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText4 = "BesprechungThemaText4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel1 = "BesprechungZiel1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel2 = "BesprechungZiel2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel3 = "BesprechungZiel3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel4 = "BesprechungZiel4";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad1 = "BesprechungZielGrad1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad2 = "BesprechungZielGrad2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad3 = "BesprechungZielGrad3";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad4 = "BesprechungZielGrad4";

/// <summary>
/// Mögliche Werte sind z.B. Telefon oder E-Mail.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKontaktartCode = "FaKontaktartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz1 = "Pendenz1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz2 = "Pendenz2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz3 = "Pendenz3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz4 = "Pendenz4";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PendenzErledigt1 = "PendenzErledigt1";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PendenzErledigt2 = "PendenzErledigt2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PendenzErledigt3 = "PendenzErledigt3";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PendenzErledigt4 = "PendenzErledigt4";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt wroden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt mutiert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaAktennotizTS = "FaAktennotizTS";
}

/// <summary>
/// Type: Table
/// Diese Tabelle ist für die Dokumentablage. Zur Zeit wird diese Tabelle nur von SRK verwendet. Ist sehr änhlich wie FaDokumente, hat aber doch etwas andere Attribute wie eine many to many Verbindung zu BaPerson.
/// </summary>

public static class FaDokumentAblage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaDokumentAblage"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaDokumentAblageID = "FaDokumentAblageID";

/// <summary>
/// Fremdschlüssel zur FaLeistung.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel zum User. Enthält den User, welcher das Dokument erstellt hat (wird zur Zeit nicht auf der Maske angezeigt).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Foreign Key auf BaPerson, falls im Adressat eine Person ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// Foreign Key auf BaInstitution, falls im Adressat eine Institution ist
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// Werteliste FaDokumentAblageInhalt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaDokumentAblageInhaltCode = "FaDokumentAblageInhaltCode";

/// <summary>
/// LOV FaThemaDokAblage. Thema zum Dokument.
/// [DataType: VARCHAR]
/// [Length: 250]
/// [AllowNulls: True]
/// </summary>
public const string FaThemaDokAblageCodes = "FaThemaDokAblageCodes";

/// <summary>
/// Wann das Dokument erstellt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumErstellung = "DatumErstellung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumGueltigVon = "DatumGueltigVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumGueltigBis = "DatumGueltigBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// Bemerkungen über das Dokument.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Fremdschlüssel zu XDocument (=> DocumentId).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaDokumentAblageTS = "FaDokumentAblageTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle von BaPerson und FaDokumentAblage
/// </summary>

public static class FaDokumentAblage_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaDokumentAblage_BaPerson"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaDokumentAblage_BaPersonID = "FaDokumentAblage_BaPersonID";

/// <summary>
/// Fremdschlüssel auf Tabelle BaPerson, Spalte BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel zur Tabelle FaKodumentAblage, Spalte FaDokumentAblageID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaDokumentAblageID = "FaDokumentAblageID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaDokumentAblage_BaPersonTS = "FaDokumentAblage_BaPersonTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaDokumente{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaDokumente"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaDokumenteID = "FaDokumenteID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_LT = "BaPersonID_LT";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// Fremdschlüssel zum PriMa (Private Mandatsträger) für das Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID_Adressat = "VmPriMaID_Adressat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Absender = "UserID_Absender";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_VisumBeantragtDurch = "UserID_VisumBeantragtDurch";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_VisumBeantragtBei = "UserID_VisumBeantragtBei";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_VisiertDurch = "UserID_VisiertDurch";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_EkVisumUser = "UserID_EkVisumUser";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Merkblatt Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Merkblatt = "DocumentID_Merkblatt";

/// <summary>
/// BaPersonIDs der betroffenen Personen, kommasepariert
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonIDs = "BaPersonIDs";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumErstellung = "DatumErstellung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StatusCode = "StatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PendenzDatum = "PendenzDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PendenzErledigt = "PendenzErledigt";

/// <summary>
/// Welcher Dienst es ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmErbDienstCode = "VmErbDienstCode";

/// <summary>
/// Dauer, z.B. 15 Minuten
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaDauerCode = "FaDauerCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EingangAusgang = "EingangAusgang";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ThemaCode = "ThemaCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VisumBeantragtDatum = "VisumBeantragtDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VisiertDatum = "VisiertDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EkStatusCode = "EkStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EkLaufNr = "EkLaufNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EkKW = "EkKW";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EkJahr = "EkJahr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EkVisumDatum = "EkVisumDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Auflistung der Themen (aus LOV). Kommasepariert.
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FaThemaCodes = "FaThemaCodes";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Vertraulich = "Vertraulich";

/// <summary>
/// Hat den Wert 1, wenn das Dokument logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Ob ein Dokument ein Bericht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstBericht = "IstBericht";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wan der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zulest verändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaDokumenteTS = "FaDokumenteTS";
}

/// <summary>
/// Type: Table
/// Tabelle für die Maske Fa - Kategorisierung
/// </summary>

public static class FaKategorisierung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaKategorisierung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaKategorisierungID = "FaKategorisierungID";

/// <summary>
/// FK auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// FK auf FaKategorisierungEksProdukt (Wertelistenersatztabelle)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaKategorisierungEksProduktID = "FaKategorisierungEksProduktID";

/// <summary>
/// FK auf XUser
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Das Datum der Kategorisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Werteliste FaKategorisierungEksOption
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungEksOptionCode = "FaKategorisierungEksOptionCode";

/// <summary>
/// Werteliste FaKategorisierungKiStatus (N, F)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungKiStatusCode = "FaKategorisierungKiStatusCode";

/// <summary>
/// Werteliste FaKategorisierungIntake (A,B,C)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungIntakeCode = "FaKategorisierungIntakeCode";

/// <summary>
/// Werteliste FaKategorisierungKooperation (1,2,...,9,10)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungKooperationCode = "FaKategorisierungKooperationCode";

/// <summary>
/// Werteliste FaKategorisierungRessourcen (1,2,...,9,10)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungRessourcenCode = "FaKategorisierungRessourcenCode";

/// <summary>
/// Werteliste FaKategorisierungAbschlussgrund (ähnlich Abschlussgrund Intake-Phase)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorisierungAbschlussgrundCode = "FaKategorisierungAbschlussgrundCode";

/// <summary>
/// Dynamisch berechnete Spalte. Enthält die aus den Kategorisierungs-Kriterien resultierende Kategorie.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKategorieCode = "FaKategorieCode";

/// <summary>
/// Ende der Kategorisierung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Abschlussdatum = "Abschlussdatum";

/// <summary>
/// Begründung der Kategorisierung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaKategorisierungTS = "FaKategorisierungTS";
}

/// <summary>
/// Type: Table
/// Wird für Auswahl EKS-Produkt auf der Maske Fa - Kategorisierung verwendet (an Stelle einer LOV, wegen FK auf XOrgUnit)
/// </summary>

public static class FaKategorisierungEksProdukt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaKategorisierungEksProdukt"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaKategorisierungEksProduktID = "FaKategorisierungEksProduktID";

/// <summary>
/// Fremdschlüssel auf XOrgUnit
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Text, der im Dropdown angezeigt wird
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Text, der im Fallnavigator angezeigt wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string ShortText = "ShortText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaKategorieCode = "FaKategorieCode";

/// <summary>
/// Die Anzahl Tage/Monate/Jahre (abhängig von FaKategorisierungEksProduktFristTypCode) für die Berechnung des Felds 'Frist'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Frist = "Frist";

/// <summary>
/// Der Typ des Felds 'Frist' (Tag/Monat/Jahr)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaKategorisierungEksProduktFristTypCode = "FaKategorisierungEksProduktFristTypCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaKategorisierungEksProduktTS = "FaKategorisierungEksProduktTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet alle fachlich historisierten Modul-Leistungen der Klientendossiers
/// </summary>

public static class FaLeistung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaLeistung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaFallID = "FaFallID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string SachbearbeiterID = "SachbearbeiterID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistung_SchuldnerBaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string SchuldnerBaPersonID = "SchuldnerBaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaProzessCode = "FaProzessCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ([dbo].[fnGetDefaultGemeindeCode]())]
/// </summary>
public const string GemeindeCode = "GemeindeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string LeistungsartCode = "LeistungsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsGrundCode = "EroeffnungsGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussGrundCode = "AbschlussGrundCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Nummer des KES Dossiers
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string Dossiernummer = "Dossiernummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: MBU]
/// </summary>
public const string FaAufnahmeartCode = "FaAufnahmeartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: MBU]
/// </summary>
public const string FaKontaktveranlasserCode = "FaKontaktveranlasserCode";

/// <summary>
/// LOV-Codes für FaTeilleistungserbringer
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string FaTeilleistungserbringerCodes = "FaTeilleistungserbringerCodes";

/// <summary>
/// LOV-Codes für FaModulDienstleistungen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string FaModulDienstleistungenCode = "FaModulDienstleistungenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkSchuldnerStatusCode = "IkSchuldnerStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkAufenthaltsartCode = "IkAufenthaltsartCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkHatUnterstuetzung = "IkHatUnterstuetzung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkIstRentenbezueger = "IkIstRentenbezueger";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkSchuldnerMahnen = "IkSchuldnerMahnen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkEinnahmenQuoteCode = "IkEinnahmenQuoteCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkDatumRechtskraft = "IkDatumRechtskraft";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkInkassoBemuehungCode = "IkInkassoBemuehungCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkVerjaehrungAm = "IkVerjaehrungAm";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkLeistungStatusCode = "IkLeistungStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkDatumForderungstitel = "IkDatumForderungstitel";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkRueckerstattungTypCode = "IkRueckerstattungTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkForderungTitelCode = "IkForderungTitelCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string IkErreichungsGradCode = "IkErreichungsGradCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string OldUnitID = "OldUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string VmAuftragCode = "VmAuftragCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KaProzessCode = "KaProzessCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string KaEpqJob = "KaEpqJob";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: Standard]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: BIGINT]
/// [Length: 8]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string PscdVertragsgegenstandID = "PscdVertragsgegenstandID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string MigBemerkung = "MigBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string MigHerkunftCode = "MigHerkunftCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string MigAlteFallNr = "MigAlteFallNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string VUFaFallID = "VUFaFallID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string visdat36Area = "visdat36Area";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string visdat36FALLID = "visdat36FALLID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string visdat36LEISTUNGID = "visdat36LEISTUNGID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// [NamespaceExtension: Standard]
/// </summary>
public const string WiederholteSpezifischeErmittlungEAF = "WiederholteSpezifischeErmittlungEAF";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaLeistungTS = "FaLeistungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungArchiv{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaLeistungArchiv"; }
}


/// <summary>
/// Primärschlüssel für FaLeistungArchiv Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaLeistungArchivID = "FaLeistungArchivID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XArchive) => XArchive.ArchiveID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ArchiveID = "ArchiveID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ArchivNr = "ArchivNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string CheckIn = "CheckIn";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut = "CheckOut";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string CheckInUserID = "CheckInUserID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungArchiv_XUser1) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string CheckOutUserID = "CheckOutUserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaLeistungArchivTS = "FaLeistungArchivTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungBewertung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaLeistungBewertung"; }
}


/// <summary>
/// Primärschlüssel für FaLeistungBewertung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaBewertungID = "FaBewertungID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungBewertung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Termin = "Termin";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaBewertungCode = "FaBewertungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FaKriterienCodes = "FaKriterienCodes";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungBewertung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaLeistungBewertungTS = "FaLeistungBewertungTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen für die Darstellung der Fallübergabe in der Zeitachse
/// </summary>

public static class FaLeistungUserHist{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaLeistungUserHist"; }
}


/// <summary>
/// Primärschlüssel für FaLeistungUserHist.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaLeistungUserHistID = "FaLeistungUserHistID";

/// <summary>
/// Die dazugehörige FaLeistungID.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Der für den Zeitraum zuständige User.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Datum von welchem an der User für den Fall zuständig war.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum bis zu welchem der User für den Fall zuständig war.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaLeistungUserHistTS = "FaLeistungUserHistTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaLeistungZugriff{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaLeistungZugriff"; }
}


/// <summary>
/// Primärschlüssel für FaLeistungZugriff Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaLeistungZugriffID = "FaLeistungZugriffID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungZugriff_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_FaLeistungZugriff_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DarfMutieren = "DarfMutieren";

/// <summary>
/// Gastrechtsgültigkeit DatumVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Gastrechtsgültigkeit DatumBis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaLeistungZugriffTS = "FaLeistungZugriffTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPendenzgruppe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaPendenzgruppe"; }
}


/// <summary>
/// Primärschlüssel für FaPendenzgruppe Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaPendenzgruppeID = "FaPendenzgruppeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Beschreibung = "Beschreibung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaPendenzgruppeTS = "FaPendenzgruppeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPendenzgruppe_User{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaPendenzgruppe_User"; }
}


/// <summary>
/// Primärschlüssel für FaPendenzgruppe_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaPendenzgruppe_UserID = "FaPendenzgruppe_UserID";

/// <summary>
/// Fremdschlüssel (FK_FaPendenzgruppe_XUser_FaPendenzgruppe) => FaPendenzgruppe.FaPendenzgruppeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaPendenzgruppeID = "FaPendenzgruppeID";

/// <summary>
/// Fremdschlüssel (FK_FaPendenzgruppe_XUser_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaPendenzgruppe_UserTS = "FaPendenzgruppe_UserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FaPhase{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaPhase"; }
}


/// <summary>
/// Primärschlüssel für FaPhase Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// Fremdschlüssel (FK_FaPhase_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_FaPhase_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_FaPhase_FsDienstleistungspaket) => FsDienstleistungspaket.FsDienstleistungspaketID. Rolle ist Zugewiesen (siehe auch Bedarf).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FsDienstleistungspaketID_Zugewiesen = "FsDienstleistungspaketID_Zugewiesen";

/// <summary>
/// Fremdschlüssel (FK_FaPhase_FsDienstleistungspaket) => FsDienstleistungspaket.FsDienstleistungspaketID. Rolle ist Bedarf (siehe auch Zugewiesen).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FsDienstleistungspaketID_Bedarf = "FsDienstleistungspaketID_Bedarf";

/// <summary>
/// Typ der Phase (LOV FaPhase)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaPhaseCode = "FaPhaseCode";

/// <summary>
/// Datum VON der Phase
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum BIS der Phase
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Abschlussgrund der Phase (LOV AbschlussGrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussGrundCode = "AbschlussGrundCode";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt wroden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt mutiert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaPhaseTS = "FaPhaseTS";
}

/// <summary>
/// Type: Table
/// Hier werden die FaLeistungen gespeichert, welche verknüpft werden müssen und z.B. in einem Ordner dargestellt werden (EAF).
/// </summary>

public static class FaRelation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaRelation"; }
}


/// <summary>
/// Primärschlüssel der Tabelle FaRelation
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaRelationID = "FaRelationID";

/// <summary>
/// Erste FaLeistungID welche mit FaLeistungID2 zusammenhängt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID1 = "FaLeistungID1";

/// <summary>
/// Zweite FaLeistungID welche mit FaLeistungID1 zusammenhängt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID2 = "FaLeistungID2";

/// <summary>
/// LOV welche den Typ des Eintrags definiert
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaRelationTypCode = "FaRelationTypCode";

/// <summary>
/// True wenn beide FaLeistungen synchron behandelt werden sollen. Z.B. bei Fallzugriff.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string CascadeUpdate = "CascadeUpdate";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaRelationTS = "FaRelationTS";
}

/// <summary>
/// Type: Table
/// beinhaltet Weisungen Einträge.
/// Eine zwischen Tabelle für die Termine und Dokumente wurde Datenstrukturmässig schönner sein, aber komplexer im C# Code. Da wir nur 5 Termine und Dokumente haben sind sie direkt auf der Weisungstabelle.
/// Die zwischen Tabelle FaWeisung_TerminDocument (oder änlich) wurde die folgende Felder haben:
/// - FaWeisung_TerminDocumentID int identity
/// - FaWeisungID int
/// - XDocumentID int
/// - Termin datetime
/// - TerminTyp int (Weisung, Mahnung1, Mahnung2, Mahnung3, Verfuegung)
/// 
/// </summary>

public static class FaWeisung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaWeisung"; }
}


/// <summary>
/// Primärschlüssel der Weisung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaWeisungID = "FaWeisungID";

/// <summary>
/// Fremdschlüssel einer FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel vom Benutzer, welcher den Datensatz erstellt hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Creator = "UserID_Creator";

/// <summary>
/// UserID vom verantwortliche RD
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_VerantwortlichRD = "UserID_VerantwortlichRD";

/// <summary>
/// UserID vom verantwortliche SAR
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_VerantwortlichSAR = "UserID_VerantwortlichSAR";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XTaskID_SAR = "XTaskID_SAR";

/// <summary>
/// StatusCode der Weisung, ein Enum im C# Code. Der Name des Enum ist FaWeisung.Status.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string StatusCode = "StatusCode";

/// <summary>
/// Die Weisungsart. Ist ein Enum im C# Code (schriftlich, mündlich). Der Name des Enum ist FaWeisung.Weisungsart.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string WeisungsartCode = "WeisungsartCode";

/// <summary>
/// Betreff der Weisung
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Betreff = "Betreff";

/// <summary>
/// Die Ausgangslage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ausganslage = "Ausganslage";

/// <summary>
/// Die Auflage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auflage = "Auflage";

/// <summary>
/// angedrohte Konsequenz. KonsequenzCode aus LOV Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string KonsequenzCodeAngedroht = "KonsequenzCodeAngedroht";

/// <summary>
/// angedrohte Kürzung zwischen 0 und 15%
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string KuerzungGBAngedroht = "KuerzungGBAngedroht";

/// <summary>
/// Termin der Weisung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TerminWeisung = "TerminWeisung";

/// <summary>
/// Document der Weisung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Weisung = "XDocumentID_Weisung";

/// <summary>
/// Termin der 1. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TerminMahnung1 = "TerminMahnung1";

/// <summary>
/// Document der 1. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Mahnung1 = "XDocumentID_Mahnung1";

/// <summary>
/// Termin der 2. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TerminMahnung2 = "TerminMahnung2";

/// <summary>
/// Document der 2. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Mahnung2 = "XDocumentID_Mahnung2";

/// <summary>
/// Termin der 3. Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TerminMahnung3 = "TerminMahnung3";

/// <summary>
/// Document der 3. Mahnung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Mahnung3 = "XDocumentID_Mahnung3";

/// <summary>
/// Datum der Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVerfuegung = "DatumVerfuegung";

/// <summary>
/// Document der Verfügung. Fremdschlüssel aud XDocument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Verfuegung = "XDocumentID_Verfuegung";

/// <summary>
/// verfügte Konsequenz. KonsequenzCode aus LOV Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KonsequenzCodeVerfuegt = "KonsequenzCodeVerfuegt";

/// <summary>
/// Konsequenz gültig von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KonsequenzDatumVon = "KonsequenzDatumVon";

/// <summary>
/// Konsequenz gültig bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KonsequenzDatumBis = "KonsequenzDatumBis";

/// <summary>
/// verfügte Kürzung zwischen 0 und 15%
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KuerzungGBVerfuegt = "KuerzungGBVerfuegt";

/// <summary>
/// Kürzung gültig von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KuerzungDatumVon = "KuerzungDatumVon";

/// <summary>
/// Kürzung gültig bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KuerzungDatumBis = "KuerzungDatumBis";

/// <summary>
/// Zum wissen ob die Weisung verschoben wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string WeisungVerschoben = "WeisungVerschoben";

/// <summary>
/// Die Weisung ist erfüllt (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string WeisungErfuellt = "WeisungErfuellt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string CanDelete = "CanDelete";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaWeisungTS = "FaWeisungTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet betroffene Personen von einer Weisung
/// </summary>

public static class FaWeisung_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaWeisung_BaPerson"; }
}


/// <summary>
/// Primärschlüssel für FaWeisung_BaPerson Records
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaWeisung_BaPersonID = "FaWeisung_BaPersonID";

/// <summary>
/// Fremdschlüssel auf FaWeisung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaWeisungID = "FaWeisungID";

/// <summary>
/// Fredmschlüssel auf BaPerson
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaWeisung_BaPersonTS = "FaWeisung_BaPersonTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet das Protokoll jeder Weisungen
/// </summary>

public static class FaWeisungProtokoll{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaWeisungProtokoll"; }
}


/// <summary>
/// Primärschlüssel von FaWeisung_Protokoll Records
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaWeisungProtokollID = "FaWeisungProtokollID";

/// <summary>
/// Fremdschlüssel auf FaWeisung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaWeisungID = "FaWeisungID";

/// <summary>
/// Aktion die für die Weisung gemacht wurde
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Aktion = "Aktion";

/// <summary>
/// Bemerkung für die Weisung
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Nächster Termin
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Termin = "Termin";

/// <summary>
/// Verantwortliche Person für die nächste Aktion
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Verantwortlich = "Verantwortlich";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaWeisung_ProtokollTS = "FaWeisung_ProtokollTS";
}

/// <summary>
/// Type: Table
/// beinhaltet Einträge für die Steuerung von Weisungen
/// </summary>

public static class FaWeisungWorkflow{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaWeisungWorkflow"; }
}


/// <summary>
/// Primärschlüssel vom Workflow-Eintrag
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaWeisungWorkflowID = "FaWeisungWorkflowID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XTaskTemplateID_RD = "XTaskTemplateID_RD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XTaskTemplateID_SAR = "XTaskTemplateID_SAR";

/// <summary>
/// Aktueller Status. Wert vom Enum FaWeisungStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string StatusCode = "StatusCode";

/// <summary>
/// Aktion für den aktuellen Status
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Aktion = "Aktion";

/// <summary>
/// TID für die Mehrsprachigkeit der Aktion
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AktionTID = "AktionTID";

/// <summary>
/// Neuer Status der Weisung. Wert vom Enum FaWeisungStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string NeuerStatusCode = "NeuerStatusCode";

/// <summary>
/// Person die für die Weisung Zuschtändig ist.
/// ZustaendigCode ist ein Enum (FaWeisung.Zustaendig)
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string ZustaendigCode = "ZustaendigCode";

/// <summary>
/// Das nächste Termin ist ein Mussfeld
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string TerminMuss = "TerminMuss";

/// <summary>
/// TerminCode zum wissen in welchem Feld das nächste Termin kopiert sein muss.
/// TerminCode ist ein Enum (FaWeisung.Termin)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NaechsterTerminCode = "NaechsterTerminCode";

/// <summary>
/// Zum wissen ob das Datum vom NaechstenTerminCode angepasst sein muss.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string NaechsterTerminAnpassen = "NaechsterTerminAnpassen";

/// <summary>
/// Eine Pendenz soll für den Sacharbeiter generiert werden (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PendenzSAR = "PendenzSAR";

/// <summary>
/// Eine Pendenz soll für den Rechstdienst generiert werden (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PendenzRD = "PendenzRD";

/// <summary>
/// Die Pendenz vom SAR muss angepasst weden, und nicht neu erstellt (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SARPendenzAnpassen = "SARPendenzAnpassen";

/// <summary>
/// Zum wissen ob die Weisung nach dieser Aktion erfüllt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string WeisungErfuellt = "WeisungErfuellt";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaWeisungWorkflowTS = "FaWeisungWorkflowTS";
}

/// <summary>
/// Type: Table
/// Tabelle für Maske Zeitliche Planung (Fallführung SRK)
/// </summary>

public static class FaZeitlichePlanung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaZeitlichePlanung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FaZeitlichePlanungID = "FaZeitlichePlanungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase1Ende = "Phase1Ende";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase1SitAnalyse = "Phase1SitAnalyse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Phase1Bemerkungen = "Phase1Bemerkungen";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase2Beginn = "Phase2Beginn";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase2Ende = "Phase2Ende";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase2SitAnalyse = "Phase2SitAnalyse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Phase2Bemerkungen = "Phase2Bemerkungen";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase3Beginn = "Phase3Beginn";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Phase3SitAnalyse = "Phase3SitAnalyse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Phase3Bemerkungen = "Phase3Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FaZeitlichePlanungTS = "FaZeitlichePlanungTS";
}

/// <summary>
/// Type: Table
/// beinhaltet Barauszahlungsaufträge
/// </summary>

public static class FbBarauszahlungAuftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBarauszahlungAuftrag"; }
}


/// <summary>
/// Primärschlüssel einem Barauszahlungsauftrag
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBarauszahlungAuftragID = "FbBarauszahlungAuftragID";

/// <summary>
/// Fremdschlüssel der Leistung.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel des Benutzers welcher den Auftrag erstellt hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Creator = "UserID_Creator";

/// <summary>
/// Fremdschlüssel des Benutzers welcher den Auftrag geändert hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Modifier = "UserID_Modifier";

/// <summary>
/// Fremdschlüssel von einem Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID = "XDocumentID";

/// <summary>
/// zum wissen ob Auszahlung bereits voranden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AuszahlungenVorhanden = "AuszahlungenVorhanden";

/// <summary>
/// Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Buchungstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// Gültigkeitsdatum von
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Gültigkeitsdatum bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Die Periodizität. Enum und LOV FbBarauszahlungPeriodizitaet
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbBarauszahlungPeriodizitaetCode = "FbBarauszahlungPeriodizitaetCode";

/// <summary>
/// Soll-Kontonummer
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// Haben-Kontonummer
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// Anzahl Tage welche die Auszahlung im Voraus eingelöst werden kann
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Vorbezug = "Vorbezug";

/// <summary>
/// Anzahl Tage welche die Auszahlung im Nachhinein eingelöst werden kann
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Nachbezug = "Nachbezug";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBarauszahlungAuftragTS = "FbBarauszahlungAuftragTS";
}

/// <summary>
/// Type: Table
/// beinhaltet Dati für einen Zyklus wenn eine Barauszahlung ausbezahlt wurde
/// </summary>

public static class FbBarauszahlungAusbezahlt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBarauszahlungAusbezahlt"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBarauszahlungAusbezahltID = "FbBarauszahlungAusbezahltID";

/// <summary>
/// Fremdschlüssel von einem Barauszahlungszyklus
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbBarauszahlungZyklusID = "FbBarauszahlungZyklusID";

/// <summary>
/// Fremdschlüssel auf der Buchung die erstellt wurde nach dem Auszahlen von der VM-Kasse
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// Benutzer welcher die Auszahlung ausgelöst hat.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Datum wenn die Barauszahlung ausbezahlt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Stichtag der Barauszahlung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Stichtag = "Stichtag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBarauszahlungAusbezahltTS = "FbBarauszahlungAusbezahltTS";
}

/// <summary>
/// Type: Table
/// beinhaltet Informationen für den Zyklus einer Barauszahlung
/// </summary>

public static class FbBarauszahlungZyklus{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBarauszahlungZyklus"; }
}


/// <summary>
/// Primärschlüssel von Barauszahlungszyklus
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBarauszahlungZyklusID = "FbBarauszahlungZyklusID";

/// <summary>
/// Fremdschlüssel von einem Barauszahlungsauftrag
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbBarauszahlungAuftragID = "FbBarauszahlungAuftragID";

/// <summary>
/// Datum der erste geplante Barauszahlung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumStart = "DatumStart";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string DauerNaechsteZahlung = "DauerNaechsteZahlung";

/// <summary>
/// Enum DauerTyp (Tag, Monat)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string DauerTypCode = "DauerTypCode";

/// <summary>
/// Wochentag vom Zyklus. Wird verwendet wenn in der Periodizität vom Barauszahlungsauftrag ein Wochentag gesetzt ist.
/// Enum und LOV Wochentag
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WochentagCode = "WochentagCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBarauszahlungZyklusTS = "FbBarauszahlungZyklusTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBelegNr"; }
}


/// <summary>
/// Primärschlüssel für FbBelegNr Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBelegNrID = "FbBelegNrID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (0)]
/// </summary>
public const string BelegNrCode = "BelegNrCode";

/// <summary>
/// Fremdschlüssel (FK_FbBelegNr_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_FbBelegNr_DmgPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string NaechsteBelegNr = "NaechsteBelegNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BelegNrVon = "BelegNrVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BelegNrBis = "BelegNrBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Praefix = "Praefix";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBelegNrTS = "FbBelegNrTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBuchung"; }
}


/// <summary>
/// Primärschlüssel für FbBuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBPERIOD) => FbPeriode.FbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbPeriodeID = "FbPeriodeID";

/// <summary>
/// Buchungstyp gemäss LOV FbBuchungTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BuchungTypCode = "BuchungTypCode";

/// <summary>
/// Buchungscode - Template für Buchung (KtoNr und Text) - FbBuchungCode
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// BelegNr mit Präfix - FbBelegNr (Impliziter Zusammenhang mit BuchungTypCode)
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// Position der Buchung für diese BelegNr. Immer 0. Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BelegNrPos = "BelegNrPos";

/// <summary>
/// Zeitpunkt zu welchem die Buchung verbucht wird.
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string BuchungsDatum = "BuchungsDatum";

/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBKONTO2) => FbKonto.KontoNr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBKONTO) => FbKonto.KontoNr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// Betrag der Buchung in CHF.
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Buchungstext
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Zeitpunkt zu welchem der Betrag ausbezahlt wird.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// das originale Valutadatum, dass fürs erstellen von Buchungen via Dauerautrag verwendet wird
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatumOriginal = "ValutaDatumOriginal";

/// <summary>
/// Auszahlung möglich bis ende Zahlungsfrist. Tage nach ValutaDatum?? Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsfrist = "Zahlungsfrist";

/// <summary>
/// Status der Buchung. LOV FbBuchungStatus. Obsolete??
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BuchungStatusCode = "BuchungStatusCode";

/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBDAUERA) => FbDauerauftrag.FbDauerauftragID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbDauerauftragID = "FbDauerauftragID";

/// <summary>
/// Zeitpunkt zu welchem die Buchung erfasst wurde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// [DefaultValue: (getdate())]
/// </summary>
public const string ErfassungsDatum = "ErfassungsDatum";

/// <summary>
/// Fremdschlüssel (FK_FbBuchung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_FBBUCHUN_REFERENCE_FBZAHLUN) => FbZahlungsweg.FbZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbZahlungswegID = "FbZahlungswegID";

/// <summary>
/// Post Konto Nr
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// Bank Konto Nr
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// Konto-Nr des Kreditors im internationalen Format.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBAN = "IBAN";

/// <summary>
/// Zahlungsart. Zahlungsart für Buchungen mit Kreditor.  LOV FbZahlungsartCode.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungsArtCode = "ZahlungsArtCode";

/// <summary>
/// Referenznummer für Buchungen mit ESR.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// Feld auf Einzahlungsschein.
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// Empfänger: Name
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Empfänger: Adresszusatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// Empfänger: Strasse und Nr
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// Empfänger: PLZ
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// Empfänger: Ort
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBuchungTS = "FbBuchungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchungCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBuchungCode"; }
}


/// <summary>
/// Primärschlüssel für FbBuchungCode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBuchungCodeID = "FbBuchungCodeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string Code = "Code";

/// <summary>
/// Fremdschlüssel (FK_FbBuchungCode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Fremdschlüssel (FK_FbBuchungCode_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBuchungCodeTS = "FbBuchungCodeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbBuchungskreis{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbBuchungskreis"; }
}


/// <summary>
/// Primärschlüssel für FbBuchungskreis Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbBuchungskreisID = "FbBuchungskreisID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbBuchungskreisCode = "FbBuchungskreisCode";

/// <summary>
/// Fremdschlüssel (FK_FbBuchungskreis_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BuchungsDatum = "BuchungsDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBuchungskreisTS = "FbBuchungskreisTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDauerauftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbDauerauftrag"; }
}


/// <summary>
/// Primärschlüssel für FbDauerauftrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbDauerauftragID = "FbDauerauftragID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Fremdschlüssel (FK_FbDauerauftrag_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Fremdschlüssel (FK_FbDauerauftrag_FbZahlungsweg) => FbZahlungsweg.FbZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbZahlungswegID = "FbZahlungswegID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Periodizität -  LOV FbBarauszahlungPeriodizitaet
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PeriodizitaetCode = "PeriodizitaetCode";

/// <summary>
/// Code für den Wochentag - LOV WochentagCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WochentagCode = "WochentagCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monatstag1 = "Monatstag1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monatstag2 = "Monatstag2";

/// <summary>
/// Flag, ob Zahlung ggf vor dem Wochenende ausgeführt werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string VorWochenende = "VorWochenende";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string Status = "Status";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbDauerauftragTS = "FbDauerauftragTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DauerauftragDokID = "DauerauftragDokID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTABuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbDTABuchung"; }
}


/// <summary>
/// Primärschlüssel für FbDTABuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// Primärschlüssel für FbDTABuchung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbDTAJournalID = "FbDTAJournalID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (0)]
/// </summary>
public const string Status = "Status";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbDTABuchungTS = "FbDTABuchungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTAJournal{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbDTAJournal"; }
}


/// <summary>
/// Primärschlüssel für FbDTAJournal Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbDTAJournalID = "FbDTAJournalID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 512]
/// </summary>
public const string FilePath = "FilePath";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string TotalBetrag = "TotalBetrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TransferDatum = "TransferDatum";

/// <summary>
/// Fremdschlüssel (FK_FbDTAJournal_FbDTAZugang) => FbDTAZugang.FbDTAZugangID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbDTAZugangID = "FbDTAZugangID";

/// <summary>
/// Fremdschlüssel (FK_FbDTAJournal_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Transferiert = "Transferiert";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsdaten = "Zahlungsdaten";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbDTAJournalTS = "FbDTAJournalTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbDTAZugang{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbDTAZugang"; }
}


/// <summary>
/// Primärschlüssel für FbDTAZugang Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbDTAZugangID = "FbDTAZugangID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string VertragNr = "VertragNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// Fremdschlüssel (FK_FbDTAZugang_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// Fremdschlüssel (FK_FbDTAZugang_FbTeam) => FbTeam.FbTeamID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbTeamID = "FbTeamID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbDTAZugangTS = "FbDTAZugangTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbKonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbKonto"; }
}


/// <summary>
/// Primärschlüssel für FbKonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbKontoID = "FbKontoID";

/// <summary>
/// Fremdschlüssel (FK_FbKonto_FbPeriode) => FbPeriode.FbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbPeriodeID = "FbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KontoKlasseCode = "KontoKlasseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KontoTypCode = "KontoTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string KontoName = "KontoName";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>
public const string EroeffnungsSaldo = "EroeffnungsSaldo";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string SaldoGruppeName = "SaldoGruppeName";

/// <summary>
/// Fremdschlüssel (FK_FbKonto_FbDTAZugang) => FbDTAZugang.FbDTAZugangID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbDTAZugangID = "FbDTAZugangID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbKontoTS = "FbKontoTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string FbDepotNr = "FbDepotNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsSaldoModifier = "EroeffnungsSaldoModifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsSaldoModified = "EroeffnungsSaldoModified";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsSaldoCreator = "EroeffnungsSaldoCreator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsSaldoCreated = "EroeffnungsSaldoCreated";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsSaldo_AtCreation = "EroeffnungsSaldo_AtCreation";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbKreditor{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbKreditor"; }
}


/// <summary>
/// Primärschlüssel für FbKreditor Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbKreditorID = "FbKreditorID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KurzName = "KurzName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufwandKonto = "AufwandKonto";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbKreditorTS = "FbKreditorTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbPeriode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbPeriode"; }
}


/// <summary>
/// Primärschlüssel für FbPeriode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbPeriodeID = "FbPeriodeID";

/// <summary>
/// Fremdschlüssel (FK_FbPeriode_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Datum an welchem die Periode beginnt
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string PeriodeVon = "PeriodeVon";

/// <summary>
/// Datum an welchem die Periode endet
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string PeriodeBis = "PeriodeBis";

/// <summary>
/// Status der Periode - LOV FbPeriodeStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PeriodeStatusCode = "PeriodeStatusCode";

/// <summary>
/// Fremdschlüssel (FK_FbPeriode_FbTeam) => FbTeam.FbTeamID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbTeamID = "FbTeamID";

/// <summary>
/// Ablageort der Belege pro Periode - LOV FbJournalablageort
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string JournalablageortCode = "JournalablageortCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbPeriodeTS = "FbPeriodeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbTeam{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbTeam"; }
}


/// <summary>
/// Primärschlüssel für FbTeam Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbTeamID = "FbTeamID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbTeamTS = "FbTeamTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbTeamMitglied{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbTeamMitglied"; }
}


/// <summary>
/// Primärschlüssel für FbTeamMitglied Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string FbTeamID = "FbTeamID";

/// <summary>
/// Primärschlüssel für FbTeamMitglied Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>
public const string StandardBereich = "StandardBereich";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string DepotBereich = "DepotBereich";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbTeamMitgliedTS = "FbTeamMitgliedTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class FbZahlungsweg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FbZahlungsweg"; }
}


/// <summary>
/// Primärschlüssel für FbZahlungsweg Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FbZahlungswegID = "FbZahlungswegID";

/// <summary>
/// Fremdschlüssel (FK_FbZahlungsweg_FbKreditor) => FbKreditor.FbKreditorID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FbKreditorID = "FbKreditorID";

/// <summary>
/// Fremdschlüssel (FK_FbZahlungsweg_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// Konto-Nr des Kreditors im internationalen Format.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBAN = "IBAN";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungsArtCode = "ZahlungsArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsfrist = "Zahlungsfrist";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BelegBankKontoNr = "BelegBankKontoNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string IsActive = "IsActive";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbZahlungswegTS = "FbZahlungswegTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die optionalen Dienstleistungen für die Zuweisung zu den Dienstleistungspaketen
/// </summary>

public static class FsDienstleistung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FsDienstleistung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FsDienstleistungID = "FsDienstleistungID";

/// <summary>
/// Name/Bezeichnung der Dienstleistung
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Standardaufwand in Stunden pro Monat und Dienstleistung
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string StandardAufwand = "StandardAufwand";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FsDienstleistungTS = "FsDienstleistungTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle für Zuweisung von Dienstleistungen zu Dienstleistungspaketen
/// </summary>

public static class FsDienstleistung_FsDienstleistungspaket{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FsDienstleistung_FsDienstleistungspaket"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FsDienstleistung_FsDienstleistungspaketID = "FsDienstleistung_FsDienstleistungspaketID";

/// <summary>
/// Fremdschlüssel auf FsDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FsDienstleistungID = "FsDienstleistungID";

/// <summary>
/// Fremdschlüssel auf FsDienstleistungspaket
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FsDienstleistungspaketID = "FsDienstleistungspaketID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FsDienstleistung_FsDienstleistungspaketTS = "FsDienstleistung_FsDienstleistungspaketTS";
}

/// <summary>
/// Type: Table
/// Tabelle für Dienstleistungspakete, zum optionalen Gruppieren von Dienstleistungen.
/// </summary>

public static class FsDienstleistungspaket{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FsDienstleistungspaket"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FsDienstleistungspaketID = "FsDienstleistungspaketID";

/// <summary>
/// Name/Bezeichnung des Dienstleistungspakets
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Maximale Laufzeit vom Dienstleistungspaket. Die Einheit ist Monat. Es ist die maximale Dauer einer Phase (Intake, Beratungsphase ...).
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MaximaleLaufzeit = "MaximaleLaufzeit";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FsDienstleistungspaketTS = "FsDienstleistungspaketTS";
}

/// <summary>
/// Type: Table
/// Tabelle für die Fallarbeitszeit-Reduktionen. Diese werden benötigt, um von der verfügbaren Zeit eines MA statische oder berechnete Stunden pro Monat abzuziehen und anschliessend als Rest die Fallarbezeitszeit auszugeben.
/// </summary>

public static class FsReduktion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FsReduktion"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FsReduktionID = "FsReduktionID";

/// <summary>
/// Fremdschlüssel auf Tabelle BDELeistungsart. Ist im Idealfall eine 1 zu 1 Beziehung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// Name/Bezeichnung des Reduktion
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Standardaufwand welcher dieser Reduktion für die MA generiert. Einheit: Stunden pro Monat.
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string StandardAufwand = "StandardAufwand";

/// <summary>
/// Flag, ob der Reduktion (konkret der StandardAuwand) in Abhängigkeit des Beschäftigungsgrades des MA berechnet werden muss oder konstant für alle MA gleich ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AbhaengigVonBG = "AbhaengigVonBG";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FsReduktionTS = "FsReduktionTS";
}

/// <summary>
/// Type: Table
/// Speichern der ReduktionZeiten pro User
/// </summary>

public static class FsReduktionMitarbeiter{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FsReduktionMitarbeiter"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string FsReduktionMitarbeiterID = "FsReduktionMitarbeiterID";

/// <summary>
/// Fremdschlüssel auf die Tabelle FsReduktion
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FsReduktionID = "FsReduktionID";

/// <summary>
/// Fremdschlüssel auf die Tabelle XUser
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Die Zeit aus dem zugrundeliegenden Reduktion. Einheit: Stunden pro Monat
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string OriginalReduktionZeit = "OriginalReduktionZeit";

/// <summary>
/// Die für diesen User angepasste Zeit des Reduktions. Einheit: Stunden pro Monat
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AngepassteReduktionZeit = "AngepassteReduktionZeit";

/// <summary>
/// Der Monat für welcher dieser Reduktion gültig ist. Einheit: Stunden pro Monat
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// Das Jahr als Teil des Zeitraums in welchem der Reduktion gültig ist
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FsReduktionMitarbeiterTS = "FsReduktionMitarbeiterTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet zusätzliche Informationen eines Gesuchs
/// </summary>

public static class GvAbklaerendeStelle{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvAbklaerendeStelle"; }
}


/// <summary>
/// Primärschlüssel für GvAbklaerendeStelle Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvAbklaerendeStelleID = "GvAbklaerendeStelleID";

/// <summary>
/// Fremdschlüssel (FK_GvAbklaerendeStelle_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// Fremdschlüssel (FK_GvAbklaerendeStelle_BaZahlungsweg) => BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BeantragendeStelle = "BeantragendeStelle";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktperson = "Kontaktperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Region = "Region";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Email = "Email";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile1 = "MitteilungZeile1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile2 = "MitteilungZeile2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile3 = "MitteilungZeile3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile4 = "MitteilungZeile4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsinstruktion = "Zahlungsinstruktion";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvAbklaerendeStelleTS = "GvAbklaerendeStelleTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Positionen eines Antrags in der Gesuchverwaltung
/// </summary>

public static class GvAntragPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvAntragPosition"; }
}


/// <summary>
/// Primärschlüssel für GvAntragPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvAntragPositionID = "GvAntragPositionID";

/// <summary>
/// Fremdschlüssel (FK_GvAntragPosition_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// LOV GvAntragPositionTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvAntragPositionTypCode = "GvAntragPositionTypCode";

/// <summary>
/// Beinhaltet Text in "Kostenbezeichnung" bzw. "Quelle"
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// Betrag der Position
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvAntragPositionTS = "GvAntragPositionTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Auflagen-Informationen zu einem Gesuch
/// </summary>

public static class GvAuflage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvAuflage"; }
}


/// <summary>
/// Primärschlüssel für GvAuflage Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvAuflageID = "GvAuflageID";

/// <summary>
/// Fremdschlüssel (FK_GvAuflage_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// LOV GvAuflageTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvAuflageTypCode = "GvAuflageTypCode";

/// <summary>
/// Datum der Erfassung
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Erfasst = "Erfasst";

/// <summary>
/// Gegenstand der Auflage
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Gegenstand = "Gegenstand";

/// <summary>
/// Betrag der Auflage
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Datum der Faelligkeit
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Faellig = "Faellig";

/// <summary>
/// Gibt an, ob es sich um eine schriftliche Verpflichtung handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SchriftlicheVerpflichtung = "SchriftlicheVerpflichtung";

/// <summary>
/// Gibt an, ob die Auflage erledigt wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Erledigt = "Erledigt";

/// <summary>
/// Gibt an, ob die Auflage erlassen wurde
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Erlassen = "Erlassen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Erlassungsgrund = "Erlassungsgrund";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate1Betrag = "Rate1Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate1Datum = "Rate1Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate2Betrag = "Rate2Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate2Datum = "Rate2Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate3Betrag = "Rate3Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate3Datum = "Rate3Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate4Betrag = "Rate4Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate4Datum = "Rate4Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate5Betrag = "Rate5Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate5Datum = "Rate5Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate6Betrag = "Rate6Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate6Datum = "Rate6Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate7Betrag = "Rate7Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate7Datum = "Rate7Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate8Betrag = "Rate8Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rate8Datum = "Rate8Datum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvAuflageTS = "GvAuflageTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Auszahlungspositionen in der Gesuchverwaltung
/// </summary>

public static class GvAuszahlungPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvAuszahlungPosition"; }
}


/// <summary>
/// Primärschlüssel für GvAuszahlungPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvAuszahlungPositionID = "GvAuszahlungPositionID";

/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_GvPositionsart) => GvPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvPositionsartID = "GvPositionsartID";

/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPosition_BaZahlungsweg) => BgZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// Betrag der GvAuszahlungPosition
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Valutadatum (wenn nur eines vorhanden, ansonsten in GvAuszahlungPositionValuta)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// ReferenzNummer (Zahlinfo)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// Freitextfeld für Zahlungsinstruktionen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsinstruktion = "Zahlungsinstruktion";

/// <summary>
/// LOV GvAuszahlungTerminArt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvAuszahlungTerminArtCode = "GvAuszahlungTerminArtCode";

/// <summary>
/// LOV GvAuszahlungArt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvAuszahlungArtCode = "GvAuszahlungArtCode";

/// <summary>
/// Statuscode der GvAuszahlungPosition
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvAuszahlungPositionStatusCode = "GvAuszahlungPositionStatusCode";

/// <summary>
/// Mitteilungszeile 1, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile1 = "MitteilungZeile1";

/// <summary>
/// Mitteilungszeile 2, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile2 = "MitteilungZeile2";

/// <summary>
/// Mitteilungszeile 3, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile3 = "MitteilungZeile3";

/// <summary>
/// Mitteilungszeile 4, Feld für Mitteilungen zur Buchung
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile4 = "MitteilungZeile4";

/// <summary>
/// Buchungstext, Feld für zusätzliche Kommentare zur Buchung
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BuchungsText = "BuchungsText";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvAuszahlungPositionTS = "GvAuszahlungPositionTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Valuta-Auszahlungspositionen in der Gesuchverwaltung
/// </summary>

public static class GvAuszahlungPositionValuta{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvAuszahlungPositionValuta"; }
}


/// <summary>
/// Primärschlüssel für GvAuszahlungPositionValuta Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvAuszahlungPositionValutaID = "GvAuszahlungPositionValutaID";

/// <summary>
/// Fremdschlüssel (FK_GvAuszahlungPositionValuta_GvAuszahlungPosition) => GvAuszahlungPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvAuszahlungPositionID = "GvAuszahlungPositionID";

/// <summary>
/// Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvAuszahlungPositionValutaTS = "GvAuszahlungPositionValutaTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu Bewilligungen in der Gesuchverwaltung
/// </summary>

public static class GvBewilligung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvBewilligung"; }
}


/// <summary>
/// Primärschlüssel für GvBewilligung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvBewilligungID = "GvBewilligungID";

/// <summary>
/// Fremdschlüssel (FK_GvBewilligung_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// Fremdschlüssel (FK_GvBewilligung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// LOV GvBewilligung
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvBewilligungCode = "GvBewilligungCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvBewilligungTS = "GvBewilligungTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den Dokumenten eines Gesuchs in der Gesuchverwaltung
/// </summary>

public static class GvDocument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvDocument"; }
}


/// <summary>
/// Primärschlüssel für GvDocument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvDocumentID = "GvDocumentID";

/// <summary>
/// Fremdschlüssel (FK_GvDocument_GvGesuch) => GvGesuchID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// Autor, Fremdschlüssel (FK_GvDocument_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Adressat, Fremdschlüssel (FK_GvDocument_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Adressat, Fremdschlüssel (FK_GvDocument_BaInstitution) => BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// XDocumenteintrag, Fremdschlüssel auf XDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Stichworte für einfache Suche
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Stichworte = "Stichworte";

/// <summary>
/// Bemerkungen zu dem Dokument
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Datum des Dokuments
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvDocumentTS = "GvDocumentTS";
}

/// <summary>
/// Type: Table
/// Information auf CtlFaFinanzgesuche
/// </summary>

public static class GvDokumenteInformation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvDokumenteInformation"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvDokumenteInformationID = "GvDokumenteInformationID";

/// <summary>
/// Fremdschlüssel auf BaPerson (Unique Index: IX_GvDokumenteInformation_BaPersonID)
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Der Informationstext
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Information = "Information";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvDokumenteInformationTS = "GvDokumenteInformationTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den Fonds in der Gesuchverwaltung
/// </summary>

public static class GvFonds{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvFonds"; }
}


/// <summary>
/// Primärschlüssel für GvFonds Records (nach Primärschlüssel-Standards
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvFondsID = "GvFondsID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";

/// <summary>
/// Fonds DatumVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Fonds DatumBis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Kurze Version der Bezeichnung des Fonds. Wird typischerweise in Controls verwendet zur Auswahl eines Fonds.
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string NameKurz = "NameKurz";

/// <summary>
/// Vollständige Bezeichnung des Fonds. Wird typischerweise in Reports verwendet.
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string NameLang = "NameLang";

/// <summary>
/// Hinweis zur Verwendung des Fonds.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// ID für die Übersetzung des Felds Bemerkung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungTID = "BemerkungTID";

/// <summary>
/// LOV GvFondsTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvFondsTypCode = "GvFondsTypCode";

/// <summary>
/// Ist schweizerische oder kantonalische Fonds
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstCH = "IstCH";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvFondsTS = "GvFondsTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle für GvFonds sowie XOrgUnit
/// </summary>

public static class GvFonds_XOrgUnit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvFonds_XOrgUnit"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvFonds_XOrgUnitID = "GvFonds_XOrgUnitID";

/// <summary>
/// Fremdschlüssel zu GvFonds Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvFondsID = "GvFondsID";

/// <summary>
/// Fremdschlüssel zu XOrgUnit Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Zeitstempfel für das Erstellen des Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvFonds_XOrgUnitTS = "GvFonds_XOrgUnitTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen für Gesuche
/// </summary>

public static class GvGesuch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvGesuch"; }
}


/// <summary>
/// Primärschlüssel für GvGesuch Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// Fremdschlüssel (FK_GvGesuch_BaPerson) => BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_GvGesuch_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XUserID_Autor = "XUserID_Autor";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserIDBewilligt = "UserIDBewilligt";

/// <summary>
/// FK auf GvDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Fremdschlüssel (FK_GvGesuch_GvFond) => GvFondsID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string GvFondsID = "GvFondsID";

/// <summary>
/// GvGesuch_ErfasstesGesuchgeprueftdurchIKS_UserID (Fremdschlüssel FK_GvGesuch_ErfasstesGesuchgeprueftdurchIKS_UserID) => UserID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ErfasstesGesuchgeprueftdurchIKS_UserID = "ErfasstesGesuchgeprueftdurchIKS_UserID";

/// <summary>
/// GvGesuch_AbgeschlossenesGesuchdurchIKS_UserID (Fremdschlüssel FK_GvGesuch_AbgeschlossenesGesuchdurchIKS_UserID) => UserID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string AbgeschlossenesGesuchdurchIKS_UserID = "AbgeschlossenesGesuchdurchIKS_UserID";

/// <summary>
/// LOV GvStatus
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvStatusCode = "GvStatusCode";

/// <summary>
/// Datum des Gesuchs
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GesuchsDatum = "GesuchsDatum";

/// <summary>
/// Datum der Erfassung (Abschluss)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErfassungAbgeschlossen = "ErfassungAbgeschlossen";

/// <summary>
/// Bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBewilligt = "BetragBewilligt";

/// <summary>
/// Datum der Bewilligung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtAm = "BewilligtAm";

/// <summary>
/// Begruendung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// Kleine Bemerkung zum Gesuch
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Von Kompetenzstufe 1 bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBewilligtKompetenzstufe1 = "BetragBewilligtKompetenzstufe1";

/// <summary>
/// Datum Bewillgung durch Kompetenzstufe 1
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBewilligtKompetenzstufe1 = "DatumBewilligtKompetenzstufe1";

/// <summary>
/// Bemerkung zur Bewilligung durch Kompetenzstufe 1
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungBewilligungKompetenzstufe1 = "BemerkungBewilligungKompetenzstufe1";

/// <summary>
/// Von Kompetenzstufe 2 bewilligter Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBewilligtKompetenzstufe2 = "BetragBewilligtKompetenzstufe2";

/// <summary>
/// Datum Bewillgung durch Kompetenzstufe 2
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBewilligtKompetenzstufe2 = "DatumBewilligtKompetenzstufe2";

/// <summary>
/// Bemerkung zur Bewilligung durch Kompetenzstufe 2
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungBewilligungKompetenzstufe2 = "BemerkungBewilligungKompetenzstufe2";

/// <summary>
/// Datum, wann das Gesuch abgeschlossen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// Grund, weshalb das Gesuch abgeschlossen wurde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GvAbschlussgrundCode = "GvAbschlussgrundCode";

/// <summary>
/// Grund des Gesuchs
/// [DataType: VARCHAR]
/// [Length: 40]
/// </summary>
public const string Gesuchsgrund = "Gesuchsgrund";

/// <summary>
/// Info Flag zum wissen ob das Gesuch Eigenkompetenz ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstEigenkompetenz = "IstEigenkompetenz";

/// <summary>
/// Info Flag zum wissen ob das Gesuch Kompetenz BSL ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstKompetenzBsl = "IstKompetenzBsl";

/// <summary>
/// Info Flag zum wissen ob das Gesuch Kompetenz Kanton FLB-Ko/KK ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstKompetenzKanton = "IstKompetenzKanton";

/// <summary>
/// Info Flag, ob das Gesuch extern ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Extern = "Extern";

/// <summary>
/// ErfasstesGesuchgeprueftam
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErfasstesGesuchgeprueftam = "ErfasstesGesuchgeprueftam";

/// <summary>
/// ErfasstesGesuchBesprechen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ErfasstesGesuchBesprechen = "ErfasstesGesuchBesprechen";

/// <summary>
/// ErfasstesGesuchBemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ErfasstesGesuchBemerkung = "ErfasstesGesuchBemerkung";

/// <summary>
/// AbgeschlossenesGesuchgeprueftam
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbgeschlossenesGesuchgeprueftam = "AbgeschlossenesGesuchgeprueftam";

/// <summary>
/// AbgeschlossenesGesuchBesprechen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AbgeschlossenesGesuchBesprechen = "AbgeschlossenesGesuchBesprechen";

/// <summary>
/// AbgeschlossenesGesuchBemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AbgeschlossenesGesuchBemerkung = "AbgeschlossenesGesuchBemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvGesuchTS = "GvGesuchTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Informationen zu den einzelnen Positionsarten in der Gesuchverwaltung
/// </summary>

public static class GvPositionsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "GvPositionsart"; }
}


/// <summary>
/// Primärschlüssel für GvPositionsart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// [IsIdentity: True]
/// </summary>
public const string GvPositionsartID = "GvPositionsartID";

/// <summary>
/// Fremdschlüssel (FK_GvPositionsart_GvPositionsartID_CopyOf) => GvPositionsartID_CopyOf
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string GvPositionsartID_CopyOf = "GvPositionsartID_CopyOf";

/// <summary>
/// Fremdschlüssel (FK_GvPositionsart_BgKostenart) => BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// Bezeichnung der GvPositionsart
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// ID für die Übersetzung der Bezeichnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungTID = "BezeichnungTID";

/// <summary>
/// Datum, ab wann die Positionsart gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum, bis wann die Positionsart gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Flag, ob es sich bei der Positionsart um eine für alle zugängliche oder eine nur für die Hauptstelle zugängliche handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HSOnly = "HSOnly";

/// <summary>
/// Flag, ob es sich bei der Positionsart um FLB oder eine interne nicht FLB handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsFLB = "IsFLB";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string GvPositionsartTS = "GvPositionsartTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BaAdresse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BaAdresse"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BaAdresseID = "BaAdresseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PlatzierungInstID = "PlatzierungInstID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmMandantID = "VmMandantID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebKontaktID = "KaBetriebKontaktID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string AusEinwohnerregister = "AusEinwohnerregister";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Gesperrt = "Gesperrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AdresseCode = "AdresseCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string CareOf = "CareOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZuhandenVon = "ZuhandenVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StrasseCode = "StrasseCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionName = "InstitutionName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PlatzierungsartCode = "PlatzierungsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnStatusCode = "WohnStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnungsgroesseCode = "WohnungsgroesseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string QuartierCode = "QuartierCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BaPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StatusPersonCode = "StatusPersonCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FruehererName = "FruehererName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname2 = "Vorname2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sterbedatum = "Sterbedatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string HaushaltVersicherungsNummer = "HaushaltVersicherungsNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string NNummer = "NNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BFFNummer = "BFFNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZARNummer = "ZARNummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZIPNr = "ZIPNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KantonaleReferenznummer = "KantonaleReferenznummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandCode = "ZivilstandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandDatum = "ZivilstandDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeCode = "HeimatgemeindeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeCodes = "HeimatgemeindeCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NationalitaetCode = "NationalitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ReligionCode = "ReligionCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusCode = "AuslaenderStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusGueltigBis = "AuslaenderStatusGueltigBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_P = "Telefon_P";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_G = "Telefon_G";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MobilTel1 = "MobilTel1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MobilTel2 = "MobilTel2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Unterstuetzt = "Unterstuetzt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Fiktiv = "Fiktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string EinwohnerregisterAktiv = "EinwohnerregisterAktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string EinwohnerregisterID = "EinwohnerregisterID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DeutschVerstehenCode = "DeutschVerstehenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WichtigerHinweisCode = "WichtigerHinweisCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtPLZ = "ZuzugKtPLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrtCode = "ZuzugKtOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrt = "ZuzugKtOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtKanton = "ZuzugKtKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtLandCode = "ZuzugKtLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtDatum = "ZuzugKtDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtSeitGeburt = "ZuzugKtSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdePLZ = "ZuzugGdePLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeOrtCode = "ZuzugGdeOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeOrt = "ZuzugGdeOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeKanton = "ZuzugGdeKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeLandCode = "ZuzugGdeLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeDatum = "ZuzugGdeDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeSeitGeburt = "ZuzugGdeSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzPLZ = "UntWohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzOrt = "UntWohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzKanton = "UntWohnsitzKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzLandCode = "UntWohnsitzLandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugPLZ = "WegzugPLZ";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrtCode = "WegzugOrtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrt = "WegzugOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugKanton = "WegzugKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WegzugLandCode = "WegzugLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string WegzugDatum = "WegzugDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzWieBaPersonID = "WohnsitzWieBaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWieBaInstitutionID = "AufenthaltWieBaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbssituationCode = "ErwerbssituationCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrundTeilzeitarbeit1Code = "GrundTeilzeitarbeit1Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrundTeilzeitarbeit2Code = "GrundTeilzeitarbeit2Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaGrundNichtErwerbstaetigCode = "BaGrundNichtErwerbstaetigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErwerbsBrancheCode = "ErwerbsBrancheCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErlernterBerufCode = "ErlernterBerufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BerufCode = "BerufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HoechsteAusbildungCode = "HoechsteAusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbgebrocheneAusbildungCode = "AbgebrocheneAusbildungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitSpezFaehigkeiten = "ArbeitSpezFaehigkeiten";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InCHSeit = "InCHSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string InCHSeitGeburt = "InCHSeitGeburt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PUAnzahlVerlustscheine = "PUAnzahlVerlustscheine";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PUKrankenkasse = "PUKrankenkasse";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PraemienuebernahmeVon = "PraemienuebernahmeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PraemienuebernahmeBis = "PraemienuebernahmeBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PersonOhneLeistung = "PersonOhneLeistung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string HCMCFluechtling = "HCMCFluechtling";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StellensuchendCode = "StellensuchendCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ResoNr = "ResoNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string NEAnmeldung = "NEAnmeldung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeBaGemeindeID = "HeimatgemeindeBaGemeindeID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AktiveKopfQuote = "AktiveKopfQuote";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ALK = "ALK";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AndereSVLeistungen = "AndereSVLeistungen";

/// <summary>
/// Anrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusbildungCode = "AusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Behinderungsart2Code = "Behinderungsart2Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungenAdresse = "BemerkungenAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungenSV = "BemerkungenSV";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string BeruflicheMassnahmeIV = "BeruflicheMassnahmeIV";

/// <summary>
/// Briefanrede der Person
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BSVBehinderungsartCode = "BSVBehinderungsartCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string BVGRente = "BVGRente";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CAusweisDatum = "CAusweisDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KlientenkontoNr = "KlientenkontoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DebitorNr = "DebitorNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DebitorUpdate = "DebitorUpdate";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string EigenerMietvertrag = "EigenerMietvertrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Einrichtpauschale = "Einrichtpauschale";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinrichtungspauschaleCode = "EinrichtungspauschaleCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ErgaenzungsLeistungen = "ErgaenzungsLeistungen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Assistenzbeitrag = "Assistenzbeitrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAssistenzbeitrag = "DatumAssistenzbeitrag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IvVerfuegteAssistenzberatung = "IvVerfuegteAssistenzberatung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumIvVerfuegung = "DatumIvVerfuegung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErteilungVA = "ErteilungVA";

/// <summary>
/// Checkbox FAZ für Familiennachzug (CAR/SRK spezifisch)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IstFamiliennachzug = "IstFamiliennachzug";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HauptBehinderungsartCode = "HauptBehinderungsartCode";

/// <summary>
/// Wird von PI auf eine HELB Anmeldung verzichtet, so wird dieses Flag auf True gesetzt und die anderen HELB-Felder geleert
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string HELBKeinAntrag = "HELBKeinAntrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string HELBAb = "HELBAb";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string HELBAnmeldung = "HELBAnmeldung";

/// <summary>
/// Datum, wann der Entscheid für oder gegen HELB getroffen wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string HELBEntscheid = "HELBEntscheid";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HELBEntscheidCode = "HELBEntscheidCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HilfslosenEntschaedigungCode = "HilfslosenEntschaedigungCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ImKantonSeit = "ImKantonSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ImKantonSeitGeburt = "ImKantonSeitGeburt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InGemeindeSeit = "InGemeindeSeit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IntensivPflegeZuschlagCode = "IntensivPflegeZuschlagCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IVBerechtigungAnfangsStatusCode = "IVBerechtigungAnfangsStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IVBerechtigungErsterEntscheidAb = "IVBerechtigungErsterEntscheidAb";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IVBerechtigungErsterEntscheidCode = "IVBerechtigungErsterEntscheidCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IVBerechtigungZweiterEntscheidAb = "IVBerechtigungZweiterEntscheidAb";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IVBerechtigungZweiterEntscheidCode = "IVBerechtigungZweiterEntscheidCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IVGrad = "IVGrad";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IVHilfsmittel = "IVHilfsmittel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IVTaggeld = "IVTaggeld";

/// <summary>
/// Flag, ob eine Person Serienbriefe erhalten soll oder nicht (0=Serienbrief, 1=kein Serienbrief)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KonfessionCode = "KonfessionCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KontoFuehrung = "KontoFuehrung";

/// <summary>
/// BaPersonID des Dossierträgers. Fremdschlüssel (FK_BaPerson_BaPerson_Dossiertraeger) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: CAR]
/// </summary>
public const string BaPersonID_Dossiertraeger = "BaPersonID_Dossiertraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kopfquote_BaInstitutionID = "Kopfquote_BaInstitutionID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KopfquoteAbDatum = "KopfquoteAbDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KopfquoteBisDatum = "KopfquoteBisDatum";

/// <summary>
/// Code für die Erfassung der Korrespondenzsprache, betrifft LOV: BaKorrespondenzSprache
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KorrespondenzSpracheCode = "KorrespondenzSpracheCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KTG = "KTG";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string LaufendeVollmachtErlaubnis = "LaufendeVollmachtErlaubnis";

/// <summary>
/// Flag, ob die Anrede manuell oder automatisch erzeugt wird. Bei der manuellen Anrede kommen die Felder Anrede und Briefanrede zur Geltung
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// Neues Feld für medizinische Massnahmen IV. Nur für PI (siehe Ticket: #5022)
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MedizinischeMassnahmeIV = "MedizinischeMassnahmeIV";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Mehrfachbehinderung = "Mehrfachbehinderung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MietdepotPI = "MietdepotPI";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MobilTel = "MobilTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string NavigatorZusatz = "NavigatorZusatz";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PassiveKopfQuote = "PassiveKopfQuote";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PauschaleAktualDatum = "PauschaleAktualDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PersonSichtbarSDFlag = "PersonSichtbarSDFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProjNr = "ProjNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RentenstufeCode = "RentenstufeCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Sozialhilfe = "Sozialhilfe";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sprachpauschale = "Sprachpauschale";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Testperson = "Testperson";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzOrtCode = "UntWohnsitzOrtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string UVGRente = "UVGRente";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string UVGTaggeld = "UVGTaggeld";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerstaendigungSprachCode = "VerstaendigungSprachCode";

/// <summary>
/// Aus der Migration von VIS nach KiSS: Spezifische VIS-Access-DB, welche als Quelle für den Datensatz diente
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36Area = "visdat36Area";

/// <summary>
/// Aus der Migration von VIS nach KiSS: ID in der Area-spezifischen VIS-Access-DB
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// </summary>
public const string visdat36ID = "visdat36ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VormundMassnahmenCode = "VormundMassnahmenCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string VormundPI = "VormundPI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string WichtigerHinweis = "WichtigerHinweis";

/// <summary>
/// Wittwen-, Wittwer-, Waisenrente
/// [DataType: BIT]
/// [Length: 1]
/// [NamespaceExtension: PI]
/// </summary>
public const string WittwenWittwerWaisenrente = "WittwenWittwerWaisenrente";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnstatusCode = "WohnstatusCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ZeigeDetails = "ZeigeDetails";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ZeigeTelGeschaeft = "ZeigeTelGeschaeft";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ZeigeTelMobil = "ZeigeTelMobil";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ZeigeTelPrivat = "ZeigeTelPrivat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZEMISNummer = "ZEMISNummer";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IstBerechnungsperson = "IstBerechnungsperson";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAsylgesuch = "DatumAsylgesuch";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEinbezugFaz = "DatumEinbezugFaz";

/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDEFerienkuerzungen_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BDEFerienkuerzungen_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string FerienkuerzungStd = "FerienkuerzungStd";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDELeistung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BDELeistung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KostenstelleOrgUnitID = "KostenstelleOrgUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Dauer = "Dauer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Anzahl = "Anzahl";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LohnartCode = "LohnartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KeinExport = "KeinExport";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HistKostentraeger = "HistKostentraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HistKostenstelle = "HistKostenstelle";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HistKostenart = "HistKostenart";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HistMandantNr = "HistMandantNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Visiert = "Visiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Fakturiert = "Fakturiert";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// [IsPrimaryKey: True]
/// </summary>
public const string BDELeistungID = "BDELeistungID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDELeistungsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BDELeistungsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BDELeistungsartID = "BDELeistungsartID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungTID = "BezeichnungTID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KlientErfassungCode = "KlientErfassungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzahlCode = "AnzahlCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ArtikelNr = "ArtikelNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string LeistungsartTypCode = "LeistungsartTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KostenartCode = "KostenartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRStandard = "KTRStandard";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRIV = "KTRIV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRAHV = "KTRAHV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KTRNichtberechtigte = "KTRNichtberechtigte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Beschreibung = "Beschreibung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswDienstleistungCode = "AuswDienstleistungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswFakturaCode = "AuswFakturaCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswProduktCode = "AuswProduktCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswPIAuftragCode = "AuswPIAuftragCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_BDESollStundenProJahr_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_BDESollStundenProJahr_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BDESollStundenProJahr_XUserID = "BDESollStundenProJahr_XUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JanuarStd = "JanuarStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string FebruarStd = "FebruarStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string MaerzStd = "MaerzStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string AprilStd = "AprilStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string MaiStd = "MaiStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JuniStd = "JuniStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string JuliStd = "JuliStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string AugustStd = "AugustStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string SeptemberStd = "SeptemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string OktoberStd = "OktoberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string NovemberStd = "NovemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string DezemberStd = "DezemberStd";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string TotalStd = "TotalStd";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ManualEdit = "ManualEdit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XOrgUnit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_XOrgUnit"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentID = "ParentID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ChiefID = "ChiefID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RechtsdienstUserID = "RechtsdienstUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RepresentativeID = "RepresentativeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StellvertreterID = "StellvertreterID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ItemName = "ItemName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OEItemTypCode = "OEItemTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentPosition = "ParentPosition";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Mandantennummer = "Mandantennummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StundenLohnlaufNr = "StundenLohnlaufNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LeistungLohnlaufNr = "LeistungLohnlaufNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Sammelkonto = "Sammelkonto";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PCKonto = "PCKonto";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AD_Abteilung = "AD_Abteilung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Logo = "Logo";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Adressat = "Adressat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseKGS = "AdresseKGS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseAbteilung = "AdresseAbteilung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseStrasse = "AdresseStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdresseHausNr = "AdresseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdressePLZ = "AdressePLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AdresseOrt = "AdresseOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Phone = "Phone";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string WWW = "WWW";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Internet = "Internet";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserProfileCode = "UserProfileCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1 = "Text1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2 = "Text2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text3 = "Text3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text4 = "Text4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XOrgUnit_User{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_XOrgUnit_User"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string XOrgUnit_UserID = "XOrgUnit_UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string OrgUnitMemberCode = "OrgUnitMemberCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MayInsert = "MayInsert";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MayUpdate = "MayUpdate";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MayDelete = "MayDelete";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class Hist_XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ChiefID = "ChiefID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PrimaryUserID = "PrimaryUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PermissionGroupID = "PermissionGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrantPermGroupID = "GrantPermGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SachbearbeiterID = "SachbearbeiterID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MitarbeiterNr = "MitarbeiterNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string PasswordHash = "PasswordHash";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FirstName = "FirstName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LastName = "LastName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ShortName = "ShortName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsLocked = "IsLocked";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsUserAdmin = "IsUserAdmin";

/// <summary>
/// Flag, ob Benutzer BIAG Super-Administrator ist und somit über alle Rechte verfügt
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsUserBIAGAdmin = "IsUserBIAGAdmin";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsMandatsTraeger = "IsMandatsTraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GenderCode = "GenderCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtstag = "Geburtstag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LanguageCode = "LanguageCode";

/// <summary>
/// Standard Telefonnummer (wird für PI nicht benutzt, da spezifische Telefonnummern zur Verfügung stehen)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Phone = "Phone";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneMobile = "PhoneMobile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneOffice = "PhoneOffice";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneIntern = "PhoneIntern";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhonePrivat = "PhonePrivat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserProfileCode = "UserProfileCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Funktion = "Funktion";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RoleTitleCode = "RoleTitleCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string QualificationTitleCode = "QualificationTitleCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1 = "Text1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2 = "Text2";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string JobPercentage = "JobPercentage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HoursPerYearForCaseMgmt = "HoursPerYearForCaseMgmt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eintrittsdatum = "Eintrittsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Austrittsdatum = "Austrittsdatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LohntypCode = "LohntypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostentraeger = "Kostentraeger";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string WeitereKostentraeger = "WeitereKostentraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenart = "Kostenart";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KeinBDEExport = "KeinBDEExport";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MigHerkunft = "MigHerkunft";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MigMAKuerzel = "MigMAKuerzel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string MigUserFix = "MigUserFix";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36Area = "visdat36Area";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36SourceFile = "visdat36SourceFile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string visdat36ID = "visdat36ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36Name = "visdat36Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// Beinhaltet die History-Stundenansätze für die Benutzer
/// </summary>

public static class Hist_XUserStundenansatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "Hist_XUserStundenansatz"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string XUserStundenansatzID = "XUserStundenansatzID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart1 = "Lohnart1";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart2 = "Lohnart2";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart3 = "Lohnart3";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart4 = "Lohnart4";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart5 = "Lohnart5";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart6 = "Lohnart6";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart7 = "Lohnart7";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart8 = "Lohnart8";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart9 = "Lohnart9";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart10 = "Lohnart10";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart11 = "Lohnart11";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart12 = "Lohnart12";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart13 = "Lohnart13";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart14 = "Lohnart14";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart15 = "Lohnart15";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart16 = "Lohnart16";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart17 = "Lohnart17";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart18 = "Lohnart18";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart19 = "Lohnart19";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart20 = "Lohnart20";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID_DELETED = "VerID_DELETED";
}

/// <summary>
/// Type: Table
/// </summary>

public static class HistoryVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "HistoryVersion"; }
}


/// <summary>
/// Primärschlüssel für HistoryVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string VersionDate = "VersionDate";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string HostName = "HostName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string SystemUser = "SystemUser";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string AppName = "AppName";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 256]
/// </summary>
public const string dbUser = "dbUser";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SessionID = "SessionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AppUser = "AppUser";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string UserAction = "UserAction";
}

/// <summary>
/// Type: Table
/// Tabelle für die Inkasso-Art Abklärung
/// </summary>

public static class IkAbklaerung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkAbklaerung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkAbklaerungID = "IkAbklaerungID";

/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf XUser
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Die Art der Abklärung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAbklaerungArtCode = "IkAbklaerungArtCode";

/// <summary>
/// Die Art der Auswertung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAbklaerungAuswertungCode = "IkAbklaerungAuswertungCode";

/// <summary>
/// Das Stichdatum der Abklärung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAbklaerung = "DatumAbklaerung";

/// <summary>
/// Das Stichdatum der Auswertung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAuswertung = "DatumAuswertung";

/// <summary>
/// Eine Bemerkung zur Auswertung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkAbklaerungTS = "IkAbklaerungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkAnzeige{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkAnzeige"; }
}


/// <summary>
/// Zeile1  Zeile2  Zeile3  Zeile4
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkAnzeigeID = "IkAnzeigeID";

/// <summary>
/// Fremdschlüssel (FK_IkAnzeige_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string IkAnzeigeTypCode = "IkAnzeigeTypCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAnzeigeEroeffnungGrundCode = "IkAnzeigeEroeffnungGrundCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 64]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungGrund = "EroeffnungGrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAnzeigeAbschlussGrundCode = "IkAnzeigeAbschlussGrundCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1024]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkAnzeigeTS = "IkAnzeigeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkBetreibung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkBetreibung"; }
}


/// <summary>
/// Primärschlüssel für IkBetreibung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkBetreibungID = "IkBetreibungID";

/// <summary>
/// Fremdschlüssel (FK_IkBetreibung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_IkBetreibung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string IkBetreibungStatusCode = "IkBetreibungStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string IkVerlustscheinStatusCode = "IkVerlustscheinStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string IkVerlustscheinTypCode = "IkVerlustscheinTypCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string BetreibungAm = "BetreibungAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungNummer = "BetreibungNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungAmt = "BetreibungAmt";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungBetrag = "BetreibungBetrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungVon = "BetreibungVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungBis = "BetreibungBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungFortsetzungAm = "BetreibungFortsetzungAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungVerwertungAm = "BetreibungVerwertungAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetreibungRechtsoeffnungAm = "BetreibungRechtsoeffnungAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Glaeubiger = "Glaeubiger";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string VerlustscheinAm = "VerlustscheinAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinNummer = "VerlustscheinNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinAmt = "VerlustscheinAmt";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinBetrag = "VerlustscheinBetrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinZins = "VerlustscheinZins";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinKosten = "VerlustscheinKosten";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerlustscheinVerjaehrungAm = "VerlustscheinVerjaehrungAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkBetreibungTS = "IkBetreibungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkBetreibungAusgleich{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkBetreibungAusgleich"; }
}


/// <summary>
/// Primärschlüssel für IkBetreibungAusgleich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkBetreibungAusgleichID = "IkBetreibungAusgleichID";

/// <summary>
/// Fremdschlüssel (FK_IkBetreibungAusgleich_IkBetreibung) => IkBetreibung.IkBetreibungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkBetreibungID = "IkBetreibungID";

/// <summary>
/// Fremdschlüssel (FK_IkBetreibungAusgleich_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string AusgleichBuchungID = "AusgleichBuchungID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkBetreibungAusgleichTS = "IkBetreibungAusgleichTS";
}

/// <summary>
/// Type: Table
/// Ik Einkommen
/// </summary>

public static class IkEinkommen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkEinkommen"; }
}


/// <summary>
/// Primärschlüssel Ik Einkommen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkEinkommenID = "IkEinkommenID";

/// <summary>
/// Fremdschlüssel (FK_IkEinkommen_IkRechtstitelID) => IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// BaPersonID eines Gläubigers
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Code des Einkommentyps (LOV IkEinkommenTyp), wird mit Value3 in 3 DropDown gesplitet
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string IkEinkommenTypCode = "IkEinkommenTypCode";

/// <summary>
/// Anfangsdatum der Leistung
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GueltigVon = "GueltigVon";

/// <summary>
/// Enddatum der Leistung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GueltigBis = "GueltigBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkEinkommenTS = "IkEinkommenTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkForderung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkForderung"; }
}


/// <summary>
/// Primärschlüssel für IkForderung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkForderungID = "IkForderungID";

/// <summary>
/// Fremdschlüssel (FK_IkForderung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_IkForderung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// Fremdschlüssel (FK_IkForderung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string IkForderungPeriodischCode = "IkForderungPeriodischCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumAnpassenAb = "DatumAnpassenAb";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumGueltigBis = "DatumGueltigBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAnpassungsGrundCode = "IkAnpassungsGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAnpassungsRegelCode = "IkAnpassungsRegelCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandBeiBerechnung = "IndexStandBeiBerechnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandDatum = "IndexStandDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Sollgestellt = "Sollgestellt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ALBVBerechtigt = "ALBVBerechtigt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Teuerungseinsprache = "Teuerungseinsprache";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Unterstuetzungsfall = "Unterstuetzungsfall";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string TeilALBV = "TeilALBV";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TeilALBVBetrag = "TeilALBVBetrag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkForderungTS = "IkForderungTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string _tmp_AiForderungID_Periodisch = "_tmp_AiForderungID_Periodisch";
}

/// <summary>
/// Type: Table
/// Tabelle um die Kostenarten die Auszahlungen generieren zu handeln
/// </summary>

public static class IkForderung_BgKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkForderung_BgKostenart"; }
}


/// <summary>
/// Primärschlüssel der Tabelle IkForderung_BgKostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkForderung_BgKostenartID = "IkForderung_BgKostenartID";

/// <summary>
/// Fremdschlüssel der Auszahlungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID_Auszahlung = "BgKostenartID_Auszahlung";

/// <summary>
/// Fremdschlüssel der Auszahlungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID_Forderung = "BgKostenartID_Forderung";

/// <summary>
/// Code in der LOV IkForedungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungEinmaligCode = "IkForderungEinmaligCode";

/// <summary>
/// Code in der LOV IkForedungPeriodisch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungPeriodischCode = "IkForderungPeriodischCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkForderung_BgKostenartTS = "IkForderung_BgKostenartTS";
}

/// <summary>
/// Type: Table
/// Tabelle um die BgKostenartID der Forderung fachlich historisiert zu haben
/// </summary>

public static class IkForderungBgKostenartHist{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkForderungBgKostenartHist"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkForderungBgKostenartHistID = "IkForderungBgKostenartHistID";

/// <summary>
/// ID der Forderungskostenart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// Code in der LOV IkForedungPeriodisch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungPeriodischCode = "IkForderungPeriodischCode";

/// <summary>
/// Flag zum wissen ob die periodische Forderung ALBV-Berechtigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstAlbvBerechtigt = "IstAlbvBerechtigt";

/// <summary>
/// Flag zum wissen ob die periodische Forderung den ALBV max. Beitrag übersteigt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstAlbvUeberMax = "IstAlbvUeberMax";

/// <summary>
/// Flag zum wissen ob die periodische Forderung ein Unterstützungsfall ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstUnterstuetzungsfall = "IstUnterstuetzungsfall";

/// <summary>
/// Code in der LOV IkForedungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungEinmaligCode = "IkForderungEinmaligCode";

/// <summary>
/// Code der im Kontoauszug als Filter verwendet wird. Entspricht jetzt an der LOV IkForderungEinmalig
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string IkForderungsartFilterCode = "IkForderungsartFilterCode";

/// <summary>
/// gültig ab
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// gültig bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkForderungBgKostenartHistTS = "IkForderungBgKostenartHistTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkForderungPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkForderungPosition"; }
}


/// <summary>
/// Primärschlüssel für IkForderungPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkForderungPositionID = "IkForderungPositionID";

/// <summary>
/// Fremdschlüssel (FK_IkForderungPosition_IkForderung) => IkForderung.IkForderungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkForderungID = "IkForderungID";

/// <summary>
/// Fremdschlüssel (FK_IkForderungPosition_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkPositionID = "IkPositionID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkForderungPositionTS = "IkForderungPositionTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkGlaeubiger{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkGlaeubiger"; }
}


/// <summary>
/// Primärschlüssel für IkGlaeubiger Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkGlaeubigerID = "IkGlaeubigerID";

/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_AntragStellendePerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_AntragStellendePerson = "BaPersonID_AntragStellendePerson";

/// <summary>
/// Fremdschlüssel (FK_IkGlaeubiger_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1024]
/// [AllowNulls: True]
/// </summary>
public const string Ausbildung = "Ausbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkGlaeubigerTS = "IkGlaeubigerTS";

/// <summary>
/// Flag zum definieren ob die Auszahlung von Alimentenvermittlung erstellt werden muss beim verbuchen des Zahlungseingangs
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AuszahlungVermittlungStoppen = "AuszahlungVermittlungStoppen";
}

/// <summary>
/// Type: Table
/// Inkasso-Landesindex mit Indexbezeichnung
/// </summary>

public static class IkLandesindex{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkLandesindex"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkLandesindexID = "IkLandesindexID";

/// <summary>
/// Bezeichnung des Indexes (z.B.: BFS2010)
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkLandesindexTS = "IkLandesindexTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die einzelnen Werte pro Monat und Jahr je Inkasso-Landesindex
/// </summary>

public static class IkLandesindexWert{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkLandesindexWert"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkLandesindexWertID = "IkLandesindexWertID";

/// <summary>
/// Fremdschlüssel auf den verwendeten Landesindex (IkLandesindex.IkLandesindexID)
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkLandesindexID = "IkLandesindexID";

/// <summary>
/// Das Jahr, für welches der gegebene Wert gilt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// Der Monat innerhalb des Jahres, für welches der gegebene Wert gilt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// Der Wert für einen bestimmten Monat basierend auf einem IkLandesindex
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Wert = "Wert";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkLandesindexWertTS = "IkLandesindexWertTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkPosition"; }
}


/// <summary>
/// Primärschlüssel für IkPosition Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkPositionID = "IkPositionID";

/// <summary>
/// Fremdschlüssel (FK_IkPosition_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_IkPosition_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string Einmalig = "Einmalig";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// Fremdschlüssel (FK_IkPosition_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TotalAliment = "TotalAliment";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TotalAlimentSoll = "TotalAlimentSoll";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragALBV = "BetragALBV";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragALBVSoll = "BetragALBVSoll";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragKiZulage = "BetragKiZulage";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragKiZulageSoll = "BetragKiZulageSoll";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragALBVverrechnung = "BetragALBVverrechnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragEinmalig = "BetragEinmalig";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragAuszahlung = "BetragAuszahlung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungCode = "IkForderungCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandBeiBerechnung = "IndexStandBeiBerechnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandDatum = "IndexStandDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string ErledigterMonat = "ErledigterMonat";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string Unterstuetzungsfall = "Unterstuetzungsfall";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string ALBVBerechtigt = "ALBVBerechtigt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string BetragIstNegativ = "BetragIstNegativ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkPositionTS = "IkPositionTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string _tmp_AiForderungID_Einmalig = "_tmp_AiForderungID_Einmalig";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string _tmp_AiForderungID = "_tmp_AiForderungID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRatenplan{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkRatenplan"; }
}


/// <summary>
/// Primärschlüssel für IkRatenplan Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkRatenplanID = "IkRatenplanID";

/// <summary>
/// Fremdschlüssel (FK_IkRatenplan_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkRatenplanVereinbarungCode = "IkRatenplanVereinbarungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VereinbarungVom = "VereinbarungVom";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string GesamtBetrag = "GesamtBetrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string BetragProMonat = "BetragProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string LetzterProMonat = "LetzterProMonat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkRatenplanTS = "IkRatenplanTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRatenplanForderung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkRatenplanForderung"; }
}


/// <summary>
/// Primärschlüssel für IkRatenplanForderung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkRatenplanForderungID = "IkRatenplanForderungID";

/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkRatenplan) => IkRatenplan.IkRatenplanID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRatenplanID = "IkRatenplanID";

/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkPositionID = "IkPositionID";

/// <summary>
/// Fremdschlüssel (FK_IkRatenplanForderung_IkForderung) => IkForderung.IkForderungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkForderungID = "IkForderungID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkRatenplanForderungTS = "IkRatenplanForderungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkRechtstitel{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkRechtstitel"; }
}


/// <summary>
/// Primärschlüssel für IkRechtstitel Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// Fremdschlüssel (FK_IkRechtstitel_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>
public const string IkBezugKinderzulagenCode = "IkBezugKinderzulagenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>
public const string IkRechtstitelStatusCode = "IkRechtstitelStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkRechtstitelTypCode = "IkRechtstitelTypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string InkassoFallName = "InkassoFallName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2048]
/// [AllowNulls: True]
/// </summary>
public const string RechtstitelInfo = "RechtstitelInfo";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechtstitelDatumVon = "RechtstitelDatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechtstitelRechtskraeftig = "RechtstitelRechtskraeftig";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkElterlicheSorgeCode = "IkElterlicheSorgeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ElterlicheSorgeBemerkung = "ElterlicheSorgeBemerkung";

/// <summary>
/// Fremdschlüssel (FK_IkRechtstitel_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkIndexTypCode = "IkIndexTypCode";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandPunkte = "IndexStandPunkte";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IndexStandVom = "IndexStandVom";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkIndexRundenCode = "IkIndexRundenCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BasisKinderalimente = "BasisKinderalimente";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BasisEhegattenalimente = "BasisEhegattenalimente";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkInkassoBemuehungCode = "IkInkassoBemuehungCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerjaehrungAm = "VerjaehrungAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((1))]
/// </summary>
public const string SchuldnerMahnen = "SchuldnerMahnen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkAlimenteUnterartCode = "IkAlimenteUnterartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkRueckerstattungTypCode = "IkRueckerstattungTypCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IkRechtstitelGueltigVon = "IkRechtstitelGueltigVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IkRechtstitelGueltigBis = "IkRechtstitelGueltigBis";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkRechtstitelTS = "IkRechtstitelTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class IkVerrechnungskonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "IkVerrechnungskonto"; }
}


/// <summary>
/// Primärschlüssel für IkVerrechnungskonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string IkVerrechnungskontoID = "IkVerrechnungskontoID";

/// <summary>
/// Fremdschlüssel (FK_IkVerrechnungskonto_IkRechtstitel) => IkRechtstitel.IkRechtstitelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string IkRechtstitelID = "IkRechtstitelID";

/// <summary>
/// Fremdschlüssel (FK_IkVerrechnungskonto_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Grundforderung = "Grundforderung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VereinbarungVom = "VereinbarungVom";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string BetragProMonat = "BetragProMonat";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string LetzterMonat = "LetzterMonat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstErledigt = "IstErledigt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstAnnulliert = "IstAnnulliert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnnulliertAm = "AnnulliertAm";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkVerrechnungsartCode = "IkVerrechnungsartCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string IkVerrechnungskontoTS = "IkVerrechnungskontoTS";
}

/// <summary>
/// Type: Table
/// KA - Abklärung - Intake
/// </summary>

public static class KaAbklaerungIntake{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAbklaerungIntake"; }
}


/// <summary>
/// Primärschlüssel für KaAbklaerungIntake Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAbklaerungIntakeID = "KaAbklaerungIntakeID";

/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungIntake_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Feld Modul
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungPhaseIntakeCode = "KaAbklaerungPhaseIntakeCode";

/// <summary>
/// Feld Status Dossier
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungStatusDossierCode = "KaAbklaerungStatusDossierCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AsdFragen = "AsdFragen";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Gespraechstermin = "Gespraechstermin";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungPraesenzCode = "KaAbklaerungPraesenzCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumIntegration = "DatumIntegration";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungIntegrBeurCode = "KaAbklaerungIntegrBeurCode";

/// <summary>
/// LOV KaAbklärungGrundDoss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungGrundDossCode = "KaAbklaerungGrundDossCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Integration = "DocumentID_Integration";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_FormularAsD = "DocumentID_FormularAsD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ZusammenfassungEG = "DocumentID_ZusammenfassungEG";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAbklaerungIntakeTS = "KaAbklaerungIntakeTS";
}

/// <summary>
/// Type: Table
/// Tabelle um vertiefte Abklärungen zu erfassen
/// </summary>

public static class KaAbklaerungVertieft{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAbklaerungVertieft"; }
}


/// <summary>
/// Primärschlüssel für KaAbklaerungVertieft Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAbklaerungVertieftID = "KaAbklaerungVertieftID";

/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungVertieft_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_KaAbklaerungVertieft_KaKurserfassung) => KaKurserfassung.KaKurserfassungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaKurserfassungID = "KaKurserfassungID";

/// <summary>
/// Datum der Abklärung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Feld Modul
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungPhaseVertiefteAbklaerungenCode = "KaAbklaerungPhaseVertiefteAbklaerungenCode";

/// <summary>
/// Feld Status Dossier
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungStatusDossierCode = "KaAbklaerungStatusDossierCode";

/// <summary>
/// Datum des Kursabbruchs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumKursAbbruch = "DatumKursAbbruch";

/// <summary>
/// Präsenz Kurs
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungPraesenzCode = "KaAbklaerungPraesenzCode";

/// <summary>
/// Probeeinsatz in
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungProbeeinsatzInCode = "KaAbklaerungProbeeinsatzInCode";

/// <summary>
/// Datum von des Einsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVon = "EinsatzVon";

/// <summary>
/// Datum bis des Einsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzBis = "EinsatzBis";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Datum der Integration
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumIntegration = "DatumIntegration";

/// <summary>
/// Code der Integrationsbeurteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungIntegrBeurCode = "KaAbklaerungIntegrBeurCode";

/// <summary>
/// Fremdschlüssel auf XDocument für die Integrationsbeurteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Integration = "DocumentID_Integration";

/// <summary>
/// Grund Dossierrückgabe (LOV KaAbklärungGrundDoss)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungGrundDossCode = "KaAbklaerungGrundDossCode";

/// <summary>
/// Datum des Austritts bei einer Dossierrückgabe
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAustritt = "DatumAustritt";

/// <summary>
/// Fremdschlüssel auf XDocument für das Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Schlussbericht = "DocumentID_Schlussbericht";

/// <summary>
/// Flag ob den Datensatz auch für Benutzern aus SD sichtbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAbklaerungVertieftTS = "KaAbklaerungVertieftTS";
}

/// <summary>
/// Type: Table
/// KA - Abklärung - Vertiefte Abklärungen - Probeeinsatz
/// </summary>

public static class KaAbklaerungVertieftProbeeinsatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAbklaerungVertieftProbeeinsatz"; }
}


/// <summary>
/// Primärschlüssel der Tabelle KaAbklaerungVertieftProbeeinsatz
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAbklaerungVertieftProbeeinsatzID = "KaAbklaerungVertieftProbeeinsatzID";

/// <summary>
/// Fremdschlüssel zur Tabelle KaAbklaerungVertieft
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KaAbklaerungVertieftID = "KaAbklaerungVertieftID";

/// <summary>
/// Datum des Probeeinsatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Prozessschritt, gehört zum Probeeinsatz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAbklaerungProzessschrittCode = "KaAbklaerungProzessschrittCode";

/// <summary>
/// Dokument des Probeeinsatzes
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Prozessschritt = "DocumentID_Prozessschritt";

/// <summary>
/// Ob der Probeeinsatz stattgefunden hat
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HatStattgefunden = "HatStattgefunden";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAbklaerungVertieftProbeeinsatzTS = "KaAbklaerungVertieftProbeeinsatzTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaAKZuweiser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAKZuweiser"; }
}


/// <summary>
/// Primärschlüssel für KaAKZuweiser Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAKZuweiserID = "KaAKZuweiserID";

/// <summary>
/// Fremdschlüssel (FK_KaAKZuweiser_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Erfassung = "Erfassung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungCode = "AnmeldungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionID = "InstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeraterID = "BeraterID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAKZuweiserTS = "KaAKZuweiserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaAllgemein{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAllgemein"; }
}


/// <summary>
/// Primärschlüssel für KaAllgemein Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAllgemeinID = "KaAllgemeinID";

/// <summary>
/// Fremdschlüssel (FK_KaAllgemein_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAllgemeinTS = "KaAllgemeinTS";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";
}

/// <summary>
/// Type: Table
/// Sammlung von Daten für den Ausdruck der AMM - Bescheinigung
/// </summary>

public static class KaAmmBesch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAmmBesch"; }
}


/// <summary>
/// Primärschlüssel für KaAmmBesch Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAmmBeschID = "KaAmmBeschID";

/// <summary>
/// Fremdschlüssel (FK_KaAmmBesch_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_KaAmmBesch_KaEinsatz) => KaEinsatz.KaEinsatzID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KaEinsatzID = "KaEinsatzID";

/// <summary>
/// Fremdschlüssel (TODO!!!!) => KaEinsatzplatz2.KaEinsatzplatzID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// Fremdschlüssel (TODO!!!) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKaID = "ZustaendigKaID";

/// <summary>
/// Monat der AMM - Bescheinigung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// Jahr der AMM - Bescheinigung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// ProfilCode aus KaEinsatzplatz2 (LOV KaProfil)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProfilCode = "ProfilCode";

/// <summary>
/// DatumVon aus Tabelle KaEinsatz
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Austritt oder DatumBis von KaEinsatz
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Wurde AMM - Bescheinigung gedruckt oder nicht
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string gedrucktFlag = "gedrucktFlag";

/// <summary>
/// Timestamp für Tabelle KaAmmBesch
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAKZuweiserTS = "KaAKZuweiserTS";
}

/// <summary>
/// Type: Table
/// Daten der Präsenzzeiterfassung
/// </summary>

public static class KaArbeitsrapport{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaArbeitsrapport"; }
}


/// <summary>
/// Primärschlüssel für KaArbeitsrapport Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaArbeitsrapportID = "KaArbeitsrapportID";

/// <summary>
/// Fremdschlüssel (FK_KaArbeitsrapport_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (TODO) => KaEinsatz.KaEinsatzID
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaEinsatzID = "KaEinsatzID";

/// <summary>
/// Tag für die Erfassung der Präsenzzeit
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Code Vormittag aus Werteliste KaPraesenzCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AM_AnwCode = "AM_AnwCode";

/// <summary>
/// Stunden für den Vormittag
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AM_Std = "AM_Std";

/// <summary>
/// Bemerkung für den Vormittag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AM_Bemerkung = "AM_Bemerkung";

/// <summary>
/// Code Nachmittag aus Werteliste KaPraesenzCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PM_AnwCode = "PM_AnwCode";

/// <summary>
/// Stunden für den Nachmittag
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PM_Std = "PM_Std";

/// <summary>
/// Bemerkung für den Nachmittag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PM_Bemerkung = "PM_Bemerkung";

/// <summary>
/// Flag zur Steuerung der Sichtbarkeit für den SD Bern
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Timestamp für Tabelle KaArbeitsrapport
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaArbeitsrapportTS = "KaArbeitsrapportTS";
}

/// <summary>
/// Type: Table
/// Daten der methodischen Leistung: Assistenz.
/// </summary>

public static class KaAssistenz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAssistenz"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAssistenzID = "KaAssistenzID";

/// <summary>
/// Fremdschlüssel (FK_KaAssistenz_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Flag ob der Klient vom ALV abgemeldet ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Abgemeldet = "Abgemeldet";

/// <summary>
/// Flag ob der Klient ohne Abmeldung nicht erschienen ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string NichtErschienen = "NichtErschienen";

/// <summary>
/// Flag ob mit dem Klienten ein Gespräch stattgefunden hat.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string GespraechStattgefunden = "GespraechStattgefunden";

/// <summary>
/// Flag ob mit einem Programm begonnen wird.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Programmbeginn = "Programmbeginn";

/// <summary>
/// Einsatzplatz des Klienten.
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Einsatzplatz = "Einsatzplatz";

/// <summary>
/// Stufe des Einsatzes.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Stufe = "Stufe";

/// <summary>
/// Flag ob Personalien des Klienten erfasst wurden.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Personalien = "Personalien";

/// <summary>
/// Flag ob Vereinbarung mit dem Klienten abgeschlossen wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Vereinbarung = "Vereinbarung";

/// <summary>
/// Flag ob Zielvereinbarung mit dem Klienten abgeschlossen wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Zielvereinbarung = "Zielvereinbarung";

/// <summary>
/// Flag ob Schlussbericht erstellt wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Schlussbericht = "Schlussbericht";

/// <summary>
/// Flag ob Testat ausgestellt wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Testat = "Testat";

/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Austrittsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAssistenzprojektAustrittsgrundCode = "KaAssistenzprojektAustrittsgrundCode";

/// <summary>
/// Austrittsdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Austrittsdatum = "Austrittsdatum";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAssistenzTS = "KaAssistenzTS";
}

/// <summary>
/// Type: Table
/// KaAusbildung
/// </summary>

public static class KaAusbildung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaAusbildung"; }
}


/// <summary>
/// Primärschlüssel für KaAusbildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaAusbildungID = "KaAusbildungID";

/// <summary>
/// Fremdschlüssel (FK_KaAusbildung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Andere
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Andere = "Andere";

/// <summary>
/// LOV Ausbildung Vorbildung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAusbildungVorbildungCode = "KaAusbildungVorbildungCode";

/// <summary>
/// LOV BECO erlenter Beruf
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBecoErlernterBerufCode = "KaBecoErlernterBerufCode";

/// <summary>
/// LOV BIAS Ausbildung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaVermittlBiBerufsbilCode = "KaVermittlBiBerufsbilCode";

/// <summary>
/// LOV BIAS Berufserfahrung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaVermittlBiBerufserfCode = "KaVermittlBiBerufserfCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaAusbildungTS = "KaAusbildungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetrieb{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaBetrieb"; }
}


/// <summary>
/// Primärschlüssel für KaBetrieb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string BetriebName = "BetriebName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrganisationTypCode_OBSOLETE = "OrganisationTypCode_OBSOLETE";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DmgAdresseID_OBSOLETE = "DmgAdresseID_OBSOLETE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Homepage = "Homepage";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string KontaktPerson_OBSOLETE = "KontaktPerson_OBSOLETE";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaBetriebTS = "KaBetriebTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TeilbetriebID = "TeilbetriebID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string CharakterCode = "CharakterCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string InAusbildungsverbund = "InAusbildungsverbund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebBesprechung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaBetriebBesprechung"; }
}


/// <summary>
/// Primärschlüssel für KaBetriebBesprechung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaBetriebBesprechungID = "KaBetriebBesprechungID";

/// <summary>
/// Fremdschlüssel (FK_KaBetriebBesprechung_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KontaktGeplant = "KontaktGeplant";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KontaktPersonID = "KontaktPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string AutorID = "AutorID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KontaktArtCode = "KontaktArtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Inhalt = "Inhalt";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaBetriebBesprechungTS = "KaBetriebBesprechungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebDokument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaBetriebDokument"; }
}


/// <summary>
/// Primärschlüssel für KaBetriebDokument Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaBetriebDokumentID = "KaBetriebDokumentID";

/// <summary>
/// Fremdschlüssel (FK_KaBetriebDokument_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbsenderID = "AbsenderID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AdressatID = "AdressatID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DokumentDocID = "DokumentDocID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaBetriebDokumentTS = "KaBetriebDokumentTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaBetriebKontakt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaBetriebKontakt"; }
}


/// <summary>
/// Primärschlüssel für KaBetriebKontakt Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaBetriebKontaktID = "KaBetriebKontaktID";

/// <summary>
/// Fremdschlüssel (FK_KaBetriebKontakt_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Funktion = "Funktion";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (1)]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TelefonMobil = "TelefonMobil";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaBetriebKontaktTS = "KaBetriebKontaktTS";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string UseZusatzadresse = "UseZusatzadresse";
}

/// <summary>
/// Type: Table
/// KA - EAF - Sozioberufliche Bilanz
/// </summary>

public static class KaEafSozioberuflicheBilanz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaEafSozioberuflicheBilanz"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaEafSozioberuflicheBilanzID = "KaEafSozioberuflicheBilanzID";

/// <summary>
/// Fremdschlüssel (FK_KaEafSozioberuflicheBilanz_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AnwesendTeilzeit = "AnwesendTeilzeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Schwerpunkte = "Schwerpunkte";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessEinladungErfolgt = "ProzessEinladungErfolgt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAufnahmeverfahrenErfolgt = "ProzessAufnahmeverfahrenErfolgt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessErmittlungsprogrammErstellt = "ProzessErmittlungsprogrammErstellt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessFaehigkeitsprofilMelba = "ProzessFaehigkeitsprofilMelba";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessZwischengespraech = "ProzessZwischengespraech";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumZwischengespraech = "ProzessDatumZwischengespraech";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessVerzahnungsgespraech1 = "ProzessVerzahnungsgespraech1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumVerzahnungsgespraech1 = "ProzessDatumVerzahnungsgespraech1";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessVerzahnungsgespraech2 = "ProzessVerzahnungsgespraech2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumVerzahnungsgespraech2 = "ProzessDatumVerzahnungsgespraech2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessVerzahnungsgespraech3 = "ProzessVerzahnungsgespraech3";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumVerzahnungsgespraech3 = "ProzessDatumVerzahnungsgespraech3";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAbschlussgespraechErfolgt = "ProzessAbschlussgespraechErfolgt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessSchlussbericht = "ProzessSchlussbericht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessFaehigkeitsAnalyse = "ProzessFaehigkeitsAnalyse";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessBewerbungskompetenz = "ProzessBewerbungskompetenz";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAustrittsbefragungErfolgt = "ProzessAustrittsbefragungErfolgt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ProzessBemerkungenAbschluss = "ProzessBemerkungenAbschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufnahmeZielsetzungenRAV = "AufnahmeZielsetzungenRAV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufnahmeErgebnisseInterview = "AufnahmeErgebnisseInterview";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufnahmeErgebnisseBewerbung = "AufnahmeErgebnisseBewerbung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufnahmeErgebnisseAssessment = "AufnahmeErgebnisseAssessment";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufnahmeErgebnisseWerkstatt = "AufnahmeErgebnisseWerkstatt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenDatumAufforderung = "InterventionenDatumAufforderung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenAufforderung = "InterventionenAufforderung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDatum = "AustrittDatum";

/// <summary>
/// LOV KaEafAustrittsGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundCode = "KaEafAustrittsgrundCode";

/// <summary>
/// LOV KaEafAustrittsgrundMassnahmeBeendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundMassnahmeBeendetCode = "KaEafAustrittsgrundMassnahmeBeendetCode";

/// <summary>
/// LOV KaEafAustrittsgrundAbbruchAnbieter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundAbbruchAnbieterCode = "KaEafAustrittsgrundAbbruchAnbieterCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessErmittlungsprogramm = "DocumentID_ProzessErmittlungsprogramm";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessFaehigkeitsprofilMelba = "DocumentID_ProzessFaehigkeitsprofilMelba";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessSchlussbericht = "DocumentID_ProzessSchlussbericht";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessFaehigkeitsAnalyse = "DocumentID_ProzessFaehigkeitsAnalyse";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessBewerbungskompetenz = "DocumentID_ProzessBewerbungskompetenz";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVereinbarung = "DocumentID_InterventionenVereinbarung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVerwarnung1 = "DocumentID_InterventionenVerwarnung1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVerwarnung2 = "DocumentID_InterventionenVerwarnung2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenProgrammabbruch = "DocumentID_InterventionenProgrammabbruch";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaEafSozioberuflicheBilanzTS = "KaEafSozioberuflicheBilanzTS";
}

/// <summary>
/// Type: Table
/// KA - EAF - Spezifische Ermittlung
/// </summary>

public static class KaEafSpezifischeErmittlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaEafSpezifischeErmittlung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaEafSpezifischeErmittlungID = "KaEafSpezifischeErmittlungID";

/// <summary>
/// Fremdschlüssel (FK_KaEafSpezifischeErmittlung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AnwesendTeilzeit = "AnwesendTeilzeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zielsetzungen = "Zielsetzungen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessEinladungErfolgt = "ProzessEinladungErfolgt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessVereinbarung = "ProzessVereinbarung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumVereinbarung = "ProzessDatumVereinbarung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAustauschgespraech1 = "ProzessAustauschgespraech1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumAustauschgespraech1 = "ProzessDatumAustauschgespraech1";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAustauschgespraech2 = "ProzessAustauschgespraech2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumAustauschgespraech2 = "ProzessDatumAustauschgespraech2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAustauschgespraech3 = "ProzessAustauschgespraech3";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProzessDatumAustauschgespraech3 = "ProzessDatumAustauschgespraech3";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAbschlussgespraechErfolgt = "ProzessAbschlussgespraechErfolgt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessSchlussbericht = "ProzessSchlussbericht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProzessAustrittsbefragungErfolgt = "ProzessAustrittsbefragungErfolgt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ProzessBemerkungenAbschluss = "ProzessBemerkungenAbschluss";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenDatumAufforderung1 = "InterventionenDatumAufforderung1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenAufforderung1 = "InterventionenAufforderung1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenDatumAufforderung2 = "InterventionenDatumAufforderung2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InterventionenAufforderung2 = "InterventionenAufforderung2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDatum = "AustrittDatum";

/// <summary>
/// LOV KaEafAustrittsGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundCode = "KaEafAustrittsgrundCode";

/// <summary>
/// LOV KaEafAustrittsgrundMassnahmeBeendet wird mit Austrittgrund Massnahme beendet gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundMassnahmeBeendetCode = "KaEafAustrittsgrundMassnahmeBeendetCode";

/// <summary>
/// LOV KaEafAustrittsgrundAbbruchAnbieter wird mit Austrittgrund Abbruch Anbieter gesetzt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEafAustrittsgrundAbbruchAnbieterCode = "KaEafAustrittsgrundAbbruchAnbieterCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessVereinbarung = "DocumentID_ProzessVereinbarung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_ProzessSchlussbericht = "DocumentID_ProzessSchlussbericht";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenAufforderung1 = "DocumentID_InterventionenAufforderung1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenAufforderung2 = "DocumentID_InterventionenAufforderung2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenAufforderung3 = "DocumentID_InterventionenAufforderung3";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVereinbarung1 = "DocumentID_InterventionenVereinbarung1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVereinbarung2 = "DocumentID_InterventionenVereinbarung2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVerwarnung1 = "DocumentID_InterventionenVerwarnung1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenVerwarnung2 = "DocumentID_InterventionenVerwarnung2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_InterventionenProgrammabbruch = "DocumentID_InterventionenProgrammabbruch";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaEafSpezifischeErmittlungTS = "KaEafSpezifischeErmittlungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaEinsatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaEinsatz"; }
}


/// <summary>
/// Primärschlüssel für KaEinsatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaEinsatzID = "KaEinsatzID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// Fremdschlüssel auf die methodische Leistung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnweisungCode = "AnweisungCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Definition ob der Einsatz an Samstagen erlaubt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SamstagAktiv = "SamstagAktiv";

/// <summary>
/// Definition ob der Einsatz an Sonntagen erlaubt ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SonntagAktiv = "SonntagAktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeschGrad = "BeschGrad";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string APVZusatzCode = "APVZusatzCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PersonenNr = "PersonenNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RahmenfristBis = "RahmenfristBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ALKasseID = "ALKasseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuweiserID = "ZuweiserID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaEinsatzTS = "KaEinsatzTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaEinsatzplatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaEinsatzplatz"; }
}


/// <summary>
/// Primärschlüssel für KaEinsatzplatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BrancheCode = "BrancheCode";

/// <summary>
/// Fremdschlüssel (FK_KaEinsatzplatz_KaBetrieb) => KaBetrieb.KaBetriebID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (1)]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaProgrammCode = "KaProgrammCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKA = "ZustaendigKA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LehrberufCode = "LehrberufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BerufsAusbildungTyp = "BerufsAusbildungTyp";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string NeuGeschaffeneLehrstelle = "NeuGeschaffeneLehrstelle";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Details = "Details";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErfassungsDatum = "ErfassungsDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzAb = "EinsatzAb";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string DauerUnbefristet = "DauerUnbefristet";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesamtPensum = "GesamtPensum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string PensumAufteilbar = "PensumAufteilbar";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzelpensumMinimum = "EinzelpensumMinimum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzelpensumMaximum = "EinzelpensumMaximum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string PensumUnbestimmt = "PensumUnbestimmt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string Fuehrerausweis = "Fuehrerausweis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FuehrerausweisKategorieCode = "FuehrerausweisKategorieCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string PCKenntnisse = "PCKenntnisse";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DeutschMuendlichCode = "DeutschMuendlichCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DeutschSchriftlichCode = "DeutschSchriftlichCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusbildungCode = "AusbildungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string WeitereAnforderungen = "WeitereAnforderungen";

/// <summary>
/// Fremdschlüssel (FK_KaEinsatzplatz_KaBetriebKontakt) => KaBetriebKontakt.KaBetriebKontaktID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaKontaktpersonID = "KaKontaktpersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FunktionCode = "FunktionCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaEinsatzplatzTS = "KaEinsatzplatzTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";
}

/// <summary>
/// Type: Table
/// Liste der Einsatzplätze mit DatumVon - DatumBis
/// </summary>

public static class KaEinsatzplatz2{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaEinsatzplatz2"; }
}


/// <summary>
/// Primärschlüssel für KaEinsatzplatz2 Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// Bezeichnung des Einsatzplatzes
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Code aus Werteliste KaProjekt
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ProjektCode = "ProjektCode";

/// <summary>
/// Code aus Werteliste KaProfil
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProfilCode = "ProfilCode";

/// <summary>
/// Code aus Werteliste KaAPV
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string APVCode = "APVCode";

/// <summary>
/// DatumVon des Einsatzplatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// DatumBis des Einsatzplatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Timestamp für Tabelle KaEinsatzplatz2
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaEinsatzplatz2TS = "KaEinsatzplatz2TS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaExterneBildung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaExterneBildung"; }
}


/// <summary>
/// Primärschlüssel für KaExterneBildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaExterneBildungID = "KaExterneBildungID";

/// <summary>
/// Fremdschlüssel (FK_KaExterneBildung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kurstyp = "Kurstyp";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kursort = "Kursort";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzahlKurstage = "AnzahlKurstage";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Kursbestaetigung = "Kursbestaetigung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnteilKA = "AnteilKA";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnteilDritte = "AnteilDritte";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaProgrammCode = "KaProgrammCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaExterneBildungTS = "KaExterneBildungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaExterneBildungZahlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaExterneBildungZahlung"; }
}


/// <summary>
/// Primärschlüssel für KaExterneBildungZahlung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaExterneBildungZahlungID = "KaExterneBildungZahlungID";

/// <summary>
/// Fremdschlüssel (FK_KaExterneBildungZahlung_KaExterneBildung) => KaExterneBildung.KaExterneBildungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaExterneBildungID = "KaExterneBildungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zweck = "Zweck";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaExterneBildungZahlungTS = "KaExterneBildungZahlungTS";
}

/// <summary>
/// Type: Table
/// Einträge für Phase Inizio
/// </summary>

public static class KaInizio{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaInizio"; }
}


/// <summary>
/// Primärschlüssel für KaInizio Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaInizioID = "KaInizioID";

/// <summary>
/// Fremdschlüssel (FK_KaInizio_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Datum Mappe verschickt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MappeVerschickt = "MappeVerschickt";

/// <summary>
/// Datum Anmeldung eingegangen
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungEingegangen = "AnmeldungEingegangen";

/// <summary>
/// Code aus Werteliste KaInizioAnmeldungDurch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungDurchCode = "AnmeldungDurchCode";

/// <summary>
/// Code aus Werteliste KaInizioSchulabschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SchulabschlussCode = "SchulabschlussCode";

/// <summary>
/// Code aus Werteliste KaInizioAusbildungEmpfehlung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EmpfehlungInizioCode = "EmpfehlungInizioCode";

/// <summary>
/// Code aus Werteliste KaInizioAbschlussPhase1
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussPhaseCode = "AbschlussPhaseCode";

/// <summary>
/// Timestamp für Tabelle KaInizio
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaInizioTS = "KaInizioTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaIntegBildung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaIntegBildung"; }
}


/// <summary>
/// Primärschlüssel für KaIntegBildung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaIntegBildungID = "KaIntegBildungID";

/// <summary>
/// Fremdschlüssel (FK_KaIntegBildung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_KaIntegBildung_KaKurserfassung) => KaKurserfassung.KaKurserfassungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaKurserfassungID = "KaKurserfassungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eintritt = "Eintritt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Austritt = "Austritt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussCode = "AbschlussCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDokID = "AbschlussDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RueckmeldungDokID = "RueckmeldungDokID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursbestFlag = "KursbestFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaProgrammCode = "KaProgrammCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaIntegBildungTS = "KaIntegBildungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaJobtimal{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaJobtimal"; }
}


/// <summary>
/// Primärschlüssel für KaJobtimal Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaJobtimalID = "KaJobtimalID";

/// <summary>
/// Fremdschlüssel (FK_KaJobtimal_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf BaInstitutionKontakt wenn es positiv ist und auf XUser wenn es negativ ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuweiserID = "ZuweiserID";

/// <summary>
/// Code der LOV "KaVermittlungBiBIPSiAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungCode = "AnmeldungCode";

/// <summary>
/// Dokument Fähigkeitsprofil
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Faehigkeitsprofil = "DocumentID_Faehigkeitsprofil";

/// <summary>
/// Datum Sozialhilfebezug ab
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SozialhilfebezugAb = "SozialhilfebezugAb";

/// <summary>
/// Code der LOV "KaSozialhilfebezug"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaSozialhilfebezugCode = "KaSozialhilfebezugCode";

/// <summary>
/// Dokument Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Schlussbericht = "DocumentID_Schlussbericht";

/// <summary>
/// Abschlussdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittgrundCode = "AustrittgrundCode";

/// <summary>
/// Code der LOV "KaVermittlungDossierRetourAnSDGrund"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DossierRetourAnSDGrundCode = "DossierRetourAnSDGrundCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaJobtimalTS = "KaJobtimalTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaJobtimalVertrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaJobtimalVertrag"; }
}


/// <summary>
/// Primärschlüssel für KaJobtimalVertrag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaJobtimalVertragID = "KaJobtimalVertragID";

/// <summary>
/// Fremdschlüssel (FK_KaJobtimalVertrag_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaVermittlungVorschlagID = "KaVermittlungVorschlagID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaJobtimalVertragTypCode = "KaJobtimalVertragTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaJobtimalVertragTS = "KaJobtimalVertragTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKontaktartProzess{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaKontaktartProzess"; }
}


/// <summary>
/// Primärschlüssel für KaKontaktartProzess Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaKontaktartProzessID = "KaKontaktartProzessID";

/// <summary>
/// Fremdschlüssel (FK_KaKontaktartProzess_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Datum des Eintrags
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// LOV KaKontaktartProzess
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaKontaktartProzessCode = "KaKontaktartProzessCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaKontaktartProzessStatusCode = "KaKontaktartProzessStatusCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaKontaktartProzessTS = "KaKontaktartProzessTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKurs{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaKurs"; }
}


/// <summary>
/// Primärschlüssel für KaKurs Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaKursID = "KaKursID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Nr = "Nr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzLektionen = "AnzLektionen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Plaetze = "Plaetze";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SektionCode = "SektionCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string ClosedFlag = "ClosedFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaKursTS = "KaKursTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaKurserfassung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaKurserfassung"; }
}


/// <summary>
/// Primärschlüssel für KaKurserfassung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaKurserfassungID = "KaKurserfassungID";

/// <summary>
/// Fremdschlüssel (FK_KaKurserfassung_KaKurs) => KaKurs.KaKursID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KursID = "KursID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string KursNr = "KursNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SistiertFlag = "SistiertFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaKurserfassungTS = "KaKurserfassungTS";
}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Qualifizierung Erwachsene - EPQ
/// </summary>

public static class KaQEEPQ{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQEEPQ"; }
}


/// <summary>
/// Primärschlüssel für KaQEEPQ Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQEEPQID = "KaQEEPQID";

/// <summary>
/// Fremdschlüssel (FK_KaQEEPQ_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// ID des ersten Dokuments für die Standortbestimmung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Standortbestimmung1 = "XDocumentID_Standortbestimmung1";

/// <summary>
/// ID des zweiten Dokuments für die Standortbestimmung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Standortbestimmung2 = "XDocumentID_Standortbestimmung2";

/// <summary>
/// ID des Dokuments für das Vorstellungsgespräch (Intake)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Vorstellungsgespraech = "XDocumentID_Vorstellungsgespraech";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string StaoDat = "StaoDat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaetigProgrammDokID = "TaetigProgrammDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PersonalblattDokID = "PersonalblattDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZwBericht1DokID = "ZwBericht1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZwBericht2DokID = "ZwBericht2DokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string VerlaengerungFlag = "VerlaengerungFlag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerlaengerungDat = "VerlaengerungDat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Schlussbericht1DokID = "Schlussbericht1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Schlussbericht2DokID = "Schlussbericht2DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitszeugnisDokID = "ArbeitszeugnisDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZwischenzeugnisDokID = "ZwischenzeugnisDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinladungDat1 = "EinladungDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinladungDat2 = "EinladungDat2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einladung1DokID = "Einladung1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einladung2DokID = "Einladung2DokID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string IntakeCodes = "IntakeCodes";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ProgBeginn = "ProgBeginn";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RueckanwortDokID = "RueckanwortDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinladungProgBeginn1DokID = "EinladungProgBeginn1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinladungProgBeginn2DokID = "EinladungProgBeginn2DokID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string IndivZieleRAV = "IndivZieleRAV";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IndivZieleRAVDokID = "IndivZieleRAVDokID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string IndivZieleRAVVerl = "IndivZieleRAVVerl";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IndivZieleRAVVerlDokID = "IndivZieleRAVVerlDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDatum = "AustrittDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittGrund = "AustrittGrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCode = "AustrittCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AustrittBemerkung = "AustrittBemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordDat1 = "muendAuffordDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordDat2 = "muendAuffordDat2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordBem1 = "muendAuffordBem1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordBem2 = "muendAuffordBem2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung1DokID = "Aufforderung1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung2DokID = "Aufforderung2DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung3DokID = "Aufforderung3DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Vereinbarung1DokID = "Vereinbarung1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Vereinbarung2DokID = "Vereinbarung2DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgAbbruchDokID = "ProgAbbruchDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerlaengerungDokID = "VerlaengerungDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerwRegelverstossDokID = "VerwRegelverstossDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerwNichterscheinenDokID = "VerwNichterscheinenDokID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQEEPQTS = "KaQEEPQTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEEPQZielvereinb{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQEEPQZielvereinb"; }
}


/// <summary>
/// Primärschlüssel für KaQEEPQZielvereinb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQEEPQZielvereinbID = "KaQEEPQZielvereinbID";

/// <summary>
/// Fremdschlüssel (FK_KaQEEPQZielvereinb_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FeinzielDat = "FeinzielDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Feinziel = "Feinziel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErreichenBis = "ErreichenBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MessungZielerreichung = "MessungZielerreichung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ergebnis = "Ergebnis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQEEPQZielvereinbTS = "KaQEEPQZielvereinbTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEEPQZielvereinbVerl{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQEEPQZielvereinbVerl"; }
}


/// <summary>
/// Primärschlüssel für KaQEEPQZielvereinbVerl Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQEEPQZielvereinbVerlID = "KaQEEPQZielvereinbVerlID";

/// <summary>
/// Fremdschlüssel (FK_KaQEEPQZielvereinbVerl_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FeinzielDat = "FeinzielDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Feinziel = "Feinziel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErreichenBis = "ErreichenBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MessungZielerreichung = "MessungZielerreichung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ergebnis = "Ergebnis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQEEPQZielvereinbVerlTS = "KaQEEPQZielvereinbVerlTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQEJobtimum{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQEJobtimum"; }
}


/// <summary>
/// Primärschlüssel für KaQEJobtimum Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQEJobtimumID = "KaQEJobtimumID";

/// <summary>
/// Fremdschlüssel (FK_KaQEJobtimum_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZielDat1 = "ZielDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZielDat2 = "ZielDat2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZielDat3 = "ZielDat3";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZielDat4 = "ZielDat4";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZielCode1 = "ZielCode1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZielCode2 = "ZielCode2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZielCode3 = "ZielCode3";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZielCode4 = "ZielCode4";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Ziel1DokID = "Ziel1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Ziel2DokID = "Ziel2DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Ziel3DokID = "Ziel3DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Ziel4DokID = "Ziel4DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZwischenberichtDokID = "ZwischenberichtDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SchlussberichtDokID = "SchlussberichtDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Schlussbericht1DokID = "Schlussbericht1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TeilnahmebestDokID = "TeilnahmebestDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinladungDat1 = "EinladungDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinladungDat2 = "EinladungDat2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einladung1DokID = "Einladung1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einladung2DokID = "Einladung2DokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Einladung1Flag = "Einladung1Flag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Einladung2Flag = "Einladung2Flag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ProgBeginnOLD = "ProgBeginnOLD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgBeginnCodeOLD = "ProgBeginnCodeOLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ChecklisteFlag = "ChecklisteFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HausordnungFlag = "HausordnungFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HausrundgangFlag = "HausrundgangFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string UnterlagenFlag = "UnterlagenFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TerminDat = "TerminDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zusatzinfos = "Zusatzinfos";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordDat1 = "muendAuffordDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordDat2 = "muendAuffordDat2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordBem1 = "muendAuffordBem1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string muendAuffordBem2 = "muendAuffordBem2";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Verwarnung1DokID = "Verwarnung1DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Verwarnung2DokID = "Verwarnung2DokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Verwarnung1aDokID = "Verwarnung1aDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Verwarnung2aDokID = "Verwarnung2aDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgAbbruchDokID = "ProgAbbruchDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDatum = "AustrittDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittGrund = "AustrittGrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCode = "AustrittCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AustrittBemerkung = "AustrittBemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQEJobtimumTS = "KaQEJobtimumTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgAbbruch2DokID = "ProgAbbruch2DokID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJBildung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJBildung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJBildungID = "KaQJBildungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursBewerbungFlag = "KursBewerbungFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursInformatikFlag = "KursInformatikFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursVideoFlag = "KursVideoFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursWissenFlag = "KursWissenFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom1Flag = "KursCustom1Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom1Text = "KursCustom1Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom2Flag = "KursCustom2Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom2Text = "KursCustom2Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom3Flag = "KursCustom3Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom3Text = "KursCustom3Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom4Flag = "KursCustom4Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom4Text = "KursCustom4Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom5Flag = "KursCustom5Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom5Text = "KursCustom5Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KursCustom6Flag = "KursCustom6Flag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KursCustom6Text = "KursCustom6Text";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJBildungTS = "KaQJBildungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJIntake{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJIntake"; }
}


/// <summary>
/// Primärschlüssel für KaQJIntake Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJIntakeID = "KaQJIntakeID";

/// <summary>
/// Fremdschlüssel (FK_KaQJIntake_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuweiserID = "ZuweiserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuteilungCode = "ZuteilungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WerkstattCode = "WerkstattCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ExternFlag = "ExternFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Eintritt = "Eintritt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WartelisteCode = "WartelisteCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaQjIntakeSpracheCode_Hauptsprache = "KaQjIntakeSpracheCode_Hauptsprache";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaQjIntakeSpracheCode_Erstsprache = "KaQjIntakeSpracheCode_Erstsprache";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AbgemeldetALVFlag = "AbgemeldetALVFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string NichtErschFlag = "NichtErschFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string GesprStattgefFlag = "GesprStattgefFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Intakegespraech = "DocumentID_Intakegespraech";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJIntakeTS = "KaQJIntakeTS";
}

/// <summary>
/// Type: Table
/// KA - Qualifizierung Jugend - Intake
/// </summary>

public static class KaQJIntakeGespraech{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJIntakeGespraech"; }
}


/// <summary>
/// Primärschlüssel der Tabelle KaQJIntakeGespraech
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJIntakeGespraechID = "KaQJIntakeGespraechID";

/// <summary>
/// Fremdschlüssel zur Tabelle KaQJIntake
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KaQJIntakeID = "KaQJIntakeID";

/// <summary>
/// Datum des Gesprächs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Präsenz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaQjIntakePraesenzCode = "KaQjIntakePraesenzCode";

/// <summary>
/// Entscheid
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaQjIntakeEntscheidCode = "KaQjIntakeEntscheidCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJIntakeGespraechTS = "KaQJIntakeGespraechTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJProzess{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJProzess"; }
}


/// <summary>
/// Primärschlüssel für KaQJProzess Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJProzessID = "KaQJProzessID";

/// <summary>
/// Fremdschlüssel (FK_KaQJProzess_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KompetenzDokID = "KompetenzDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZwischenzeugnisDokID = "ZwischenzeugnisDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LebenslaufDokID = "LebenslaufDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StandortbestDokID = "StandortbestDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgrammBildungDokID = "ProgrammBildungDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeilageSEMODokID = "BeilageSEMODokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ProgEnde = "ProgEnde";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeraterID = "BeraterID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FallfuehrungID = "FallfuehrungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AndereStellen = "AndereStellen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgEndeGrund = "ProgEndeGrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgEndeCode = "ProgEndeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AbbruchCode = "AbbruchCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TermineStaoDokID = "TermineStaoDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJProzessTS = "KaQJProzessTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZAssessment{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJPZAssessment"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJPZAssessmentID = "KaQJPZAssessmentID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAssessment = "DatumAssessment";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AufgA = "AufgA";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AufgB = "AufgB";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AufgC = "AufgC";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AufgD = "AufgD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KandDokIn = "KandDokIn";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ProjGefaehrFlag = "ProjGefaehrFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ProjGefaehrGrund = "ProjGefaehrGrund";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string NichtAufgFlag = "NichtAufgFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string NichtAufgGrund = "NichtAufgGrund";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJPZAssessmentTS = "KaQJPZAssessmentTS";
}

/// <summary>
/// Type: Table
/// KaQJPZBericht
/// </summary>

public static class KaQJPZBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJPZBericht"; }
}


/// <summary>
/// Primärschlüssel für KaQJPZBericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJPZBerichtID = "KaQJPZBerichtID";

/// <summary>
/// Fremdschlüssel (FK_KaQJPZBericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Datum des Berichts
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// BerichtTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaQJPZBerichtTypCode = "KaQJPZBerichtTypCode";

/// <summary>
/// Referenz zum Document
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJPZBerichtTS = "KaQJPZBerichtTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZSchlussbericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJPZSchlussbericht"; }
}


/// <summary>
/// Primärschlüssel für KaQJPZSchlussbericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJPZSchlussberichtID = "KaQJPZSchlussberichtID";

/// <summary>
/// Fremdschlüssel (FK_KaQJPZSchlussbericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AQualitaetCode = "AQualitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ATempoCode = "ATempoCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AOrganisationCode = "AOrganisationCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LernfaehigkeitCode = "LernfaehigkeitCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LandesspracheCode = "LandesspracheCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SelbstaendigCode = "SelbstaendigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuverlaessigCode = "ZuverlaessigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PuenktlichCode = "PuenktlichCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusdauerCode = "AusdauerCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrdnungCode = "OrdnungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SorgfaltCode = "SorgfaltCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuftretenCode = "AuftretenCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KommunikationCode = "KommunikationCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TeamfaehigCode = "TeamfaehigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KritikfaehigCode = "KritikfaehigCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FlexibilitaetCode = "FlexibilitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MotivationCode = "MotivationCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErscheinungCode = "ErscheinungCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DeutschFlag = "DeutschFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string FranzFlag = "FranzFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemKompetenz = "BemKompetenz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemBildung = "BemBildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemZielvereinbarung = "BemZielvereinbarung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemAbsenzen = "BemAbsenzen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemEmpfehlung = "BemEmpfehlung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string EingVermittelbarFlag = "EingVermittelbarFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string EingVermittelbar = "EingVermittelbar";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SchlussberichtDokID = "SchlussberichtDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BeurteilungDat = "BeurteilungDat";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJPZSchlussberichtTS = "KaQJPZSchlussberichtTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJPZZielvereinbarung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJPZZielvereinbarung"; }
}


/// <summary>
/// Primärschlüssel für KaQJPZZielvereinbarung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJPZZielvereinbarungID = "KaQJPZZielvereinbarungID";

/// <summary>
/// Fremdschlüssel (FK_KaQJPZZielvereinbarung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZielDatum = "ZielDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VereinbartesZiel = "VereinbartesZiel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ErreichenBis = "ErreichenBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string KriterienPruefen = "KriterienPruefen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BeurteilungID = "BeurteilungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBeurteilung = "DatumBeurteilung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZielvereinbarungDokID = "ZielvereinbarungDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJPZZielvereinbarungTS = "KaQJPZZielvereinbarungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaQJVereinbarung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaQJVereinbarung"; }
}


/// <summary>
/// Primärschlüssel für KaQJVereinbarung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaQJVereinbarungID = "KaQJVereinbarungID";

/// <summary>
/// Fremdschlüssel (FK_KaQJVereinbarung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Vereinbarung = "Vereinbarung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltAm = "ErstelltAm";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DauerCode = "DauerCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Erfuellt = "Erfuellt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string GrundZiel = "GrundZiel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Abmachungen = "Abmachungen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VereinbarungDokID = "VereinbarungDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaQJVereinbarungTS = "KaQJVereinbarungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaSequenzen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaSequenzen"; }
}


/// <summary>
/// Primärschlüssel für KaSequenzen Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaSequenzenID = "KaSequenzenID";

/// <summary>
/// Fremdschlüssel (FK_KaSequenzen_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SequenzCode = "SequenzCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PraesenzCode = "PraesenzCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaSequenzenTS = "KaSequenzenTS";
}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Transfer - Prozess
/// </summary>

public static class KaTransfer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaTransfer"; }
}


/// <summary>
/// Primärschlüssel für KaTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaTransferID = "KaTransferID";

/// <summary>
/// Fremdschlüssel (FK_KaQEEPQ_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Flag für die Sichtbarkeit für SD
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Datum des Telefons des Erstkontakts (Prozessübersicht)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TelErstkontaktDat = "TelErstkontaktDat";

/// <summary>
/// ID des Dokuments für die Rückmeldung RAV (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RueckmeldungRAVDokID = "RueckmeldungRAVDokID";

/// <summary>
/// Datum VG (Prozessübersicht)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVG = "DatumVG";

/// <summary>
/// ID des Dokuments für die Situationserfassung VG (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SituationserfassungVGDokID = "SituationserfassungVGDokID";

/// <summary>
/// ID des Dokuments für den Entwicklungsverlauf (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EntwicklungsverlaufDokID = "EntwicklungsverlaufDokID";

/// <summary>
/// ID des Dokuments für das Personalblatt (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PersonalblattDokID = "PersonalblattDokID";

/// <summary>
/// ID des Dokuments für das Faehigkeitsprofil (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaehigkeitsprofilDokID = "FaehigkeitsprofilDokID";

/// <summary>
/// ID des ersten Dokuments für die Arbeitsproben (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitsprobenDokID = "ArbeitsprobenDokID";

/// <summary>
/// ID des zweiten Dokuments für den Schlussbericht (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SchlussberichtDokID = "SchlussberichtDokID";

/// <summary>
/// ID des Dokuments für die Teilnahmebestätigung (Prozessübersicht)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TeilnahmebestaetigungDokID = "TeilnahmebestaetigungDokID";

/// <summary>
/// Text für allgemeine Zielsetzungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AllgZiele = "AllgZiele";

/// <summary>
/// Dokument-ID für die allgemeine Zielsetzungen
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AllgZieleDokID = "AllgZieleDokID";

/// <summary>
/// Text für die Bewerbungsstrategie
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bewerbungsstrategie = "Bewerbungsstrategie";

/// <summary>
/// Erstes Datum für die mündliche Aufforderung (Interventionen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungDat1 = "MuendAufforderungDat1";

/// <summary>
/// Zweites Datum für die mündliche Aufforderung (Interventionen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungDat2 = "MuendAufforderungDat2";

/// <summary>
/// Erste Bemerkung für das Feld der mündlichen Aufforderung (Interventionen)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungBem1 = "MuendAufforderungBem1";

/// <summary>
/// Zweite Bemerkung für das Feld der mündlichen Aufforderung (Interventionen)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungBem2 = "MuendAufforderungBem2";

/// <summary>
/// ID des ersten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung1DokID = "Aufforderung1DokID";

/// <summary>
/// ID des zweiten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung2DokID = "Aufforderung2DokID";

/// <summary>
/// ID des dritten Dokuments für die Aufforderung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Aufforderung3DokID = "Aufforderung3DokID";

/// <summary>
/// ID des ersten Dokuments für die Vereinbarung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Vereinbarung1DokID = "Vereinbarung1DokID";

/// <summary>
/// ID des zweiten Dokuments für die Vereinbarung (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Vereinbarung2DokID = "Vereinbarung2DokID";

/// <summary>
/// ID des  Dokuments für den Regelverstoss (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RegelverstossDokID = "RegelverstossDokID";

/// <summary>
/// ID des  Dokuments fürs Nichterscheinen (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NichterscheinenDokID = "NichterscheinenDokID";

/// <summary>
/// ID des  Dokuments für den Programmabbruch (Interventionen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProgrammabbruchDokID = "ProgrammabbruchDokID";

/// <summary>
/// Austrittsdatum (Austritt)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDat = "AustrittDat";

/// <summary>
/// Austrittsgrund (Austritt)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittGrund = "AustrittGrund";

/// <summary>
/// Austrittscode (Austritt)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCode = "AustrittCode";

/// <summary>
/// Bemerkung für den Austritt (Austritt)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AustrittBem = "AustrittBem";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaTransferTS = "KaTransferTS";
}

/// <summary>
/// Type: Table
/// Enthält die Daten für KA - Transfer - Prozess - Zielvereinbarung
/// </summary>

public static class KaTransferZielvereinb{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaTransferZielvereinb"; }
}


/// <summary>
/// Primärschlüssel für KaTransferZielvereinb Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaTransferZielvereinbID = "KaTransferZielvereinbID";

/// <summary>
/// Fremdschlüssel (FK_KaTransferZielvereinb_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FeinzielDat = "FeinzielDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Feinziel = "Feinziel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErreichenBis = "ErreichenBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ProzessAuftrag = "ProzessAuftrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ergebnis = "Ergebnis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaTransferZielvereinbTS = "KaTransferZielvereinbTS";
}

/// <summary>
/// Type: Table
/// Tabelle für Maske KA Allgemein - Verlauf
/// </summary>

public static class KaVerlauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVerlauf"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVerlaufID = "KaVerlaufID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungBIBIP_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAllgemKontaktartCode = "KaAllgemKontaktartCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktperson = "Kontaktperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KaAllgemThemaCodes = "KaAllgemThemaCodes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltRTF = "InhaltRTF";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVerlaufTS = "KaVerlaufTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungBIBIP{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungBIBIP"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungBIBIP Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungBIBIPID = "KaVermittlungBIBIPID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungBIBIP_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// LOV KaVermittlungBiBIPSiAnmeldung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungCode = "AnmeldungCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Priorisiert = "Priorisiert";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuweiserID = "ZuweiserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DossierAnCoach = "DossierAnCoach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DossierInaktiv = "DossierInaktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Schlussbericht = "DocumentID_Schlussbericht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string WechselKAIntern = "WechselKAIntern";

/// <summary>
/// LOV KaVermittlungGrundWechselKaIntern
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WechselKAInternGrundCode = "WechselKAInternGrundCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DossierRetourAnSD = "DossierRetourAnSD";

/// <summary>
/// LOV KaVermittlungDossierRetourAnSDGrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DossierRetourAnSDGrundCode = "DossierRetourAnSDGrundCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungBIBIPTS = "KaVermittlungBIBIPTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungEinsatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungEinsatz"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungEinsatz Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungEinsatzID = "KaVermittlungEinsatzID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungEinsatz_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaVermittlungVorschlagID = "KaVermittlungVorschlagID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lehrvertrag = "Lehrvertrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVon = "EinsatzVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzBis = "EinsatzBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string Unbefristet = "Unbefristet";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string Verlaengerung = "Verlaengerung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Arbeitspensum = "Arbeitspensum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitspensumErgaenzungen = "ArbeitspensumErgaenzungen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Leistungsfaehigkeit = "Leistungsfaehigkeit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVereinbarungDokID = "EinsatzVereinbarungDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVereinbarungErhalten = "EinsatzVereinbarungErhalten";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string EinsatzVereinbarungUnterschrieben = "EinsatzVereinbarungUnterschrieben";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzEinladungDokID = "EinsatzEinladungDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZDatumVon = "BIEAZDatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZDatumBis = "BIEAZDatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BIEAZVerlaengert = "BIEAZVerlaengert";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZVereinbarungDokID = "BIEAZVereinbarungDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BIEAZVereinbarungUnterschrieben = "BIEAZVereinbarungUnterschrieben";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZBemerkung = "BIEAZBemerkung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIBruttolohn = "BIBruttolohn";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIFinanzierungsgradEAZ = "BIFinanzierungsgradEAZ";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIBeteilungEAZ = "BIBeteilungEAZ";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIPZwischenbericht1Datum = "BIPZwischenbericht1Datum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BIPZwischenbericht1Erhalten = "BIPZwischenbericht1Erhalten";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIPZwischenbericht2Datum = "BIPZwischenbericht2Datum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string BIPZwischenbericht2Erhalten = "BIPZwischenbericht2Erhalten";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InizioEinsatzAbbruchDurchCode = "InizioEinsatzAbbruchDurchCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InizioEinsatzAbbruch = "InizioEinsatzAbbruch";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Abschluss = "Abschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InizioAbschlussGrund = "InizioAbschlussGrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InizioLoesung = "InizioLoesung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InizioAnschlussloesungCode = "InizioAnschlussloesungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIAbschlussGrundCode = "BIAbschlussGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIPAbschlussGrundCode = "BIPAbschlussGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIBIPSIAbschlussDurchCode = "BIBIPSIAbschlussDurchCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SIAbschlussGrundCode = "SIAbschlussGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Attest = "Attest";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzBemerkungen = "EinsatzBemerkungen";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungEinsatzTS = "KaVermittlungEinsatzTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungProfil{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungProfil"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungProfil Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungProfilID = "KaVermittlungProfilID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungProfil_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AeussereErscheinungCode = "AeussereErscheinungCode";

/// <summary>
/// AktuelleTaetigkeit
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string AktuelleTaetigkeit = "AktuelleTaetigkeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitsgebietBemerkungen = "ArbeitsgebietBemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitszeitenCodes = "ArbeitszeitenCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusbildungCode = "AusbildungCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusbildungstypWunschCode = "AusbildungstypWunschCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BesondereFaehigkeiten = "BesondereFaehigkeiten";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BesondereWuensche = "BesondereWuensche";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BrancheCodes = "BrancheCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DeutschMuendlichCode = "DeutschMuendlichCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DeutschSchriftlichCode = "DeutschSchriftlichCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzbereichCodes = "EinsatzbereichCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einsatzpensum = "Einsatzpensum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzpensumBis = "EinsatzpensumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzpensumVon = "EinsatzpensumVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FuehrerausweisCode = "FuehrerausweisCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FuehrerausweisKategorieCode = "FuehrerausweisKategorieCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GespraechDatum = "GespraechDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitBemerkung = "GesundheitBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitCode = "GesundheitCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitEinschraenkungen = "GesundheitEinschraenkungen";

/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte GesundheitKoerperlichCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitKoerperlichBewertung = "GesundheitKoerperlichBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitKoerperlichCode = "GesundheitKoerperlichCode";

/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte GesundheitPsychischCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitPsychischBewertung = "GesundheitPsychischBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitPsychischCode = "GesundheitPsychischCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string InfoAnSDErfolgt = "InfoAnSDErfolgt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InizioErstgesprVerlaufDokID = "InizioErstgesprVerlaufDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Interview = "Interview";

/// <summary>
/// zum wissen ob den Klient für andere berufliche, gesundheitliche oder soziale Integrationsmassnahmen- und/oder Abklärungen angemeldet ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstAngemeldet = "IstAngemeldet";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebCodes = "KaBetriebCodes";

/// <summary>
/// KaLaufendeBetreibungenCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaLaufendeBetreibungenCode = "KaLaufendeBetreibungenCode";

/// <summary>
/// KaLohnabtretungSDCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaLohnabtretungSDCode = "KaLohnabtretungSDCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaNachtarbeitCode = "KaNachtarbeitCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KannSichAmTelVerstaendigen = "KannSichAmTelVerstaendigen";

/// <summary>
/// KaSchweizerdeutschCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaSchweizerdeutschCode = "KaSchweizerdeutschCode";

/// <summary>
/// KaVerfuegbarkeitCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaVerfuegbarkeitCode = "KaVerfuegbarkeitCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kinderbetreuung = "Kinderbetreuung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LehrberufCode = "LehrberufCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Lehrberuf2Code = "Lehrberuf2Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Lehrberuf3Code = "Lehrberuf3Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LehrberufWunschCode = "LehrberufWunschCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte MotivationBIBIPSICode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MotivationBIBIPSIBewertung = "MotivationBIBIPSIBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MotivationBIBIPSICode = "MotivationBIBIPSICode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MotivationInizioCode = "MotivationInizioCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PCKenntnisseCode = "PCKenntnisseCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string QJExtern = "QJExtern";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SIGespraech = "SIGespraech";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SIGespraechfuehrerinID = "SIGespraechfuehrerinID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Sprachstandermittlung = "Sprachstandermittlung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SuchtartCode = "SuchtartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SuchtCode = "SuchtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TherpieCode = "TherpieCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string UnterstuetzungInizioCodes = "UnterstuetzungInizioCodes";

/// <summary>
/// EinschraenkungMO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungMO = "EinschraenkungMO";

/// <summary>
/// EinschraenkungDI
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungDI = "EinschraenkungDI";

/// <summary>
/// EinschraenkungMI
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungMI = "EinschraenkungMI";

/// <summary>
/// EinschraenkungDO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungDO = "EinschraenkungDO";

/// <summary>
/// EinschraenkungFR
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungFR = "EinschraenkungFR";

/// <summary>
/// EinschraenkungSA
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungSA = "EinschraenkungSA";

/// <summary>
/// EinschraenkungSO
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungSO = "EinschraenkungSO";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitBemerkung = "VermittelbarkeitBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitBIBIPCode = "VermittelbarkeitBIBIPCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitSICode = "VermittelbarkeitSICode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VermittlungsgespraechDokID = "VermittlungsgespraechDokID";

/// <summary>
/// Bewertungswert zwichen 1 und 10 für die Spalte ZuverlaessigkeitCode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuverlaessigkeitBewertung = "ZuverlaessigkeitBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuverlaessigkeitCode = "ZuverlaessigkeitCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungProfilTS = "KaVermittlungProfilTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungSI{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungSI"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungSI Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungSIID = "KaVermittlungSIID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungSI_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf BaInstitutionKontakt wenn es positiv ist und auf XUser wenn es negativ ist.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuweiserID = "ZuweiserID";

/// <summary>
/// Code der LOV "KaVermittlungBiBIPSiAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnmeldungCode = "AnmeldungCode";

/// <summary>
/// Flag, sagt aus, ob STES vermittelt werden konnte.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Vermittelt = "Vermittelt";

/// <summary>
/// Beschreibt die Art der Vermittlung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaSiKategorieCode = "KaSiKategorieCode";

/// <summary>
/// Dokument Schlussbericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Schlussbericht = "DocumentID_Schlussbericht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string WechselKAIntern = "WechselKAIntern";

/// <summary>
/// Code der LOV "KaVermittlungGrundWechselKaIntern"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WechselKAInternGrundCode = "WechselKAInternGrundCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DossierRetourAnSD = "DossierRetourAnSD";

/// <summary>
/// Code der LOV "KaVermittlungDossierRetourAnSDGrund"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DossierRetourAnSDGrundCode = "DossierRetourAnSDGrundCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungSITS = "KaVermittlungSITS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungSIZwischenbericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungSIZwischenbericht"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungSIZwischenbericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungSIZwischenberichtID = "KaVermittlungSIZwischenberichtID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungSIZwischenbericht_KaVermittlungVorschlag) => KaVermittlungVorschlag.KaVermittlungVorschlagID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaVermittlungVorschlagID = "KaVermittlungVorschlagID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Anfrage = "Anfrage";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mahnung = "Mahnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eingang = "Eingang";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InterventionCode = "InterventionCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VorgeseheneMassnahmenCode = "VorgeseheneMassnahmenCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZwischenberichtSD = "ZwischenberichtSD";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungSIZwischenberichtTS = "KaVermittlungSIZwischenberichtTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaVermittlungVorschlag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaVermittlungVorschlag"; }
}


/// <summary>
/// Primärschlüssel für KaVermittlungVorschlag Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaVermittlungVorschlagID = "KaVermittlungVorschlagID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungVorschlag_KaEinsatzplatz) => KaEinsatzplatz.KaEinsatzplatzID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// Fremdschlüssel (FK_KaVermittlungVorschlag_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Vorschlag = "Vorschlag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DossierGesendet = "DossierGesendet";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Vorstellungsgespraech = "Vorstellungsgespraech";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SchnuppernVon = "SchnuppernVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SchnuppernBis = "SchnuppernBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagResultatDatum = "VorschlagResultatDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagResultat = "VorschlagResultat";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagErfasst = "VorschlagErfasst";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagAblehnungsgrundBICode = "VorschlagAblehnungsgrundBICode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagAblehnungsgrundBIPCode = "VorschlagAblehnungsgrundBIPCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagAblehnungsgrundSICode = "VorschlagAblehnungsgrundSICode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string VorschlagBemerkungen = "VorschlagBemerkungen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaVermittlungVorschlagTS = "KaVermittlungVorschlagTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigrationKA = "MigrationKA";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KaZuteilFachbereich{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KaZuteilFachbereich"; }
}


/// <summary>
/// Primärschlüssel für KaZuteilFachbereich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KaZuteilFachbereichID = "KaZuteilFachbereichID";

/// <summary>
/// Fremdschlüssel (FK_KaZuteilFachbereich_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuteilungVon = "ZuteilungVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuteilungBis = "ZuteilungBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FachbereichID = "FachbereichID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NiveauCode = "NiveauCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKaID = "ZustaendigKaID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FachleitungID = "FachleitungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuteilDokID = "ZuteilDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KaZuteilFachbereichTS = "KaZuteilFachbereichTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBelegKreis{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbBelegKreis"; }
}


/// <summary>
/// Primärschlüssel für KbBelegKreis Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbBelegKreisID = "KbBelegKreisID";

/// <summary>
/// Fremdschlüssel (FK_KbBelegKreis_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBelegKreisCode = "KbBelegKreisCode";

/// <summary>
/// Fremdschlüssel (FK_KbBelegKreis_KbKonto) => KbKonto.KontoNr
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NaechsteBelegNr = "NaechsteBelegNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BelegNrVon = "BelegNrVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BelegNrBis = "BelegNrBis";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbBelegKreisTS = "KbBelegKreisTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbBuchung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_BaZahlungsweg) => BaZahlungsweg.BaZahlungswegID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbAuszahlungsArtCode = "KbAuszahlungsArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FlTypSourceCode = "FlTypSourceCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FlBelegStatusCode = "FlBelegStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IdSource = "IdSource";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_UserID_Kasse) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BarbelegUserID = "BarbelegUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string ErstelltDatum = "ErstelltDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TransferDatum = "TransferDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BelegDatum = "BelegDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BarbelegDatum = "BarbelegDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Extern = "Extern";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AggregateInfo = "AggregateInfo";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string FibuFehlermeldung = "FibuFehlermeldung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Remark = "Remark";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Old_SourceID = "Old_SourceID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbBuchungTS = "KbBuchungTS";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBuchungTypCode = "KbBuchungTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbBuchungStatusCode = "KbBuchungStatusCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzahlungsscheinCode = "EinzahlungsscheinCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBAN = "IBAN";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 6]
/// [AllowNulls: True]
/// </summary>
public const string BankBCN = "BankBCN";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>
public const string BankName = "BankName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankStrasse = "BankStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BankPLZ = "BankPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// [AllowNulls: True]
/// </summary>
public const string BankOrt = "BankOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile1 = "MitteilungZeile1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile2 = "MitteilungZeile2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile3 = "MitteilungZeile3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string MitteilungZeile4 = "MitteilungZeile4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtName = "BeguenstigtName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtName2 = "BeguenstigtName2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtStrasse = "BeguenstigtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtHausNr = "BeguenstigtHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtPostfach = "BeguenstigtPostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtPLZ = "BeguenstigtPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtOrt = "BeguenstigtOrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BeguenstigtLandCode = "BeguenstigtLandCode";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbZahlungseingang) => KbZahlungseingang.KbZahlungseingangID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungseingangID = "KbZahlungseingangID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ErstelltUserID = "ErstelltUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string MutiertUserID = "MutiertUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MutiertDatum = "MutiertDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string Schuldner_BaInstitutionID = "Schuldner_BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string Schuldner_BaPersonID = "Schuldner_BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbBuchungStorniert) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string StorniertKbBuchungID = "StorniertKbBuchungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_IkPosition) => IkPosition.IkPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkPositionID = "IkPositionID";

/// <summary>
/// Fremdschlüssel (FK_KbBuchung_KbBuchungNeuBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string NeubuchungVonKbBuchungID = "NeubuchungVonKbBuchungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbBelegKreisID = "KbBelegKreisID";

/// <summary>
/// Fremdschlüssel auf KbZahlungskonto. Ist für die Gesuchverwaltung verwendet um einen Zahlungskonto auf der Buchung zu definieren
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";

/// <summary>
/// Fremdschlüssel auf IkForderungBgKostenartHist. Ist fürs Inkasso verwendet im Belegimport und Kontoauszug
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string IkForderungBgKostenartHistID = "IkForderungBgKostenartHistID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbBuchungKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbBuchungKostenart"; }
}


/// <summary>
/// Primärschlüssel für KbBuchungKostenart Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";

/// <summary>
/// Fremdschlüssel (FK_KbKostenstelle_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NrmKontoCode = "NrmKontoCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbBuchungKostenartTS = "KbBuchungKostenartTS";

/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PositionImBeleg = "PositionImBeleg";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbForderungArtCode = "KbForderungArtCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeVon = "VerwPeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeBis = "VerwPeriodeBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Weiterverrechenbar = "Weiterverrechenbar";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Quoting = "Quoting";

/// <summary>
/// Fremdschlüssel (FK_KbBuchungKostenart_GvAuszahlungPositionID) => GvAuszahlungPosition.GvAuszahlungPositionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string GvAuszahlungPositionID = "GvAuszahlungPositionID";
}

/// <summary>
/// Type: Table
/// Tabelle um die Verbindung zwischen den Forderungen und Auszahlungen zu haben.
/// </summary>

public static class KbForderungAuszahlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbForderungAuszahlung"; }
}


/// <summary>
/// Primärschlüssel der Tabelle KbForderungAuszahlung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbForderungAuszahlungID = "KbForderungAuszahlungID";

/// <summary>
/// Fremdschlüssel der Auszahlungsbuchung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungID_Auszahlung = "KbBuchungID_Auszahlung";

/// <summary>
/// Fremdschlüssel der Forderungsbuchung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungID_Forderung = "KbBuchungID_Forderung";

/// <summary>
/// Fremdschlüssel des OpAusgleiches
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbOpAusgleichID = "KbOpAusgleichID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbForderungAuszahlungTS = "KbForderungAuszahlungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbFreieBelegNummer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbFreieBelegNummer"; }
}


/// <summary>
/// Primärschlüssel für KbFreieBelegNummer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbBelegKreisID = "KbBelegKreisID";

/// <summary>
/// Primärschlüssel für KbFreieBelegNummer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbFreieBelegNummerTS = "KbFreieBelegNummerTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbKonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbKonto"; }
}


/// <summary>
/// Primärschlüssel für KbKonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbKontoID = "KbKontoID";

/// <summary>
/// Fremdschlüssel (FK_KbKonto_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string GruppeKontoID = "GruppeKontoID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Kontogruppe = "Kontogruppe";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbKontoklasseCode = "KbKontoklasseCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KbKontoartCodes = "KbKontoartCodes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string KontoName = "KontoName";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: (0)]
/// </summary>
public const string Vorsaldo = "Vorsaldo";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SaldoGruppeName = "SaldoGruppeName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Saldovortrag = "Saldovortrag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbKontoTS = "KbKontoTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Fremdschlüssel (FK_KbKonto_KbZahlungskonto) => KbZahlungskonto.KbZahlungskontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbKostenstelle{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbKostenstelle"; }
}


/// <summary>
/// Primärschlüssel für KbKostenstelle Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Nr = "Nr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Vorsaldo aus einem Fremdsystem
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Vorsaldo = "Vorsaldo";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbKostenstelleTS = "KbKostenstelleTS";
}

/// <summary>
/// Type: Table
/// Um in KiSS4 die alten KiSS3 Kostenstellen anzuzeigen wurde in diese Hilfstabelle migriert.    Muss mit Implementation der Schnittstellen überarbeitet werden!
/// </summary>

public static class KbKostenstelle_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbKostenstelle_BaPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbKostenstelleBaPersonID = "KbKostenstelleBaPersonID";

/// <summary>
/// Fremdschlüssel (FK_BaPersonKbKostenstelle_BaPersonID) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_BaPersonKbKostenstelle_KbKostenstelleID) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbKostenstelle_BaPersonTS = "KbKostenstelle_BaPersonTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbMandant{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbMandant"; }
}


/// <summary>
/// Primärschlüssel für KbMandant Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbMandantID = "KbMandantID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MandantTID = "MandantTID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbMandantTS = "KbMandantTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbOpAusgleich{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbOpAusgleich"; }
}


/// <summary>
/// Primärschlüssel für KbOpAusgleich Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbOpAusgleichID = "KbOpAusgleichID";

/// <summary>
/// Fremdschlüssel (FK_KbOpAusgleich_KbBuchung) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OpBuchungID = "OpBuchungID";

/// <summary>
/// Fremdschlüssel (FK_KbOpAusgleich_KbBuchung1) => KbBuchung.KbBuchungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string AusgleichBuchungID = "AusgleichBuchungID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbOpAusgleichTS = "KbOpAusgleichTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string _mig_AiZahlungVsForderungID = "_mig_AiZahlungVsForderungID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbPeriode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbPeriode"; }
}


/// <summary>
/// Primärschlüssel für KbPeriode Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// Fremdschlüssel (FK_KbPeriode_KbMandant) => KbMandant.KbMandantID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbMandantID = "KbMandantID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string PeriodeVon = "PeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string PeriodeBis = "PeriodeBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PeriodeStatusCode = "PeriodeStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtBis = "VerbuchtBis";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbPeriodeTS = "KbPeriodeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbPeriode_User{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbPeriode_User"; }
}


/// <summary>
/// Primärschlüssel für KbPeriode_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// Primärschlüssel für KbPeriode_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbPeriode_UserTS = "KbPeriode_UserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbTransfer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbTransfer"; }
}


/// <summary>
/// Primärschlüssel für KbTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// Primärschlüssel für KbTransfer Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungslaufID = "KbZahlungslaufID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: (1)]
/// </summary>
public const string KbTransferStatusCode = "KbTransferStatusCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbTransferTS = "KbTransferTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVEinzelposten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbWVEinzelposten"; }
}


/// <summary>
/// Primärschlüssel für KbWVEinzelposten Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbWVEinzelpostenID = "KbWVEinzelpostenID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbWVEinzelposten) => KbWVEinzelposten.KbWVEinzelpostenID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string StorniertKbWVEinzelpostenID = "StorniertKbWVEinzelpostenID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbWVLauf) => KbWVLauf.KbWVLaufID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbWVLaufID = "KbWVLaufID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BaWVCode) => BaWVCode.BaWVCodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaWVCodeID = "BaWVCodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaWVCode = "BaWVCode";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbBuchungKostenart) => KbBuchungKostenart.KbBuchungKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_KbKostenstelle) => KbKostenstelle.KbKostenstelleID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbKostenstelleID = "KbKostenstelleID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelposten_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SplittingDurchWVLaufDatumBis = "SplittingDurchWVLaufDatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbWVEinzelpostenStatusCode = "KbWVEinzelpostenStatusCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Fakturiert = "Fakturiert";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Ungueltig = "Ungueltig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string HeimatkantonNr = "HeimatkantonNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WohnKantonNr = "WohnKantonNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KantonKuerzel = "KantonKuerzel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Auslandschweizer = "Auslandschweizer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbWVEinzelpositionTS = "KbWVEinzelpositionTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVEinzelpostenFehler{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbWVEinzelpostenFehler"; }
}


/// <summary>
/// Primärschlüssel für KbWVEinzelpostenFehler Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbWVEinzelpostenFehlerID = "KbWVEinzelpostenFehlerID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_KbWVLauf) => KbWVLauf.KbWVLaufID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbWVLaufID = "KbWVLaufID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_KbBuchungKostenart) => KbBuchungKostenart.KbBuchungKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";

/// <summary>
/// Fremdschlüssel (FK_KbWVEinzelpostenFehler_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// </summary>
public const string WVFehlermeldung = "WVFehlermeldung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbWVEinzelpostenFehlerTS = "KbWVEinzelpostenFehlerTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbWVLauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbWVLauf"; }
}


/// <summary>
/// Primärschlüssel für KbWVLauf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbWVLaufID = "KbWVLaufID";

/// <summary>
/// Fremdschlüssel (FK_KbWVLauf_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_KbWVLauf_KbPeriode) => KbPeriode.KbPeriodeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbPeriodeID = "KbPeriodeID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumBisWVLauf = "DatumBisWVLauf";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string StartDatum = "StartDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EndDatum = "EndDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Testlauf = "Testlauf";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbWVLaufTS = "KbWVLaufTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungseingang{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbZahlungseingang"; }
}


/// <summary>
/// Primärschlüssel für KbZahlungseingang Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbZahlungseingangID = "KbZahlungseingangID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_BaInstitution) => BaInstitution.BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Debitor = "Debitor";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Mitteilung1 = "Mitteilung1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Mitteilung2 = "Mitteilung2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Mitteilung3 = "Mitteilung3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Mitteilung4 = "Mitteilung4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Ausgeglichen = "Ausgeglichen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_ZugeteiltXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ZugeteiltUserID = "ZugeteiltUserID";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_ErstelltXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ErstelltUserID = "ErstelltUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltDatum = "ErstelltDatum";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungseingang_MutiertXUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string MutiertUserID = "MutiertUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MutiertDatum = "MutiertDatum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbZahlungseingangTS = "KbZahlungseingangTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungskonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbZahlungskonto"; }
}


/// <summary>
/// Primärschlüssel für KbZahlungskonto Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string VertragNr = "VertragNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// Fremdschlüssel (FK_KbDTAZugang_BaBank) => BaBank.BaBankID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbFinanzInstitutCode = "KbFinanzInstitutCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbDTAZugangTS = "KbDTAZugangTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle für KbZahlungskonto und XOrgUnit
/// </summary>

public static class KbZahlungskonto_XOrgUnit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbZahlungskonto_XOrgUnit"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbZahlungskonto_XOrgUnitID = "KbZahlungskonto_XOrgUnitID";

/// <summary>
/// Fremdschlüssel zu KbZahlungskonto Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";

/// <summary>
/// Fremdschlüssel zu XOrgUnit Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbZahlungskonto_XOrgUnitTS = "KbZahlungskonto_XOrgUnitTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungslauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbZahlungslauf"; }
}


/// <summary>
/// Primärschlüssel für KbZahlungslauf Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbZahlungslaufID = "KbZahlungslaufID";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungslauf_KbZahlungskonto) => KbZahlungskonto.KbZahlungskontoID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KbZahlungskontoID = "KbZahlungskontoID";

/// <summary>
/// Fremdschlüssel (FK_KbZahlungslauf_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 512]
/// </summary>
public const string FilePath = "FilePath";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string TotalBetrag = "TotalBetrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TransferDatum = "TransferDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Transferiert = "Transferiert";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Zahlungsdaten = "Zahlungsdaten";

/// <summary>
/// Das Fälligkeitsdatum des Zahlungseingangs
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FaelligkeitDatum = "FaelligkeitDatum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbZahlungslaufTS = "KbZahlungslaufTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class KbZahlungslaufValuta{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KbZahlungslaufValuta"; }
}


/// <summary>
/// Primärschlüssel für KbZahlungslaufValuta Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KbZahlungslaufValutaID = "KbZahlungslaufValutaID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatMonatlich = "DatMonatlich";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatTeil1 = "DatTeil1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatTeil2 = "DatTeil2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Dat14Tage1 = "Dat14Tage1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Dat14Tage2 = "Dat14Tage2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Dat14Tage3 = "Dat14Tage3";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatWoche1 = "DatWoche1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatWoche2 = "DatWoche2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatWoche3 = "DatWoche3";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatWoche4 = "DatWoche4";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatWoche5 = "DatWoche5";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KbZahlungslaufValutaTS = "KbZahlungslaufValutaTS";
}

/// <summary>
/// Type: Table
/// Kes ZGB Artikel
/// </summary>

public static class KesArtikel{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesArtikel"; }
}


/// <summary>
/// Primärschlüssel für KesArtikel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesArtikelID = "KesArtikelID";

/// <summary>
/// Kokes Code
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>
public const string CodeKokes = "CodeKokes";

/// <summary>
/// Artikel, z.B. 134.3 ZGB
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Artikel = "Artikel";

/// <summary>
/// Absatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Absatz = "Absatz";

/// <summary>
/// Ziffer
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ziffer = "Ziffer";

/// <summary>
/// Gesetz, z.B. ZGB oder aZGB
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Gesetz = "Gesetz";

/// <summary>
/// Artikel Bezeichnung, z.B.: Neuregelung elterliche Sorge bei geschiedenen Eltern - Zuteilung gemeinsame elterliche Sorge
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// Kurztext der Bezeichnung für die bessere Anzeige auf den Masken
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungKurz = "BezeichnungKurz";

/// <summary>
/// Der LOV KesMassnahmeTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesMassnahmeTypCode = "KesMassnahmeTypCode";

/// <summary>
/// Flag, ob der Artikel ein massnahmegebundenes Geschäft beschreibt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsMassnahmeGebunden = "IsMassnahmeGebunden";

/// <summary>
/// Datum ab wann ein Artikel für neue Massnahmen verwendet werden darf
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datum bis wann ein Artikel für neue Massnahmen verwendet werden darf
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesArtikelTS = "KesArtikelTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet Aufträge für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesAuftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesAuftrag"; }
}


/// <summary>
/// Primärschlüssel für KES-Aufträge
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesAuftragID = "KesAuftragID";

/// <summary>
/// Fremdschlüssel (FK_KesAuftrag_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Kindesschutz oder Erwachsenenschutz
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsKS = "IsKS";

/// <summary>
/// Datum des Auftrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAuftrag = "DatumAuftrag";

/// <summary>
/// Dokument des Auftrags
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Auftrag = "DocumentID_Auftrag";

/// <summary>
/// SAR, Fremdschlüssel (FK_KesAuftrag_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fristdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumFrist = "DatumFrist";

/// <summary>
/// Gefährdungsmelder aus LOV KesGefaehrdungsmeldungDurchES oder KesGefaehrdungsmeldungDurchKS
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesGefaehrdungsmeldungDurchCode = "KesGefaehrdungsmeldungDurchCode";

/// <summary>
/// AuftragDurchCode aus LOV KesAuftragDurch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAuftragDurchCode = "KesAuftragDurchCode";

/// <summary>
/// AuftragAbklärungsartCode aus LOV KesAuftragAbklaerungsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAuftragAbklaerungsartCode = "KesAuftragAbklaerungsartCode";

/// <summary>
/// Anlass dieses Auftrags
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Anlass = "Anlass";

/// <summary>
/// Auftragsbeschreibung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auftrag = "Auftrag";

/// <summary>
/// Abschlussdatum des Auftrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// AuftragsabschlussGrund aus LOV KesAuftragAbschlussgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAuftragAbschlussgrundCode = "KesAuftragAbschlussgrundCode";

/// <summary>
/// Dokument der Beschlussrückmeldung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_BeschlussRueckmeldung = "DocumentID_BeschlussRueckmeldung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesAuftragTS = "KesAuftragTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle von BaPerson und KesAuftrag
/// </summary>

public static class KesAuftrag_BaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesAuftrag_BaPerson"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesAuftrag_BaPersonID = "KesAuftrag_BaPersonID";

/// <summary>
/// Fremdschlüssel auf Tabelle BaPerson, Spalte BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel zur Tabelle FaDokumentAblage, Spalte KesAuftragID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesAuftragID = "KesAuftragID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesAuftrag_BaPersonTS = "KesAuftrag_BaPersonTS";
}

/// <summary>
/// Type: Table
/// KesBehorde
/// </summary>

public static class KesBehoerde{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesBehoerde"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesBehoerdeID = "KesBehoerdeID";

/// <summary>
/// KESB-ID
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string KESBID = "KESBID";

/// <summary>
/// Kanton
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// KESB-Name
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string KESBName = "KESBName";

/// <summary>
/// Ist Aktiv ?
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsActive = "IsActive";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesBehoerdeTS = "KesBehoerdeTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet Auftragsdokumente für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesDokument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesDokument"; }
}


/// <summary>
/// Primärschlüssel für KES-Auftragsdokumente
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesDokumentID = "KesDokumentID";

/// <summary>
/// Fremdschlüssel (FK_KesDokument_KesAuftrag) => KesAuftragID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KesAuftragID = "KesAuftragID";

/// <summary>
/// Fremdschlüssel (FK_KesDokument_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// VerfasserIn, Fremdschlüssel (FK_KesDokument_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// BaPersonID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// BaInstitutionID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// Stichwort
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// Resultat aus LOV KesDokumentResultat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesDokumentResultatCode = "KesDokumentResultatCode";

/// <summary>
/// Code aus LOV KesDokumentart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesDokumentArtCode = "KesDokumentArtCode";

/// <summary>
/// Dokument, Fremdschlüssel (FK_KesDokument_XDocument) => XDocumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Dokument = "XDocumentID_Dokument";

/// <summary>
/// Versand, Fremdschlüssel (FK_KesDokument_XDocument1) => XDocumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XDocumentID_Versand = "XDocumentID_Versand";

/// <summary>
/// LOV KesDokumentTyp
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesDokumentTypCode = "KesDokumentTypCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesDokumentTS = "KesDokumentTS";
}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Mandatsführende Person' welche der Massnahme angehängt ist
/// </summary>

public static class KesMandatsfuehrendePerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMandatsfuehrendePerson"; }
}


/// <summary>
/// Primärschlüssel KesMandatsfuehrendePerson
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMandatsfuehrendePersonID = "KesMandatsfuehrendePersonID";

/// <summary>
/// Fremdschlüssel zur Tabelle KesMassnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// Mandat von Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumMandatVon = "DatumMandatVon";

/// <summary>
/// Mandat bis Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumMandatBis = "DatumMandatBis";

/// <summary>
/// Dokument der Ernennungsurkunde
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Ernennungsurkunde = "DocumentID_Ernennungsurkunde";

/// <summary>
/// UserID der mandatsführenden Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// BaInstitutionID der mandatsführenden Fachperson
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Beistandsart der mandatsführenden Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesBeistandsartCode = "KesBeistandsartCode";

/// <summary>
/// Datum von SD vorgeschlagen am
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVorgeschlagenAm = "DatumVorgeschlagenAm";

/// <summary>
/// Datum Rechnungsführung durch SD vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumRechnungsfuehrungVon = "DatumRechnungsfuehrungVon";

/// <summary>
/// Datum Rechnungsführung durch SD bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumRechnungsfuehrungBis = "DatumRechnungsfuehrungBis";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMandatsfuehrendePersonTS = "KesMandatsfuehrendePersonTS";
}

/// <summary>
/// Type: Table
/// Kes Massnahme
/// </summary>

public static class KesMassnahme{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMassnahme"; }
}


/// <summary>
/// Primärschlüssel Kes Massnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// Fremdschlüssel (FK_KesMassnahme_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Kindesschutz oder Erwachsenenschutz
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsKS = "IsKS";

/// <summary>
/// Dokument Errichtungsbeschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Errichtungsbeschluss = "DocumentID_Errichtungsbeschluss";

/// <summary>
/// Dokument Aufhebungsbeschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Aufhebungsbeschluss = "DocumentID_Aufhebungsbeschluss";

/// <summary>
/// Massnahme Beginn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Massnahme Ende
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Liste von Aufgabenbereichen (LOV KesAufgabenbereichES)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KesAufgabenbereichCodes = "KesAufgabenbereichCodes";

/// <summary>
/// Liste von Indikationen (LOV KesIndikationES oder KesIndikationKS)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KesIndikationCodes = "KesIndikationCodes";

/// <summary>
/// Auftragstext
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auftragstext = "Auftragstext";

/// <summary>
/// Elterliche Sorge (LOV KesElterlicheSorgeObhut)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesElterlicheSorgeObhutCode_ElterlicheSorge = "KesElterlicheSorgeObhutCode_ElterlicheSorge";

/// <summary>
/// Obhut (LOV KesElterlicheSorgeObhut)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesElterlicheSorgeObhutCode_Obhut = "KesElterlicheSorgeObhutCode_Obhut";

/// <summary>
/// Datum ÜbernahmeVon
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVon_Datum = "UebernahmeVon_Datum";

/// <summary>
/// Ortschaft ÜbernahmeVon (zeigt auf BaPlz, ist aber kein Fremdschlüssel)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVon_OrtschaftCode = "UebernahmeVon_OrtschaftCode";

/// <summary>
/// PLZ ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVon_PLZ = "UebernahmeVon_PLZ";

/// <summary>
/// Ort ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVon_Ort = "UebernahmeVon_Ort";

/// <summary>
/// Kanton ÜbernahmeVon
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVon_Kanton = "UebernahmeVon_Kanton";

/// <summary>
/// KESB ÜbernahmeVon (Fremdschlüssel FK_KesMassnahme_UebernahmeVon_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UebernahmeVon_KesBehoerdeID = "UebernahmeVon_KesBehoerdeID";

/// <summary>
/// Datum AenderungVom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AenderungVom_Datum = "AenderungVom_Datum";

/// <summary>
/// Änderungsgrund (LOV KesAenderungsgrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAenderungsgrundCode = "KesAenderungsgrundCode";

/// <summary>
/// Datum ÜbertragungAn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungAn_Datum = "UebertragungAn_Datum";

/// <summary>
/// Ortschaft ÜbertragungAn (zeigt auf BaPlz, ist aber kein Fremdschlüssel)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungAn_OrtschaftCode = "UebertragungAn_OrtschaftCode";

/// <summary>
/// PLZ ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungAn_PLZ = "UebertragungAn_PLZ";

/// <summary>
/// Ort ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungAn_Ort = "UebertragungAn_Ort";

/// <summary>
/// Kanton ÜbertragungAn
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungAn_Kanton = "UebertragungAn_Kanton";

/// <summary>
/// KESB ÜbertragungAn (Fremdschlüssel FK_KesMassnahme_UebertragungAn_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UebertragungAn_KesBehoerdeID = "UebertragungAn_KesBehoerdeID";

/// <summary>
/// Aufhebungsgrund (LOV KesAufhebungsgrund)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAufhebungsgrundCode = "KesAufhebungsgrundCode";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// KOKES Zuständige Behörde (Fremdschlüssel FK_KesMassnahme_Zustaendig_KesBehoerdeID) => KesBehoerdeID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string Zustaendig_KesBehoerdeID = "Zustaendig_KesBehoerdeID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMassnahmeTS = "KesMassnahmeTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle von KesMassnahme und KesArtikel
/// </summary>

public static class KesMassnahme_KesArtikel{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMassnahme_KesArtikel"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMassnahme_KesArtikelID = "KesMassnahme_KesArtikelID";

/// <summary>
/// Fremdschlüssel auf Tabelle KesMassnahme, Spalte KesMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// Fremdschlüssel auf Tabelle KesArtikel, Spalte KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesArtikelID = "KesArtikelID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optmistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMassnahme_KesArtikelTS = "KesMassnahme_KesArtikelTS";
}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Auftrag', welche der Massnahme angehängt ist
/// </summary>

public static class KesMassnahmeAuftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMassnahmeAuftrag"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMassnahmeAuftragID = "KesMassnahmeAuftragID";

/// <summary>
/// Fremdschlüssel (FK_KesMassnahmeAuftrag_KesMassnahme) => KesMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// Dokument Beschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Beschluss = "DocumentID_Beschluss";

/// <summary>
/// Beschlussdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BeschlussVom = "BeschlussVom";

/// <summary>
/// Erledigungsdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErledigungBis = "ErledigungBis";

/// <summary>
/// Auftrag in Textform
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auftrag = "Auftrag";

/// <summary>
/// LOV KesMassnahmeGeschaeftsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesMassnahmeGeschaeftsartCode = "KesMassnahmeGeschaeftsartCode";

/// <summary>
/// Dokument Bericht/Antrag
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Bericht = "DocumentID_Bericht";

/// <summary>
/// Dokument Versand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Versand = "DocumentID_Versand";

/// <summary>
/// Dokument Verfügung KESB
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_VerfuegungKESB = "DocumentID_VerfuegungKESB";

/// <summary>
/// Datum Verfügung KESB
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVerfuegungKESB = "DatumVerfuegungKESB";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMassnahmeAuftragTS = "KesMassnahmeAuftragTS";
}

/// <summary>
/// Type: Table
/// Tabelle zum Tab 'Berichte', welche der Massnahme angehängt ist
/// </summary>

public static class KesMassnahmeBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMassnahmeBericht"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMassnahmeBerichtID = "KesMassnahmeBerichtID";

/// <summary>
/// Fremdschlüssel zur Tabelle KesMassnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// LOV KesMassnahmeBerichtsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesMassnahmeBerichtsartCode = "KesMassnahmeBerichtsartCode";

/// <summary>
/// Berichtsperiode von
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Berichtsperiode bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Dokument Bericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Bericht = "DocumentID_Bericht";

/// <summary>
/// Dokument Rechnung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Rechnung = "DocumentID_Rechnung";

/// <summary>
/// Dokument Versand
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Versand = "DocumentID_Versand";

/// <summary>
/// Dokument der KES-Verfügung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_VerfuegungKESB = "DocumentID_VerfuegungKESB";

/// <summary>
/// Datum der KES-Verfügung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVerfuegungKESB = "DatumVerfuegungKESB";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMassnahmeBerichtTS = "KesMassnahmeBerichtTS";
}

/// <summary>
/// Type: Table
/// Kes Massnahme
/// </summary>

public static class KesMassnahmeBSS{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesMassnahmeBSS"; }
}


/// <summary>
/// Primärschlüssel Kes Massnahme
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesMassnahmeBSSID = "KesMassnahmeBSSID";

/// <summary>
/// Fremdschlüssel (FK_KesMassnahmeBSS_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Massnahmeführender (Berufsbeistand), Fremdschlüssel (FK_KesMassnahmeBSS_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Massnahmeführender (Privatperson), Fremdschlüssel (FK_KesMassnahmeBSS_VmPriMa) => VmPriMaID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// Massnahmeführender (Fachbeistand), Fremdschlüssel (FK_KesMassnahmeBSS_BaInstitution) => BaInstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Massnahmegebundene Geschäfte, Fremdschlüssel (FK_KesMassnahmeBSS_KesArtikel) => KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KesArtikelID_MassnahmegebundeneGeschaefte = "KesArtikelID_MassnahmegebundeneGeschaefte";

/// <summary>
/// Nicht Massnahmegebundene Geschäfte, Fremdschlüssel (FK_KesMassnahmeBSS_KesArtikel) => KesArtikelID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string KesArtikelID_NichtMassnahmegebundeneGeschaefte = "KesArtikelID_NichtMassnahmegebundeneGeschaefte";

/// <summary>
/// Platzierung in einer Institution
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string Platzierung_BaInstitutionID = "Platzierung_BaInstitutionID";

/// <summary>
/// Massnahmen Typ
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesMassnahmeTypCode = "KesMassnahmeTypCode";

/// <summary>
/// Beistandsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesBeistandsartCode = "KesBeistandsartCode";

/// <summary>
/// Gefährdungsmeldung durch
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesGefaehrdungsmeldungDurchCode = "KesGefaehrdungsmeldungDurchCode";

/// <summary>
/// Änderungsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAenderungsgrundCode = "KesAenderungsgrundCode";

/// <summary>
/// Aufhebungsgrund
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAufhebungsgrundCode = "KesAufhebungsgrundCode";

/// <summary>
/// Verfügung/Auftrag KESB DokumentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KESBDocumentID = "KESBDocumentID";

/// <summary>
/// Für die eingescannte Ernennungsurkunde in KES-Massnahmen-ES
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Urkunde = "DocumentID_Urkunde";

/// <summary>
/// Errichtung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErrichtungVom = "ErrichtungVom";

/// <summary>
/// Änderung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AenderungVom = "AenderungVom";

/// <summary>
/// Übernahme vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UebernahmeVom = "UebernahmeVom";

/// <summary>
/// Beschriftung Berichtsgenehmigung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BerichtsgenehmigungVom = "BerichtsgenehmigungVom";

/// <summary>
/// Datum Beistandswechsel
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Beistandswechsel = "Beistandswechsel";

/// <summary>
/// Übertragung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UebertragungVom = "UebertragungVom";

/// <summary>
/// Aufhebung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AufhebungVom = "AufhebungVom";

/// <summary>
/// Aufgabenbereich (LOV KesAufgabenbereichES)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KesAufgabenbereichCodes = "KesAufgabenbereichCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesGrundlageCode = "KesGrundlageCode";

/// <summary>
/// Indikation (LOV KesIndikationES oder KesIndikationKS jenach Wert in KesMassnahmeTypCode)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string KesIndikationCodes = "KesIndikationCodes";

/// <summary>
/// Wert der Werteliste KesElterlicheSorgeObhut im Feld 'Elterliche Sorge'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesElterlicheSorgeObhutCode_ElterlicheSorge = "KesElterlicheSorgeObhutCode_ElterlicheSorge";

/// <summary>
/// Wert der Werteliste KesElterlicheSorgeObhut im Feld 'Obhut'
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesElterlicheSorgeObhutCode_Obhut = "KesElterlicheSorgeObhutCode_Obhut";

/// <summary>
/// PLZ
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// Ort
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// Ortschaftscode
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// Kanton
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// Beschriftung Fürsorgerische Unterbringung FU
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string FuersorgerischeUnterbringung = "FuersorgerischeUnterbringung";

/// <summary>
/// Massnahme Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Hat den Wert 1, wenn der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesMassnahmeBSSTS = "KesMassnahmeBSSTS";
}

/// <summary>
/// Type: Table
/// Kes Pflegekinderaufsicht
/// </summary>

public static class KesPflegekinderaufsicht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesPflegekinderaufsicht"; }
}


/// <summary>
/// Primärschlüssel KesPflegekinderaufsicht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesPflegekinderaufsichtID = "KesPflegekinderaufsichtID";

/// <summary>
/// Fremdschlüssel FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Verantwortliche Person
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Tages-/Pflegeeltern des Kindes
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Pflegekinderaufsicht Beginn
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Pflegekinderaufsicht Ende
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Liste von Pflegearten (LOV KesPflegeart)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesPflegeartCode = "KesPflegeartCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesPflegekinderaufsichtTS = "KesPflegekinderaufsichtTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet Präventionen für Kindes- und Erwachsenenschutzleistungen
/// </summary>

public static class KesPraevention{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesPraevention"; }
}


/// <summary>
/// Primärschlüssel für KES-Präventionen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesPraeventionID = "KesPraeventionID";

/// <summary>
/// Fremdschlüssel (FK_KesPraevention_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// SAR, Fremdschlüssel (FK_KesPraevention_XUser) => UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Beginn der Prävention
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Ende der Prävention
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Präventionsartcode aus LOV KesPraeventionsart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesPraeventionsartCode = "KesPraeventionsartCode";

/// <summary>
/// Präventionsabschlusscode aus LOV KesPraeventionsabschluss
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesPraeventionsabschlussCode = "KesPraeventionsabschlussCode";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesPraeventionTS = "KesPraeventionTS";
}

/// <summary>
/// Type: Table
/// KES Verlauf (Fachstelle PriMa/FaMa - PriMa-Begleitung / Pflegekinderaufsicht - Aufsicht)
/// </summary>

public static class KesVerlauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "KesVerlauf"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string KesVerlaufID = "KesVerlaufID";

/// <summary>
/// FaLeistung, Fremdschlüssel (FK_KesVerlauf_FaLeistung) => FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// LOV KesVerlaufTyp (Maske PriMa/FaMa oder Pflegekinderaufsicht)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesVerlaufTypCode = "KesVerlaufTypCode";

/// <summary>
/// VerfasserIn, Fremdschlüssel (FK_KesVerlauf_XUser) => XUserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// BaPersonID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// BaInstitutionID des Adressats
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// Dazugehöriges Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Datum des Eintrags
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// LOV KesKontaktart
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesKontaktartCode = "KesKontaktartCode";

/// <summary>
/// LOV KesDienstleistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesDienstleistungCode = "KesDienstleistungCode";

/// <summary>
/// Stichwort/Titel
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// LOV FaDauer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaDauerCode = "FaDauerCode";

/// <summary>
/// Inhalt der Besprechung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Inhalt = "Inhalt";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string KesVerlaufTS = "KesVerlaufTS";
}

/// <summary>
/// Type: Table
/// Zuweisungstabelle für Datenanonymisierung
/// </summary>

public static class MigAssignment{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "MigAssignment"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string Lookup = "Lookup";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [IsPrimaryKey: True]
/// </summary>
public const string OldValue = "OldValue";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string NewValue = "NewValue";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string MigAssignmentTS = "MigAssignmentTS";
}

/// <summary>
/// Type: Table
/// Logtabelle für Datenanonymisierung
/// </summary>

public static class MigLog{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "MigLog"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Function = "Function";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Table = "Table";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Column = "Column";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string Time = "Time";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rows = "Rows";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Duration_ms = "Duration_ms";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Prms = "Prms";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Error = "Error";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string MigLogTS = "MigLogTS";
}

/// <summary>
/// Type: Table
/// Lookup-Tabelle für Datenanonymisierung
/// </summary>

public static class MigLookup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "MigLookup"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string Lookup = "Lookup";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string RowID = "RowID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string MigLookupTS = "MigLookupTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class MigXClassFrmToCtl{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "MigXClassFrmToCtl"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string FormName = "FormName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string ControlName = "ControlName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsFormClassItemInKiSS5 = "IsFormClassItemInKiSS5";
}

/// <summary>
/// Type: Table
/// </summary>

public static class NewodPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "NewodPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string NewodPersonID = "NewodPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string GeburtsdatumString = "GeburtsdatumString";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string HausNrZusatz = "HausNrZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 60]
/// </summary>
public const string Ort = "Ort";
}

/// <summary>
/// Type: Table
/// Aufruf des Services loggen
/// </summary>

public static class ServiceCall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "ServiceCall"; }
}


/// <summary>
/// PK ServiceCallID
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ServiceCallID = "ServiceCallID";

/// <summary>
/// Benutzer der die Aktion ausgelöst hat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Name der Machine die die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MachineName = "MachineName";

/// <summary>
/// Service das die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ServiceName = "ServiceName";

/// <summary>
/// Methode die die Aktion ausgelöst hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MethodName = "MethodName";

/// <summary>
/// Eingangsparameter
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ServiceParam = "ServiceParam";

/// <summary>
/// Info über dem Call/Aktion
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Info = "Info";

/// <summary>
/// ServiceStartdatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ServiceStart = "ServiceStart";

/// <summary>
/// ServiceEnddatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ServiceEnd = "ServiceEnd";

/// <summary>
/// ServiceResult zB Fehlerhaft oder Erfolgreich
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ServiceResultTypeCode = "ServiceResultTypeCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string ServiceCallTS = "ServiceCallTS";
}

/// <summary>
/// Type: Table
/// Log-Tabelle für Nachvollziehbarkeit von Service-Fehlern
/// </summary>

public static class ServiceProcessError{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "ServiceProcessError"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ServiceProcessErrorID = "ServiceProcessErrorID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// ID eines Fremdsystems (z.B. EinwohnerregisterID)
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string FremdsystemID = "FremdsystemID";

/// <summary>
/// Der Name des Services, wo der Fehler aufgetreten ist
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ServiceName = "ServiceName";

/// <summary>
/// Der Name der Methode, wo der Fehler aufgetreten ist
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MethodName = "MethodName";

/// <summary>
/// Allgemeine Informationen zum Fehler (spezifische Infos sind in der Tabelle ServiceProcessErrorMessage)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Info = "Info";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string ServiceProcessErrorTS = "ServiceProcessErrorTS";
}

/// <summary>
/// Type: Table
/// Log-Tabelle für Fehlermeldungen eines Service-Fehlers
/// </summary>

public static class ServiceProcessErrorMessage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "ServiceProcessErrorMessage"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ServiceProcessErrorMessageID = "ServiceProcessErrorMessageID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ServiceProcessErrorID = "ServiceProcessErrorID";

/// <summary>
/// Eine Spezifische Fehlermeldung zum aufgetretenen Fehler
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Message = "Message";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string ServiceProcessErrorMessageTS = "ServiceProcessErrorMessageTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class ShEinzelzahlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "ShEinzelzahlung"; }
}


/// <summary>
/// Primärschlüssel für ShEinzelzahlung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ShEinzelzahlungID = "ShEinzelzahlungID";

/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_ShBeleg) => ShBeleg.BgBudgetID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_ShBeleg) => ShBeleg.ShBelegID
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ShBelegID = "ShBelegID";

/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BgKostenart) => BgKostenart.BgKostenartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FlKostenartID = "FlKostenartID";

/// <summary>
/// Fremdschlüssel (FK_ShEinzelzahlung_BgSpezkonto) => BgSpezkonto.BgSpezkontoID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechnungDatum = "RechnungDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NameEinzelzahlung = "NameEinzelzahlung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [DefaultValue: ((0))]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragAnfrage = "BetragAnfrage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string ShStatusEinzelzahlungCode = "ShStatusEinzelzahlungCode";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value1 = "Value1";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value2 = "Value2";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value3 = "Value3";

/// <summary>
/// [DataType: TEXT]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string ShEinzelzahlungTS = "ShEinzelzahlungTS";
}

/// <summary>
/// Type: Table
/// Jeder Tabellen Eintrag entspricht einem ASVS-Export
/// </summary>

public static class SstASVSExport{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "SstASVSExport"; }
}


/// <summary>
/// Der Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string SstASVSExportID = "SstASVSExportID";

/// <summary>
/// Export-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumExport = "DatumExport";

/// <summary>
/// Ein beliebiger Benutzer-Kommentar zum Expoort-Eintrag
/// [DataType: VARCHAR]
/// [Length: 400]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Ein Verweis auf die Exportierte XML-Datei
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Der Ersteller des Eintrages
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Der Zeitpunkt des Erstellen des Datensatzes
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Der letzte Benutzer, welcher den Datensatz verändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Der Zeitpunkt der letzten Veränderung des Datensatzes
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string SstASVSExportTS = "SstASVSExportTS";
}

/// <summary>
/// Type: Table
/// Verbindungstabelle für m:n Verknüfung zwischen SstASVSExport und WhASVSEintrag
/// </summary>

public static class SstASVSExport_Eintrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "SstASVSExport_Eintrag"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string SstASVSExport_EintragID = "SstASVSExport_EintragID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string SstASVSExportID = "SstASVSExportID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string WhASVSEintragID = "WhASVSEintragID";

/// <summary>
/// Beschreibt die Export-Art (normal oder zum löschen/ungültig erklären; siehe entsprechenden LOV-Wert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ASVSExportCode = "ASVSExportCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string SstASVSExport_EintragTS = "SstASVSExport_EintragTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class SstNewodMapping{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "SstNewodMapping"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string NewodMappingID = "NewodMappingID";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>
public const string Attribut = "Attribut";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>
public const string KissWert = "KissWert";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// </summary>
public const string NewodWert = "NewodWert";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string KissBedeutung = "KissBedeutung";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string NewodBedeutung = "NewodBedeutung";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NewodAttribut = "NewodAttribut";
}

/// <summary>
/// Type: Table
/// </summary>

public static class SstNewodMutation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "SstNewodMutation"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string NewodMutationID = "NewodMutationID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string NewodNummer = "NewodNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Data = "Data";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Mutationsart = "Mutationsart";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Imported = "Imported";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Processed = "Processed";
}

/// <summary>
/// Type: Table
/// Benutzerinformationen für die Optimierung des KiSS sammeln.
/// </summary>

public static class UserSession{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "UserSession"; }
}


/// <summary>
/// Session-ID des Benutzers
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string UserSessionID = "UserSessionID";

/// <summary>
/// UserID der XUsertabelle durch die den Benutzer identifiziert wird
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Logonname des Benutzers
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// LoginDatum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string LoginDatum = "LoginDatum";

/// <summary>
/// LogoutDatum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LogoutDatum = "LogoutDatum";

/// <summary>
/// Benutzername
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string UserName = "UserName";

/// <summary>
/// Domäne des Benutzers
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string UserDomainName = "UserDomainName";

/// <summary>
/// Computername des Benutzers
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MachineName = "MachineName";

/// <summary>
/// KiSS-Version
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ClientVersion = "ClientVersion";

/// <summary>
/// Version des Windows-Betriebssystems
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WindowsVersion = "WindowsVersion";

/// <summary>
/// .NET-Version
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string DotNetVersion = "DotNetVersion";

/// <summary>
/// Bildschirmauflösung Breite
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufloesungBreite = "AufloesungBreite";

/// <summary>
/// Bildschirmauflösung Höhe
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufloesungHoehe = "AufloesungHoehe";

/// <summary>
/// Versionsnummer des Word
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string OfficeVersionWord = "OfficeVersionWord";

/// <summary>
/// Versionsnummer des Excel
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string OfficeVersionExcel = "OfficeVersionExcel";

/// <summary>
/// Versionsnummer des Outlook
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string OfficeVersionOutlook = "OfficeVersionOutlook";

/// <summary>
/// Sprachinformationen
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string CultureInfo = "CultureInfo";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des UserSessionRecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string UserSessionTS = "UserSessionTS";
}

/// <summary>
/// Type: Table
/// AHV Mindestbeträge im Modul vormundschaftliche Massnahmen, Administration
/// </summary>

public static class VmAHVMindestbeitrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmAHVMindestbeitrag"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmAHVMindestbeitragID = "VmAHVMindestbeitragID";

/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel zum Document, Rolle IK Auszug
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_IKAuszug = "DocumentID_IKAuszug";

/// <summary>
/// Fremdschlüssel zum Document, Rolle "Neutral"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Neutral = "DocumentID_Neutral";

/// <summary>
/// Fremdschlüssel zum Document, Rolle "NEAnmeldung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_NEAnmeldung = "DocumentID_NEAnmeldung";

/// <summary>
/// IK Auszug Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string IKAuszugDatum = "IKAuszugDatum";

/// <summary>
/// Beitrags Rechnugns Jahr
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BeitragsRechnungsJahr = "BeitragsRechnungsJahr";

/// <summary>
/// Bruttolohn
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Bruttolohn = "Bruttolohn";

/// <summary>
/// NE Anmeldung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string NEAnmeldungDatum = "NEAnmeldungDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmQuartalCode = "VmQuartalCode";

/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmAHVMindestbeitragTS = "VmAHVMindestbeitragTS";
}

/// <summary>
/// Type: Table
/// Um Anträge EKSK in Vormundschaftliche Massnahme zu handeln
/// </summary>

public static class VmAntragEKSK{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmAntragEKSK"; }
}


/// <summary>
/// Primärschlüssel von VmAntragEKSK
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmAntragEKSKID = "VmAntragEKSKID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fredmschlüssel auf XDocument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Text des Antrages
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Antrag = "Antrag";

/// <summary>
/// Begründung des Antrages
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// Datum des Antrages
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAntrag = "DatumAntrag";

/// <summary>
/// Datum der Genehmigung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumGenehmigtEKSK = "DatumGenehmigtEKSK";

/// <summary>
/// Flag für das logisches Löschen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Titel des Antrages
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmAntragEKSKTS = "VmAntragEKSKTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmBericht"; }
}


/// <summary>
/// Primärschlüssel für VmBericht Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmBerichtID = "VmBerichtID";

/// <summary>
/// Fremdschlüssel (FK_VmBericht_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BerichtsperiodeVon = "BerichtsperiodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BerichtsperiodeBis = "BerichtsperiodeBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Erstellung = "Erstellung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mahnung = "Mahnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mahnung2 = "Mahnung2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Passation1 = "Passation1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Passation2 = "Passation2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Versand = "Versand";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmBerichtTS = "VmBerichtTS";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Entschaedigung = "Entschaedigung";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBeschwerdeAnfrage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmBeschwerdeAnfrage"; }
}


/// <summary>
/// Primärschlüssel von VaBeschwerdeAnfrage
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmBeschwerdeAnfrageID = "VmBeschwerdeAnfrageID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Datum Eingang  der Beschwerde.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eingang = "Eingang";

/// <summary>
/// Absender der Beschwerde oder Anfrage.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Absender = "Absender";

/// <summary>
/// Stichworte über die Beschwerde oder Anfrage.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichworte = "Stichworte";

/// <summary>
/// LOV Code. Beispiele: EKS Kommission, Regierungsstatthalter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBsBeschwerdeBehandlungCode = "VmBsBeschwerdeBehandlungCode";

/// <summary>
/// Datum Abschluss der Beschwerde oder Anfrage.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Abschluss = "Abschluss";

/// <summary>
/// Die Id des binären Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Flag, ob ein Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz (Beschwerde oder Anfrage) erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde (Beschwerde oder Anfrage)
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz (Beschwerde oder Anfrage) zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist (Beschwerde oder Anfrage).
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmBeschwerdeAnfrageTS = "VmBeschwerdeAnfrageTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmBewertung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmBewertung"; }
}


/// <summary>
/// Primärschlüssel für VmBewertung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmBewertungID = "VmBewertungID";

/// <summary>
/// Fremdschlüssel (FK_VmBewertung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmMandatstypCode = "VmMandatstypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VmKriterienCodes = "VmKriterienCodes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VmKriterienListe = "VmKriterienListe";

/// <summary>
/// Fremdschlüssel (FK_VmBewertung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string VmFallgewichtungStichtagCode = "VmFallgewichtungStichtagCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string VmFallgewichtungJahr = "VmFallgewichtungJahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmMandatstypBewilligtCode = "VmMandatstypBewilligtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProduktID = "ProduktID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmBewertungTS = "VmBewertungTS";
}

/// <summary>
/// Type: Table
/// Wird für die Finanzbudgets in der Vormundschaft verwendet
/// </summary>

public static class VmBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmBudget"; }
}


/// <summary>
/// Primärschlüssel von VmBudget
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmBudgetID = "VmBudgetID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// DokumentID des physikalischen Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumErstellung = "DatumErstellung";

/// <summary>
/// BudgetTitel
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Stichworte = "Stichworte";

/// <summary>
/// Datum Mutation
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumMutation = "DatumMutation";

/// <summary>
/// Mutationsgrund
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Grund = "Grund";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmBudgetTS = "VmBudgetTS";
}

/// <summary>
/// Type: Table
/// ELKrankheitskosten in Vormundschaftliche Massnahmen, Administration.
/// </summary>

public static class VmELKrankheitskosten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmELKrankheitskosten"; }
}


/// <summary>
/// Primärschlüssel.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmELKrankheitskostenID = "VmELKrankheitskostenID";

/// <summary>
/// Fremdschlüssel zur FaLeisgung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel zum Docoument.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Eingereicht.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eingereicht = "Eingereicht";

/// <summary>
/// Abrechnungen vom.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbrechnungenVom = "AbrechnungenVom";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungVom = "VerfuegungVom";

/// <summary>
/// Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// Abrechnung bis
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbrechnungenBis = "AbrechnungenBis";

/// <summary>
/// Leistung als Zahl
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungLeistung = "VerfuegungLeistung";

/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Daensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmELKrankheitskostenTS = "VmELKrankheitskostenTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErbe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmErbe"; }
}


/// <summary>
/// Primärschlüssel für VmErbe Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmErbeID = "VmErbeID";

/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmSiegelung) => VmSiegelung.VmSiegelungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmSiegelungID = "VmSiegelungID";

/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmTestamentID = "VmTestamentID";

/// <summary>
/// Fremdschlüssel (FK_VmErbe_VmErbschaftsdienst) => VmErbschaftsdienst.VmErbschaftsdienstID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmErbschaftsdienstID = "VmErbschaftsdienstID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Position = "Position";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Level = "Level";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FamilienNamen = "FamilienNamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vornamen = "Vornamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Land = "Land";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Ergaenzung = "Ergaenzung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string KontaktAdresse = "KontaktAdresse";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KontaktHinzufuegen = "KontaktHinzufuegen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string TestamentEroeffnungStatus = "TestamentEroeffnungStatus";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TestamentEroeffnungNr = "TestamentEroeffnungNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 5]
/// [AllowNulls: True]
/// </summary>
public const string TestamentEroeffnungVersandart = "TestamentEroeffnungVersandart";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TestamentEroeffnungVersandDatum = "TestamentEroeffnungVersandDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ErbCodierung = "ErbCodierung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErbanteilDividend = "ErbanteilDividend";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErbanteilDivisor = "ErbanteilDivisor";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmErbeTS = "VmErbeTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Titel2 = "Titel2";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErblasser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmErblasser"; }
}


/// <summary>
/// Primärschlüssel für VmErblasser Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmErblasserID = "VmErblasserID";

/// <summary>
/// Fremdschlüssel (FK_VmErblasser_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TodesDatum = "TodesDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string TodesDatumText = "TodesDatumText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string TodesOrt = "TodesOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string FamilienNamen = "FamilienNamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string LedigName = "LedigName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Vornamen = "Vornamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Elternnamen = "Elternnamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Zivilstand = "Zivilstand";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandCode = "ZivilstandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string Heimatorte = "Heimatorte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Aufenthalt = "Aufenthalt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmErblasserTS = "VmErblasserTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErbschaftsdienst{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmErbschaftsdienst"; }
}


/// <summary>
/// Primärschlüssel für VmErbschaftsdienst Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmErbschaftsdienstID = "VmErbschaftsdienstID";

/// <summary>
/// Fremdschlüssel (FK_VmErbschaftsdienst_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel (FK_VmErbschaftsdienst_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LaufNr = "LaufNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MassnahmenCodes = "MassnahmenCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnschriftErbenDokID = "AnschriftErbenDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnschriftErbenDatum = "AnschriftErbenDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InventarCode = "InventarCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string InventarNotarID = "InventarNotarID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string VertretungsBeistandschaft = "VertretungsBeistandschaft";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Ausschlagung = "Ausschlagung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string El = "El";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KopieAnCodes = "KopieAnCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UeberweisungRSTADokID = "UeberweisungRSTADokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UeberweisungRSTA = "UeberweisungRSTA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Massnahme = "Massnahme";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmErbschaftsdienstTS = "VmErbschaftsdienstTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmErnennung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmErnennung"; }
}


/// <summary>
/// Primärschlüssel für VmErnennung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmErnennungID = "VmErnennungID";

/// <summary>
/// Fremdschlüssel (FK_VmErnennung_VmMassnahme) => VmMassnahme.VmMassnahmeID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string VmMassnahmeID = "VmMassnahmeID";

/// <summary>
/// Fremdschlüssel (FK_VmErnennung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_VmErnennung_VmPriMa) => VmPriMa.VmPriMaID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Ernennung = "Ernennung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErnennungsurkundeDokID = "ErnennungsurkundeDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmErnennungTS = "VmErnennungTS";
}

/// <summary>
/// Type: Table
/// Tabelle für Vormundschaft -> Auftrag Jugendamt -> Gefährdungsmeldung
/// </summary>

public static class VmGefaehrdungsMeldung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmGefaehrdungsMeldung"; }
}


/// <summary>
/// Primärschlüssel von VmGefaehrdungsMeldung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmGefaehrdungsMeldungID = "VmGefaehrdungsMeldungID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Eingangsdatum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEingang = "DatumEingang";

/// <summary>
/// Melder/In. Beispiele: Selber, Polizei
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaKontaktveranlasserCode = "FaKontaktveranlasserCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string VmGefaehrdungNSBCodes = "VmGefaehrdungNSBCodes";

/// <summary>
/// Themen wie Wohnen, Gesundheit u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string FaThemaCodes = "FaThemaCodes";

/// <summary>
/// Ausgangslage
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ausgangslage = "Ausgangslage";

/// <summary>
/// Auflagen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auflagen = "Auflagen";

/// <summary>
/// Überprüfung/Zusammenarbeit mit anderen Institutionen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ueberpruefung = "Ueberpruefung";

/// <summary>
/// Konsequenzen b. Nichteinhalten der Auflagen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Konsequenzen = "Konsequenzen";

/// <summary>
/// Auflagen aufg.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuflageDatum = "AuflageDatum";

/// <summary>
/// Ob der Datensatz gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmGefaehrdungsMeldungTS = "VmGefaehrdungsMeldungTS";
}

/// <summary>
/// Type: Table
/// Vormundschaft Inventar
/// </summary>

public static class VmInventar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmInventar"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmInventarID = "VmInventarID";

/// <summary>
/// Fremdschlüssel zur Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel zum Mitarbeiter
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel zum Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Datum Eröffnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eroeffnung = "Eroeffnung";

/// <summary>
/// Datum Erstkontakt
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstKontakt = "ErstKontakt";

/// <summary>
/// Datum Mahnung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Mahnung = "Mahnung";

/// <summary>
/// Datum Genehmigung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Genehmigung = "Genehmigung";

/// <summary>
/// Datum Versand
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Versand = "Versand";

/// <summary>
/// Datum Inventar aufgenommen
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InventarAufgenommen = "InventarAufgenommen";

/// <summary>
/// Bemerkung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Adressrecords
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmInventarTS = "VmInventarTS";
}

/// <summary>
/// Type: Table
/// Tabelle um Klientenbudgets in Vormundschaftliche Massnahmen zu erfassen
/// </summary>

public static class VmKlientenbudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmKlientenbudget"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmKlientenbudgetID = "VmKlientenbudgetID";

/// <summary>
/// Fremdschlüssel auf FaLeistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf XUser um den Autor zu definieren
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Status-Code des Budget aus LOV VmKlientenbudgetStatus (auch enum in C# VmKlientenbudgetStatus)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmKlientenbudgetStatusCode = "VmKlientenbudgetStatusCode";

/// <summary>
/// Datum ab wenn das Budget gültig ist
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GueltigAb = "GueltigAb";

/// <summary>
/// Grund zur Erstellung des Klientenbudgets. LOV VmKlientenbudgetMutationsgrund
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmKlientenbudgetMutationsgrundCode = "VmKlientenbudgetMutationsgrundCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmKlientenbudgetTS = "VmKlientenbudgetTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmMandant{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmMandant"; }
}


/// <summary>
/// Primärschlüssel für VmMandant Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmMandantID = "VmMandantID";

/// <summary>
/// Fremdschlüssel (FK_VmMandant_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Version = "Version";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// Fremdschlüssel (FK_VmMandant_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandCode = "ZivilstandCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string HeimatgemeindeBaGemeindeID = "HeimatgemeindeBaGemeindeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Beruf = "Beruf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string WertschriftenDepot = "WertschriftenDepot";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmMandantTS = "VmMandantTS";
}

/// <summary>
/// Type: Table
/// Berichte in der Vormundschaft (Vormundschaftliche Massnahme -> Mandatsführung -> Berichte).
/// </summary>

public static class VmMandBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmMandBericht"; }
}


/// <summary>
/// Primärschlüssel von VmMandBericht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmMandBerichtID = "VmMandBerichtID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Autor des Antrag EKSK.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel auf VmBericht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmBerichtID = "VmBerichtID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Beispiele: Neuerrichtung, Fortsetzung, Übernahme.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmGrundMassnahmeCode = "VmGrundMassnahmeCode";

/// <summary>
/// Art des Berichts, z.B. Beistandsschaftsbericht.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtstitelCode = "VmBerichtstitelCode";

/// <summary>
/// Bericht für die Zeit ab Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BerichtDatumVon = "BerichtDatumVon";

/// <summary>
/// Bericht für die Zeit bis Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BerichtDatumBis = "BerichtDatumBis";

/// <summary>
/// Grund der Massnahme / Anlassproblem (T)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string GrundMassnahmeText = "GrundMassnahmeText";

/// <summary>
/// Auftrag/Zielsetzung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AuftragZielsetzungText = "AuftragZielsetzungText";

/// <summary>
/// Ziele erreicht
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmZielErreichtCode = "VmZielErreichtCode";

/// <summary>
/// Veränderung innerhalb der Berichtsperiode, Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string VeraenderungInPeriode = "VeraenderungInPeriode";

/// <summary>
/// Begründung, warum Ziel nicht erreicht.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// Neue Ziele
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string NeueZieleText = "NeueZieleText";

/// <summary>
/// Beispiele: eigene Wohung / Hotel
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmWohnenCode = "VmWohnenCode";

/// <summary>
/// Mögliche Werte: unauffällig, krank.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmGesundheitCode = "VmGesundheitCode";

/// <summary>
/// Mögliche Werte: Auffällig, unauffällig, krank
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmVerhaltenCode = "VmVerhaltenCode";

/// <summary>
/// Beispiele: Schule, Lehre
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmTaetigkeitCode = "VmTaetigkeitCode";

/// <summary>
/// Familiäre Situation
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string FamiliaereSituation = "FamiliaereSituation";

/// <summary>
/// Soziale Kompetenzen (VJ).
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SozialeKompetenzen = "SozialeKompetenzen";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Freizeit = "Freizeit";

/// <summary>
/// Besondere Ressourcen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Resourcen = "Resourcen";

/// <summary>
/// Beschreibung über die Wohnsituation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string WohnenText = "WohnenText";

/// <summary>
/// Beschreibung über die Gesundheitliche Situation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitText = "GesundheitText";

/// <summary>
/// Beschreibung des Verhaltens.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VerhaltenText = "VerhaltenText";

/// <summary>
/// Beschreibung über die Tätigkeiten (z.B. Lehre).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string TaetigkeitText = "TaetigkeitText";

/// <summary>
/// Beschreibung über die Familiäre Situation.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string FamSituationText = "FamSituationText";

/// <summary>
/// Beschreibung über die sozialen Kompetenzen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SozialeKompetenzenText = "SozialeKompetenzenText";

/// <summary>
/// Beschreibung über die Freizeit.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string FreizeitText = "FreizeitText";

/// <summary>
/// Beschreibung über die besonderen Resourcen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesondereRessourcenText = "BesondereRessourcenText";

/// <summary>
/// Beschreibung über die Handlungen und wichtigsten Aufgaben.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HandlungenText = "HandlungenText";

/// <summary>
/// Beschreibung über besondere Schwirigkeiten.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesondereSchwierigkeitenText = "BesondereSchwierigkeitenText";

/// <summary>
/// Kontakte/Gespräche mit (T), Klient
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Klient = "Klient";

/// <summary>
/// Kontakte/Gespräche mit (T), Dritten
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Dritte = "Dritte";

/// <summary>
/// Kontakte/Gespräche mit (T), Institutionen
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Institutionen = "Institutionen";

/// <summary>
/// Kontakte/Gespräche mit (T), Klient Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string KlientText = "KlientText";

/// <summary>
/// Kontakte/Gespräche mit (T), Dritte Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string DritteText = "DritteText";

/// <summary>
/// Kontakte/Gespräche mit (T), Institutionen Text
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionenText = "InstitutionenText";

/// <summary>
/// Wie aufwändig die Mandatsführung ist (Beispiele: normal, aufwändig, schwierig, sehr schwierig).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtBelastungsangabeMCSCCode_Mandat = "VmBerichtBelastungsangabeMCSCCode_Mandat";

/// <summary>
/// eispiele: normal, aufwändig, schwierig, sehr schwierig.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtBelastungsangabeMCSCCode_Admin = "VmBerichtBelastungsangabeMCSCCode_Admin";

/// <summary>
/// Belastung für die Mandatsführung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BelastungMandatText = "BelastungMandatText";

/// <summary>
/// Belastung für den Administrator.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BelastungAdminText = "BelastungAdminText";

/// <summary>
/// Einnahmen, z.B. Lohn, IV, AHV u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string VmEinnahmenAngabenCodes = "VmEinnahmenAngabenCodes";

/// <summary>
/// Versicherungen T, z.B. Krankenkasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtVersicherungenCodes = "VmBerichtVersicherungenCodes";

/// <summary>
/// Besondere Angaben (T)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtBesondereAngabenCodes = "VmBerichtBesondereAngabenCodes";

/// <summary>
/// Bemerkungen zu den Einnahmen (T).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string EinnahmenBemerkungen = "EinnahmenBemerkungen";

/// <summary>
/// Bemerkungen zu den Versicherungen (T)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VersicherungenBemerkungen = "VersicherungenBemerkungen";

/// <summary>
/// Bemerkungen zu den besonderen Angaben (T).
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesondereAngabenBemerkungen = "BesondereAngabenBemerkungen";

/// <summary>
/// Abrechnung unterschreibbar Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AbrechnungUnterschrieben = "AbrechnungUnterschrieben";

/// <summary>
/// Nimmt an Passation teil, Ja
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PassationTeilnahme = "PassationTeilnahme";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PassationBemerkung = "PassationBemerkung";

/// <summary>
/// Antrag EKSK (Erwachsenen Kind Schutz Kommission): (T / VJ). Beispiele: Weiterführung, Aufhebung, Änderung der Massnahme.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmAntragBerichtCode = "VmAntragBerichtCode";

/// <summary>
/// Begründung zum Antrag EKSK
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AntragBegruendung = "AntragBegruendung";

/// <summary>
/// Erstellungsdatum Antrag EKSK
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstellungDatum = "ErstellungDatum";

/// <summary>
/// Beilagen. Beispiele: Grundlageninventar, Grundlagenbericht, Erstbericht keine Grundlage
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmMfBerichtBeilagenCode = "VmMfBerichtBeilagenCode";

/// <summary>
/// Bericht Abrechnung & Belege an BS
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BsDatum = "BsDatum";

/// <summary>
/// Belege zurück vom Revisor
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BelegeZurueckRevision = "BelegeZurueckRevision";

/// <summary>
/// Bericht zurück vom BS.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZurueckVomBS = "ZurueckVomBS";

/// <summary>
/// Art des Berichts. Beipsiele: ordentlicher Bericht, Schlussbericht Todesfall.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtsartCode = "VmBerichtsartCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmMandBerichtTS = "VmMandBerichtTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmMassnahme{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmMassnahme"; }
}


/// <summary>
/// Primärschlüssel für VmMassnahme Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmMassnahmeID = "VmMassnahmeID";

/// <summary>
/// Fremdschlüssel (FK_VmMassnahme_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZGBCodes = "ZGBCodes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 120]
/// [AllowNulls: True]
/// </summary>
public const string WeitereZGB = "WeitereZGB";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ElterlicheSorgeCode = "ElterlicheSorgeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmMassnahmeTS = "VmMassnahmeTS";
}

/// <summary>
/// Type: Table
/// Tabelle um Positionen in Klientenbudgets zu erfassen
/// </summary>

public static class VmPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmPosition"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmPositionID = "VmPositionID";

/// <summary>
/// Fremdschlüssel auf VmKlientenbudget
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string VmKlientenbudgetID = "VmKlientenbudgetID";

/// <summary>
/// Fremdschlüssel auf VmPositionsart
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string VmPositionsartID = "VmPositionsartID";

/// <summary>
/// zum wissen ob die Daten dieser Position importiert werden sind
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstImportiert = "IstImportiert";

/// <summary>
/// Name der Position
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Bemerkung der Position
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Datum per des Saldos (für Kategorie Vermögen)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumSaldoPer = "DatumSaldoPer";

/// <summary>
/// Saldo des Vermögens
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Saldo = "Saldo";

/// <summary>
/// Monatlicher Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragMonatlich = "BetragMonatlich";

/// <summary>
/// Jährlicher Betrag
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragJaehrlich = "BetragJaehrlich";

/// <summary>
/// Erlaubt die Sortierung innerhalb einer Kategorie
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmPositionTS = "VmPositionTS";
}

/// <summary>
/// Type: Table
/// Tabelle um Positionsarten zu erfassen. Wird für VmPosition verwendet
/// </summary>

public static class VmPositionsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmPositionsart"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmPositionsartID = "VmPositionsartID";

/// <summary>
/// Kategorie in welcher die Positionsart angezeigt werden muss (Vermögen, Einnahmen, Fixe Kosten, Variable Kosten). LOV VmKategorie (auch enum in C# VmKategorie)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmKategorieCode = "VmKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmPositionsartTypCode = "VmPositionsartTypCode";

/// <summary>
/// Zum definieren ob es eine Standardposition ist. Standardpositionen werden beim erfassen eines Klientenbudget erstellt.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IstTemplate = "IstTemplate";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Um die Sortierung den Positionsarten inerhalb einer Kategorie zu definieren
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmPositionsartTS = "VmPositionsartTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmPriMa{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmPriMa"; }
}


/// <summary>
/// Primärschlüssel für VmPriMa Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_P = "Telefon_P";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_G = "Telefon_G";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MobilTel = "MobilTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Beruf = "Beruf";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>
public const string BankName = "BankName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string IsActive = "IsActive";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmPriMaTS = "VmPriMaTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmSachversicherung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSachversicherung"; }
}


/// <summary>
/// Primärschlüssel von VmSachversicherung
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSachversicherungID = "VmSachversicherungID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Adressat, falls es eine Person ist und nicht eine Institution. Siehe auch BaInstitutionId.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// Adressat, falls es eine Institution ist und nicht eine BaPerson ist. Siehe auch InstitutionID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// Fremdschlüssel zu VmPriMa (Privater Mandatsträger).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// Dokument "Mutation"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Mutation = "DocumentID_Mutation";

/// <summary>
/// Dokument "Mitteilung / Anmeldung".
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_MittAnm = "DocumentID_MittAnm";

/// <summary>
/// Dokument "Aufhebung / Kündigung"
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_AufhKuend = "DocumentID_AufhKuend";

/// <summary>
/// Art der Versicherung. Beispiele: Haftpflicht, Hausrat
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmVersicherungsartSachversicherungCode = "VmVersicherungsartSachversicherungCode";

/// <summary>
/// Policennummer
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Policenummer = "Policenummer";

/// <summary>
/// Selbstbehalt
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string Selbstbehalt = "Selbstbehalt";

/// <summary>
/// Grundprämie als Textfeld.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Grundpraemie = "Grundpraemie";

/// <summary>
/// Zahlungsturnus. Beispiele: monatlich, zweimonatlich ...
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmZahlungsturnusCode = "VmZahlungsturnusCode";

/// <summary>
/// Laufzeit von.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LaufzeitVon = "LaufzeitVon";

/// <summary>
/// Laufzeit bis Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LaufzeitBis = "LaufzeitBis";

/// <summary>
/// Versichert seit Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VersichertSeit = "VersichertSeit";

/// <summary>
/// zusätzliche und andere versicherte Person/en
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Person = "Person";

/// <summary>
/// Bemerkungen.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Datensatz gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSachversicherungTS = "VmSachversicherungTS";
}

/// <summary>
/// Type: Table
/// Vormundschaftliche Massnahme - Finanzen - Schulden
/// </summary>

public static class VmSchulden{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSchulden"; }
}


/// <summary>
/// Primärschlüssel von VmSchulden
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSchuldenID = "VmSchuldenID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Schuldtitel. Beispiele: Verlustschein, Darlehensvertrag, Hypothek
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmSchuldtitelCode = "VmSchuldtitelCode";

/// <summary>
/// Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TilgungDatum = "TilgungDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Bemerkungen zu den Schulden
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSchuldenTS = "VmSchuldenTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmSiegelung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSiegelung"; }
}


/// <summary>
/// Primärschlüssel für VmSiegelung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSiegelungID = "VmSiegelungID";

/// <summary>
/// Fremdschlüssel (FK_VmSiegelung_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// [DefaultValue: ((0))]
/// </summary>
public const string Gesperrt = "Gesperrt";

/// <summary>
/// Fremdschlüssel (FK_VmSiegelung_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezirkNr = "BezirkNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LaufNr = "LaufNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TodesmeldungDatum = "TodesmeldungDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SiegelungsDatum = "SiegelungsDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string SiegelungsFristEingehalten = "SiegelungsFristEingehalten";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VersandDatum = "VersandDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KopieErbschaftsdienst = "KopieErbschaftsdienst";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KopieTestamentsdienst = "KopieTestamentsdienst";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KopieAndere = "KopieAndere";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungsSperren = "VerfuegungsSperren";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Durchsuchungen = "Durchsuchungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PliQuittung = "PliQuittung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string GesuchUeBestattung = "GesuchUeBestattung";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Ausschlagung = "Ausschlagung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmErbschaftInventarCode = "VmErbschaftInventarCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string NotarID = "NotarID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MassaVerwalter = "MassaVerwalter";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EntsiegelungsDatum = "EntsiegelungsDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string OhneGebuehr = "OhneGebuehr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string RechnungsNr = "RechnungsNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechnungsDatum = "RechnungsDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechnungsBetrag = "RechnungsBetrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string RechnungAn = "RechnungAn";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SiegelungsProtokollDokID = "SiegelungsProtokollDokID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string SDabgeschlossen = "SDabgeschlossen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSiegelungTS = "VmSiegelungTS";
}

/// <summary>
/// Type: Table
/// Vormundschaft Situationsbericht
/// </summary>

public static class VmSituationsBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSituationsBericht"; }
}


/// <summary>
/// Primärschlüssel von VmSituationsBericht
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSituationsBerichtID = "VmSituationsBerichtID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Antrag Datum.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AntragDatum = "AntragDatum";

/// <summary>
/// Beispiele: neuer Fall, Situationsbedingte Leistung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VMTypSHAntragCode = "VMTypSHAntragCode";

/// <summary>
/// Beispiele: Wohnen, Gesundheit, Verhalten u.s.w.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string FaThemaCodes = "FaThemaCodes";

/// <summary>
/// Aktuelle Situation / Finanzen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BerichtFinanzen = "BerichtFinanzen";

/// <summary>
/// Zielsetzung / Prognose
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ZielPrognose = "ZielPrognose";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AntragText = "AntragText";

/// <summary>
/// Id des binären Dokuments.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Ob der Datensatz logisch gelöscht wurde.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSituationsBerichtTS = "VmSituationsBerichtTS";
}

/// <summary>
/// Type: Table
/// Sozialversicherung im Modul Vormundschaftliche Massnahmen, Administration
/// </summary>

public static class VmSozialversicherung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSozialversicherung"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSozialversicherungID = "VmSozialversicherungID";

/// <summary>
/// Fremdschlüssel zur LeistungID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel zu BaPerson (Adressat)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID_Adressat = "BaPersonID_Adressat";

/// <summary>
/// Fremdschlüssel zur BaInstitution, Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaInstitutionID_Adressat = "BaInstitutionID_Adressat";

/// <summary>
/// Fremdschlüssel zum VmPriMa (Private Mandatsträger) für das Adressat.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string VmPriMaID_Adressat = "VmPriMaID_Adressat";

/// <summary>
/// Fremdschlüsssel zum Dokument, Rolle Korrespondenz.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID_Korrespondenz = "DocumentID_Korrespondenz";

/// <summary>
/// Werteliste
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmSozialversicherungenBezeichnungenCode = "VmSozialversicherungenBezeichnungenCode";

/// <summary>
/// Grund
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Grund = "Grund";

/// <summary>
/// eingereicht am
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eingereicht = "Eingereicht";

/// <summary>
/// Verfügung vom
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungVom = "VerfuegungVom";

/// <summary>
/// Berechnungsgrundlage
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>
public const string Berechnungsgrundlage = "Berechnungsgrundlage";

/// <summary>
/// Verfügungsbetrag monatlich.
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verfuegungsbetrag = "Verfuegungsbetrag";

/// <summary>
/// Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt modifiziert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz modifiziert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSozialversicherungTS = "VmSozialversicherungTS";
}

/// <summary>
/// Type: Table
/// Vormundschaftliche Massnahme - Administration - Steuern
/// </summary>

public static class VmSteuern{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmSteuern"; }
}


/// <summary>
/// Primärschlüssel von VmSteuern
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmSteuernID = "VmSteuernID";

/// <summary>
/// Fremdschlüssel auf die Leistung
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Fremdschlüssel auf XDokument für das Korrespondenz-Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// Das Steuerjahr
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SteuerJahr = "SteuerJahr";

/// <summary>
/// Flag, ob die Steuererklärung extern erledigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SteuererklaerungExternErledigt = "SteuererklaerungExternErledigt";

/// <summary>
/// Flag, ob die Steuererklärung intern erledigt ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SteuererklaerungInternErledigt = "SteuererklaerungInternErledigt";

/// <summary>
/// Wer die Steuererklärung erledigt hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string ErledigungDurch = "ErledigungDurch";

/// <summary>
/// Wann die Steuererklärung eingereicht wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SteuererklaerungEingereicht = "SteuererklaerungEingereicht";

/// <summary>
/// Flag, ob Artikel 41
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Artikel41 = "Artikel41";

/// <summary>
/// Datum der Beantragung einer Fristverlängerung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FristverlaengerungBeantragt = "FristverlaengerungBeantragt";

/// <summary>
/// Datum des Eingangs der definitiven Veranlagung
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EingangDefVeranlagung = "EingangDefVeranlagung";

/// <summary>
/// Datum des Entscheids eines Steuererlasses
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEntscheidErlass = "DatumEntscheidErlass";

/// <summary>
/// Flag, ob die Steuern erlassen werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Erlass = "Erlass";

/// <summary>
/// Flag, ob die Steuern teilweise erlassen werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Teilerlass = "Teilerlass";

/// <summary>
/// Flag, ob die Steuern nicht erlassen werden (abgelehnt)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Abelehnt = "Abelehnt";

/// <summary>
/// Zusätzliche Bemerkungen
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Ob der Datensatz logisch gelöscht ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz  erstellt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmSteuernTS = "VmSteuernTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestament{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmTestament"; }
}


/// <summary>
/// Primärschlüssel für VmTestament Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmTestamentID = "VmTestamentID";

/// <summary>
/// Fremdschlüssel (FK_VmTestament_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LaufNr = "LaufNr";

/// <summary>
/// Fremdschlüssel (FK_VmTestament_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string KopieAnCodes = "KopieAnCodes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZeugnisseCodes = "ZeugnisseCodes";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsRechnungBetrag = "EroeffnungsRechnungBetrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsRechnungSAPNr = "EroeffnungsRechnungSAPNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZusatzRechnungBetrag = "ZusatzRechnungBetrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZusatzRechnungSAPNr = "ZusatzRechnungSAPNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungDokID = "EroeffnungDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungAuszugDokID = "EroeffnungAuszugDokID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungAdressenDokID = "EroeffnungAdressenDokID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungAbgeschlossenDatum = "EroeffnungAbgeschlossenDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PublikationFrist = "PublikationFrist";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PublikationDatum = "PublikationDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmTestamentTS = "VmTestamentTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string NotarID = "NotarID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestamentBescheinigung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmTestamentBescheinigung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmTestamentBescheinigungID = "VmTestamentBescheinigungID";

/// <summary>
/// Fremdschlüssel (FK_VmTestamentBescheinigung_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string VmTestamentID = "VmTestamentID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BescheinigungCode = "BescheinigungCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string BescheinigungText = "BescheinigungText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BescheinigungDokID = "BescheinigungDokID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Gebuehr = "Gebuehr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string SAPNr = "SAPNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Ob der Datensatz logisch gelöscht worden ist.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsDeleted = "IsDeleted";

/// <summary>
/// Wer den Datensatz anelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt verändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmTestamentBescheinigungTS = "VmTestamentBescheinigungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmTestamentVerfuegung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmTestamentVerfuegung"; }
}


/// <summary>
/// Primärschlüssel für VmTestamentVerfuegung Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmTestamentVerfuegungID = "VmTestamentVerfuegungID";

/// <summary>
/// Fremdschlüssel (FK_VmTestamentVerfuegung_VmTestament) => VmTestament.VmTestamentID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string VmTestamentID = "VmTestamentID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string EingangsDatum = "EingangsDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungsDatum = "VerfuegungsDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EroeffnungsDatum = "EroeffnungsDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VerfuegungText = "VerfuegungText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Verschlossen = "Verschlossen";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TestamentsformCode = "TestamentsformCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzSeiten = "AnzSeiten";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufbewahrungsOrt = "AufbewahrungsOrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ABOvorherCode = "ABOvorherCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ABOvorherText = "ABOvorherText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ABOnachherCode = "ABOnachherCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ABOnachherText = "ABOnachherText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InventarCode = "InventarCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmTestamentVerfuegungTS = "VmTestamentVerfuegungTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class VmVaterschaft{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "VmVaterschaft"; }
}


/// <summary>
/// Primärschlüssel für VmVaterschaft Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string VmVaterschaftID = "VmVaterschaftID";

/// <summary>
/// Fremdschlüssel (FK_VmVaterschaft_FaLeistung) => FaLeistung.FaLeistungID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZGBCodes = "ZGBCodes";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AnerkennungDatum = "AnerkennungDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AnerkennungOrt = "AnerkennungOrt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UHVDatum = "UHVDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UHVBetrag = "UHVBetrag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UHVAbschlussGrundCode = "UHVAbschlussGrundCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SorgerechtVereinbDatum = "SorgerechtVereinbDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VAnfechtungsurteil = "VAnfechtungsurteil";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VUrteilDatum = "VUrteilDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VUrteilBetrag = "VUrteilBetrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UnterhaltsurteilDatum = "UnterhaltsurteilDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UnterhaltsurteilBetrag = "UnterhaltsurteilBetrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SchlussberichtAnKommission = "SchlussberichtAnKommission";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SchlussberichtGenehmigung = "SchlussberichtGenehmigung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GeburtsmitteilungDatum = "GeburtsmitteilungDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string GeburtsmitteilungOrt = "GeburtsmitteilungOrt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GebuehrDatum = "GebuehrDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string GebuehrErlass = "GebuehrErlass";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 250]
/// [AllowNulls: True]
/// </summary>
public const string PendenzText = "PendenzText";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PendenzFrist = "PendenzFrist";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string VmVaterschaftTS = "VmVaterschaftTS";
}

/// <summary>
/// Type: Table
/// Speichert die ASVS Anmelde- und Abmelde-Daten pro Klient und Leistung
/// </summary>

public static class WhASVSEintrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "WhASVSEintrag"; }
}


/// <summary>
/// Der Primary Key
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string WhASVSEintragID = "WhASVSEintragID";

/// <summary>
/// Die ASVS-Einträge werden pro Person und Leistung erzeugt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Die ASVS-Einträge werden pro Person und Leistung erzeugt
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// ASVS-Anmelde-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// ASVS-Abmelde-Datum
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// Der Zustand des Eintrages (neu erstellt, zu exportieren, ...; siehe entsprechenden LOV-Code)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ASVSEintragStatusCode = "ASVSEintragStatusCode";

/// <summary>
/// Bemerkung zum ASVS Eintrag
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// Der Ersteller des Eintrages
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Zeitpunkt als der Eintrag erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Der letzte Benutzer, welcher den Datensatz verändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Der Zeitpunkt der letzten Änderung am Datensatz
/// [DataType: VARCHAR]
/// [Length: 50]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für den Datensatz
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string WhASVSEintragTS = "WhASVSEintragTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die GEF-Kategorien die nötig sind für das Exportieren der Differenzierung Sozialhilferechnung
/// </summary>

public static class WhGefKategorie{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "WhGefKategorie"; }
}


/// <summary>
/// Primärschlüssel für diese Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string WhGefKategorieID = "WhGefKategorieID";

/// <summary>
/// Code der GEF-Gruppe. Als LOV und Enum (WhGefKategorie)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string WhGefKategorieCode = "WhGefKategorieCode";

/// <summary>
/// Code vom Typ der GEF-Gruppe (Aufwand, Ertrag, ...). Als LOV und Enum (WhGefKategorieTyp)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string WhGefKategorieTypCode = "WhGefKategorieTypCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string WhGefKategorieTS = "WhGefKategorieTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XArchive{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XArchive"; }
}


/// <summary>
/// Primärschlüssel für XArchive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string ArchiveID = "ArchiveID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 80]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Address = "Address";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Remark = "Remark";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XArchiveTS = "XArchiveTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XBookmark{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XBookmark"; }
}


/// <summary>
/// Primärschlüssel für XBookmark Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 40]
/// [IsPrimaryKey: True]
/// </summary>
public const string BookmarkName = "BookmarkName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BookmarkNameTID = "BookmarkNameTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Category = "Category";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string CategoryTID = "CategoryTID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BookmarkCode = "BookmarkCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SQL = "SQL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DescriptionTID = "DescriptionTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// ID des Moduls, zu welchem die jeweilige Textmarke gehört (wichtig für die Filterung nach lizenzierten Modulen)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// Flag zum Übersteuern der Sichtbarkeit durch lizenzierte Module, wobei Wert=1 bedeutet, dass die Textmarke immer sichtbar bleibt, auch ohne Lizenz für Modul
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string AlwaysVisible = "AlwaysVisible";

/// <summary>
/// Flag zum Festlegen, ob eine Textmarke von BIAG gewartet wird oder vom Kunden erstellt wurde. Dabei gilt: Wert=1 bedeutet, dass die Textmarke von BIAG erstellt und verwaltet wird, Wert=0 bedeutet, dass der Kunde selber für Wartung und Support verantwortlich ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XBookmarkTS = "XBookmarkTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet alle verfügbaren Klassen, welche in der jeweiligen Anwendung von KiSS benötigt werden (CORE und Businessdesigner Klassen)
/// </summary>

public static class XClass{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XClass"; }
}


/// <summary>
/// Primärschlüssel für XClass Records (nach Primärschlüssel-Standards). Eindeutiger Name der Klasse.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XClassID = "XClassID";

/// <summary>
/// Eindeutiger Name der Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string ClassNameViewModel = "ClassNameViewModel";

/// <summary>
/// Fremdschlüssel (FK_XClass_XModul) => XModul.ModulID. Zugehörigkeit der Klasse zu Modul.
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// Name der Maske innerhalb der Benutzerrechte, Recht-Bezeichnung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// Basisklasse, auf welcher die Klasse aufbaut (von Werteliste 'Class' den Value1)
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string BaseType = "BaseType";

/// <summary>
/// Basisklassen-TypCode, auf welcher die Klasse aufbaut (von Werteliste 'Class' den Code)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ClassCode = "ClassCode";

/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung des Fenstertitels bei Form-Klassen (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ClassTID = "ClassTID";

/// <summary>
/// Eigenschaften in Form von XML, welche aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PropertiesXML = "PropertiesXML";

/// <summary>
/// Flag, ob Assembly der Klasse aus der Datenbank (Wert=1: Design, Wert=2: HotFix) oder aus KiSS-Core (Wert=0) geladen wird
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string Designer = "Designer";

/// <summary>
/// Zusätzliche Beschreibung der Klasse, obtionale Bemerkungen, etc.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Falls das Flag 'Designer=1' gesetzt ist, ist hier der vom Businessdesigner erstellte C#-Code hinterlegt
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string CodeGenerated = "CodeGenerated";

/// <summary>
/// Binary-Feld für zusätzliches Ressourcen-File der im Businessdesigner erzeugten Klasse. Aus dem Binary-Stream entsteht die *.resx-Datei.
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string Resource = "Resource";

/// <summary>
/// Das aus dem C#-Code compilierte Assembly der Businessdesigner-Klassen. Dieses Assembly wird bei Flag 'Designer=1' dynamisch aus der DB geholt und als zuätzliche Dll zusätzlich zum KiSS-Core geladen.
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string Assembly = "Assembly";

/// <summary>
/// DB-Name des Branches der Klasse, Herkunftsbezeichnung (entspricht bei neuen oder veränderten Klassen jeweils dem aktuellen DB-Namen)
/// [DataType: VARCHAR]
/// [Length: 128]
/// [AllowNulls: True]
/// </summary>
public const string Branch = "Branch";

/// <summary>
/// Automatisch hochgezählte BuildNr der Businessdesigner-Klassen, wird nur bei erfolgreichem Build der Klasse erhöht (CtlDesignerLoader.Build())
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string BuildNr = "BuildNr";

/// <summary>
/// Flag, welches bestimmt, ob es sich um eine System-Klasse (System=1) oder um eine kundenspezifische Klasse (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// UserID des Benutzers, welche die Klasse zurzeit augechecked hat (betrifft Spalte XUser.UserID). Falls NULL, ist die Klasse nicht ausgechecked.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_UserID = "CheckOut_UserID";

/// <summary>
/// Datum inklusive Zeit, wann der Benutzer aus CheckOut_UserID die Klasse ausgechecked hat. Falls NULL, ist die Klasse nicht augechecked.
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Date = "CheckOut_Date";

/// <summary>
/// Namespace-Erweiterung, welche zusätzlich zum Namespace des Modules vor den Klassennamen gesetzt wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string NamespaceExtension = "NamespaceExtension";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XClassTS = "XClassTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Components einer Klasse, wobei je Klasse der Name der Component eindeutig sein muss
/// </summary>

public static class XClassComponent{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XClassComponent"; }
}


/// <summary>
/// Primärschlüssel für XClassComponent Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ComponentName (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Primärschlüssel für XClassComponent Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name einer Component der jeweiligen Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>
public const string ComponentName = "ComponentName";

/// <summary>
/// C#-Typenbezeichnung der jeweiligen Component
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string TypeName = "TypeName";

/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung einiger Component-Eigenschaften (z.B. Caption der GridColumns) (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ComponentTID = "ComponentTID";

/// <summary>
/// Zusätzliches SQL-Statement, welches bei Components des Typs 'KiSS4.DB.SqlQuery' als SelectStatement angegeben werden kann
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SelectStatement = "SelectStatement";

/// <summary>
/// Zusätzlicher Tabellenname, welcher bei Components des Typs 'KiSS4.DB.SqlQuery' als TableName angegeben werden kann
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// Eigenschaften in Form von XML, welche für das Component aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PropertiesXML = "PropertiesXML";

/// <summary>
/// Flag, welches bestimmt, ob es sich um ein System-Component (System=1) oder um ein angepasstes Component (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XClassComponentTS = "XClassComponentTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Controls einer Klasse, wobei je Klasse der Name des Controls eindeutig sein muss
/// </summary>

public static class XClassControl{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XClassControl"; }
}


/// <summary>
/// Primärschlüssel für XClassControl Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ControlName (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Primärschlüssel für XClassControl Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name eines Controls der jeweiligen Klasse.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>
public const string ControlName = "ControlName";

/// <summary>
/// Control-Name des Eltern-Controls, zu welchem das jeweilige Control gehört. Wird für verschachtelte Layout-Anordnungen benötigt.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string ParentControl = "ParentControl";

/// <summary>
/// C#-Typenbezeichnung der jeweiligen Controls
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string TypeName = "TypeName";

/// <summary>
/// Mehrsprachigkeits-TID für die Übersetzung einiger Control-Eigenschaften (z.B. Text des KissLabels) (Referenz zu XLangText.TID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ControlTID = "ControlTID";

/// <summary>
/// Wird für das DataBinding verwendet, Name der anzubindenen Spalte der gegebenen DataSource
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DataMember = "DataMember";

/// <summary>
/// Wird für das DataBinding verwendet, Name der Datenquelle, welche vergebunden werden soll
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DataSource = "DataSource";

/// <summary>
/// Name der Werteliste, welche zum Beispiel bei Auswahlfeldern verwendet werden soll (Referenz auf XLOV.LOVName)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// Der zu verwendende TabIndex des jeweiligen Controls. Dieser Wert gibt gleichzeitig die Ladereihenfolge innerhalb des BusinessDesigners vor.
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TabIndex = "TabIndex";

/// <summary>
/// Left-Position in Pixel auf der horizontalen Achse des Eltern-Controls innerhalb des Layouts (positiv ist nach rechts)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string X = "X";

/// <summary>
/// Top-Position in Pixel auf der vertikalen Achse des Eltern-Controls innerhalb des Layouts (positiv ist nach unten)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Y = "Y";

/// <summary>
/// Breite des Controls in Pixel
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Width = "Width";

/// <summary>
/// Höhe des Controls in Pixel
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Height = "Height";

/// <summary>
/// Eigenschaften in Form von XML, welche für das Control aus den Layout-Properties des Businessdesigners generiert werden
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PropertiesXML = "PropertiesXML";

/// <summary>
/// Flag, welches bestimmt, ob es sich um ein System-Control (System=1) oder um ein angepasstes Control (System=0) handelt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XClassControlTS = "XClassControlTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Referenzen einer Klasse zu anderen Klassen, wobei je Klasse der Name der Referenz-Klasse eindeutig sein muss
/// </summary>

public static class XClassReference{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XClassReference"; }
}


/// <summary>
/// Primärschlüssel für XClassReference Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName_Ref (Unique), Fremdschlüssel auf XClass.ClassName.
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Primärschlüssel für XClassReference Records (nach Primärschlüssel-Standards), Primärschlüssel zusammen mit ClassName (Unique), Name der jeweiligen Klasse, welche Referenziert wird. Fremdschlüssel (FK_XClassReference_XClassRef) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName_Ref = "ClassName_Ref";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XClassReferenceTS = "XClassReferenceTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Regeln (C#-Code) einer Klasse
/// </summary>

public static class XClassRule{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XClassRule"; }
}


/// <summary>
/// Primärschlüssel für XClassRule Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XClassRuleID = "XClassRuleID";

/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassControl) => XClassControl.ClassName, Name der Klasse, zu welcher die Regel gehört
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassControl) => XClassControl.ControlName, Optionaler Name des Controls, welche die Regel betrifft
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ControlName = "ControlName";

/// <summary>
/// Fremdschlüssel (FK_XClassRule_XClassComponent) => XClassComponent.ComponentName, Optionaler Name des Components, welche die Regel betrifft
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ComponentName = "ComponentName";

/// <summary>
/// Fremdschlüssel (FK_XClassRule_XRule) => XRule.XRuleID, ID der Regel, welche den Code und weitere Angaben beinhaltet
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XRuleID = "XRuleID";

/// <summary>
/// Sortierungsinformation der einzelnen Regel
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((100))]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Flag, ob die Regel aktiv ist oder nicht ausgewertet wird beim Compile
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Active = "Active";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XClassRuleTS = "XClassRuleTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XConfig{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XConfig"; }
}


/// <summary>
/// Primärschlüssel für XConfig Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XConfigID = "XConfigID";

/// <summary>
/// Fremdschlüssel auf XNamespaceExtension.XNamespaceExtensionID, Verweis auf die NamespaceExtension für den jeweiligen XConfig-Eintrag. Wenn gesetzt, wird der Eintrag nur für diesen Namespace verwendet.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XNamespaceExtensionID = "XNamespaceExtensionID";

/// <summary>
/// Der Konfigurationspfad, welcher als primäre Identifikation des Konfigurationswert dient
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string KeyPath = "KeyPath";

/// <summary>
/// ID eines XLangText-Eintrags für die Übersetzung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KeyPathTID = "KeyPathTID";

/// <summary>
/// Flag, ob Config-Eintrag nur für BIAG Administratoren sichtbar und editierbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Datum, ab wann ein Konfigurationswert gültig ist (kann mehrere gleiche KeyPath haben, wobei immer nur einer gültig sein kann)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// Datentyp des Eintrags (LOV ConfigValue)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ValueCode = "ValueCode";

/// <summary>
/// Name der LOV, falls ValueCode = CSV
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// Beschreibung des Konfigurationswertes
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// ID eines XLangText-Eintrags für die Übersetzung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DescriptionTID = "DescriptionTID";

/// <summary>
/// Der Bit/Bool-Wert (ValueCode 5)
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ValueBit = "ValueBit";

/// <summary>
/// Der originale Bit-Wert
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueBit = "OriginalValueBit";

/// <summary>
/// Der DateTime-Wert (ValueCode 6)
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValueDateTime = "ValueDateTime";

/// <summary>
/// Der originale DateTime-Wert
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueDateTime = "OriginalValueDateTime";

/// <summary>
/// Der Decimal-Wert (ValueCode 3)
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string ValueDecimal = "ValueDecimal";

/// <summary>
/// Der originale Decimal-Wert
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueDecimal = "OriginalValueDecimal";

/// <summary>
/// Der Int-Wert (ValueCode 2)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ValueInt = "ValueInt";

/// <summary>
/// Der originale Int-Wert
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueInt = "OriginalValueInt";

/// <summary>
/// Der Money-Wert (ValueCode 4)
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValueMoney = "ValueMoney";

/// <summary>
/// Der originale Money-Wert
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueMoney = "OriginalValueMoney";

/// <summary>
/// Der Varchar-Wert (ValueCode 1; 7-11)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ValueVarchar = "ValueVarchar";

/// <summary>
/// Der originale Varchar-Wert
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueVarchar = "OriginalValueVarchar";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XConfigTS = "XConfigTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XDBServerVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDBServerVersion"; }
}


/// <summary>
/// PrimaryKey, wird als ID benutzt
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XDBServerVersionID = "XDBServerVersionID";

/// <summary>
/// Aktuelle DB-Server-Version
/// [DataType: VARCHAR]
/// [Length: 255]
/// [DefaultValue: (@@version)]
/// </summary>
public const string ServerVersion = "ServerVersion";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDBServerVersionTS = "XDBServerVersionTS";
}

/// <summary>
/// Type: Table
/// KiSS DB-Version History
/// </summary>

public static class XDBVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDBVersion"; }
}


/// <summary>
/// Primärschlüssel für XDBVersion Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XDBVersionID = "XDBVersionID";

/// <summary>
/// First Version number from the full version (e.g. "4.1.37.804"), so Major would be 4 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string MajorVersion = "MajorVersion";

/// <summary>
/// Second Version number from the full version (e.g. "4.1.37.804"), so Minor would be 1 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string MinorVersion = "MinorVersion";

/// <summary>
/// Third Version number from the full version (e.g. "4.1.37.804"), so Build would be 37 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Build = "Build";

/// <summary>
/// Last Version number from the full version (e.g. "4.1.37.804"), so Revision would be 804 in this example
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Revision = "Revision";

/// <summary>
/// Date when the DBVersion-Entry was made. This is also the sort order to determine the current version!
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string VersionDate = "VersionDate";

/// <summary>
/// SQL-Server Version information at the time when the DBVersion-Entry was made.
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string SQLServerVersionInfo = "SQLServerVersionInfo";

/// <summary>
/// A list of all DB-Objects which where changed since the last DBVersion-Entry.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ChangesSinceLastVersion = "ChangesSinceLastVersion";

/// <summary>
/// String representing the earliest compatible Client Version. E.g. if this is set to "4.1.37.800" it means that all Clients from 4.1.37.800 and later are compatible wit the DB-Schema and the DB-Objects.
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string BackwardCompatibleDownToClientVersion = "BackwardCompatibleDownToClientVersion";

/// <summary>
/// Optional Description of the Version (e.g. if this Build is for a specific Customer only)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDBVersionTS = "XDBVersionTS";
}

/// <summary>
/// Type: Table
/// Definiert die Regel, die bei einer globalen Lösch-Operation angewendet werden soll. Vergleichbar mit der Delete_Rule bei einem Foreign Key im DB-Schema.
/// </summary>

public static class XDeleteRule{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDeleteRule"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XDeleteRuleID = "XDeleteRuleID";

/// <summary>
/// Der Name der Tabelle für die diese Regel gilt.
/// [DataType: VARCHAR]
/// [Length: 128]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// Der Name der FK-Spalte für die diese Regel gilt.
/// [DataType: VARCHAR]
/// [Length: 128]
/// </summary>
public const string ColumnName = "ColumnName";

/// <summary>
/// Code der die anzuwendende Regel definiert.
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string XDeleteRuleCode = "XDeleteRuleCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDeleteRuleTS = "XDeleteRuleTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContext{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDocContext"; }
}


/// <summary>
/// Primärschlüssel für XDocContext Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DocContextID = "DocContextID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string DocContextName = "DocContextName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDocContextTS = "XDocContextTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContext_Template{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDocContext_Template"; }
}


/// <summary>
/// Primärschlüssel für XDocContext_Template Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XDocContext_TemplateID = "XDocContext_TemplateID";

/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocContext_Template) => XDocContext_Template.XDocContext_TemplateID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentID = "ParentID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentPosition = "ParentPosition";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FolderName = "FolderName";

/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocContext) => XDocContext.DocContextID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string DocContextID = "DocContextID";

/// <summary>
/// Fremdschlüssel (FK_XDocContext_Template_XDocTemplate) => XDocTemplate.DocTemplateID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string DocTemplateID = "DocTemplateID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDocContext_TemplateTS = "XDocContext_TemplateTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocContextType{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDocContextType"; }
}


/// <summary>
/// Primärschlüssel für XDocContextType Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DocContextTypeID = "DocContextTypeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NameDocContextType = "NameDocContextType";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string TemplateFolder = "TemplateFolder";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DocumentFolder = "DocumentFolder";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDocContextTypeTS = "XDocContextTypeTS";
}

/// <summary>
/// Type: Table
/// Tabelle für Vorlagen inklusive Binärdaten der Vorlage (Officeintegration).
/// </summary>

public static class XDocTemplate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDocTemplate"; }
}


/// <summary>
/// Primärschlüssel für XDocTemplate Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DocTemplateID = "DocTemplateID";

/// <summary>
/// Der User, welcher das Dokument bearbeitet.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string CheckOut_UserID = "CheckOut_UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// Name der Vorlage
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DocTemplateName = "DocTemplateName";

/// <summary>
/// Dateierweiterung.
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string FileExtension = "FileExtension";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DateCreation = "DateCreation";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DateLastSave = "DateLastSave";

/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string FileBinary = "FileBinary";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocFormatCode = "DocFormatCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Date = "CheckOut_Date";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Filename = "CheckOut_Filename";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Machine = "CheckOut_Machine";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string DocTemplateTS = "DocTemplateTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XDocument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XDocument"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string DocumentID = "DocumentID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DateCreation = "DateCreation";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID_Creator = "UserID_Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string DateLastSave = "DateLastSave";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID_LastSave = "UserID_LastSave";

/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// </summary>
public const string FileBinary = "FileBinary";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocFormatCode = "DocFormatCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string FileExtension = "FileExtension";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string DocReadOnly = "DocReadOnly";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocTemplateID = "DocTemplateID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XDocumentTS = "XDocumentTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DocTypeCode = "DocTypeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DocTemplateName = "DocTemplateName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_UserID = "CheckOut_UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Date = "CheckOut_Date";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Filename = "CheckOut_Filename";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string CheckOut_Machine = "CheckOut_Machine";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID_LastRead = "UserID_LastRead";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DateLastRead = "DateLastRead";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlink{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XHyperlink"; }
}


/// <summary>
/// Primärschlüssel für XHyperlink Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XHyperlinkID = "XHyperlinkID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// </summary>
public const string Hyperlink = "Hyperlink";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XHyperlinkTS = "XHyperlinkTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlinkContext{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XHyperlinkContext"; }
}


/// <summary>
/// Primärschlüssel für XHyperlinkContext Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XHyperlinkContextID = "XHyperlinkContextID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XHyperlinkContextTS = "XHyperlinkContextTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XHyperlinkContext_Hyperlink{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XHyperlinkContext_Hyperlink"; }
}


/// <summary>
/// Primärschlüssel für XHyperlinkContext_Hyperlink Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XHyperlinkContext_HyperlinkID = "XHyperlinkContext_HyperlinkID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentID = "ParentID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FolderName = "FolderName";

/// <summary>
/// Fremdschlüssel (FK_XHyperlinkContext_Hyperlink_XHyperlinkContext) => XHyperlinkContext.XHyperlinkContextID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XHyperlinkContextID = "XHyperlinkContextID";

/// <summary>
/// Fremdschlüssel (FK_XHyperlinkContext_Hyperlink_XHyperlink) => XHyperlink.XHyperlinkID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XHyperlinkID = "XHyperlinkID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserProfileCode = "UserProfileCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XHyperlinkContext_HyperlinkTS = "XHyperlinkContext_HyperlinkTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XIcon{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XIcon"; }
}


/// <summary>
/// Primärschlüssel für XIcon Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string XIconID = "XIconID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: IMAGE]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string Icon = "Icon";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XIconTS = "XIconTS";
}

/// <summary>
/// Type: Table
/// Sprachtabelle für alle Deutschen und Mehrsprachigen Texte aus Controls, Components, sonstigem Code, wie auch der Datenbank. Die Standardsprache wird automatisch von KiSS Core gefüllt.
/// </summary>

public static class XLangText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XLangText"; }
}


/// <summary>
/// Primärschlüssel für XLangText Records (nach Primärschlüssel-Standards). TID=Text-ID, zusammen mit LanguageCode als eindeutiger Schlüssel für einen Text je Sprache.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string TID = "TID";

/// <summary>
/// Primärschlüssel für XLangText Records (nach Primärschlüssel-Standards). Sprach-Code des Textes, zusammen mit TID als eindeutiger Schlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string LanguageCode = "LanguageCode";

/// <summary>
/// Text, welcher für TID und Sprache geführt wird
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// Für grosse Texte, wird aber zurzeit nicht verwendet (weder in KiSS Core, noch sonst)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string LargeText = "LargeText";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XLangTextTS = "XLangTextTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet alle Log-Einträge aus KiSS
/// </summary>

public static class XLog{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XLog"; }
}


/// <summary>
/// Primärschlüssel für XLog Records (nach Primärschlüssel-Standards). Eindeutige ID des Log-Eintrags.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XLogID = "XLogID";

/// <summary>
/// Herkunft des Log-Eintrags: Namespace.Klassenname
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Source = "Source";

/// <summary>
/// Zusätzlicher, optionaler Code innerhalb der Source. Dieser kann z.B. für Auswertungen eines bestimmten Typs aus gegebener Source verwendet werden.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SourceKey = "SourceKey";

/// <summary>
/// Log-Level (debug, info, warn, error, fatal)
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string XLogLevelCode = "XLogLevelCode";

/// <summary>
/// Log-Nachricht (z.B. Fehlermeldung)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Message = "Message";

/// <summary>
/// Zusätzlicher Kommentar zum Log-Eintrag
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Comment = "Comment";

/// <summary>
/// Name der zum Logeintrag referenzierten Tabelle, welche zusammen mit ReferenceKey den betroffenen Datensatz beschreibt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ReferenceTable = "ReferenceTable";

/// <summary>
/// Eindeutiger Schlüssel (PK) innerhalb der ReferenceTable. Diese ID ist z.B. beim Erzeugen eines neuen Logeintrags betroffen.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ReferenceID = "ReferenceID";

/// <summary>
/// Flag, ob ein Eintrag beim Säubern gelöscht werden darf (=0) oder erhalten bleiben soll (=1)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string NonPurgeable = "NonPurgeable";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XLogTS = "XLogTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Wertelisten (Codes sind in XLOVCode)
/// </summary>

public static class XLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XLOV"; }
}


/// <summary>
/// Primärschlüssel für XLOV Records (nach Primärschlüssel-Standards). Eindeutiger Name einer Werteliste, wobei in der Regel als Prefix das Modul gewählt wird (z.B. BaXYZ)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XLOVID = "XLOVID";

/// <summary>
/// Eindeutiger Name einer Werteliste, wobei in der Regel als Prefix das Modul gewählt wird (z.B. BaXYZ)
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// Beschreibung der Werteliste
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Flag, ob eine Werteliste Systemrelevant ist und daher nur mit entsprechendem Wissen geändert werden sollte (0=Kunde, 1=System)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Flag, ob eine Werteliste erweiterbar ist, d.h. neue Codes enthalten kann
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Expandable = "Expandable";

/// <summary>
/// Fremdschlüssel (FK_XLOV_XModul) => XModul.ModulID, ID des Modules, zu welcher eine Werteliste gehört.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// Zeitstempel, wann eine Werteliste zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LastUpdated = "LastUpdated";

/// <summary>
/// Flag, ob eine Werteliste mehrsprachig geführt werden kann (0=nur Standard, 1=Auch Mehrsprachig möglich)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Translatable = "Translatable";

/// <summary>
/// Name/Begriff der Zusatzspalte Value1, wird im KiSS bei der Bearbeitung der Werteliste für Value 1 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NameValue1 = "NameValue1";

/// <summary>
/// Name/Begriff der Zusatzspalte Value2, wird im KiSS bei der Bearbeitung der Werteliste für Value 2 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NameValue2 = "NameValue2";

/// <summary>
/// Name/Begriff der Zusatzspalte Value3, wird im KiSS bei der Bearbeitung der Werteliste für Value 3 angezeigt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NameValue3 = "NameValue3";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XLOVTS = "XLOVTS";
}

/// <summary>
/// Type: Table
/// Werte/Codes der in XLOV definierten Wertelisten
/// </summary>

public static class XLOVCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XLOVCode"; }
}


/// <summary>
/// Primärschlüssel für XLOVCode Records (nach Primärschlüssel-Standards). Name der Werteliste, welche in XLOV eingetragen ist, Primärschlüssel zusammen mit Code.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XLOVCodeID = "XLOVCodeID";

/// <summary>
/// Fremdschlüssel (FK_XLOVCode_XLOV) => XLOVID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XLOVID = "XLOVID";

/// <summary>
/// Name der Werteliste, welche in XLOV eingetragen ist, Primärschlüssel zusammen mit Code.
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsForeignKey: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// Eindeutiger Code der einzelnen Werteliste zusammen mit LOVName.
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Code = "Code";

/// <summary>
/// Text, welcher für den entsprechenden Code der einzelnen Werteliste verwendet wird
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// TID für die Mehrsprachigkeit des Textes, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TextTID = "TextTID";

/// <summary>
/// Sortierung der einzelnen Codes innerhalb der Werteliste (wenn nicht nach Text oder Code sortiert)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Abgekürzter Text der Spalte Text
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ShortText = "ShortText";

/// <summary>
/// TID für die Mehrsprachigkeit des ShortTextes, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ShortTextTID = "ShortTextTID";

/// <summary>
/// Für BFS relevante Wertelisten kann hier der zugehörige BFS-Code angegeben werden
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BFSCode = "BFSCode";

/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 1 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Value1 = "Value1";

/// <summary>
/// TID für die Mehrsprachigkeit des Value 1, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Value1TID = "Value1TID";

/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 2 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Value2 = "Value2";

/// <summary>
/// TID für die Mehrsprachigkeit des Value 2, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Value2TID = "Value2TID";

/// <summary>
/// Zusätzlicher optionaler Steuerwert Nr. 3 für spezifische Funktionalitäten
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Value3 = "Value3";

/// <summary>
/// TID für die Mehrsprachigkeit des Value 3, abgelegt je Sprache auf XLangText
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Value3TID = "Value3TID";

/// <summary>
/// Beschreibung des einzelnen Codes der jeweiligen Werteliste
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Name des LOVCode-Eintrags, welcher für die automatische Generierung der LOVs-Enums in C# verwendet wird
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LOVCodeName = "LOVCodeName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string IsActive = "IsActive";

/// <summary>
/// Flag, ob ein spezifischer Code systemkritisch ist (0=Kunde, 1=Systemrelevant)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XLOVCodeTS = "XLOVCodeTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XMenuItem{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XMenuItem"; }
}


/// <summary>
/// Primärschlüssel für XMenuItem Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string MenuItemID = "MenuItemID";

/// <summary>
/// Fremdschlüssel (FK_XMenuItem_XMenuItem) => XMenuItem.MenuItemID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentMenuItemID = "ParentMenuItemID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string ControlName = "ControlName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string BeginMenuGroup = "BeginMenuGroup";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Enabled = "Enabled";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Visible = "Visible";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Caption = "Caption";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MenuTID = "MenuTID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ItemShortcutCtrl = "ItemShortcutCtrl";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ItemShortcutShift = "ItemShortcutShift";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ItemShortcutAlt = "ItemShortcutAlt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ItemShortcutKey = "ItemShortcutKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// </summary>
public const string ImageIndex = "ImageIndex";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((-1))]
/// </summary>
public const string ImageIndexDisabled = "ImageIndexDisabled";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Fremdschlüssel (FK_XMenuItem_XClass) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ShowInToolbar = "ShowInToolbar";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string BeginToolbarGroup = "BeginToolbarGroup";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ToolbarSortKey = "ToolbarSortKey";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string HideLockedItems = "HideLockedItems";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XMenuItemTS = "XMenuItemTS";

/// <summary>
/// Flag, ob Menu-Eintrag nur für BIAG Super-Administratoren sichtbar ist
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string OnlyBIAGAdminVisible = "OnlyBIAGAdminVisible";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XMessage{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XMessage"; }
}


/// <summary>
/// Primärschlüssel für XMessage Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// Primärschlüssel für XMessage Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string MessageName = "MessageName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MessageTID = "MessageTID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MessageCode = "MessageCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Context = "Context";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XMessageTS = "XMessageTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XModul{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XModul"; }
}


/// <summary>
/// Primärschlüssel für XModul Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ShortName = "ShortName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string NameSpace = "NameSpace";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string DB_Prefix = "DB_Prefix";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string ModulTree = "ModulTree";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XModulTS = "XModulTS";

/// <summary>
/// Flag, ob ein Modul lizenziert wurde oder nicht (1=Kunde hat Lizenz, 0=Kunde hat keine Lizenz)
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string Licensed = "Licensed";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XModulTree{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XModulTree"; }
}


/// <summary>
/// Primärschlüssel für XModulTree Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string ModulTreeID = "ModulTreeID";

/// <summary>
/// Fremdschlüssel (FK_XModulTree_XModulTree) => XModulTree.ModulTreeID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulTreeID_Parent = "ModulTreeID_Parent";

/// <summary>
/// Fremdschlüssel (FK_XModulTree_XModulTree) => XModulTree.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((9999))]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// Fremdschlüssel (FK_XModulTree_XIcon) => XIcon.XIconID
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// [IsForeignKey: True]
/// </summary>
public const string XIconID = "XIconID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Fremdschlüssel (FK_XModulTree_XClass) => XClass.ClassName
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Fremdschlüssel (FK_XModulTree_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string sqlPreExecute = "sqlPreExecute";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string ModulTreeCode = "ModulTreeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string sqlInsertTreeItem = "sqlInsertTreeItem";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string Active = "Active";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XModulTreeTS = "XModulTreeTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet alle KiSS Namespace-Extensions
/// </summary>

public static class XNamespaceExtension{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XNamespaceExtension"; }
}


/// <summary>
/// Primärschlüssel für XNamespaceExtension Records (nach Primärschlüssel-Standards). Eindeutige ID des Namespace-Extension-Eintrags.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XNamespaceExtensionID = "XNamespaceExtensionID";

/// <summary>
/// Namespace-Extension, welche für die Indentifikation einer spezifischen Implementation verwendet wird
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string NamespaceExtension = "NamespaceExtension";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XNamespaceExtensionTS = "XNamespaceExtensionTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet sämtliche Abteilungen für die Benutzerverwaltung in hierarchischer Struktur
/// </summary>

public static class XOrgUnit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XOrgUnit"; }
}


/// <summary>
/// Primärschlüssel für XOrgUnit Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Fremdschlüssel: XOrgUnit.ParentID => XOrgUnit.OrgUnitID, Verweis auf das das Elternelement in der hierarchischen Abteilungsstruktur
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentID = "ParentID";

/// <summary>
/// Fremdschlüssel: XOrgUnit.ModulD => XModul.ModulID, wird für die Filterung gewisser Datensätze verwendet
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// Fremdschlüssel: XOrgUnit.ChiefID => XUser.UserID, ID des Leiters der Abteilung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ChiefID = "ChiefID";

/// <summary>
/// Fremdschlüssel: XOrgUnit.RechtsdienstUserID => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string RechtsdienstUserID = "RechtsdienstUserID";

/// <summary>
/// Fremdschlüssel: XOrgUnit.ReprensentativeID => XUser.UserID, Stellvertreter des XOrgUnit.ChiefID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string RepresentativeID = "RepresentativeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StellvertreterID = "StellvertreterID";

/// <summary>
/// Fremdschlüssel zur Tabelle XProfile. Das Profil dient als Filter für Vorlagen bei der Dokumentgeneration.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// Name der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ItemName = "ItemName";

/// <summary>
/// Typ der Abteilung gemäss Werteliste: OrganisationsEinheitTyp
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OEItemTypCode = "OEItemTypCode";

/// <summary>
/// Position innerhalb derselben ParentID Hierarchiestruktur
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentPosition = "ParentPosition";

/// <summary>
/// Kostenstelle der Abteilung (kann jede Abteilung eine eigene haben)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// Mandantennummer der Abteilung. Dies wird in der Businesslogik definiert, dass dieselbe Mandantennummer der Elternabteilung(en) gilt, sofern nicht selber eine eigene definiert wird
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Mandantennummer = "Mandantennummer";

/// <summary>
/// Lohnlaufnummer für die Stundenlohnschnittstelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StundenLohnlaufNr = "StundenLohnlaufNr";

/// <summary>
/// Lohnlaufnummer für die Leistungsdatenschnittstelle
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LeistungLohnlaufNr = "LeistungLohnlaufNr";

/// <summary>
/// Sammelkontonummer
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Sammelkonto = "Sammelkonto";

/// <summary>
/// PC-Kontonummer
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PCKonto = "PCKonto";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AD_Abteilung = "AD_Abteilung";

/// <summary>
/// Logo der Abteilung
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Logo = "Logo";

/// <summary>
/// Adresse der Abteilung als Ganzes (Standard)
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Adressat = "Adressat";

/// <summary>
/// Adresse der Abteilung als Ganzes (ZH)
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// Name der KGS für die Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseKGS = "AdresseKGS";

/// <summary>
/// Name der Abteilung für die Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseAbteilung = "AdresseAbteilung";

/// <summary>
/// Strasse der Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AdresseStrasse = "AdresseStrasse";

/// <summary>
/// Postfach der Adresse
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// Flag, ob das Postfach eine Nummer hat oder lediglich mit Postfach angeschrieben werden soll
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// Hausnummer
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdresseHausNr = "AdresseHausNr";

/// <summary>
/// Postleitzahl
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdressePLZ = "AdressePLZ";

/// <summary>
/// Ortschaft
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AdresseOrt = "AdresseOrt";

/// <summary>
/// Telefonnummer der Abteilung (TODO: Telefon vs. Phone)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Phone = "Phone";

/// <summary>
/// Telefonnummer der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// Faxnummer der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// Emailadresse der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// Internet-/Intranet-Seite der Abteilung (TODO: WWW vs. Internet)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string WWW = "WWW";

/// <summary>
/// Internet-/Intranet-Seite der Abteilung
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Internet = "Internet";

/// <summary>
/// Benutzerprofil (TODO: XProfileID --> Neue Vorlagenverwaltung)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserProfileCode = "UserProfileCode";

/// <summary>
/// Freitext 1
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1 = "Text1";

/// <summary>
/// Freitext 2
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2 = "Text2";

/// <summary>
/// Freitext 3
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text3 = "Text3";

/// <summary>
/// Freitext 4
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text4 = "Text4";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// VersionsID des Records für die Historisierung
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XOrgUnitTS = "XOrgUnitTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XOrgUnit_User{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XOrgUnit_User"; }
}


/// <summary>
/// Primärschlüssel für XOrgUnit_User Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XOrgUnit_UserID = "XOrgUnit_UserID";

/// <summary>
/// Fremdschlüssel (FK_XOrgUnit_User_XOrgUnit) => XOrgUnit.OrgUnitID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Fremdschlüssel (FK_XOrgUnit_User_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string OrgUnitMemberCode = "OrgUnitMemberCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayInsert = "MayInsert";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayUpdate = "MayUpdate";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayDelete = "MayDelete";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XOrgUnit_UserTS = "XOrgUnit_UserTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle von XOrgUnit und XDocTemplate (Abteilung und Vorlage)
/// </summary>

public static class XOrgUnit_XDocTemplate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XOrgUnit_XDocTemplate"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XOrgUnit_XDocTemplateID = "XOrgUnit_XDocTemplateID";

/// <summary>
/// Fremdschlüssel zu XOrgUnit (Abteilung).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// Fremdschlüssel zu XDocTemplate (Vorlage).
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string DocTemplateID = "DocTemplateID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zulest geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XOrgUnit_XDocTemplateTS = "XOrgUnit_XDocTemplateTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XPermissionGroup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XPermissionGroup"; }
}


/// <summary>
/// Primärschlüssel für XPermissionGroup Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string PermissionGroupID = "PermissionGroupID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string PermissionGroupName = "PermissionGroupName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XPermissionGroupTS = "XPermissionGroupTS";

/// <summary>
/// Definiert die Reihenfolge in der die Empfänger der Bewilligungsanfragen ermittelt werden.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kompetenzstufe = "Kompetenzstufe";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XPermissionValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XPermissionValue"; }
}


/// <summary>
/// Primärschlüssel für XPermissionValue Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string PermissionValueID = "PermissionValueID";

/// <summary>
/// Fremdschlüssel (FK_XPermissionValue_XPermissionGroup) => XPermissionGroup.PermissionGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string PermissionGroupID = "PermissionGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PermissionCode = "PermissionCode";

/// <summary>
/// Fremdschlüssel (FK_XPermissionValue_BgPositionsart) => BgPositionsart.BgPositionsartID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XPermissionValueTS = "XPermissionValueTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XPlausiFehler{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XPlausiFehler"; }
}


/// <summary>
/// Primärschlüssel für XPlausiFehler Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string XPlausiFehlerID = "XPlausiFehlerID";

/// <summary>
/// Fremdschlüssel (FK_XPlausiFehler_BaPerson) => BaPerson.BaPersonID
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PlausiNo = "PlausiNo";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VarName = "VarName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [DefaultValue: (0)]
/// </summary>
public const string PlausiFehlerTypCode = "PlausiFehlerTypCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string Erledigt = "Erledigt";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XPlausiFehlerTS = "XPlausiFehlerTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DossierID = "DossierID";
}

/// <summary>
/// Type: Table
/// Ein Profil enthält eine Auswahl an Tags (XProfileTags). So kann man anhand eines Input-Profiles passende andere Profile finden. Zur Zeit nur bei Vorlagen verwendet.
/// </summary>

public static class XProfile{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XProfile"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// Typ des Profils. Es gibt Profile für Vorlagen und Profile für Abteilungen und Benutzer.
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string XProfileTypeCode = "XProfileTypeCode";

/// <summary>
/// Angezeigter Name des Profils (mehrsprachig). Fremdschlüsssel auf XLangText.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Interner Name des Profils. Siehe auch NameTID (Name kann in mehrere Sprachen übersetzt werden).
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Beschreibung des Profils.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XProfileTS = "XProfileTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle zwischen XProfileTag und XProfile
/// </summary>

public static class XProfile_XProfileTag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XProfile_XProfileTag"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XProfile_XProfileTagID = "XProfile_XProfileTagID";

/// <summary>
/// Fremdschlüssel zu XProfile
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// Fremdschlüssel zu XProfileTag
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XProfileTagID = "XProfileTagID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XProfile_XProfileTagTS = "XProfile_XProfileTagTS";
}

/// <summary>
/// Type: Table
/// Ein XProfileTag ist ein Attribut, welches einem Profil zugeordnet werden kann. Beispiele aus ProInfirmis: Deutsch, Französisch, Italienisch. Bei BSS: z.B. Sozialhilfe.
/// </summary>

public static class XProfileTag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XProfileTag"; }
}


/// <summary>
/// Primärschlüssel.
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XProfileTagID = "XProfileTagID";

/// <summary>
/// Teil eines Fremdschlüssels auf XLangText. Der andere Teil ist LanguageCode. Pro Sprache gibt es einen Eintrag in XlangText. Siehe auch Spalte Name.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// Name des Merkmals. Kann in mehrere Sprachen übersetzt werden, siehe auch Spalte NameTID
/// [DataType: VARCHAR]
/// [Length: 300]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// Beschreibung des Profil-Merkmals.
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für Optimistic-Locking
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XProfileTagTS = "XProfileTagTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XQuery{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XQuery"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [IsPrimaryKey: True]
/// </summary>
public const string QueryName = "QueryName";

/// <summary>
/// Fremdschlüssel (FK_XQuery_XQuery) => XQuery.QueryName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentReportName = "ParentReportName";

/// <summary>
/// Fremdschlüssel (FK_XQuery_XQuery) => XQuery.QueryCode
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string QueryCode = "QueryCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string UserText = "UserText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string LayoutXML = "LayoutXML";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ParameterXML = "ParameterXML";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SQLquery = "SQLquery";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ContextForms = "ContextForms";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ReportSortKey = "ReportSortKey";

/// <summary>
/// The column name used to create a relation between two tables, usefull for subreports
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string RelationColumnName = "RelationColumnName";

/// <summary>
/// flag ob der Report System ist oder nicht. System-Reports können nur durch biag_admin geändert werden
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((1))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XQueryTS = "XQueryTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XRight{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XRight"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string RightID = "RightID";

/// <summary>
/// Fremdschlüssel (FK_XRight_XClass) => XClassID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XClassID = "XClassID";

/// <summary>
/// Klassenname
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// Rechtename
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string RightName = "RightName";

/// <summary>
/// Benutzerinformationen
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string UserText = "UserText";

/// <summary>
/// Beschreibung für Releasenotes
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XRightTS = "XRightTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XRule{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XRule"; }
}


/// <summary>
/// Primärschlüssel für XRule Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// </summary>
public const string XRuleID = "XRuleID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((3))]
/// </summary>
public const string RuleCode = "RuleCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string RuleName = "RuleName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7000]
/// [AllowNulls: True]
/// </summary>
public const string RuleDescription = "RuleDescription";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string csCode = "csCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string PublicRule = "PublicRule";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string TemplateRule = "TemplateRule";

/// <summary>
/// Fremdschlüssel (FK_XRule_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DefaultSortKey = "DefaultSortKey";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XRuleTS = "XRuleTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XSearchControlTemplate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XSearchControlTemplate"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XSearchControlTemplateID = "XSearchControlTemplateID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulTreeID = "ModulTreeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ParentXSearchControlTemplateID = "ParentXSearchControlTemplateID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((0))]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ColLayout = "ColLayout";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string SearchImmediately = "SearchImmediately";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XSearchControlTemplateField{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XSearchControlTemplateField"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XSearchControlTemplateFieldID = "XSearchControlTemplateFieldID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XSearchControlTemplateID = "XSearchControlTemplateID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ControlName = "ControlName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ControlType = "ControlType";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTable{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTable"; }
}


/// <summary>
/// Primärschlüssel für XTable Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// [DataType: CHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>
public const string Alias = "Alias";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string System = "System";

/// <summary>
/// Fremdschlüssel (FK_XTable_XModul) => XModul.ModulID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: (0)]
/// </summary>
public const string DataWareHouse = "DataWareHouse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Comment = "Comment";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTableTS = "XTableTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTableColumn{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTableColumn"; }
}


/// <summary>
/// Primärschlüssel für XTableColumn Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// Primärschlüssel für XTableColumn Records (nach Primärschlüssel-Standards)
/// [DataType: VARCHAR]
/// [Length: 255]
/// [IsPrimaryKey: True]
/// </summary>
public const string ColumnName = "ColumnName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FieldCode = "FieldCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string DisplayText = "DisplayText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DisplayTextTID = "DisplayTextTID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Comment = "Comment";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTableColumnTS = "XTableColumnTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTask{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTask"; }
}


/// <summary>
/// Primärschlüssel für XTask Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTaskID = "XTaskID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaFallID = "FaFallID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// Foreign Key auf Benutzer, welcher den Task erledigt
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_Erledigt = "UserID_Erledigt";

/// <summary>
/// Foreign Key auf Benutzer, welcher den Taks in Bearbeitung setzt.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID_InBearbeitung = "UserID_InBearbeitung";

/// <summary>
/// Foreign Key auf Aktennotiz
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string FaAktennotizID = "FaAktennotizID";

/// <summary>
/// Foreign Key auf Dokument
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [NamespaceExtension: ZH]
/// </summary>
public const string FaDokumenteID = "FaDokumenteID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskTypeCode = "TaskTypeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string TaskStatusCode = "TaskStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string CreateDate = "CreateDate";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string StartDate = "StartDate";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ExpirationDate = "ExpirationDate";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DoneDate = "DoneDate";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Subject = "Subject";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2500]
/// [AllowNulls: True]
/// </summary>
public const string TaskDescription = "TaskDescription";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SenderID = "SenderID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskSenderCode = "TaskSenderCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ReceiverID = "ReceiverID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskReceiverCode = "TaskReceiverCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2500]
/// [AllowNulls: True]
/// </summary>
public const string ResponseText = "ResponseText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskResponseCode = "TaskResponseCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>
public const string JumpToPath = "JumpToPath";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTaskTS = "XTaskTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTaskAutoGenerated{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTaskAutoGenerated"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTaskAutoGeneratedID = "XTaskAutoGeneratedID";

/// <summary>
/// Fremdschlüssel auf XTask.XTaskID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string XTaskID = "XTaskID";

/// <summary>
/// Name der zur Pendenz referenzierten Tabelle, welche zusammen mit ReferenceID den betroffenen Datensatz beschreibt
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ReferenceTable = "ReferenceTable";

/// <summary>
/// Eindeutiger Schlüssel (PK) innerhalb der ReferenceTable. Diese ID ist z.B. beim Erzeugen eines neuer Pendenz betroffen.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ReferenceID = "ReferenceID";

/// <summary>
/// Typ des automatisch erzeugten Pendenz-Eintrages
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string XTaskAutoGeneratedTypeCode = "XTaskAutoGeneratedTypeCode";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTaskAutoGeneratedTS = "XTaskAutoGeneratedTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTaskTemplate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTaskTemplate"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTaskTemplateID = "XTaskTemplateID";

/// <summary>
/// Typ der Pendenz. Ist in der TaskType-LOV definiert.
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TaskTypeCode = "TaskTypeCode";

/// <summary>
/// Status der Pendenz. Ist in der TaskStatus-LOV definiert.
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TaskStatusCode = "TaskStatusCode";

/// <summary>
/// Betreff der Pendenz
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string TaskSubject = "TaskSubject";

/// <summary>
/// TID für die Mehrsprachigkeit des Betreffs.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskSubjectTID = "TaskSubjectTID";

/// <summary>
/// Beschreibung der Pendenz
/// [DataType: VARCHAR]
/// [Length: 2500]
/// </summary>
public const string TaskDescription = "TaskDescription";

/// <summary>
/// TID für die Mehrsprachigkeit der Beschreibung.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TaskDescriptionTID = "TaskDescriptionTID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTaskTemplateTS = "XTaskTemplateTS";
}

/// <summary>
/// Type: Table
/// Bezeichnet eine Aktion, die beim Erledigen einer Pendenz ausgeführt wird
/// </summary>

public static class XTaskTypeAction{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTaskTypeAction"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTaskTypeActionID = "XTaskTypeActionID";

/// <summary>
/// LOV XTaskTypeActionType
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string XTaskTypeActionTypeCode = "XTaskTypeActionTypeCode";

/// <summary>
/// LOV TaskType
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TaskTypeCode = "TaskTypeCode";

/// <summary>
/// Die Bezeichnung der Aktion (Button in Pendenzenverwaltung)
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BezeichnungTID = "BezeichnungTID";

/// <summary>
/// Der Betreff der Benachrichtigung, die beim Ausführen erstellt wird
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Betreff = "Betreff";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BetreffTID = "BetreffTID";

/// <summary>
/// Der Text der Benachrichtigung, die beim Ausführen erstellt wird
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string TextTID = "TextTID";

/// <summary>
/// Definiert, ob beim Ausführen eine Benachrichtigung generiert wird
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string BenachrichtigungAktiv = "BenachrichtigungAktiv";

/// <summary>
/// Gibt an, ob der Ersteller der Pendenz diese Aktion ausführen darf
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string ErstellerDarfAusfuehren = "ErstellerDarfAusfuehren";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTaskTypeActionTS = "XTaskTypeActionTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XTranslateColumn{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTranslateColumn"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTranslateColumnID = "XTranslateColumnID";

/// <summary>
/// Name der Tabelle, welche die zu übersetzende Spalte enthält
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// Name der Spalte, welche den Standard-Text beinhaltet
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string ColumnName = "ColumnName";

/// <summary>
/// Name der Spalte, welche für den zugehörigen TID verwendet wird
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string TIDColumnName = "TIDColumnName";

/// <summary>
/// Beschreibung zum Eintrag
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// Wer den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz mutiert hat
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz mutiert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird zur Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTranslateColumnTS = "XTranslateColumnTS";
}

/// <summary>
/// Type: Table
/// Liste aller Typen (z.B. Interfaces), die in Kiss dynamisch konfiguriert und so z.B. kundenspezifische Funktionalität (Services etc) instanziert werden können. Jeweils ein Lookup-Type (z.B. ein Interface) zeigt auf eine konkrete Standard-Implementierung und optional auf die Kundenspezifische Implementationsvariante dieses Lookup-Typs.
/// </summary>

public static class XTypeConfig{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XTypeConfig"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XTypeConfigID = "XTypeConfigID";

/// <summary>
/// Typename des Lookup-Types (z.B. eines Interfaces), ohne Namespace. Bsp. `IBaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string LookupTypeName = "LookupTypeName";

/// <summary>
/// Namespace des Lookup-Types (z.B. eines Interfaces), ohne den Namen des Typs. Bsp. `Kiss.Interfaces.BL.BA`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LookupTypeNamespace = "LookupTypeNamespace";

/// <summary>
/// Name des Assemblies des Lookup-Types (z.B. eines Interfaces), ohne File Extension. Bsp. `Kiss.Interfaces`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LookupTypeAssemblyName = "LookupTypeAssemblyName";

/// <summary>
/// Standard-Implementation: Typename des Typs (Klasse), das den Lookup-Typ implementiert, ohne Namespace. Bsp. `BaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ConcreteStandardTypeName = "ConcreteStandardTypeName";

/// <summary>
/// Standard-Implementation: Namespace des Typs (Klasse), das den Lookup-Typ implementiert, ohne den Namen des Typs. Bsp. `Kiss.BL.BA`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string ConcreteStandardTypeNamespace = "ConcreteStandardTypeNamespace";

/// <summary>
/// Standard-Implementation: Name des Typs (Klasse), das den Lookup-Typ implementiert, ohne File Extension. Bsp. `Kiss.BL`
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string ConcreteStandardTypeAssemblyName = "ConcreteStandardTypeAssemblyName";

/// <summary>
/// Kundenspezifische Implementation: Typename des Typs (Klasse), das den Lookup-Typ implementiert, ohne Namespace. Bsp. `BaPersonService`
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ConcreteCustomTypeName = "ConcreteCustomTypeName";

/// <summary>
/// Kundenspezifische Implementation: Namespace des Typs (Klasse), das den Lookup-Typ implementiert, ohne den Namen des Typs. Bsp. `Kiss.BL.BA.ZH`
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ConcreteCustomTypeNamespace = "ConcreteCustomTypeNamespace";

/// <summary>
/// Kundenspezifische Implementation: Name des Typs (Klasse), das den Lookup-Typ implementiert, ohne File Extension. Bsp. `Kiss.BL`
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ConcreteCustomTypeAssemblyName = "ConcreteCustomTypeAssemblyName";

/// <summary>
/// LOV InstanceScope: Singleton, PerRequest, PerThread
/// [DataType: INT]
/// [Length: 4]
/// [DefaultValue: ((1))]
/// </summary>
public const string InstanceScopeCode = "InstanceScopeCode";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XTypeConfigTS = "XTypeConfigTS";
}

/// <summary>
/// Type: Table
/// Tabelle für KiSS Benutzer
/// </summary>

public static class XUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ChiefID = "ChiefID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string PrimaryUserID = "PrimaryUserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string PermissionGroupID = "PermissionGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string GrantPermGroupID = "GrantPermGroupID";

/// <summary>
/// Default Profil für die Dokumentgeneration.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string SachbearbeiterID = "SachbearbeiterID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// [NamespaceExtension: PI]
/// </summary>
public const string MitarbeiterNr = "MitarbeiterNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// [DefaultValue: ([dbo].[fnXGetUserRNDPwd](newid()))]
/// </summary>
public const string PasswordHash = "PasswordHash";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FirstName = "FirstName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LastName = "LastName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ShortName = "ShortName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsLocked = "IsLocked";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsUserAdmin = "IsUserAdmin";

/// <summary>
/// Flag, ob Benutzer BIAG Super-Administrator ist und somit über alle Rechte verfügt
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsUserBIAGAdmin = "IsUserBIAGAdmin";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string IsMandatsTraeger = "IsMandatsTraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GenderCode = "GenderCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtstag = "Geburtstag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LanguageCode = "LanguageCode";

/// <summary>
/// Standard Telefonnummer (wird für PI nicht benutzt, da spezifische Telefonnummern zur Verfügung stehen)
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Phone = "Phone";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneMobile = "PhoneMobile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneOffice = "PhoneOffice";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhoneIntern = "PhoneIntern";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PhonePrivat = "PhonePrivat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// Benutzerprofil (TODO: XProfileID)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserProfileCode = "UserProfileCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Funktion = "Funktion";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RoleTitleCode = "RoleTitleCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string QualificationTitleCode = "QualificationTitleCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// Freitext 1
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1 = "Text1";

/// <summary>
/// Freitext 2
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2 = "Text2";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string JobPercentage = "JobPercentage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HoursPerYearForCaseMgmt = "HoursPerYearForCaseMgmt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eintrittsdatum = "Eintrittsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Austrittsdatum = "Austrittsdatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LohntypCode = "LohntypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostentraeger = "Kostentraeger";

/// <summary>
/// Spalte um weiter Kostenträger zu erfassen (Int komma separiert)
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string WeitereKostentraeger = "WeitereKostentraeger";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenart = "Kostenart";

/// <summary>
/// Flag für die Stundenlohn- und Leistungsdaten-Schnittstelle. Erfasste Leistungen eines Benutzers mit BDEExport = 1 werden nicht über die Schnittstelle exportiert.
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string KeinBDEExport = "KeinBDEExport";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MigHerkunft = "MigHerkunft";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MigMAKuerzel = "MigMAKuerzel";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MigUserFix = "MigUserFix";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36Area = "visdat36Area";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36SourceFile = "visdat36SourceFile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string visdat36ID = "visdat36ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string visdat36Name = "visdat36Name";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Eintrags - wird für die Änderungsverfolgung benötigt (optimistic locking)
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUserTS = "XUserTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_Archive{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUser_Archive"; }
}


/// <summary>
/// Primärschlüssel für XUser_Archive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Primärschlüssel für XUser_Archive Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string ArchiveID = "ArchiveID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUser_ArchiveTS = "XUser_ArchiveTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_BDEUserGroup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUser_BDEUserGroup"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsForeignKey: True]
/// </summary>
public const string BDEUserGroupID = "BDEUserGroupID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUser_BDEUserGroupTS = "XUser_BDEUserGroupTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XUser_UserGroup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUser_UserGroup"; }
}


/// <summary>
/// Primärschlüssel für XUser_UserGroup Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XUser_UserGroupID = "XUser_UserGroupID";

/// <summary>
/// Fremdschlüssel (FK_XUser_UserGroup_XUser) => XUser.UserID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel (FK_XUser_UserGroup_XUserGroup) => XUserGroup.UserGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserGroupID = "UserGroupID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUser_UserGroupTS = "XUser_UserGroupTS";
}

/// <summary>
/// Type: Table
/// Zwischentabelle (Many2Many), XUser und XDocTemplate
/// </summary>

public static class XUser_XDocTemplate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUser_XDocTemplate"; }
}


/// <summary>
/// Primärschlüssel
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XUser_XDocTemplateID = "XUser_XDocTemplateID";

/// <summary>
/// Fremdschlüssel auf XUser.
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Fremdschlüssel auf XDocTemplate (Dokument).
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string DocTemplateID = "DocTemplateID";

/// <summary>
/// Wer den Datensatz angelegt hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz angelegt worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Wer den Datensatz zuletzt geändert hat.
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert worden ist.
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp für optimistic Locking.
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUser_XDocTemplateTS = "XUser_XDocTemplateTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Benutzergruppen für die Zuweisung der Rechte zu Benutzern
/// </summary>

public static class XUserGroup{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUserGroup"; }
}


/// <summary>
/// Primärschlüssel der Benutzergruppen
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string UserGroupID = "UserGroupID";

/// <summary>
/// Name der Benutzergruppe
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string UserGroupName = "UserGroupName";

/// <summary>
/// ID der Übersetzung für den Gruppenname (Wert in XLangText)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserGroupNameTID = "UserGroupNameTID";

/// <summary>
/// Flag, ob eine Benutzergruppe nur von Administratoren eingesehen und bearbeitet werden kann
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string OnlyAdminVisible = "OnlyAdminVisible";

/// <summary>
/// Optionale Beschreibung der Benutzergruppe
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Description = "Description";

/// <summary>
/// ID der Übersetzung für die Beschreibung (Wert in XLangText)
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DescriptionTID = "DescriptionTID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp des Records, wird für die Änderungsverfolgung benötigt
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUserGroupTS = "XUserGroupTS";
}

/// <summary>
/// Type: Table
/// </summary>

public static class XUserGroup_Right{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUserGroup_Right"; }
}


/// <summary>
/// Primärschlüssel für XUserGroup_Right Records (nach Primärschlüssel-Standards)
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string UserGroup_RightID = "UserGroup_RightID";

/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XUserGroup) => XUserGroup.UserGroupID
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserGroupID = "UserGroupID";

/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XRight) => XRight.RightID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string RightID = "RightID";

/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_XClass) => XClass.XClassID
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string XClassID = "XClassID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string ClassName = "ClassName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string QueryName = "QueryName";

/// <summary>
/// Fremdschlüssel (FK_XUserGroup_Right_DynaMask) => DynaMask.MaskName
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// [IsForeignKey: True]
/// </summary>
public const string MaskName = "MaskName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayInsert = "MayInsert";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayUpdate = "MayUpdate";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [DefaultValue: ((0))]
/// </summary>
public const string MayDelete = "MayDelete";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUserGroup_RightTS = "XUserGroup_RightTS";
}

/// <summary>
/// Type: Table
/// Beinhaltet die Stundenansätze für die Benutzer
/// </summary>

public static class XUserStundenansatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "XUserStundenansatz"; }
}


/// <summary>
/// Primärschlüssel der Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsPrimaryKey: True]
/// [IsIdentity: True]
/// </summary>
public const string XUserStundenansatzID = "XUserStundenansatzID";

/// <summary>
/// Fremschlüssel auf XUser Tabelle
/// [DataType: INT]
/// [Length: 4]
/// [IsForeignKey: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// Stundenansatz der Lohnart 1
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart1 = "Lohnart1";

/// <summary>
/// Stundenansatz der Lohnart 2
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart2 = "Lohnart2";

/// <summary>
/// Stundenansatz der Lohnart 3
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart3 = "Lohnart3";

/// <summary>
/// Stundenansatz der Lohnart 4
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart4 = "Lohnart4";

/// <summary>
/// Stundenansatz der Lohnart 5
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart5 = "Lohnart5";

/// <summary>
/// Stundenansatz der Lohnart 6
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart6 = "Lohnart6";

/// <summary>
/// Stundenansatz der Lohnart 7
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart7 = "Lohnart7";

/// <summary>
/// Stundenansatz der Lohnart 8
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart8 = "Lohnart8";

/// <summary>
/// Stundenansatz der Lohnart 9
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart9 = "Lohnart9";

/// <summary>
/// Stundenansatz der Lohnart 10
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart10 = "Lohnart10";

/// <summary>
/// Stundenansatz der Lohnart 11
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart11 = "Lohnart11";

/// <summary>
/// Stundenansatz der Lohnart 12
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart12 = "Lohnart12";

/// <summary>
/// Stundenansatz der Lohnart 13
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart13 = "Lohnart13";

/// <summary>
/// Stundenansatz der Lohnart 14
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart14 = "Lohnart14";

/// <summary>
/// Stundenansatz der Lohnart 15
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart15 = "Lohnart15";

/// <summary>
/// Stundenansatz der Lohnart 16
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart16 = "Lohnart16";

/// <summary>
/// Stundenansatz der Lohnart 17
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart17 = "Lohnart17";

/// <summary>
/// Stundenansatz der Lohnart 18
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart18 = "Lohnart18";

/// <summary>
/// Stundenansatz der Lohnart 19
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart19 = "Lohnart19";

/// <summary>
/// Stundenansatz der Lohnart 20
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart20 = "Lohnart20";

/// <summary>
/// Verweis auf HistoryVersion
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz erstellt hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// Wann der Datensatz erstellt wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Created = "Created";

/// <summary>
/// Angaben zum Benutzer, welcher den Datensatz zuletzt geändert hat
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// Wann der Datensatz zuletzt geändert wurde
/// [DataType: DATETIME]
/// [Length: 8]
/// [DefaultValue: (getdate())]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// Timestamp, wird für die Änderungsverfolgung verwendet
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUserStundenansatzTS = "XUserStundenansatzTS";
}

/// <summary>
/// Type: View
/// </summary>

public static class AyKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "AyKostenart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Quoting = "Quoting";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaWVZeileCode = "BaWVZeileCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgKostenartTS = "BgKostenartTS";
}

/// <summary>
/// Type: View
/// </summary>

public static class AyPositionsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "AyPositionsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartCode = "BgPositionsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID_CopyOf = "BgPositionsartID_CopyOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HilfeText = "HilfeText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NrmKontoCode = "NrmKontoCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string VerwaltungSD_Default = "VerwaltungSD_Default";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Spezkonto = "Spezkonto";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ProPerson = "ProPerson";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ProUE = "ProUE";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Masterbudget_EditMask = "Masterbudget_EditMask";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monatsbudget_EditMask = "Monatsbudget_EditMask";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>
public const string sqlRichtlinie = "sqlRichtlinie";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VarName = "VarName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Verrechenbar = "Verrechenbar";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionsartTS = "BgPositionsartTS";
}

/// <summary>
/// Type: View
/// </summary>

public static class FaFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaFall"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaFallID = "FaFallID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";
}

/// <summary>
/// Type: View
/// </summary>

public static class FaFallPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "FaFallPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaFallPersonID = "FaFallPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaFallID = "FaFallID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";
}

/// <summary>
/// Type: View
/// </summary>

public static class viewDauerauftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "viewDauerauftrag"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbDauerauftragID = "FbDauerauftragID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbZahlungswegID = "FbZahlungswegID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PeriodizitaetCode = "PeriodizitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WochentagCode = "WochentagCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monatstag1 = "Monatstag1";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monatstag2 = "Monatstag2";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string VorWochenende = "VorWochenende";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Status = "Status";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbDauerauftragTS = "FbDauerauftragTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DauerauftragDokID = "DauerauftragDokID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string AuftragStatus = "AuftragStatus";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LetzteAusfuehrung = "LetzteAusfuehrung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string AuftragPeriodizitaet = "AuftragPeriodizitaet";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoName = "HabenKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoName = "SollKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string PlzOrt = "PlzOrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbTeamID = "FbTeamID";
}

/// <summary>
/// Type: View
/// </summary>

public static class viewDTAFbBuchungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "viewDTAFbBuchungen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Buchungsdatum = "Buchungsdatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbKontoId = "FbKontoId";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbDTAZugangID = "FbDTAZugangID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBAN = "IBAN";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DTABankId = "DTABankId";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// </summary>
public const string VertragNr = "VertragNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungsArtCode = "ZahlungsArtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string KontoName = "KontoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string DTAKontoNr = "DTAKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string DTAZugang = "DTAZugang";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 342]
/// </summary>
public const string Kreditor = "Kreditor";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KreditorName = "KreditorName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KreditorStrasse = "KreditorStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KreditorZusatz = "KreditorZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KreditorPLZ = "KreditorPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KreditorOrt = "KreditorOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>
public const string BankName = "BankName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankStrasse = "BankStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BankPLZ = "BankPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankOrt = "BankOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string ClearingNr = "ClearingNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string StatusText = "StatusText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Status = "Status";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbDTAJournalID = "FbDTAJournalID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string DTAStatusEdit = "DTAStatusEdit";
}

/// <summary>
/// Type: View
/// </summary>

public static class viewFbBuchungCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "viewFbBuchungCode"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbBuchungCodeID = "FbBuchungCodeID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBuchungCodeTS = "FbBuchungCodeTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoName = "SollKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoName = "HabenKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string PlzOrt = "PlzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MTLogon = "MTLogon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string MTName = "MTName";
}

/// <summary>
/// Type: View
/// </summary>

public static class viewFbBuchungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "viewFbBuchungen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FbPeriodeID = "FbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BuchungTypCode = "BuchungTypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BelegNrPos = "BelegNrPos";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string BuchungsDatum = "BuchungsDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsfrist = "Zahlungsfrist";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BuchungStatusCode = "BuchungStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbDauerauftragID = "FbDauerauftragID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErfassungsDatum = "ErfassungsDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbZahlungswegID = "FbZahlungswegID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNr = "BankKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBAN = "IBAN";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungsArtCode = "ZahlungsArtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsgrund = "Zahlungsgrund";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string FbBuchungTS = "FbBuchungTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string SollKtoName = "SollKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string HabenKtoName = "HabenKtoName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SollKontoTypCode = "SollKontoTypCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string HabenKontoTypCode = "HabenKontoTypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string PlzOrt = "PlzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MTLogon = "MTLogon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string MTName = "MTName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ErfLogon = "ErfLogon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string ErfName = "ErfName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Status = "Status";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string StatusText = "StatusText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PeriodeStatusCode = "PeriodeStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbTeamID = "FbTeamID";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaAdressate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBaAdressate"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string TypCode = "TypCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// </summary>
public const string Typ = "Typ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 601]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaKlientensystemPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBaKlientensystemPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaFallID = "FaFallID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBaZahlungsweg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBaZahlungsweg"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzahlungsscheinCode = "EinzahlungsscheinCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNummer = "BankKontoNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBANNummer = "IBANNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string PostKontoNummer = "PostKontoNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseName = "AdresseName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseName2 = "AdresseName2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseStrasse = "AdresseStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdresseHausNr = "AdresseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string AdressePostfach = "AdressePostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AdressePLZ = "AdressePLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string AdresseOrt = "AdresseOrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AdresseLandCode = "AdresseLandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BaZahlwegModulStdCodes = "BaZahlwegModulStdCodes";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaZahlungswegTS = "BaZahlungswegTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string Empfaenger = "Empfaenger";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBFSDossier{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBFSDossier"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FalltraegerID = "FalltraegerID";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBgPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBgPosition"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID_Parent = "BgPositionID_Parent";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID_CopyOf = "BgPositionID_CopyOf";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ShBelegID = "ShBelegID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Reduktion = "Reduktion";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Abzug = "Abzug";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragEff = "BetragEff";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string MaxBeitragSD = "MaxBeitragSD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string VerwaltungSD = "VerwaltungSD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string DebitorBaPersonID = "DebitorBaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeVon = "VerwPeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeBis = "VerwPeriodeBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FaelligAm = "FaelligAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RechnungDatum = "RechnungDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBewilligungStatusCode = "BgBewilligungStatusCode";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value1 = "Value1";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value2 = "Value2";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value3 = "Value3";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltUserID = "ErstelltUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErstelltDatum = "ErstelltDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MutiertUserID = "MutiertUserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MutiertDatum = "MutiertDatum";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionTS = "BgPositionTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID_AutoForderung = "BgPositionID_AutoForderung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragFinanzplan = "BetragFinanzplan";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBudget = "BetragBudget";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragRechnung = "BetragRechnung";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwBgPositionFinanzplan{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwBgPositionFinanzplan"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Reduktion = "Reduktion";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Abzug = "Abzug";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwInstitution{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwInstitution"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionNr = "InstitutionNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionArtCode = "BaInstitutionArtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Debitor = "Debitor";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Kreditor = "Kreditor";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon2 = "Telefon2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon3 = "Telefon3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Homepage = "Homepage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaInstitutionTS = "BaInstitutionTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AdresseMehrzeilig = "AdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>
public const string OrtStrasse = "OrtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AdressZusatz = "AdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string StrasseHausNr = "StrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string PostfachTextD = "PostfachTextD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string PLZOrt = "PLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Land = "Land";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaFreigabeStatusCode = "BaFreigabeStatusCode";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwIxBDELeistung_BDELeistungsart_AuswDLCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwIxBDELeistung_BDELeistungsart_AuswDLCode"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DauerSUM = "DauerSUM";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuswDienstleistungCode = "AuswDienstleistungCode";

/// <summary>
/// [DataType: BIGINT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string cBig = "cBig";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwKreditor{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwKreditor"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaZahlungswegID = "BaZahlungswegID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string ZahlungswegDatumVon = "ZahlungswegDatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungswegDatumBis = "ZahlungswegDatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzahlungsscheinCode = "EinzahlungsscheinCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankKontoNummer = "BankKontoNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string IBANNummer = "IBANNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string PostKontoNummer = "PostKontoNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ReferenzNummer = "ReferenzNummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>
public const string BankName = "BankName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankZusatz = "BankZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankStrasse = "BankStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BankPLZ = "BankPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankOrt = "BankOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string BankClearingNr = "BankClearingNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BankPCKontoNr = "BankPCKontoNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BankGueltigAb = "BankGueltigAb";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BankLandCode = "BankLandCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionName = "InstitutionName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaFreigabeStatusCode = "BaFreigabeStatusCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionAdresse = "InstitutionAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionOrtStrasse = "InstitutionOrtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionAdressZusatz = "InstitutionAdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionStrasse = "InstitutionStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionHausNr = "InstitutionHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionStrasseHausNr = "InstitutionStrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionPostfach = "InstitutionPostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionPLZ = "InstitutionPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionOrt = "InstitutionOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionPLZOrt = "InstitutionPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionKanton = "InstitutionKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionLand = "InstitutionLand";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionBaLandID = "InstitutionBaLandID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PersonName = "PersonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PersonVorname = "PersonVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>
public const string PersonNameVorname = "PersonNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// [AllowNulls: True]
/// </summary>
public const string PersonAdresse = "PersonAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string PersonAdressZusatz = "PersonAdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PersonStrasse = "PersonStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PersonHausNr = "PersonHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string PersonStrasseHausNr = "PersonStrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string PersonPostfach = "PersonPostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PersonPLZ = "PersonPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PersonOrt = "PersonOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string PersonPLZOrt = "PersonPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PersonKanton = "PersonKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string PersonLand = "PersonLand";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PersonBaLandID = "PersonBaLandID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Kreditor = "Kreditor";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string KreditorMehrZeilig = "KreditorMehrZeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string KreditorEinzeilig = "KreditorEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 209]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsweg = "Zahlungsweg";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 354]
/// [AllowNulls: True]
/// </summary>
public const string ZahlungswegMehrZeilig = "ZahlungswegMehrZeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 850]
/// [AllowNulls: True]
/// </summary>
public const string ZusatzInfo = "ZusatzInfo";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IsActive = "IsActive";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtName = "BeguenstigtName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtName2 = "BeguenstigtName2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 35]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtStrasse = "BeguenstigtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtPLZ = "BeguenstigtPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string BeguenstigtOrt = "BeguenstigtOrt";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FruehererName = "FruehererName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname2 = "Vorname2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sterbedatum = "Sterbedatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string HaushaltVersicherungsNummer = "HaushaltVersicherungsNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string NNummer = "NNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZEMISNummer = "ZEMISNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BFFNummer = "BFFNummer";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErteilungVA = "ErteilungVA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KonfessionCode = "KonfessionCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandCode = "ZivilstandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandDatum = "ZivilstandDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeCode = "HeimatgemeindeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeCodes = "HeimatgemeindeCodes";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HeimatgemeindeBaGemeindeID = "HeimatgemeindeBaGemeindeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NationalitaetCode = "NationalitaetCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusCode = "AuslaenderStatusCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuslaenderStatusGueltigBis = "AuslaenderStatusGueltigBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InGemeindeSeit = "InGemeindeSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string InCHSeitGeburt = "InCHSeitGeburt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ImKantonSeit = "ImKantonSeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ImKantonSeitGeburt = "ImKantonSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_P = "Telefon_P";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon_G = "Telefon_G";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string MobilTel = "MobilTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Unterstuetzt = "Unterstuetzt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Fiktiv = "Fiktiv";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Testperson = "Testperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string NavigatorZusatz = "NavigatorZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BaPersonTS = "BaPersonTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtPLZ = "ZuzugKtPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrt = "ZuzugKtOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtKanton = "ZuzugKtKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtOrtCode = "ZuzugKtOrtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtLandCode = "ZuzugKtLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtDatum = "ZuzugKtDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugKtSeitGeburt = "ZuzugKtSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdePLZ = "ZuzugGdePLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeOrt = "ZuzugGdeOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeKanton = "ZuzugGdeKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeOrtCode = "ZuzugGdeOrtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeLandCode = "ZuzugGdeLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeDatum = "ZuzugGdeDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugGdeSeitGeburt = "ZuzugGdeSeitGeburt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzPLZ = "UntWohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzOrt = "UntWohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzKanton = "UntWohnsitzKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzOrtCode = "UntWohnsitzOrtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UntWohnsitzLandCode = "UntWohnsitzLandCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugPLZ = "WegzugPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrt = "WegzugOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugKanton = "WegzugKanton";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrtCode = "WegzugOrtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WegzugLandCode = "WegzugLandCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string WegzugDatum = "WegzugDatum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>
public const string VornameName = "VornameName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Alter = "Alter";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AlterMortal = "AlterMortal";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Nationalitaet = "Nationalitaet";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string NationalitaetFR = "NationalitaetFR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string NationalitaetIT = "NationalitaetIT";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 103]
/// [AllowNulls: True]
/// </summary>
public const string Heimatort = "Heimatort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzBaAdresseID = "WohnsitzBaAdresseID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string Wohnsitz = "Wohnsitz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string WohnsitzMehrzeilig = "WohnsitzMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzAdressZusatz = "WohnsitzAdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzStrasse = "WohnsitzStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzHausNr = "WohnsitzHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzStrasseHausNr = "WohnsitzStrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfach = "WohnsitzPostfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfachOhneNr = "WohnsitzPostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfachD = "WohnsitzPostfachD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPLZ = "WohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzOrt = "WohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string WohnsitzPLZOrt = "WohnsitzPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzKanton = "WohnsitzKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzLand = "WohnsitzLand";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzOrtschaftCode = "WohnsitzOrtschaftCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzBaLandID = "WohnsitzBaLandID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzBemerkung = "WohnsitzBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzWohnStatusCode = "WohnsitzWohnStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzWohnungsgroesseCode = "WohnsitzWohnungsgroesseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltBaAdresseID = "AufenthaltBaAdresseID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 835]
/// </summary>
public const string Aufenthalt = "Aufenthalt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 835]
/// </summary>
public const string AufenthaltMehrzeilig = "AufenthaltMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltAdressZusatz = "AufenthaltAdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltStrasse = "AufenthaltStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltHausNr = "AufenthaltHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltStrasseHausNr = "AufenthaltStrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfach = "AufenthaltPostfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfachOhneNr = "AufenthaltPostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfachD = "AufenthaltPostfachD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPLZ = "AufenthaltPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltOrt = "AufenthaltOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string AufenthaltPLZOrt = "AufenthaltPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltKanton = "AufenthaltKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltLand = "AufenthaltLand";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltOrtschaftCode = "AufenthaltOrtschaftCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltBaLandID = "AufenthaltBaLandID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltBemerkung = "AufenthaltBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnStatusCode = "AufenthaltWohnStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnungsgroesseCode = "AufenthaltWohnungsgroesseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltBaInstitutionID = "AufenthaltBaInstitutionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltInstitutionName = "AufenthaltInstitutionName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SichtbarSDFlag = "SichtbarSDFlag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PersonSichtbarSDFlag = "PersonSichtbarSDFlag";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerstaendigungSprachCode = "VerstaendigungSprachCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string InCHseit = "InCHseit";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string CAusweisDatum = "CAusweisDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>
public const string Anrede = "Anrede";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwPersonSimple{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwPersonSimple"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwShMassendruckPapierverfuegung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwShMassendruckPapierverfuegung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string SAR = "SAR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string Klient = "Klient";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 81]
/// [AllowNulls: True]
/// </summary>
public const string BudgetMonat = "BudgetMonat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Intern = "Intern";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string SelPrint = "SelPrint";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgFinanzplanID = "BgFinanzplanID";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAbklPhasen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmAbklPhasen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaAKPhasenID = "KaAKPhasenID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string IstIntake = "IstIntake";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Fragestellungen = "Fragestellungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string GrundDossier = "GrundDossier";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string IntegBeurteilung = "IntegBeurteilung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumIntegBeurteilung = "DatumIntegBeurteilung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string KursDatumBis = "KursDatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// </summary>
public const string KursDatumVon = "KursDatumVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Phase = "Phase";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>
public const string PhaseDatum = "PhaseDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Rueckfragen = "Rueckfragen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string Kursnummer = "Kursnummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzIn = "EinsatzIn";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVon = "EinsatzVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzBis = "EinsatzBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Gespraechtstermin = "Gespraechtstermin";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAdressat{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmAdressat"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaDokumenteID = "FaDokumenteID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 126]
/// [AllowNulls: True]
/// </summary>
public const string GeehrteFrauHerr = "GeehrteFrauHerr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string ErsteZeile = "ErsteZeile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1237]
/// </summary>
public const string AdresseMehrzeilig = "AdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string PLZOrt = "PLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatzzeile = "Zusatzzeile";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmAllgemein{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmAllgemein"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaIntegBildungID = "KaIntegBildungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kursabschluss = "Kursabschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>
public const string Kursaustritt = "Kursaustritt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// </summary>
public const string Kurseintritt = "Kurseintritt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Kursname = "Kursname";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmBDEZLEUebersicht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmBDEZLEUebersicht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string MonatJahrText = "MonatJahrText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PensumProzent = "PensumProzent";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SollArbeitszeitProTag = "SollArbeitszeitProTag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZIstArbeitszeitProMonat = "GZIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSollArbeitszeitProMonat = "GZSollArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZMonatsSaldo = "GZMonatsSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVorjahr = "GZUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVormonate = "GZUebertragVormonate";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZKorrekturen = "GZKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZAusbezahlteUeberstunden = "GZAusbezahlteUeberstunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSaldo = "GZSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SLIstArbeitszeitProMonat = "SLIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienUebertragVorjahr = "FerienUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienAnspruchProJahr = "FerienAnspruchProJahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBisherBezogen = "FerienBisherBezogen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienZugabenKuerzungen = "FerienZugabenKuerzungen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienKorrekturen = "FerienKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienSaldo = "FerienSaldo";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmErblasser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmErblasser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNr = "AHVNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string DerDes = "DerDes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string DerDesBesch = "DerDesBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>
public const string DieDer = "DieDer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>
public const string DieDerBesch = "DieDerBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string Todesdatum = "Todesdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string TodesdatumBesch = "TodesdatumBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string TodesdatumOderBereich = "TodesdatumOderBereich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Todesort = "Todesort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 182]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserAdresseEinzeln = "ErblasserAdresseEinzeln";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 182]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserAdresseEinzelnBesch = "ErblasserAdresseEinzelnBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserAnrede = "ErblasserAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserAnredeBesch = "ErblasserAnredeBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserElternnamen = "ErblasserElternnamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserElternnamenBesch = "ErblasserElternnamenBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ErblasserFamilienNamen = "ErblasserFamilienNamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ErblasserFamilienNamenBesch = "ErblasserFamilienNamenBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserGeburtsdatum = "ErblasserGeburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserGeburtsdatumBesch = "ErblasserGeburtsdatumBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserHeimatorte = "ErblasserHeimatorte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 150]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserHeimatorteBesch = "ErblasserHeimatorteBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ErblasserVornamen = "ErblasserVornamen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ErblasserVornamenBesch = "ErblasserVornamenBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserZivilstand = "ErblasserZivilstand";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserZivilstandBesch = "ErblasserZivilstandBesch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 11]
/// [AllowNulls: True]
/// </summary>
public const string lasserLasserin = "lasserLasserin";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 929]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserInfo1 = "ErblasserInfo1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 797]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserInfo2 = "ErblasserInfo2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 696]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserInfo3 = "ErblasserInfo3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 602]
/// [AllowNulls: True]
/// </summary>
public const string ErblasserInfo4 = "ErblasserInfo4";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmFaAktennotizen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmFaAktennotizen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaAktennotizID = "FaAktennotizID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Dauer = "Dauer";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Zeit = "Zeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktart = "Kontaktart";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string GespraechsStatus = "GespraechsStatus";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Gespraechstyp = "Gespraechstyp";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktpartner = "Kontaktpartner";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AlimentenstelleTyp = "AlimentenstelleTyp";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltMitFmt = "InhaltMitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltOhneFmt = "InhaltOhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Themen = "Themen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string Vertraulich = "Vertraulich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string BesprechungThema1 = "BesprechungThema1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string BesprechungThema2 = "BesprechungThema2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string BesprechungThema3 = "BesprechungThema3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string BesprechungThema4 = "BesprechungThema4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText1 = "BesprechungThemaText1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText2 = "BesprechungThemaText2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText3 = "BesprechungThemaText3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungThemaText4 = "BesprechungThemaText4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel1 = "BesprechungZiel1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel2 = "BesprechungZiel2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel3 = "BesprechungZiel3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZiel4 = "BesprechungZiel4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad1 = "BesprechungZielGrad1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad2 = "BesprechungZielGrad2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad3 = "BesprechungZielGrad3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BesprechungZielGrad4 = "BesprechungZielGrad4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz1 = "Pendenz1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz2 = "Pendenz2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz3 = "Pendenz3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Pendenz4 = "Pendenz4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PendenzErledigt1 = "PendenzErledigt1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PendenzErledigt2 = "PendenzErledigt2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PendenzErledigt3 = "PendenzErledigt3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PendenzErledigt4 = "PendenzErledigt4";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string UserLogin = "UserLogin";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string UserNachname = "UserNachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string UserVorname = "UserVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string UserKuerzel = "UserKuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string UserNameVorname = "UserNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string UserNameVornameOhneKomma = "UserNameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string UserVornameName = "UserVornameName";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmGvGesuch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmGvGesuch"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GvGesuchID = "GvGesuchID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string GesuchsDatum = "GesuchsDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 40]
/// </summary>
public const string Gesuchsgrund = "Gesuchsgrund";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBewilligt = "BetragBewilligt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtAm = "BewilligtAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BegruendungMitFmt = "BegruendungMitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BegruendungOhneFmt = "BegruendungOhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungBetragKS1 = "BewilligungBetragKS1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungDatumKS1 = "BewilligungDatumKS1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungBemerkungKS1 = "BewilligungBemerkungKS1";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungBetragKS2 = "BewilligungBetragKS2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungDatumKS2 = "BewilligungDatumKS2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BewilligungBemerkungKS2 = "BewilligungBemerkungKS2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtVonName = "BewilligtVonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtVonVorname = "BewilligtVonVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtVonAbteilung = "BewilligtVonAbteilung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussDatum = "AbschlussDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundD = "AbschlussgrundD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundF = "AbschlussgrundF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundI = "AbschlussgrundI";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragBeantragt = "BetragBeantragt";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string BetragEigenleistung = "BetragEigenleistung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string TotalAusFLBFond = "TotalAusFLBFond";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Kuerzung = "Kuerzung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string Mitarbeiter = "Mitarbeiter";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KGS = "KGS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string Klient = "Klient";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string FondsNameKurz = "FondsNameKurz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string FondsNameLang = "FondsNameLang";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsBemerkungD = "FondsBemerkungD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsBemerkungF = "FondsBemerkungF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsBemerkungI = "FondsBemerkungI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsTypD = "FondsTypD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsTypF = "FondsTypF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string FondsTypI = "FondsTypI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 517]
/// [AllowNulls: True]
/// </summary>
public const string Verteiler = "Verteiler";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1189]
/// [AllowNulls: True]
/// </summary>
public const string VerteilerMehrzeilig = "VerteilerMehrzeilig";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmInstitution{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmInstitution"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionNr = "InstitutionNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Homepage = "Homepage";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string CareOf = "CareOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AdressZusatz = "AdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZuhandenVon = "ZuhandenVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string PostfachTextD = "PostfachTextD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string StrasseHausNr = "StrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>
public const string OrtStrasse = "OrtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string PLZOrt = "PLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandD = "LandD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandF = "LandF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandI = "LandI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandE = "LandE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string AdresseEinzeilig = "AdresseEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AdresseEinzOhneName = "AdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string AdresseMehrzeilig = "AdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AdresseMehrzOhneName = "AdresseMehrzOhneName";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaBetrieb{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaBetrieb"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AdressZusatz = "AdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 431]
/// </summary>
public const string AdresseMehrzeilig = "AdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Land = "Land";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TeilbetriebVon = "TeilbetriebVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Internet = "Internet";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Akt = "Akt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AuVe = "AuVe";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Charakter = "Charakter";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebDokumentID = "KaBetriebDokumentID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DokDatum = "DokDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string DokStichworte = "DokStichworte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string DokAbsenderVornameName = "DokAbsenderVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>
public const string DokAdressatAnrede = "DokAdressatAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 225]
/// </summary>
public const string DokAdressatSehrGeehrte = "DokAdressatSehrGeehrte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>
public const string DokAdressatLieberLiebe = "DokAdressatLieberLiebe";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DokAdressatName = "DokAdressatName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DokAdressatVorname = "DokAdressatVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string DokAdressatVornameName = "DokAdressatVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string DokAdressatTel = "DokAdressatTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string DokAdressatMobil = "DokAdressatMobil";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string DokAdressatAdresseMehrz = "DokAdressatAdresseMehrz";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaBetriebVerlauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaBetriebVerlauf"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaBetriebBesprechungID = "KaBetriebBesprechungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktperson = "Kontaktperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string Autor = "Autor";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEafSozioberuflicheBilanz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaEafSozioberuflicheBilanz"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungIDRelation = "FaLeistungIDRelation";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AnwTeilzeit = "AnwTeilzeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Schwerpunkte = "Schwerpunkte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemAbschluss = "BemAbschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ZielRav = "ZielRav";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Ergebnisse = "Ergebnisse";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEafSpezifischeErmittlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaEafSpezifischeErmittlung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungIDRelation = "FaLeistungIDRelation";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AnwTeilzeit = "AnwTeilzeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Zielsetzungen = "Zielsetzungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemAbschluss = "BemAbschluss";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaEinsatzplatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaEinsatzplatz"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 7]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Branche = "Branche";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Betrieb = "Betrieb";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 174]
/// </summary>
public const string BetriebAdresse = "BetriebAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Stellenbeschreibung = "Stellenbeschreibung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KAProgramm = "KAProgramm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKA = "ZustaendigKA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Lehrberuf = "Lehrberuf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string TypAusbildung = "TypAusbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string NeuGeschLehrstelle = "NeuGeschLehrstelle";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErfasstAm = "ErfasstAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzAb = "EinsatzAb";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string unbefristet = "unbefristet";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Gesamtpensum = "Gesamtpensum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string aufteilbar = "aufteilbar";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PensumUnbestimmt = "PensumUnbestimmt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzelpensumVon = "EinzelpensumVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinzelpensumBis = "EinzelpensumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string Fuehrerausweis = "Fuehrerausweis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FuehrerausweisKat = "FuehrerausweisKat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PCKenntnisse = "PCKenntnisse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Geschlecht = "Geschlecht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string WeitereAnforderungen = "WeitereAnforderungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DeutschMuendlich = "DeutschMuendlich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DeutschSchriftlich = "DeutschSchriftlich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Ausbildung = "Ausbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string Kontaktperson = "Kontaktperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KontaktFunktion = "KontaktFunktion";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string KontaktBemerkung = "KontaktBemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktTelefon = "KontaktTelefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktTelefonMobil = "KontaktTelefonMobil";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktFax = "KontaktFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktEMail = "KontaktEMail";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaQJFallfuehrung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaQJFallfuehrung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaQJProzessID = "KaQJProzessID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string Adressat = "Adressat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1538]
/// [AllowNulls: True]
/// </summary>
public const string Adresse = "Adresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Institution = "Institution";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaTransfer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaTransfer"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string KaTransferID = "KaTransferID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string TelErstkontaktDat = "TelErstkontaktDat";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVG = "DatumVG";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AllgZiele = "AllgZiele";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bewerbungsstrategie = "Bewerbungsstrategie";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungDat1 = "MuendAufforderungDat1";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungDat2 = "MuendAufforderungDat2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungBem1 = "MuendAufforderungBem1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MuendAufforderungBem2 = "MuendAufforderungBem2";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDat = "AustrittDat";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittGrund = "AustrittGrund";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCode = "AustrittCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AustrittBem = "AustrittBem";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVerlauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaVerlauf"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaVerlaufID = "KaVerlaufID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string Autor = "Autor";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktart = "Kontaktart";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktperson = "Kontaktperson";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Thema = "Thema";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltRTF = "InhaltRTF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InhaltNORTF = "InhaltNORTF";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SichtbarSD = "SichtbarSD";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaVermittlung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string SIZuweiserVornameName = "SIZuweiserVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string SIZuweiserAnrede = "SIZuweiserAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SIZuweiserSektion = "SIZuweiserSektion";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string BIBIPZuweiserVornameName = "BIBIPZuweiserVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string BIBIPZuweiserAnrede = "BIBIPZuweiserAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BIBIPZuweiserSektion = "BIBIPZuweiserSektion";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlungBIBIP{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaVermittlungBIBIP"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaVermittlungBIBIPID = "KaVermittlungBIBIPID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumEroeffnung = "DatumEroeffnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEroeffnungAbklaerung = "DatumEroeffnungAbklaerung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAbschluss = "DatumAbschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKA = "ZustaendigKA";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKaVermittlungSI{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKaVermittlungSI"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaVermittlungSIID = "KaVermittlungSIID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string DatumEroeffnung = "DatumEroeffnung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumEroeffnungAbklaerung = "DatumEroeffnungAbklaerung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumAbschluss = "DatumAbschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string ZustaendigKA = "ZustaendigKA";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesAuftrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKesAuftrag"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesAuftragID = "KesAuftragID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuftragVom = "AuftragVom";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string AbklaerungDurch = "AbklaerungDurch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string MeldungDurchD = "MeldungDurchD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string MeldungDurchF = "MeldungDurchF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string MeldungDurchI = "MeldungDurchI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AuftragDurchD = "AuftragDurchD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AuftragDurchF = "AuftragDurchF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AuftragDurchI = "AuftragDurchI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbklaerungsartDE = "AbklaerungsartDE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbklaerungsartFR = "AbklaerungsartFR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbklaerungsartIT = "AbklaerungsartIT";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Anlass = "Anlass";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auftrag = "Auftrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DokumentDatum = "DokumentDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FristBis = "FristBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Abschluss = "Abschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundD = "AbschlussgrundD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundF = "AbschlussgrundF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbschlussgrundI = "AbschlussgrundI";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BeschlussRueckmeldung = "BeschlussRueckmeldung";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BetroffenePersonen = "BetroffenePersonen";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientKindD = "KlientKindD";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientKindF = "KlientKindF";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientKindI = "KlientKindI";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientVaterD = "KlientVaterD";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientVaterF = "KlientVaterF";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientVaterI = "KlientVaterI";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientMutterD = "KlientMutterD";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientMutterF = "KlientMutterF";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientMutterI = "KlientMutterI";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientGeschwisterD = "KlientGeschwisterD";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientGeschwisterF = "KlientGeschwisterF";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string KlientGeschwisterI = "KlientGeschwisterI";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumHeute = "DatumHeute";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesDokument{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKesDokument"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesAuftragID = "KesAuftragID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesDokumentID = "KesDokumentID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserInUserID = "VerfasserInUserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserFrauHerr = "VerfasserFrauHerr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserFrauHerrn = "VerfasserFrauHerrn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNameVorname = "VerfasserNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNameVornameOhneKomma = "VerfasserNameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserVornameName = "VerfasserVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungEMail = "VerfasserAbteilungEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungFax = "VerfasserAbteilungFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungName = "VerfasserAbteilungName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungTelefon = "VerfasserAbteilungTelefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNachname = "VerfasserNachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserVorname = "VerfasserVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserKuerzel = "VerfasserKuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserTelephon = "VerfasserTelephon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserEMail = "VerfasserEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ResultatD = "ResultatD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ResultatF = "ResultatF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ResultatI = "ResultatI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ArtDE = "ArtDE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ArtFR = "ArtFR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ArtIT = "ArtIT";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VersandDatum = "VersandDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumHeute = "DatumHeute";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesMassnahmeBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKesMassnahmeBericht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesMassnahmeID = "KesMassnahmeID";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string ArtikelNummer = "ArtikelNummer";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string ArtikelTextKurz = "ArtikelTextKurz";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string ArtikelTextLang = "ArtikelTextLang";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string ArtNmrTextKurz = "ArtNmrTextKurz";

/// <summary>
/// [DataType: NVARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string ArtNmrTextLang = "ArtNmrTextLang";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatErchtsbschlss = "DatErchtsbschlss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string MFPNameVorname = "MFPNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string MFPNmVrnmOhnKmma = "MFPNmVrnmOhnKmma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string MFPVornameName = "MFPVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string MFPAdrssEinzeilg = "MFPAdrssEinzeilg";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string MFPAdrssMhrzeilg = "MFPAdrssMhrzeilg";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MFPErnanntSeit = "MFPErnanntSeit";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MFPPrmVrgchlSDAm = "MFPPrmVrgchlSDAm";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MFPPrmRchfrngVon = "MFPPrmRchfrngVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MFPPrmRchfrngBis = "MFPPrmRchfrngBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>
public const string SARFrauHerr = "SARFrauHerr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string SARFrauHerrn = "SARFrauHerrn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string SARNameVorname = "SARNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string SARNamVrnmOhnKma = "SARNamVrnmOhnKma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string SARVornameName = "SARVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SARAbteilungEMai = "SARAbteilungEMai";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SARAbteilungFax = "SARAbteilungFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SARAbteilungName = "SARAbteilungName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SARAbteilungTel = "SARAbteilungTel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string SARNachname = "SARNachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string SARVorname = "SARVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string SARKuerzel = "SARKuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SARTelephon = "SARTelephon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string SAREMail = "SAREMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ElterlicheSorgeD = "ElterlicheSorgeD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ElterlicheSorgeF = "ElterlicheSorgeF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ElterlicheSorgeI = "ElterlicheSorgeI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string MassAuftragstext = "MassAuftragstext";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesMassnahmeBerichtID = "KesMassnahmeBerichtID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PeriodeVon = "PeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PeriodeBis = "PeriodeBis";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Berichtsdatum = "Berichtsdatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Rechnungsdatum = "Rechnungsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BrchtArtDsBrchtD = "BrchtArtDsBrchtD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BrchtArtDsBrchtF = "BrchtArtDsBrchtF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BrchtArtDsBrchtI = "BrchtArtDsBrchtI";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KesMassnahmeAuftragID = "KesMassnahmeAuftragID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AuftragAuftrag = "AuftragAuftrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AuftrgrtGschftsD = "AuftrgrtGschftsD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AuftrgrtGschftsF = "AuftrgrtGschftsF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AuftrgrtGschftsI = "AuftrgrtGschftsI";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmKesVerlauf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmKesVerlauf"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KesVerlaufID = "KesVerlaufID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KontaktartDE = "KontaktartDE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KontaktartFR = "KontaktartFR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KontaktartIT = "KontaktartIT";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DienstleistungD = "DienstleistungD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DienstleistungF = "DienstleistungF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DienstleistungI = "DienstleistungI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Stichwort = "Stichwort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserFrauHerr = "VerfasserFrauHerr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserFrauHerrn = "VerfasserFrauHerrn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNameVorname = "VerfasserNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNameVornameOhneKomma = "VerfasserNameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserVornameName = "VerfasserVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungEMail = "VerfasserAbteilungEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungFax = "VerfasserAbteilungFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungName = "VerfasserAbteilungName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserAbteilungTelefon = "VerfasserAbteilungTelefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserNachname = "VerfasserNachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserVorname = "VerfasserVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserKuerzel = "VerfasserKuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserTelephon = "VerfasserTelephon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VerfasserEMail = "VerfasserEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DauerD = "DauerD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DauerF = "DauerF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DauerI = "DauerI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Inhalt = "Inhalt";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmPerson"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string PersonenNr = "PersonenNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string FruehererName = "FrühererName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>
public const string VornameName = "VornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname2 = "Vorname2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>
public const string NameVornameOhneKomma = "NameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string NameGB = "NameGB";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// [AllowNulls: True]
/// </summary>
public const string NameGBVorname = "NameGBVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// [AllowNulls: True]
/// </summary>
public const string NameGBVornameOhneKomma = "NameGBVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Nationalitaet = "Nationalitaet";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Geschlecht = "Geschlecht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string GeburtsdatumAmerikanisch = "GeburtsdatumAmerikanisch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string GestorbenAm = "GestorbenAm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string AHVNummer = "AHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string VersichertennummerSonstAHVNr = "VersichertennummerSonstAHVNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungOhneFmt = "BemerkungOhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BemerkungMitFmt = "BemerkungMitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string NNummer = "NNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BFFNummer = "BFFNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string HaushaltVersicherungsNummer = "HaushaltVersicherungsNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Konfession = "Konfession";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 103]
/// [AllowNulls: True]
/// </summary>
public const string Heimatort = "Heimatort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string HeimatortNationalitaet = "HeimatortNationalitaet";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string HeimatortNationalitaetD = "HeimatortNationalitaetD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string HeimatortNationalitaetF = "HeimatortNationalitaetF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string HeimatortNationalitaetI = "HeimatortNationalitaetI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 131]
/// [AllowNulls: True]
/// </summary>
public const string PLZHeimatort = "PLZHeimatort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Sprache = "Sprache";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string SpracheVertsaendigung = "SpracheVertsaendigung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Permis = "Permis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string PermisBis = "PermisBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string PermisSeit = "PermisSeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltGueltigBis = "AufenthaltGueltigBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string InCHseit = "InCHseit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string EndeZustaendigkeit = "EndeZustaendigkeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TelefonP = "TelefonP";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TelefonG = "TelefonG";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TelefonMobil = "TelefonMobil";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string Navigatorzusatz = "Navigatorzusatz";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string WegzugDatum = "WegzugDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WegzugOrt = "WegzugOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WegzugPLZ = "WegzugPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zivilstand = "Zivilstand";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandD = "ZivilstandD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandF = "ZivilstandF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandI = "ZivilstandI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string ZivilstandSeit = "ZivilstandSeit";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugDatum = "ZuzugDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugOrt = "ZuzugOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZuzugPLZ = "ZuzugPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string ZEMISNummer = "ZEMISNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>
public const string ErSie = "ErSie";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// </summary>
public const string ErSieGross = "ErSieGross";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string HerrFrau = "HerrFrau";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 105]
/// </summary>
public const string HerrFrauName = "HerrFrauName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// </summary>
public const string GeehrterHerrFrau = "GeehrterHerrFrau";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 126]
/// </summary>
public const string GeehrterHerrFrauName = "GeehrterHerrFrauName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 5]
/// </summary>
public const string HerrnFrau = "HerrnFrau";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 106]
/// </summary>
public const string HerrnFrauName = "HerrnFrauName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 206]
/// </summary>
public const string FrauHerrVornameName = "FrauHerrVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>
public const string IhmIhr = "IhmIhr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>
public const string LieberLiebe = "LieberLiebe";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string SeinIhr = "SeinIhr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 12]
/// </summary>
public const string SeineIhre = "SeineIhre";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>
public const string SeinerIhrer = "SeinerIhrer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 34]
/// </summary>
public const string ProjektteilnehmerIn = "ProjektteilnehmerIn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 33]
/// </summary>
public const string TeilnehmerIn = "TeilnehmerIn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltsortAdresseEinzeilig = "AufenthaltsortAdresseEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AufenthaltsortAdresseEinzOhneName = "AufenthaltsortAdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltsortAdresseMehrzeilig = "AufenthaltsortAdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AufenthaltsortAdresseMehrzOhneName = "AufenthaltsortAdresseMehrzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltsortStrasseNr = "AufenthaltsortStrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string AufenthaltsortPLZOrt = "AufenthaltsortPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnortAdrEinzeilig = "AufenthaltWohnortAdrEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AufenthaltWohnortAdrEinzOhneName = "AufenthaltWohnortAdrEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnortAdrMehrzeilig = "AufenthaltWohnortAdrMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AufenthaltWohnortAdrMehrzOhneName = "AufenthaltWohnortAdrMehrzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnsitzStrasseNr = "AufenthaltWohnsitzStrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string AufenthaltWohnsitzPLZOrt = "AufenthaltWohnsitzPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnsitzPLZ = "AufenthaltWohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltWohnsitzOrt = "AufenthaltWohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfachD = "AufenthaltPostfachD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfachF = "AufenthaltPostfachF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltPostfachI = "AufenthaltPostfachI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AufenthaltInstitutionName = "AufenthaltInstitutionName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzAdresseEinzeilig = "WohnsitzAdresseEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzAdresseEinzeiligGB = "WohnsitzAdresseEinzeiligGB";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string WohnsitzAdresseEinzOhneName = "WohnsitzAdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 836]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzAdresseMehrzeilig = "WohnsitzAdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string WohnsitzAdresseMehrzOhneName = "WohnsitzAdresseMehrzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzStrasseNr = "WohnsitzStrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string WohnsitzPLZOrt = "WohnsitzPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzOrt = "WohnsitzOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPLZ = "WohnsitzPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfachD = "WohnsitzPostfachD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfachF = "WohnsitzPostfachF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string WohnsitzPostfachI = "WohnsitzPostfachI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Wohnsituation = "Wohnsituation";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Wohnungsgroesse = "Wohnungsgroesse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitslosSeit = "ArbeitslosSeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string AusgesteuertSeit = "AusgesteuertSeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Beruf = "Beruf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ErlernterBeruf = "ErlernterBeruf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Schulbildung = "Schulbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string VermieterName = "VermieterName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>
public const string VermieterAdresseEinzOhneName = "VermieterAdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>
public const string VermieterAdresseMehrzOhneName = "VermieterAdresseMehrzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string VermieterAdresseStrasseNr = "VermieterAdresseStrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string VermieterAdressePLZOrt = "VermieterAdressePLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VermieterAdressePLZ = "VermieterAdressePLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VermieterAdresseOrt = "VermieterAdresseOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string KVGName = "KVGName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KVGMitgliedNr = "KVGMitgliedNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>
public const string KVGAdresseEinzOhneName = "KVGAdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string VVGName = "VVGName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VVGMitgliedNr = "VVGMitgliedNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 376]
/// </summary>
public const string VVGAdresseEinzOhneName = "VVGAdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerNachname = "EhepartnerNachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerVorname = "EhepartnerVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerVorname2 = "EhepartnerVorname2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerNachnameVorname = "EhepartnerNachnameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerNNummer = "EhepartnerNNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerBFFNummer = "EhepartnerBFFNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerInCHseit = "EhepartnerInCHseit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerNationalitaet = "EhepartnerNationalitaet";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerZivilstand = "EhepartnerZivilstand";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerBeruf = "EhepartnerBeruf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerEndeZustaendigkeit = "EhepartnerEndeZustaendigkeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerErteilungVA = "EhepartnerErteilungVA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerGeschlecht = "EhepartnerGeschlecht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerPermis = "EhepartnerPermis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerPersonenNummer = "EhepartnerPersonenNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerGebDatum = "EhepartnerGebDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 16]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerAHVNummer = "EhepartnerAHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerVersichertennummer = "EhepartnerVersichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerAnrede = "EhepartnerAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string EhepartnerPLZOrt = "EhepartnerPLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string EhepartnerStrasseNr = "EhepartnerStrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 174]
/// </summary>
public const string EhepartnerStrassePLZOrt = "EhepartnerStrassePLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BenutzerNr = "BenutzerNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Login = "Login";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Nachname = "Nachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kuerzel = "Kuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telephon = "Telephon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3]
/// [AllowNulls: True]
/// </summary>
public const string ErSieGross = "ErSieGross";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 9]
/// </summary>
public const string FrauHerr = "FrauHerr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string FrauHerrn = "FrauHerrn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string NameVornameOhneKomma = "NameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string VornameName = "VornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1MitFmt = "Text1MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1OhneFmt = "Text1OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2MitFmt = "Text2MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2OhneFmt = "Text2OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungEMail = "AbteilungEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungFax = "AbteilungFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungName = "AbteilungName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungTelefon = "AbteilungTelefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungTelFaxWWW = "AbteilungTelFaxWWW";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText1MitFmt = "AbteilungText1MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText1OhneFmt = "AbteilungText1OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText2MitFmt = "AbteilungText2MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText2OhneFmt = "AbteilungText2OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText3MitFmt = "AbteilungText3MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText3OhneFmt = "AbteilungText3OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText4MitFmt = "AbteilungText4MitFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungText4OhneFmt = "AbteilungText4OhneFmt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AbteilungWWW = "AbteilungWWW";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string CareOf = "CareOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AdressZusatz = "AdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZuhandenVon = "ZuhandenVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string PostfachTextD = "PostfachTextD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string StrasseHausNr = "StrasseHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 163]
/// </summary>
public const string OrtStrasse = "OrtStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// </summary>
public const string PLZOrt = "PLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandD = "LandD";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandF = "LandF";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandI = "LandI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string LandE = "LandE";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string AdresseEinzeilig = "AdresseEinzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AdresseEinzOhneName = "AdresseEinzOhneName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string AdresseMehrzeilig = "AdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 633]
/// </summary>
public const string AdresseMehrzOhneName = "AdresseMehrzOhneName";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVermittlungEinsatz{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVermittlungEinsatz"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaVermittlungEinsatzID = "KaVermittlungEinsatzID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaVermittlungVorschlagID = "KaVermittlungVorschlagID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaEinsatzplatzID = "KaEinsatzplatzID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzVon = "EinsatzVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzBis = "EinsatzBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Verlaengerung = "Verlaengerung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Arbeitspensum = "Arbeitspensum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZDatumVon = "BIEAZDatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZDatumBis = "BIEAZDatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZVerl = "BIEAZVerl";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BIBruttolohn = "BIBruttolohn";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BIEAZFinanzierungsgrad = "BIEAZFinanzierungsgrad";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Abschluss = "Abschluss";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZustKANachname = "ZustKANachname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZustKAVorname = "ZustKAVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZustKAKuerzel = "ZustKAKuerzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ZustKATelephon = "ZustKATelephon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string ZustKAEMail = "ZustKAEMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string ZustKANameVorname = "ZustKANameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string ZustKANameVornameOhneKomma = "ZustKANameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string ZustKAVornameName = "ZustKAVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Einsatzplatz = "Einsatzplatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EPBranche = "EPBranche";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EPKaProgramm = "EPKaProgramm";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EPLehrberuf = "EPLehrberuf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string EPBerufsausbildung = "EPBerufsausbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Betrieb = "Betrieb";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BetriebAdressZusatz = "BetriebAdressZusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BetriebStrasse = "BetriebStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BetriebHausNr = "BetriebHausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string BetriebPostfach = "BetriebPostfach";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BetriebPLZ = "BetriebPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string BetriebOrt = "BetriebOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BetriebKanton = "BetriebKanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BetriebLand = "BetriebLand";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 478]
/// </summary>
public const string BetriebAdresseMehrzeilig = "BetriebAdresseMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string KontaktTitel = "KontaktTitel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktName = "KontaktName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktVorname = "KontaktVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KontaktGeschlecht = "KontaktGeschlecht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktTelefon = "KontaktTelefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktTelefonMobil = "KontaktTelefonMobil";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktFax = "KontaktFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string KontaktEmail = "KontaktEmail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 202]
/// </summary>
public const string KontaktNameVorname = "KontaktNameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 201]
/// </summary>
public const string KontaktVornameName = "KontaktVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 14]
/// </summary>
public const string KontaktLieberLiebe = "KontaktLieberLiebe";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVermittlungProfil{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVermittlungProfil"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KaVermittlungProfilID = "KaVermittlungProfilID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LeistungID = "LeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string Branchen = "Branchen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string Betriebe = "Betriebe";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string Einsatzbereiche = "Einsatzbereiche";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Lehrberuf = "Lehrberuf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DeutschMuendlich = "DeutschMuendlich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DeutschSchriftlich = "DeutschSchriftlich";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string AmTelVerst = "AmTelVerst";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Sprachstandermittlung = "Sprachstandermittlung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitBIBIP = "VermittelbarkeitBIBIP";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitSI = "VermittelbarkeitSI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string VermittelbarkeitBemerkung = "VermittelbarkeitBemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Sucht = "Sucht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Suchtart = "Suchtart";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Gesundheit = "Gesundheit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitEinschraenkungen = "GesundheitEinschraenkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitKoerperlich = "GesundheitKoerperlich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinschraenkungenKoerperlich = "EinschraenkungenKoerperlich";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitBemerkung = "GesundheitBemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitPsychisch = "GesundheitPsychisch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Therapie = "Therapie";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zuverlaessigkeit = "Zuverlaessigkeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MotivationInizio = "MotivationInizio";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MotivationBIBIPSI = "MotivationBIBIPSI";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AeussereErscheinungBIBIP = "AeussereErscheinungBIBIP";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AeussereErscheinungSI = "AeussereErscheinungSI";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string InfoAnSDErfolgt = "InfoAnSDErfolgt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kinderbetreuung = "Kinderbetreuung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Einsatzpensum = "Einsatzpensum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzpensumVon = "EinsatzpensumVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinsatzpensumBis = "EinsatzpensumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BesondereWuensche = "BesondereWuensche";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BesondereFaehigkeiten = "BesondereFaehigkeiten";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Fuehrerausweis = "Fuehrerausweis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FuehrerausweisKategorie = "FuehrerausweisKategorie";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string PCKenntnisse = "PCKenntnisse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Ausbildung = "Ausbildung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string Arbeitszeiten = "Arbeitszeiten";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8000]
/// [AllowNulls: True]
/// </summary>
public const string Unterstuetzung = "Unterstützung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SIGespraech = "SIGespraech";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// [AllowNulls: True]
/// </summary>
public const string SIGespraechfuehrerin = "SIGespraechfuehrerin";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GespraechInizio = "GespraechInizio";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Ausbildungswunsch = "Ausbildungswunsch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Berufswunsch = "Berufswunsch";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string ArbeitsgebietBemerkung = "ArbeitsgebietBemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitKoerperlichBewertung = "GesundheitKoerperlichBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitPsychischBewertung = "GesundheitPsychischBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ZuverlaessigkeitBewertung = "ZuverlaessigkeitBewertung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MotivationBIBIPSIBewertung = "MotivationBIBIPSIBewertung";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmAntragEKSK{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmAntragEKSK"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmAntragEKSKID = "VmAntragEKSKID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string DatumAntrag = "DatumAntrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Antrag = "Antrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string GenehmigtEKSK = "GenehmigtEKSK";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string Autor = "Autor";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmGefaehrdungsMeldung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmGefaehrdungsMeldung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmGefaehrdungsMeldungID = "VmGefaehrdungsMeldungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string DatumEingang = "DatumEingang";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kontaktveranlasser = "Kontaktveranlasser";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string GefaehrdungNSB = "GefaehrdungNSB";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Themen = "Themen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ausgangslage = "Ausgangslage";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Auflagen = "Auflagen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Ueberpruefung = "Ueberpruefung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Konsequenzen = "Konsequenzen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AuflageDatum = "AuflageDatum";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmMandBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmMandBericht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmMandBerichtID = "VmMandBerichtID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmBerichtID = "VmBerichtID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string GrundMassnahme = "GrundMassnahme";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Berichtstitel = "Berichtstitel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BerichtDatumVon = "BerichtDatumVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BerichtDatumBis = "BerichtDatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string GrundMassnahmeText = "GrundMassnahmeText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AuftragZielsetzungText = "AuftragZielsetzungText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZielErreicht = "ZielErreicht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string VIP = "VIP";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string VeraenderungInPeriodCBText = "VeraenderungInPeriodCBText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Begruendung = "Begruendung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string NeueZieleText = "NeueZieleText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Wohnen = "Wohnen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Gesundheit = "Gesundheit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Verhalten = "Verhalten";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Taetigkeit = "Taetigkeit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string FS = "FS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string FamiliaereSituationCBText = "FamiliaereSituationCBText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SK = "SK";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string SozialeKompetenzenCBText = "SozialeKompetenzenCBText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string FZ = "FZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string FreizeitCBText = "FreizeitCBText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string RES = "RES";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string ResourcenCBText = "ResourcenCBText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string WohnenText = "WohnenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string GesundheitText = "GesundheitText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VerhaltenText = "VerhaltenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string TaetigkeitText = "TaetigkeitText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string FamSituationText = "FamSituationText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SozialeKompetenzenText = "SozialeKompetenzenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string FreizeitText = "FreizeitText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesondereRessourcenText = "BesondereRessourcenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string HandlungenText = "HandlungenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesSchwierigkeitenText = "BesSchwierigkeitenText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KL = "KL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string KlientCBText = "KlientCBText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string DR = "DR";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string DritteCBText = "DritteCBText";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string I = "I";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string InstitutionenCBText = "InstitutionenCBText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string KlientText = "KlientText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string DritteText = "DritteText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionenText = "InstitutionenText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string MCSCMandat = "MCSCMandat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BerichtBelastAngMCSCAdmin = "BerichtBelastAngMCSCAdmin";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BelastungMandatText = "BelastungMandatText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BelastungAdminText = "BelastungAdminText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string EinnahmenAngaben = "EinnahmenAngaben";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string EA = "EA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BerichtVersicherungen = "BerichtVersicherungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string BV = "BV";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string BerichtBesondereAngaben = "BerichtBesondereAngaben";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string BBA = "BBA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string EinnahmenBemerkungen = "EinnahmenBemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string VersicherungenBemerkungen = "VersicherungenBemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BesondereAngabenBem = "BesondereAngabenBem";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string AU = "AU";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string AbrechnungUnterschrieben = "AbrechnungUnterschrieben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PT = "PT";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4]
/// </summary>
public const string PassationTeilnahmeCBText = "PassationTeilnahmeCBText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string PassationBemerkung = "PassationBemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AntragBericht = "AntragBericht";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AntragBegruendung = "AntragBegruendung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ErstellungDatum = "ErstellungDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BerichtBeilagen = "BerichtBeilagen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BsDatum = "BsDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BelegeZurueckRevision = "BelegeZurueckRevision";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ZurueckVomBS = "ZurueckVomBS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Berichtsart = "Berichtsart";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string Autor = "Autor";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmSachversicherung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmSachversicherung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmSachversicherungID = "VmSachversicherungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string VerArt = "VerArt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Policenummer = "Policenummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string Selbstbehalt = "Selbstbehalt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Grundpraemie = "Grundpraemie";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsturnus = "Zahlungsturnus";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string LaufzeitVon = "LaufzeitVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string LaufzeitBis = "LaufzeitBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VersichertSeit = "VersichertSeit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Person = "Person";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkungen = "Bemerkungen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Adressat_NameVorname = "Adressat_NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// [AllowNulls: True]
/// </summary>
public const string Adressat_StrasseNr = "Adressat_StrasseNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 61]
/// [AllowNulls: True]
/// </summary>
public const string Adressat_PLZOrt = "Adressat_PLZOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string Adressat_AdrMehrzeilig = "Adressat_AdrMehrzeilig";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1135]
/// [AllowNulls: True]
/// </summary>
public const string Adressat_AdrEinzeilig = "Adressat_AdrEinzeilig";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmSituationsBericht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmSituationsBericht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string VmSituationsBerichtID = "VmSituationsBerichtID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AntragDatum = "AntragDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string TypSHAntrag = "TypSHAntrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Themen = "Themen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string BerichtFinanzen = "BerichtFinanzen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ZielPrognose = "ZielPrognose";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string AntragText = "AntragText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// [AllowNulls: True]
/// </summary>
public const string Autor = "Autor";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwTmVmVaterschaft{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwTmVmVaterschaft"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string AnerkennungDat = "AnerkennungDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string AnerkennungOrt = "AnerkennungOrt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string UHVDat = "UHVDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string SgeVDat = "SgeVDat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 30]
/// [AllowNulls: True]
/// </summary>
public const string GenehmDat = "GenehmDat";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FirstName = "FirstName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LastName = "LastName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string ShortName = "ShortName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsUserAdmin = "IsUserAdmin";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsUserBIAGAdmin = "IsUserBIAGAdmin";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string PasswordHash = "PasswordHash";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string IsLocked = "IsLocked";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GenderCode = "GenderCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string LanguageCode = "LanguageCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string isMandatsTraeger = "isMandatsTraeger";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Phone = "Phone";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ChiefID = "ChiefID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PermissionGroupID = "PermissionGroupID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GrantPermGroupID = "GrantPermGroupID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text1 = "Text1";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Text2 = "Text2";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string JobPercentage = "JobPercentage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HoursPerYearForCaseMgmt = "HoursPerYearForCaseMgmt";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string XUserTS = "XUserTS";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XProfileID = "XProfileID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string NameVornameOhneKomma = "NameVornameOhneKomma";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 401]
/// </summary>
public const string VornameName = "VornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 708]
/// </summary>
public const string LogonNameVornameOrgUnit = "LogonNameVornameOrgUnit";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ParentID = "ParentID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string OrgEinheitName = "OrgEinheitName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string OrgUnit = "OrgUnit";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string OrgEinheitEmail = "OrgEinheitEmail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string OrgEinheitFax = "OrgEinheitFax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string OrgEinheitWWW = "OrgEinheitWWW";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 708]
/// </summary>
public const string DisplayText = "DisplayText";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwUserSimple{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwUserSimple"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LastName = "LastName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string FirstName = "FirstName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 402]
/// </summary>
public const string NameVorname = "NameVorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 605]
/// </summary>
public const string DisplayText = "DisplayText";
}

/// <summary>
/// Type: View
/// </summary>

public static class vwXConfig_public{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "vwXConfig_public"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string XNamespaceExtensionID = "XNamespaceExtensionID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// </summary>
public const string KeyPath = "KeyPath";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ValueCode = "ValueCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string LOVName = "LOVName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ValueBit = "ValueBit";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueBit = "OriginalValueBit";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValueDateTime = "ValueDateTime";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueDateTime = "OriginalValueDateTime";

/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string ValueDecimal = "ValueDecimal";

/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueDecimal = "OriginalValueDecimal";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ValueInt = "ValueInt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueInt = "OriginalValueInt";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValueMoney = "ValueMoney";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueMoney = "OriginalValueMoney";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string ValueVarchar = "ValueVarchar";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string OriginalValueVarchar = "OriginalValueVarchar";
}

/// <summary>
/// Type: View
/// </summary>

public static class WhKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "WhKostenart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Quoting = "Quoting";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaWVZeileCode = "BaWVZeileCode";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgKostenartTS = "BgKostenartTS";
}

/// <summary>
/// Type: View
/// </summary>

public static class WhPositionsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "WhPositionsart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartCode = "BgPositionsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID_CopyOf = "BgPositionsartID_CopyOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Hilfetext = "Hilfetext";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NrmKontoCode = "NrmKontoCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string VerwaltungSD_Default = "VerwaltungSD_Default";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Spezkonto = "Spezkonto";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ProPerson = "ProPerson";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string ProUE = "ProUE";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Masterbudget_EditMask = "Masterbudget_EditMask";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Monatsbudget_EditMask = "Monatsbudget_EditMask";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string ModulID = "ModulID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 3000]
/// [AllowNulls: True]
/// </summary>
public const string sqlRichtlinie = "sqlRichtlinie";

/// <summary>
/// [DataType: TIMESTAMP]
/// [Length: 8]
/// </summary>
public const string BgPositionsartTS = "BgPositionsartTS";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string VarName = "VarName";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Verrechenbar = "Verrechenbar";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NameTID = "NameTID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string System = "System";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string KreditorEingeschraenkt = "KreditorEingeschraenkt";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 111]
/// </summary>
public const string KontoNrName = "KontoNrName";
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class BLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "BLOV"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class LOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "LOV"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class SEL{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "SEL"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_alterdiagram{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_alterdiagram"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_creatediagram{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_creatediagram"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_dropdiagram{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_dropdiagram"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_helpdiagramdefinition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_helpdiagramdefinition"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_helpdiagrams{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_helpdiagrams"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_renamediagram{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_renamediagram"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class sp_upgraddiagrams{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "sp_upgraddiagrams"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAddReplaceLOV"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAddReplaceLOVCode"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVCodeExt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAddReplaceLOVCodeExt"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddReplaceLOVExt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAddReplaceLOVExt"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAddXConfig{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAddXConfig"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAdTranslationFields{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAdTranslationFields"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Abzahlungskonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_Abzahlungskonto"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_CreateKbBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_CreateKbBuchung"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Reset{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_Reset"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyBudget_Update{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyBudget_Update"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyEinzelzahlung_CreateKbBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyEinzelzahlung_CreateKbBuchung"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyEinzelzahlung_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyEinzelzahlung_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Bewilligen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyFinanzplan_Bewilligen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Check{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyFinanzplan_Check"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyFinanzplan_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyFinanzplan_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyFinanzplan_Update{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyFinanzplan_Update"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAyGetBeleg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAyGetBeleg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spAySpezkonto_UpdateBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spAySpezkonto_UpdateBudget"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBaGetPersonInfoTitel{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBaGetPersonInfoTitel"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBDEGetLeistungWoche{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBDEGetLeistungWoche"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSCheckAndCreateAnfangsdossiers{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSCheckAndCreateAnfangsdossiers"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSDossier_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSDossier_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSDossier_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSDossier_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSGetDossierTree{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSGetDossierTree"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSGetImportDossiers{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSGetImportDossiers"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSKennzahlen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSKennzahlen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSPerformImport{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSPerformImport"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spBFSQueryBFSVariablen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spBFSQueryBFSVariablen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spCopyFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spCopyFall"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spCreateInsertForTableCopy{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spCreateInsertForTableCopy"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDBO{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spDBO"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spDropLOV"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropObject{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spDropObject"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDropTableRef{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spDropTableRef"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spDuplicateRows{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spDuplicateRows"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaDeleteFaFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaDeleteFaFall"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaDeleteFaFallPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaDeleteFaFallPerson"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetFallIconsOfPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaGetFallIconsOfPerson"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetFallZugriff{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaGetFallZugriff"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetModulIcon{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaGetModulIcon"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetSozialsystem{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaGetSozialsystem"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaGetTreeFallNavigator{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaGetTreeFallNavigator"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaInsertFaFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaInsertFaFall"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaInsertFaFallPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaInsertFaFallPerson"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaUpdateFaFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaUpdateFaFall"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFaUpdateFaFallPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFaUpdateFaFallPerson"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbDauerAuftragBuchungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbDauerAuftragBuchungen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetBilanzErfolg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetBilanzErfolg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetBuchungsJournal{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetBuchungsJournal"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetKontoblaetter{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetKontoblaetter"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetKontoblatt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetKontoblatt"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetLastBookings{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetLastBookings"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbGetSaldo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbGetSaldo"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbNextBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbNextBelegNr"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spFbSaldiVortragen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spFbSaldiVortragen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetDataExplorerItems{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spGetDataExplorerItems"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetDynaFldIDfromTextmarke{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spGetDynaFldIDfromTextmarke"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spGetFallMemberTyp{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spGetFallMemberTyp"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkForderung_Delete_Check{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkForderung_Delete_Check"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkForderung_Insert_Index{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkForderung_Insert_Index"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkGetKontoauszug{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkGetKontoauszug"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkMonatszahlen_Detail{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkMonatszahlen_Detail"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkMonatszahlen_DetailAll{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkMonatszahlen_DetailAll"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchung_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkSollstellung_KbBuchung_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchung_Undo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkSollstellung_KbBuchung_Undo"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spIkSollstellung_KbBuchungKstArt_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spIkSollstellung_KbBuchungKstArt_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaAllgemein_RowMerge{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaAllgemein_RowMerge"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaFillAMMBesch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaFillAMMBesch"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetAbklStatSektion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetAbklStatSektion"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetAbklStatSektionRohdaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetAbklStatSektionRohdaten"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetBelegMotivation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetBelegMotivation"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetKandidaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetKandidaten"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetPraesenzzeit"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeit2{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetPraesenzzeit2"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeitAMM{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetPraesenzzeitAMM"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetPraesenzzeitReport{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetPraesenzzeitReport"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetStatistikGEF{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetStatistikGEF"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetStatistikQJ{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetStatistikQJ"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKaGetTeilnehmerstruktur{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKaGetTeilnehmerstruktur"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbAbrechnungASVS{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbAbrechnungASVS"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbAuszahlungAlimentenvermittlungErstellen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbAuszahlungAlimentenvermittlungErstellen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbBelegimportAusGesuchverwaltung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbBelegimportAusGesuchverwaltung"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbErstelle_Rueckforderung_Krankenkasse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbErstelle_Rueckforderung_Krankenkasse"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBatchKVGVVG{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbGetBatchKVGVVG"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbGetBelegNr"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbGetBilanzErfolg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbGetBilanzErfolg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbKostenstelleAnlegen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbKostenstelleAnlegen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbRecycleBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbRecycleBelegNr"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbSaldiVortragen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbSaldiVortragen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbSozialhilferechnungDifferenziert{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbSozialhilferechnungDifferenziert"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbUpdateKbBuchungZahlInfo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbUpdateKbBuchungZahlInfo"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbWVEinzelpostenGenerieren{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbWVEinzelpostenGenerieren"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spKbZahlungslaufValuta_InsertNewYear{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spKbZahlungslaufValuta_InsertNewYear"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenz_AblaufEFBErwerbsaufnahme{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenz_AblaufEFBErwerbsaufnahme"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_AHVVorbezugPensionFrau{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_AHVVorbezugPensionFrau"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_AHVVorbezugPensionMann{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_AHVVorbezugPensionMann"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_BeratungAusstattungVertragAuswertungAm{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_BeratungAusstattungVertragAuswertungAm"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_FallsteuerungDLP{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_FallsteuerungDLP"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_FristKategorisierung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_FristKategorisierung"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_IntakeAusstattungVertragAuswertungAm{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_IntakeAusstattungVertragAuswertungAm"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_PensionsalterFrau{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_PensionsalterFrau"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_PensionsalterMann{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_PensionsalterMann"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person14{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_Person14"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person18{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_Person18"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_Person25{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_Person25"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spPendenzCheck_WarnungVorEndeFinanzplan{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spPendenzCheck_WarnungVorEndeFinanzplan"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spQRYStundenProLeistungsart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spQRYStundenProLeistungsart"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spRenameColumn{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spRenameColumn"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spRenameTable{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spRenameTable"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spReportWhAuszahlungsbeleg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spReportWhAuszahlungsbeleg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spReportWhMonatsbudgetGemeinde2013{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spReportWhMonatsbudgetGemeinde2013"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spSSTCalculateNewodFlags{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spSSTCalculateNewodFlags"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spVmGetProdukte{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spVmGetProdukte"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhAlleKVGVVGAnpassen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhAlleKVGVVGAnpassen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhASVSExport{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhASVSExport"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBgUebersicht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBgUebersicht"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Abzahlungskonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Abzahlungskonto"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_CreateKbBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_CreateKbBuchung"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_CreateQuotedZahlinfo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_CreateQuotedZahlinfo"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Reset{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Reset"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Runden{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Runden"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_Update{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_Update"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_UpdateBuchungsstatusOfBgPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_UpdateBuchungsstatusOfBgPosition"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudget_UpdateKbBuchungZahlInfo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudget_UpdateKbBuchungZahlInfo"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhBudgetSyncDependentKreditorAndValuta{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhBudgetSyncDependentKreditorAndValuta"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Bewilligen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhFinanzplan_Bewilligen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Check{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhFinanzplan_Check"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhFinanzplan_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Delete{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhFinanzplan_Delete"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhFinanzplan_Update{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhFinanzplan_Update"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhKontoauszug{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhKontoauszug"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhKVGVVGAnpassen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhKVGVVGAnpassen"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhPositionsart_Masterbudget_Terminieren{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhPositionsart_Masterbudget_Terminieren"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhPositionsart_Terminieren{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhPositionsart_Terminieren"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spWhSpezkonto_UpdateBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spWhSpezkonto_UpdateBudget"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXAddDbObjectMLMsg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXAddDbObjectMLMsg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXAnonymizeField{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXAnonymizeField"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDbObjectMLMsg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXDbObjectMLMsg"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDBVersionAddEntry{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXDBVersionAddEntry"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDBVersionGetCurrentVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXDBVersionGetCurrentVersion"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDocument_Lock{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXDocument_Lock"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXDocument_UnLock{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXDocument_UnLock"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXExecuteSQLFile{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXExecuteSQLFile"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXExtendedProperty{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXExtendedProperty"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetBookmark{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetBookmark"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetDBScheme{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetDBScheme"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetLOVScheme{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetLOVScheme"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetModulTree{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetModulTree"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetRightsAssignedUnassigned{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetRightsAssignedUnassigned"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetTreeDynaFields{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetTreeDynaFields"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXGetTreeLOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXGetTreeLOV"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXHistoryChanges{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXHistoryChanges"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXHistoryVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXHistoryVersion"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXLogAddEntry{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXLogAddEntry"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXParentChildCopy{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXParentChildCopy"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXRowMerge{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXRowMerge"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSaveProfileTags{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXSaveProfileTags"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXSetMLText"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetMsgBox{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXSetMsgBox"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetTableColumnText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXSetTableColumnText"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXSetXLangText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXSetXLangText"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXTask_Create{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXTask_Create"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXTreeDesigner{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXTreeDesigner"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXValidateDBO{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXValidateDBO"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class spXWriteLogFile{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "spXWriteLogFile"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class TBL{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "TBL"; }
}
}

/// <summary>
/// Type: StoredProcedure
/// </summary>

public static class USR{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "USR"; }
}
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnABAGetLeistungsdaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnABAGetLeistungsdaten"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string Id_ = "Id$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID_ = "UserID$";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Periodendatum_ = "Periodendatum$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Mandanten_Nr_ = "Mandanten-Nr.";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Perioden_Nr_ = "Perioden-Nr.";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MA_Nr_ = "MA-Nr.";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Lohntyp = "Lohntyp";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart = "Lohnart";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SumTotalStunden = "SumTotalStunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SumPartialStunden = "SumPartialStunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SumPartialProzent = "SumPartialProzent";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenart = "Kostenart";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostentraeger = "Kostenträger";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Freigabe = "Freigabe";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Visum = "Visum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KeinExport = "KeinExport";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Periode = "Periode";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnABAGetStundenlohn{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnABAGetStundenlohn"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID_ = "ID$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID_ = "UserID$";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Periodendatum_ = "Periodendatum$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Mandanten_Nr_ = "Mandanten-Nr.";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Perioden_Nr_ = "Perioden-Nr.";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MA_Nr_ = "MA-Nr.";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string Lohntyp = "Lohntyp";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1100 = "Lohnart 1100";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1110 = "Lohnart 1110";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1120 = "Lohnart 1120";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1130 = "Lohnart 1130";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1140 = "Lohnart 1140";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1150 = "Lohnart 1150";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1160 = "Lohnart 1160";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1170 = "Lohnart 1170";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1180 = "Lohnart 1180";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1190 = "Lohnart 1190";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1200 = "Lohnart 1200";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1210 = "Lohnart 1210";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1220 = "Lohnart 1220";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1230 = "Lohnart 1230";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1240 = "Lohnart 1240";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1250 = "Lohnart 1250";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1260 = "Lohnart 1260";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1270 = "Lohnart 1270";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1280 = "Lohnart 1280";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Lohnart_1290 = "Lohnart 1290";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenart = "Kostenart";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostentraeger = "Kostenträger";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Freigabe = "Freigabe";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Visum = "Visum";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KeinExport = "KeinExport";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Periode = "Periode";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnAyGetBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnAyGetBudget"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KOA = "KOA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgZahlungsmodusID = "BgZahlungsmodusID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Dritte = "Dritte";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Abtretung = "Abtretung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Zahlungsmodus = "Zahlungsmodus";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnAyPersonEinAustritt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnAyPersonEinAustritt"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Eintritt = "Eintritt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Austritt = "Austritt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string EinGrundCode = "EinGrundCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AusGrundCode = "AusGrundCode";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetHistKostentraegerPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistKostentraegerPerDate"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostentraeger = "Kostentraeger";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLeistungMonat{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetLeistungMonat"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string Id_ = "Id$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MonatText = "MonatText";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MonatStartDatum = "MonatStartDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MonatEndDatum = "MonatEndDatum";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZIstArbeitszeitProMonat = "GZIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSollArbeitszeitProMonat = "GZSollArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZMonatsSaldo = "GZMonatsSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SLIstArbeitszeitProMonat = "SLIstArbeitszeitProMonat";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Visiert = "Visiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IstVerbucht = "IstVerbucht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IstVerbuchtLD = "IstVerbuchtLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KeinExport = "KeinExport";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Fakturiert = "Fakturiert";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLeistungMonatView{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetLeistungMonatView"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string Id_ = "Id$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Jahr = "Jahr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Monat = "Monat";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MonatText = "MonatText";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MonatStartDatum = "MonatStartDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string MonatEndDatum = "MonatEndDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string EndOfLastYear = "EndOfLastYear";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Visiert = "Visiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IstVerbucht = "IstVerbucht";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IstVerbuchtLD = "IstVerbuchtLD";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Fakturiert = "Fakturiert";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PensumProzent = "PensumProzent";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZIstArbeitszeitProMonat = "GZIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSollArbeitszeitProMonat = "GZSollArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZMonatsSaldo = "GZMonatsSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVorjahr = "GZUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZKorrekturen = "GZKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZAusbezahlteUeberstunden = "GZAusbezahlteUeberstunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSaldo = "GZSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SLIstArbeitszeitProMonat = "SLIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienUebertragVorjahr = "FerienUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienAnspruchProJahr = "FerienAnspruchProJahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBisherBezogen = "FerienBisherBezogen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBezogenMonat = "FerienBezogenMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienZugabenKuerzungen = "FerienZugabenKuerzungen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienKorrekturen = "FerienKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienSaldo = "FerienSaldo";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetLohnartDropDown{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetLohnartDropDown"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEOrgUnitList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetOEOrgUnitList"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEOrgUnitListZLE{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetOEOrgUnitListZLE"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle_ = "Kostenstelle$";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEUserList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetOEUserList"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetOEUserListExtended{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetOEUserListExtended"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string IsLocked = "IsLocked";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetUebersicht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetUebersicht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string MonatJahrText = "MonatJahrText";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PensumProzent = "PensumProzent";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SollArbeitszeitProTag = "SollArbeitszeitProTag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZIstArbeitszeitProMonat = "GZIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSollArbeitszeitProMonat = "GZSollArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZMonatsSaldo = "GZMonatsSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVorjahr = "GZUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVormonate = "GZUebertragVormonate";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZKorrekturen = "GZKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZAusbezahlteUeberstunden = "GZAusbezahlteUeberstunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSaldo = "GZSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SLIstArbeitszeitProMonat = "SLIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienUebertragVorjahr = "FerienUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienAnspruchProJahr = "FerienAnspruchProJahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBisherBezogen = "FerienBisherBezogen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienZugabenKuerzungen = "FerienZugabenKuerzungen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienKorrekturen = "FerienKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienSaldo = "FerienSaldo";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBDEGetVisumKostenstelleView{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetVisumKostenstelleView"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Auswahl = "Auswahl";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle = "Kostenstelle";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Mitarbeiter = "Mitarbeiter";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string MitarbeiterNr = "MitarbeiterNr";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Freigegeben = "Freigegeben";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Visiert = "Visiert";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Verbucht = "Verbucht";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerbuchtLD = "VerbuchtLD";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PensumProzent = "PensumProzent";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZIstArbeitszeitProMonat = "GZIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSollArbeitszeitProMonat = "GZSollArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZMonatsSaldo = "GZMonatsSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZSaldo = "GZSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZUebertragVorjahr = "GZUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZKorrekturen = "GZKorrekturen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GZAusbezahlteUeberstunden = "GZAusbezahlteUeberstunden";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string SLIstArbeitszeitProMonat = "SLIstArbeitszeitProMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBezogenMonat = "FerienBezogenMonat";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienSaldo = "FerienSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienUebertragVorjahr = "FerienUebertragVorjahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienAnspruchProJahr = "FerienAnspruchProJahr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienBisherBezogen = "FerienBisherBezogen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienZugabenKuerzungen = "FerienZugabenKuerzungen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FerienKorrekturen = "FerienKorrekturen";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Zeitraum = "Zeitraum";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSBudget"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgBudgetID = "BgBudgetID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartCode = "BgPositionsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DECIMAL]
/// [Length: 9]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string VarName = "VarName";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetKrankenkasseDaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetKrankenkasseDaten"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGBetrag = "KVGBetrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string KVGReduktion = "KVGReduktion";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KVGKasse = "KVGKasse";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VVGBetrag = "VVGBetrag";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetRelevanteBuchungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetRelevanteBuchungen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaProzessCode = "FaProzessCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Ausgleichsdatum = "Ausgleichsdatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID_Glaeubiger = "BaPersonID_Glaeubiger";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSGetZahlungDatum{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetZahlungDatum"; }
}


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ErsteAuszahlung = "ErsteAuszahlung";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string LetzteAuszahlung = "LetzteAuszahlung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnBFSMonatsBelege{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSMonatsBelege"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartCode = "BgPositionsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string BFSVariable = "BFSVariable";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KontoNr = "KontoNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string NettoBetrag = "NettoBetrag";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDlgPersonSuchenKGS{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDlgPersonSuchenKGS"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID_ = "BaPersonID$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Nr_ = "Nr.";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburt = "Geburt";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDlgPersonSuchenKGSGastrecht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDlgPersonSuchenKGSGastrecht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID_ = "BaPersonID$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Nr_ = "Nr.";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburt = "Geburt";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_GridRowID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDynaValue_GridRowID"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GridRowID = "GridRowID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_LOV{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDynaValue_LOV"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GridRowID = "GridRowID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_LOVList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDynaValue_LOVList"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GridRowID = "GridRowID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Codes = "Codes";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnDynaValue_Value{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDynaValue_Value"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string FaPhaseID = "FaPhaseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string GridRowID = "GridRowID";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnFaGetBeteiligtePersonenInstitutionen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFaGetBeteiligtePersonenInstitutionen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID_ = "ID$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Typ = "Typ";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnFbGetBarauszahlungListe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFbGetBarauszahlungListe"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbBarauszahlungAuftragID = "FbBarauszahlungAuftragID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbBarauszahlungZyklusID = "FbBarauszahlungZyklusID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbPeriodeID = "FbPeriodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FbBuchungID = "FbBuchungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Mandant = "Mandant";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string MandantVornameName = "MandantVornameName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PersStrasse = "PersStrasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PersPLZ = "PersPLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PersOrt = "PersOrt";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string PersGeburtsdatum = "PersGeburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string PersAHVNummer = "PersAHVNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string PersVersNummer = "PersVersNummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Stichtag = "Stichtag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuszahlungAb = "AuszahlungAb";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AuszahlungBis = "AuszahlungBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string BewilligtDurch = "BewilligtDurch";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Auszahldatum = "Auszahldatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StatusCode = "StatusCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string SollKtoName = "SollKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 25]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string HabenKtoName = "HabenKtoName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Mandatstraeger = "Mandatstraeger";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string AuszahlungDurch = "AuszahlungDurch";

/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FbBarauszahlungAuftragTS = "FbBarauszahlungAuftragTS";

/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string FbBarauszahlungZyklusTS = "FbBarauszahlungZyklusTS";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetAddress{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetAddress"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaAdresseID = "BaAdresseID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PlatzierungInstID = "PlatzierungInstID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmMandantID = "VmMandantID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VmPriMaID = "VmPriMaID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebID = "KaBetriebID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KaBetriebKontaktID = "KaBetriebKontaktID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaLandID = "BaLandID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumVon = "DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string DatumBis = "DatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Gesperrt = "Gesperrt";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AdresseCode = "AdresseCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string CareOf = "CareOf";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Zusatz = "Zusatz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string ZuhandenVon = "ZuhandenVon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string HausNr = "HausNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Postfach = "Postfach";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string PostfachOhneNr = "PostfachOhneNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrtschaftCode = "OrtschaftCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kanton = "Kanton";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Bezirk = "Bezirk";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string PlatzierungsartCode = "PlatzierungsartCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnStatusCode = "WohnStatusCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string WohnungsgroesseCode = "WohnungsgroesseCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string MigrationKA = "MigrationKA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string VerID = "VerID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string Modified = "Modified";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetBaBankUpdated{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetBaBankUpdated"; }
}


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaBankID = "BaBankID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 70]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Strasse = "Strasse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string PLZ = "PLZ";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Ort = "Ort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string ClearingNr = "ClearingNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FilialeNr = "FilialeNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string HauptsitzBCL = "HauptsitzBCL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string PCKontoNr = "PCKontoNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GueltigAb = "GueltigAb";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2]
/// [AllowNulls: True]
/// </summary>
public const string Land = "Land";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 15]
/// [AllowNulls: True]
/// </summary>
public const string ClearingNrNeu = "ClearingNrNeu";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetBaInstitutionByBaInstitutionTypList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetBaInstitutionByBaInstitutionTypList"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaInstitutionID = "BaInstitutionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string InstitutionNr = "InstitutionNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionArtCode = "BaInstitutionArtCode";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Aktiv = "Aktiv";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Debitor = "Debitor";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Kreditor = "Kreditor";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string KeinSerienbrief = "KeinSerienbrief";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string ManuelleAnrede = "ManuelleAnrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Anrede = "Anrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Briefanrede = "Briefanrede";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Titel = "Titel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Vorname = "Vorname";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GeschlechtCode = "GeschlechtCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Geburtsdatum = "Geburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 18]
/// [AllowNulls: True]
/// </summary>
public const string Versichertennummer = "Versichertennummer";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon = "Telefon";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon2 = "Telefon2";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Telefon3 = "Telefon3";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Fax = "Fax";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string EMail = "EMail";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Homepage = "Homepage";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SprachCode = "SprachCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Creator = "Creator";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Created = "Created";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Modifier = "Modifier";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Modified = "Modified";

/// <summary>
/// [DataType: BINARY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BaInstitutionTS = "BaInstitutionTS";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnits{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetCantonsOrgUnits"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ItemName = "ItemName";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string Level = "Level";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnitsPersons{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetCantonsOrgUnitsPersons"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetCantonsOrgUnitsUsers{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetCantonsOrgUnitsUsers"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UserID = "UserID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Name = "Name";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string Kuerzel = "Kürzel";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string LogonName = "LogonName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string Abteilung = "Abteilung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetInstStammUserORGList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetInstStammUserORGList"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OrgUnitID = "OrgUnitID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// </summary>
public const string ItemName = "ItemName";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnGetStandardBookmarks{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetStandardBookmarks"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string BookmarkName = "BookmarkName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DisplayName = "DisplayName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Category = "Category";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BookmarkCode = "BookmarkCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string TableColumn = "TableColumn";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string SQL = "SQL";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string ReplaceCode = "ReplaceCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string ColumnDisplayText = "ColumnDisplayText";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnIkGetIkForderungBgKostenart{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIkGetIkForderungBgKostenart"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string IkForderungBgKostenartHistID = "IkForderungBgKostenartHistID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKostenartID = "BgKostenartID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKaGetAustrittDatumCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKaGetAustrittDatumCode"; }
}


/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDatum = "AustrittDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCode = "AustrittCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCodeText = "AustrittCodeText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCodeTextKurz = "AustrittCodeTextKurz";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string AustrittCodeTextLang = "AustrittCodeTextLang";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDurchOrg = "AustrittDurchOrg";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AustrittDurchVers = "AustrittDurchVers";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string AustrittGegenseitig = "AustrittGegenseitig";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string UKCheckID = "UKCheckID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbAuszahlTermine{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbAuszahlTermine"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgAuszahlungsTerminCode = "BgAuszahlungsTerminCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgWochentagCode = "BgWochentagCode";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Datum = "Datum";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetRelevanteBuchungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetRelevanteBuchungen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string SollKtoNr = "SollKtoNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// </summary>
public const string HabenKtoNr = "HabenKtoNr";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string Ausgabe = "Ausgabe";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string BelegDatum = "BelegDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GemeindeCode = "GemeindeCode";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetWVReportData{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetWVReportData"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string Id_ = "Id$";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string FaLeistungID = "FaLeistungID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string KostenstelleNr = "KostenstelleNr";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Header_DatumVon = "Header_DatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Header_DatumBis = "Header_DatumBis";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Header_PersonName = "Header_PersonName";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Header_PersonGeburtsdatum = "Header_PersonGeburtsdatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Header_Heimatgemeinden = "Header_Heimatgemeinden";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Header_Kantone = "Header_Kantone";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Header_Wohnort = "Header_Wohnort";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Header_WohnkantonNr = "Header_WohnkantonNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 50]
/// [AllowNulls: True]
/// </summary>
public const string Header_HeimatkantonNr = "Header_HeimatkantonNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Header_Bemerkung = "Header_Bemerkung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag1 = "Sub_Betrag1";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag2 = "Sub_Betrag2";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag3 = "Sub_Betrag3";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag4 = "Sub_Betrag4";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag5 = "Sub_Betrag5";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag5a = "Sub_Betrag5a";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag5b = "Sub_Betrag5b";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag5c = "Sub_Betrag5c";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag6 = "Sub_Betrag6";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_TotalAusgaben = "Sub_TotalAusgaben";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag8 = "Sub_Betrag8";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag8a = "Sub_Betrag8a";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag9 = "Sub_Betrag9";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag10 = "Sub_Betrag10";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag11 = "Sub_Betrag11";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_TotalEinnahmen = "Sub_TotalEinnahmen";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag14 = "Sub_Betrag14";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Sub_Betrag15Total = "Sub_Betrag15Total";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbGetZugehoerigeBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetZugehoerigeBelegNr"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string OriginalBelegNr = "OriginalBelegNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string StornoBelegNr = "StornoBelegNr";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string NeubuchungBelegNr = "NeubuchungBelegNr";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbWVEinzelposten_WVEinheitenProBuchung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbWVEinzelposten_WVEinheitenProBuchung"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ResultID = "ResultID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaWVCodeID = "BaWVCodeID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string AnzahlTageVonBis = "AnzahlTageVonBis";

/// <summary>
/// [DataType: REAL]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string ProzentAnteil = "ProzentAnteil";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string WEPDatumVon = "WEPDatumVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// </summary>
public const string WEPDatumBis = "WEPDatumBis";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string WEPSplittingDurchWVLaufDatumBis = "WEPSplittingDurchWVLaufDatumBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string WEPBgSplittingArtCode = "WEPBgSplittingArtCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string WEPBetrag = "WEPBetrag";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string WEPStatus = "WEPStatus";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnKbWVGetBuchungKandidaten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbWVGetBuchungKandidaten"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string KbBuchungKostenartID = "KbBuchungKostenartID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnQryGetKostenstelleDropDown{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnQryGetKostenstelleDropDown"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Kostenstelle_ = "Kostenstelle$";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnQryGetMitarbeiterDropDown{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnQryGetMitarbeiterDropDown"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Code = "Code";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// [AllowNulls: True]
/// </summary>
public const string Text = "Text";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnSplit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnSplit"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// [AllowNulls: True]
/// </summary>
public const string Value = "Value";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnSplitStringToValues{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnSplitStringToValues"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string OccurenceID = "OccurenceID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string SplitValue = "SplitValue";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnTmGeschwister{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnTmGeschwister"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string BaPersonID = "BaPersonID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetBudget"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgAuszahlungPersonID = "BgAuszahlungPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragRechnung = "BetragRechnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KOA = "KOA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Dritte = "Dritte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudgetML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetBudgetML"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionID = "BgPositionID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgPositionsartID = "BgPositionsartID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgAuszahlungPersonID = "BgAuszahlungPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragRechnung = "BetragRechnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string KOA = "KOA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSpezkontoID = "BgSpezkontoID";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Dritte = "Dritte";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetBudgetUebersicht{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetBudgetUebersicht"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Bemerkung = "Bemerkung";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplan{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetFinanzplan"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Info = "Info";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplanIndent{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetFinanzplanIndent"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Info = "Info";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhGetFinanzplanML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetFinanzplanML"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Rec_ID = "Rec_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Parent_ID = "Parent_ID";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string SortKey = "SortKey";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string Style = "Style";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgKategorieCode = "BgKategorieCode";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgGruppeCode = "BgGruppeCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Bezeichnung = "Bezeichnung";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Total = "Total";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 4000]
/// [AllowNulls: True]
/// </summary>
public const string Info = "Info";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhKennzahlen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhKennzahlen"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HgGrundbedarf = "HgGrundbedarf";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UeGrundbedarf = "UeGrundbedarf";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string HgWohnkosten = "HgWohnkosten";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string UeWohnkosten = "UeWohnkosten";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string HgZuschlagI = "HgZuschlagI";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string UeZuschlagI = "UeZuschlagI";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string B23Amount = "B23Amount";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string GBUseHgUeFactor = "GBUseHgUeFactor";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string RntUseHgUeFactor = "RntUseHgUeFactor";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string GBHgUeFactor = "GBHgUeFactor";

/// <summary>
/// [DataType: FLOAT]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RntHgUeFactor = "RntHgUeFactor";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string RefDate = "RefDate";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnWhKontoauszug{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhKontoauszug"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string OrgName = "OrgName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string OrgAdresse = "OrgAdresse";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1000]
/// [AllowNulls: True]
/// </summary>
public const string OrgPLZOrt = "OrgPLZOrt";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string NeueSeite = "NeueSeite";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string DruckDatum = "DruckDatum";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Auswertungszeitraum = "Auswertungszeitraum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbBuchungID = "KbBuchungID";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BelegDatum = "BelegDatum";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string ValutaDatum = "ValutaDatum";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BaPersonID = "BaPersonID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// [AllowNulls: True]
/// </summary>
public const string Klient = "Klient";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 20]
/// [AllowNulls: True]
/// </summary>
public const string BelegNr = "BelegNr";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 10]
/// [AllowNulls: True]
/// </summary>
public const string LA = "LA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 110]
/// [AllowNulls: True]
/// </summary>
public const string LAText = "LAText";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 400]
/// [AllowNulls: True]
/// </summary>
public const string Buchungstext = "Buchungstext";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeVon = "VerwPeriodeVon";

/// <summary>
/// [DataType: DATETIME]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string VerwPeriodeBis = "VerwPeriodeBis";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string BgSplittingArtCode = "BgSplittingArtCode";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag = "Betrag";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string BetragSaldo = "BetragSaldo";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Betrag100 = "Betrag100";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string EA = "EA";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string KbBuchungStatusCode = "KbBuchungStatusCode";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1]
/// [AllowNulls: True]
/// </summary>
public const string Doc = "Doc";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 100]
/// [AllowNulls: True]
/// </summary>
public const string Auszahlart = "Auszahlart";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 2000]
/// [AllowNulls: True]
/// </summary>
public const string KreditorDebitor = "KreditorDebitor";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Einnahme = "Einnahme";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Ausgabe = "Ausgabe";

/// <summary>
/// [DataType: MONEY]
/// [Length: 8]
/// [AllowNulls: True]
/// </summary>
public const string Saldo = "Saldo";

/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [AllowNulls: True]
/// </summary>
public const string SortKey = "SortKey";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXConfigChild{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXConfigChild"; }
}


/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string KeyPath = "KeyPath";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 500]
/// [AllowNulls: True]
/// </summary>
public const string Child = "Child";

/// <summary>
/// [DataType: SQL_VARIANT]
/// [Length: 8016]
/// [AllowNulls: True]
/// </summary>
public const string ValueVar = "ValueVar";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXOrgUnitsOfUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXOrgUnitsOfUser"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// </summary>
public const string OrgUnitID = "OrgUnitID";
}

/// <summary>
/// Type: TableFunction
/// </summary>

public static class fnXRowMerge_PersonCheck{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXRowMerge_PersonCheck"; }
}


/// <summary>
/// [DataType: INT]
/// [Length: 4]
/// [IsIdentity: True]
/// </summary>
public const string ID = "ID";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 255]
/// </summary>
public const string TableName = "TableName";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 200]
/// </summary>
public const string Problem = "Problem";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: MAX]
/// </summary>
public const string Solution = "Solution";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>
public const string JumpToPathA = "JumpToPathA";

/// <summary>
/// [DataType: VARCHAR]
/// [Length: 1500]
/// [AllowNulls: True]
/// </summary>
public const string JumpToPathB = "JumpToPathB";

/// <summary>
/// [DataType: BIT]
/// [Length: 1]
/// </summary>
public const string SelectDeleteOne = "SelectDeleteOne";
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fn_diagramobjects{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fn_diagramobjects"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnAySpezkonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnAySpezkonto"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaCKBaPersonRelationIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaCKBaPersonRelationIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaInstitution{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetAnredeAnschriftBaInstitution"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaInstitutionKontakt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetAnredeAnschriftBaInstitutionKontakt"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetAnredeAnschriftBaPerson{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetAnredeAnschriftBaPerson"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaAdresseID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetBaAdresseID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaInstitutionTypen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetBaInstitutionTypen"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetBaZahlungswegID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetBaZahlungswegID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGetPostfachText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGetPostfachText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaGleicheAdresse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaGleicheAdresse"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBaRelation{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBaRelation"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEConvertMoneyToHHMM{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEConvertMoneyToHHMM"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEExportPlausibilisierungsfehler{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEExportPlausibilisierungsfehler"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetAusbezahlteUeberstunden{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetAusbezahlteUeberstunden"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetErfassteFerien{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetErfassteFerien"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienAnspruch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetFerienAnspruch"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienKorrekturen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetFerienKorrekturen"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienSaldo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetFerienSaldo"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetFerienZugabenKuerzungen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetFerienZugabenKuerzungen"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetGleitzeitKorrekturen{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetGleitzeitKorrekturen"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetGleitzeitSaldo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetGleitzeitSaldo"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKostenartPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistKostenartPerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKostenstellePerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistKostenstellePerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistKSTOrgUnitItemName{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistKSTOrgUnitItemName"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistLAValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistLAValue"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistLeistungLohnlaufNrPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistLeistungLohnlaufNrPerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistMandantenNrPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistMandantenNrPerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetHistStundenLohnlaufNrPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetHistStundenLohnlaufNrPerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetLohnartText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetLohnartText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetNextExportMonth{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetNextExportMonth"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetOrgUnitIDFromMandantenNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetOrgUnitIDFromMandantenNr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetPensumPercent{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetPensumPercent"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetSollProMonat{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetSollProMonat"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetSollProTag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetSollProTag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetWeekDayFromDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetWeekDayFromDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEGetZLEHoursForModule{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEGetZLEHoursForModule"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEIsMonatFreigegeben{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEIsMonatFreigegeben"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBDEIsZeitrechnerRangeValid{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBDEIsZeitrechnerRangeValid"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSBetrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSBetrag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSConcatDossierNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSConcatDossierNr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetAlbvBetrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetAlbvBetrag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetKatalogVersion{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetKatalogVersion"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSGetLeistungsartCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSGetLeistungsartCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSIsNewDossierGap{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSIsNewDossierGap"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSLeistungsartTOProzess{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSLeistungsartTOProzess"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBFSLetzteBudget{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBFSLetzteBudget"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetCurrentOrPreviousFinanzplanID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBgGetCurrentOrPreviousFinanzplanID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetKostenartIDByKontoNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBgGetKostenartIDByKontoNr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetPositionenCount{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBgGetPositionenCount"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgGetValutaTermine{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBgGetValutaTermine"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnBgSpezkonto{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnBgSpezkonto"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCheckMod10Nummer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCheckMod10Nummer"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCheckReferenznummer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCheckReferenznummer"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCKXLovCodeIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCKXLovCodeIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCombineKSTOrgUnitItemName{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCombineKSTOrgUnitItemName"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCombineRTFTexts{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCombineRTFTexts"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnCSVSplit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnCSVSplit"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateAsVarchar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDateAsVarchar"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateChangeToWorkingDay{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDateChangeToWorkingDay"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateLong{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDateLong"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateOf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDateOf"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDateSerial{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDateSerial"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDatumUeberschneidung{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDatumUeberschneidung"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDaysInMonthOf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDaysInMonthOf"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnDynaFieldID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnDynaFieldID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaCKFaLeistungZugriffFaLeistungUserIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFaCKFaLeistungZugriffFaLeistungUserIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaGetBaPersonIdFalltraeger{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFaGetBaPersonIdFalltraeger"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFaGetKategorie{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFaGetKategorie"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFbGetBuchungstext{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFbGetBuchungstext"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFirstDayOf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFirstDayOf"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnFormatNumber{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnFormatNumber"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAdressText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetAdressText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAge{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetAge"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetAppCodeNamedValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetAppCodeNamedValue"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDateFromInts{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetDateFromInts"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDBRowCreatorModifier{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetDBRowCreatorModifier"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetDefaultGemeindeCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetDefaultGemeindeCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetEhepaarName{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetEhepaarName"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetForeignKeyColumnsOfForeignKey{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetForeignKeyColumnsOfForeignKey"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetGenderMLTitle{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetGenderMLTitle"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetGenderMLTitleMF{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetGenderMLTitleMF"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetHauptpersonFuerMitglied{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetHauptpersonFuerMitglied"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetHistKGSOfUserOrOrgUnit{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetHistKGSOfUserOrOrgUnit"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetKeyColumnsOfIndex{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetKeyColumnsOfIndex"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetLastFirstName{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetLastFirstName"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetLOVMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetLOVMLText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetMLText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextByDefault{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetMLTextByDefault"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextFromName{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetMLTextFromName"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetMLTextFromTable{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetMLTextFromTable"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetNumberOfDaysInMonth{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetNumberOfDaysInMonth"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetPersonSichtbarFlag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetPersonSichtbarFlag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetReferencedKeyColumnsOfForeignKey{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetReferencedKeyColumnsOfForeignKey"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetSecondsFromDateTime{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetSecondsFromDateTime"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetShortedVarchar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetShortedVarchar"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetSQLMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetSQLMLText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetTextAtPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetTextAtPosition"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetWeekDayFromDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetWeekDayFromDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetWorkingDays{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetWorkingDays"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Name{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetZahlungsweg_Name"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Name_ML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetZahlungsweg_Name_ML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZahlungsweg_Nummer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetZahlungsweg_Nummer"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGetZeitraumString{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGetZeitraumString"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGleicheAdresse{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGleicheAdresse"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGleicherHaushalt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGleicherHaushalt"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGvGesuchAbschliessbar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGvGesuchAbschliessbar"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnGvGetValutaTermine{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnGvGetValutaTermine"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkAlimenteRunden{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIkAlimenteRunden"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkCKIkForderung_BgKostenartIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIkCKIkForderung_BgKostenartIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkGetBaPersonForderungTyp{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIkGetBaPersonForderungTyp"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIkGetLandesindexWert{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIkGetLandesindexWert"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnImage2VarChar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnImage2VarChar"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsInteger{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIsInteger"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsNullOrEmpty{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIsNullOrEmpty"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsUserAdmin{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIsUserAdmin"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnIsUserBIAGAdmin{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnIsUserBIAGAdmin"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKaGetPersonKontaktString{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKaGetPersonKontaktString"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCheckBelegDatum{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbCheckBelegDatum"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCheckBelegNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbCheckBelegNr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCKKbBuchungIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbCKKbBuchungIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbCKKbPeriodeIntegrity{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbCKKbPeriodeIntegrity"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetKontoVorsaldo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetKontoVorsaldo"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetKostenstelle{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetKostenstelle"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetPeriodeID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeIDByDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetPeriodeIDByDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetPeriodeInfo{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetPeriodeInfo"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnKbGetZustaendigeGemeinde{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnKbGetZustaendigeGemeinde"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLandMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLandMLText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLastDayOf{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLastDayOf"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVColumnListe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVColumnListe"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVMLColumnListe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVMLColumnListe"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVMLText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVMLText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVShortText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVShortText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnLOVTextListe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnLOVTextListe"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnMAX{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnMAX"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnMIN{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnMIN"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitHierarchyValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnOrgUnitHierarchyValue"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitHistoryHierarchyValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnOrgUnitHistoryHierarchyValue"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUser{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnOrgUnitOfUser"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUserHistoryPerDate{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnOrgUnitOfUserHistoryPerDate"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnOrgUnitOfUserMandantenNr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnOrgUnitOfUserMandantenNr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnQryGetHashCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnQryGetHashCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnRemoveCharactersByRegex{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnRemoveCharactersByRegex"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnReplaceWildcard{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnReplaceWildcard"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetBetragGBL{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGetBetragGBL"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetKuerzungBetrag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGetKuerzungBetrag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetPositionsartIdByCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGetPositionsartIdByCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGetSpezkontoEnddatum{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGetSpezkontoEnddatum"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfI"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI_Hg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfI_Hg"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfI_Person{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfI_Person"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfII"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII_Hg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfII_Hg"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfII_Person{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfII_Person"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfIZuschlag{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfIZuschlag"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShGrundbedarfIZuschlag_Hg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShGrundbedarfIZuschlag_Hg"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShWohnkosten"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten_Hg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShWohnkosten_Hg"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnShWohnkosten_Person{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnShWohnkosten_Person"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnSortLOVList{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnSortLOVList"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnStringReplace"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace2{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnStringReplace2"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace3{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnStringReplace3"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace4{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnStringReplace4"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnStringReplace5{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnStringReplace5"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnTmKinder{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnTmKinder"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnTnToPc{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnTnToPc"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUnterstuetzt{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnUnterstuetzt"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserAccessGastrechtGueltigkeitZeitbereich{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnUserAccessGastrechtGueltigkeitZeitbereich"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserHasRight{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnUserHasRight"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserMayReadFall{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnUserMayReadFall"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnUserMayReadFallBasicCheck{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnUserMayReadFallBasicCheck"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetDateFrom{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnVmGetDateFrom"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetLeistungID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnVmGetLeistungID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnVmGetMandatstypCode{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnVmGetMandatstypCode"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhExistsBelegForPosition{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhExistsBelegForPosition"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhGetBetragKontoauszug{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetBetragKontoauszug"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhGetPositionStatus{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhGetPositionStatus"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnWhPosition_Permission{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnWhPosition_Permission"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXAHVNummer{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXAHVNummer"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCodeListsHaveMatch{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXCodeListsHaveMatch"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCompareSQL_VARIANT{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXCompareSQL_VARIANT"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCompareTEXT{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXCompareTEXT"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConfig{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXConfig"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConfigVarchar{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXConfigVarchar"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXConvertRTF2Text{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXConvertRTF2Text"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXCreateTableScript{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXCreateTableScript"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXDbObjectMLMsg{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXDbObjectMLMsg"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXDBVersionGetCurrentDBVersionID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXDBVersionGetCurrentDBVersionID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetClassUserText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetClassUserText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetHistUserValue{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetHistUserValue"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetISOWeekNumber{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetISOWeekNumber"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetNumberFromText{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetNumberFromText"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetPostfachTextML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetPostfachTextML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetSystemUserID{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetSystemUserID"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXGetUserRNDPwd{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXGetUserRNDPwd"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXIsDocTemplatePublic{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXIsDocTemplatePublic"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonat{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXKurzMonat"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatJahr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXKurzMonatJahr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatJahrML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXKurzMonatJahrML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXKurzMonatML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXKurzMonatML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXModul10{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXModul10"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonat{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXMonat"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatJahr{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXMonatJahr"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatJahrML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXMonatJahrML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXMonatML{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXMonatML"; }
}
}

/// <summary>
/// Type: ScalarFunction
/// </summary>

public static class fnXProfileTagsTextListe{
/// <summary>
/// Get the name of the database object as defined on the database
/// </summary>
public static string DBOName {
get { return "fnXProfileTagsTextListe"; }
}
}
}}