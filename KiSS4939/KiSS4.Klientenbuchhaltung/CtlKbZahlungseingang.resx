<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryZahlungseingang.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 17</value>
  </metadata>
  <data name="qryZahlungseingang.SelectStatement" xml:space="preserve">
    <value>DECLARE @nurUnverbucht BIT;
SET @nurUnverbucht = 0;
--- SET @nurUnverbucht = {edtNurUnverbuchtX};

DECLARE @nurUnausgeglichen BIT;
SET @nurUnausgeglichen = 0;
--- SET @nurUnausgeglichen = {edtNurUnausgeglichenX};

SELECT ZEI.*,
       Klient      = PRS.NameVorname,
       SAR         = USR.NameVorname, 
       Institution = DEB.Name,
       Konto       = KTO.KontoNr + ' ' + KTO.KontoName,
       selektiert  = CONVERT(BIT, 0),
       Beglichen   = convert(bit,
                               CASE WHEN ZEI.KbZahlungseingangID IS NULL THEN 0
                                    WHEN ZEI.Ausgeglichen = 1 OR ZEI.Betrag = (SELECT SUM(Betrag) FROM KbBuchung B WHERE B.KbZahlungseingangID = ZEI.KbZahlungseingangID)
                                          THEN 1 
                                    ELSE 0
                               END),
       AusgleichVerbucht = convert(bit,
                               CASE WHEN ZEI.Ausgeglichen = 1-- AND ZEI.Betrag = (SELECT SUM(Betrag) FROM KbBuchung B WHERE B.KbZahlungseingangID = ZEI.KbZahlungseingangID)
                               THEN 1 ELSE 0 END),
       BUC.KbBuchungID,
       BUC.BelegNr
FROM   KbZahlungseingang   ZEI
  LEFT  JOIN KbBuchung     BUC ON BUC.KbZahlungseingangID = ZEI.KbZahlungseingangID 
                              AND BUC.KbBuchungTypCode = 4 -- Ausgleichsbuchung
  LEFT  JOIN vwPerson      PRS ON PRS.BaPersonID      = ZEI.BaPersonID
  LEFT  JOIN vwUser        USR ON USR.UserID = ZEI.ZugeteiltUserID
  LEFT  JOIN vwInstitution DEB ON DEB.BaInstitutionID = ZEI.BaInstitutionID
  LEFT  JOIN KbKonto       KTO ON KTO.KontoNr         = ZEI.KontoNr
WHERE 1 = 1 
  -- nur unverbuchte Zahlungseingänge
  AND (@nurUnverbucht = 0 OR ZEI.Ausgeglichen = 0)
  -- nur unausgeglichene Zahlungseingänge
  AND (@nurUnausgeglichen = 0 OR (CASE 
                                    WHEN ZEI.KbZahlungseingangID IS NULL 
                                      THEN 0
                                    WHEN ZEI.Ausgeglichen = 1 OR ZEI.Betrag = (SELECT SUM(Betrag) FROM KbBuchung B WHERE B.KbZahlungseingangID = ZEI.KbZahlungseingangID)
                                      THEN 1 
                                      ELSE 0
                                  END) = 0)
  AND KTO.KbPeriodeID = IsNull({0}, -999) -- KbPeriodeID aus FormKlibu (FormController)
  AND ({1} IS NULL OR ( ZEI.BaPersonID = {1} AND ZEI.ZugeteiltUserID = {2}))
  AND isNull(BUC.KbPeriodeID, {0}) = {0}
  AND ZEI.KontoNr &lt;&gt; '9999.999'
--- AND ZEI.Datum &gt;= {edtDatumVonX}
--- AND ZEI.Datum &lt;= {edtDatumBisX}
--- AND ZEI.Betrag &gt;= {edtBetragVonX}
--- AND ZEI.Betrag &lt;= {edtBetragBisX}
--- AND CONVERT(int, REPLACE(ZEI.KontoNr, '.', '')) &gt;= CONVERT(int, REPLACE({edtKontoNrVonX}, '.', ''))
--- AND CONVERT(int, REPLACE(ZEI.KontoNr, '.', '')) &lt;= CONVERT(int, REPLACE({edtKontoNrBisX}, '.', ''))
-- --- AND PRS.BaPersonID = {edtBaPersonIDX}
-- --- AND INS.InstitutionTypCode = {edtInstitutiontypX}
--- AND DEB.BaInstitutionID = {edtBaInstitutionIDX.LookupID}
ORDER BY ZEI.Datum</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtDatumVonX.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtDatumBisX.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="picTitel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAGpJREFUOE+1jgEK
        ACEIBH26P+8S2lhqPazjBgbBdNM67VZ3j2rthj3grQp1AIseWHo6AJUFy/se0IlGVRlwwj8BOK+iDDjh
        U0DsyACcl8mL1KtdwIuxxIwRTbyHahHMIWX26wQDmWMswewBIyGEbrEoDawAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="qryAusgleich.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="edtDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>