<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryBeleg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>42</value>
  </metadata>
  <metadata name="qryKbBuchung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>218, 17</value>
  </metadata>
  <data name="qryKbBuchung.SelectStatement" xml:space="preserve">
    <value>SELECT *, BetragTotal = -Betrag, Zahlungsempfaenger = IsNull(ZPR.NameVorname, ZIN.Name)
FROM KbBuchung KBU
  LEFT JOIN BaZahlungsweg      ZAL ON ZAL.BaZahlungswegID   = KBU.BaZahlungswegID
  LEFT JOIN vwPerson           ZPR ON ZPR.BaPersonID        = ZAL.BaPersonID
  LEFT JOIN vwInstitution      ZIN ON ZIN.BaInstitutionID   = ZAL.BaInstitutionID
WHERE KBU.KbBuchungID = {0}

SELECT BKA.*, PersonName = PRS.NameVorname
FROM KbBuchungKostenart  BKA
  INNER JOIN KbBuchung   BUC ON BUC.KbBuchungID = BKA.KbBuchungID
  LEFT  JOIN vwPerson    PRS ON PRS.BaPersonID  = BKA.BaPersonID
WHERE BKA.KbBuchungID = {0}</value>
  </data>
  <data name="qryBeleg.SelectStatement" xml:space="preserve">
    <value>SELECT BUC.KbBuchungID,
       BUC.KbPeriodeID,
       BUC.KbBuchungStatusCode,
       BUC.BelegNr,
       BUC.BelegDatum,
       BUC.KbBelegKreisID,
       BUC.ValutaDatum,
       BUC.Betrag,
       BUC.HabenKtoNr,
       BUC.Text,
       BUC.KbAuszahlungsArtCode,
       Referenznummer,
       Kreditor = ISNULL(BeguenstigtName, '') + CHAR(13) + CHAR(10) +
                  ISNULL(BeguenstigtStrasse, '') + ' ' + ISNULL(BeguenstigtPLZ, '') + ' ' + ISNULL(BeguenstigtOrt, '') + CHAR(13) + CHAR(10)+
                  CASE 
                    WHEN KbAuszahlungsArtCode = 101 THEN 'elektronische Auszahlung auf ' + 
                                                         ISNULL('PostkontoNr: ' + dbo.fnTnToPC(PCKontoNr) + ' ', '') + 
                                                         ISNULL('BankkontoNr: ' + BankKontoNr, '')
                    WHEN KbAuszahlungsArtCode = 105 THEN '' 
                    ELSE 'Barauszahlung'
                  END,
       BudgetMonatJahr = CONVERT(VARCHAR, ISNULL(BDG.Monat, '')) + '.' + CONVERT(VARCHAR, ISNULL(BDG.Jahr, '')),
       KlientIn = PRS.NameVorname,
       Ersteller = USR_ERS.NameVorname
FROM dbo.KbBuchung        BUC
  INNER JOIN dbo.BgBudget     BDG ON BDG.BgBudgetID = BUC.BgBudgetID
  INNER JOIN dbo.BgFinanzplan FP  ON FP.BgFinanzplanID = BDG.BgFinanzplanID
  INNER JOIN dbo.FaLeistung   LST ON LST.FaLeistungID = FP.FaLeistungID
  INNER JOIN dbo.vwPerson     PRS ON PRS.BaPersonID = LST.BaPersonID
  INNER JOIN dbo.vwUser       USR_SAR ON USR_SAR.UserID = LST.UserID
  INNER JOIN dbo.vwUser       USR_ERS ON USR_ERS.UserID = BUC.ErstelltUserID
  INNER JOIN dbo.KbPeriode    PRD ON PRD.KbPeriodeID = BUC.KbPeriodeID
WHERE BUC.KbBuchungTypCode = 1 -- Budgetbuchungen
-------  AND BUC.KbPeriodeID = IsNull({0}, BUC.KbPeriodeID)                   -- KbPeriodeID aus FormKlibu (FormController)
  AND PRD.KbMandantID = {0} --- nur noch auf Mandant einschränken!
  AND (BUC.KbAuszahlungsartCode IN (101, 103)                                 -- nur 'Elektronische Auszahlung', 'Cash / Barauszahlung' und 'Interne Verrechnung' weil nur die unterstützt
  	OR ({chkSucheInterneVerrechnungEinbeziehen} = 1 AND BUC.KbAuszahlungsartCode = 105))
  AND (BUC.KbBuchungStatusCode = 4 OR BUC.KbAuszahlungsartCode &lt;&gt; 103)        -- Barauszahlung nur wenn ausgedruckt
--- AND dbo.fnDateSerial(BDG.Jahr, BDG.Monat, 1) &gt;= dbo.fnDateOf(dbo.fnFirstDayOf({edtSucheBudgetVon}))
--- AND dbo.fnDateSerial(BDG.Jahr, BDG.Monat, 1) &lt;= dbo.fnDateOf(dbo.fnFirstDayOf({edtSucheBudgetBis}))
--- AND dbo.fnDateOf(BUC.ValutaDatum) &gt;= dbo.fnDateOf({edtSucheValutaVon})
--- AND dbo.fnDateOf(BUC.ValutaDatum) &lt;= dbo.fnDateOf({edtSucheValutaBis})
--- AND dbo.fnDateOf(BUC.BarbelegDatum) &gt;= {edtSucheBarbelegVon}
--- AND dbo.fnDateOf(BUC.BarbelegDatum) &lt;= {edtSucheBarbelegBis}
--- AND BUC.BelegNr &gt;= {edtSucheBelegNrVon}
--- AND BUC.BelegNr &lt;= {edtSucheBelegNrBis}
--- AND ({chkSucheOhneBelegNr} = 0 OR BUC.BelegNr IS NULL)
--- AND (',' + {edtSucheKbBuchungsStatus} + ',' LIKE '%,' + CONVERT(VARCHAR, KbBuchungStatusCode) + ',%') 
--- AND USR_SAR.OrgUnitID = {edtSucheGruppe}
--- AND BUC.ErstelltUserID = {edtSucheErfasser.LookupID}
ORDER BY BUC.KbBuchungStatusCode;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtBuchungsdatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheBarbelegBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheBarbelegVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheBudgetBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheBudgetVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheValutaBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtSucheValutaVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryGruppe.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>113, 17</value>
  </metadata>
</root>