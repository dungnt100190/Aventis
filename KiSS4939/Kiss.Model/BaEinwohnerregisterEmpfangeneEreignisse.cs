//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaEinwohnerregisterEmpfangeneEreignisseRohdaten))]
    public partial class BaEinwohnerregisterEmpfangeneEreignisse: EntityBase<BaEinwohnerregisterEmpfangeneEreignisse>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaEinwohnerregisterEmpfangeneEreignisseID
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseID; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaEinwohnerregisterEmpfangeneEreignisseID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baEinwohnerregisterEmpfangeneEreignisseID = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseID");
                }
            }
        }
        private int _baEinwohnerregisterEmpfangeneEreignisseID;
    
        [DataMember]
        public int BaEinwohnerregisterEmpfangeneEreignisseRohdatenID
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseRohdatenID; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseRohdatenID != value)
                {
                    ChangeTracker.RecordOriginalValue("BaEinwohnerregisterEmpfangeneEreignisseRohdatenID", _baEinwohnerregisterEmpfangeneEreignisseRohdatenID);
                    if (!IsDeserializing)
                    {
                        if (BaEinwohnerregisterEmpfangeneEreignisseRohdaten != null && BaEinwohnerregisterEmpfangeneEreignisseRohdaten.BaEinwohnerregisterEmpfangeneEreignisseRohdatenID != value)
                        {
                            BaEinwohnerregisterEmpfangeneEreignisseRohdaten = null;
                        }
                    }
                    _baEinwohnerregisterEmpfangeneEreignisseRohdatenID = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseRohdatenID");
                }
            }
        }
        private int _baEinwohnerregisterEmpfangeneEreignisseRohdatenID;
    
        [DataMember]
        public string FremdsystemID
        {
            get { return _fremdsystemID; }
            set
            {
                if (_fremdsystemID != value)
                {
                    _fremdsystemID = value;
                    OnPropertyChanged("FremdsystemID");
                }
            }
        }
        private string _fremdsystemID;
    
        [DataMember]
        public string deliveryHeader
        {
            get { return _deliveryHeader; }
            set
            {
                if (_deliveryHeader != value)
                {
                    _deliveryHeader = value;
                    OnPropertyChanged("deliveryHeader");
                }
            }
        }
        private string _deliveryHeader;
    
        [DataMember]
        public string absence
        {
            get { return _absence; }
            set
            {
                if (_absence != value)
                {
                    _absence = value;
                    OnPropertyChanged("absence");
                }
            }
        }
        private string _absence;
    
        [DataMember]
        public string acknowledgement
        {
            get { return _acknowledgement; }
            set
            {
                if (_acknowledgement != value)
                {
                    _acknowledgement = value;
                    OnPropertyChanged("acknowledgement");
                }
            }
        }
        private string _acknowledgement;
    
        [DataMember]
        public string addressLock
        {
            get { return _addressLock; }
            set
            {
                if (_addressLock != value)
                {
                    _addressLock = value;
                    OnPropertyChanged("addressLock");
                }
            }
        }
        private string _addressLock;
    
        [DataMember]
        public string adoption
        {
            get { return _adoption; }
            set
            {
                if (_adoption != value)
                {
                    _adoption = value;
                    OnPropertyChanged("adoption");
                }
            }
        }
        private string _adoption;
    
        [DataMember]
        public string birth
        {
            get { return _birth; }
            set
            {
                if (_birth != value)
                {
                    _birth = value;
                    OnPropertyChanged("birth");
                }
            }
        }
        private string _birth;
    
        [DataMember]
        public string care
        {
            get { return _care; }
            set
            {
                if (_care != value)
                {
                    _care = value;
                    OnPropertyChanged("care");
                }
            }
        }
        private string _care;
    
        [DataMember]
        public string childRelationship
        {
            get { return _childRelationship; }
            set
            {
                if (_childRelationship != value)
                {
                    _childRelationship = value;
                    OnPropertyChanged("childRelationship");
                }
            }
        }
        private string _childRelationship;
    
        [DataMember]
        public string contact
        {
            get { return _contact; }
            set
            {
                if (_contact != value)
                {
                    _contact = value;
                    OnPropertyChanged("contact");
                }
            }
        }
        private string _contact;
    
        [DataMember]
        public string death
        {
            get { return _death; }
            set
            {
                if (_death != value)
                {
                    _death = value;
                    OnPropertyChanged("death");
                }
            }
        }
        private string _death;
    
        [DataMember]
        public string deletePerson
        {
            get { return _deletePerson; }
            set
            {
                if (_deletePerson != value)
                {
                    _deletePerson = value;
                    OnPropertyChanged("deletePerson");
                }
            }
        }
        private string _deletePerson;
    
        [DataMember]
        public string divorce
        {
            get { return _divorce; }
            set
            {
                if (_divorce != value)
                {
                    _divorce = value;
                    OnPropertyChanged("divorce");
                }
            }
        }
        private string _divorce;
    
        [DataMember]
        public string gardianMeasure
        {
            get { return _gardianMeasure; }
            set
            {
                if (_gardianMeasure != value)
                {
                    _gardianMeasure = value;
                    OnPropertyChanged("gardianMeasure");
                }
            }
        }
        private string _gardianMeasure;
    
        [DataMember]
        public string maritalStatusPartner
        {
            get { return _maritalStatusPartner; }
            set
            {
                if (_maritalStatusPartner != value)
                {
                    _maritalStatusPartner = value;
                    OnPropertyChanged("maritalStatusPartner");
                }
            }
        }
        private string _maritalStatusPartner;
    
        [DataMember]
        public string marriage
        {
            get { return _marriage; }
            set
            {
                if (_marriage != value)
                {
                    _marriage = value;
                    OnPropertyChanged("marriage");
                }
            }
        }
        private string _marriage;
    
        [DataMember]
        public string missing
        {
            get { return _missing; }
            set
            {
                if (_missing != value)
                {
                    _missing = value;
                    OnPropertyChanged("missing");
                }
            }
        }
        private string _missing;
    
        [DataMember]
        public string move
        {
            get { return _move; }
            set
            {
                if (_move != value)
                {
                    _move = value;
                    OnPropertyChanged("move");
                }
            }
        }
        private string _move;
    
        [DataMember]
        public string moveIn
        {
            get { return _moveIn; }
            set
            {
                if (_moveIn != value)
                {
                    _moveIn = value;
                    OnPropertyChanged("moveIn");
                }
            }
        }
        private string _moveIn;
    
        [DataMember]
        public string moveOut
        {
            get { return _moveOut; }
            set
            {
                if (_moveOut != value)
                {
                    _moveOut = value;
                    OnPropertyChanged("moveOut");
                }
            }
        }
        private string _moveOut;
    
        [DataMember]
        public string naturalizeForeigner
        {
            get { return _naturalizeForeigner; }
            set
            {
                if (_naturalizeForeigner != value)
                {
                    _naturalizeForeigner = value;
                    OnPropertyChanged("naturalizeForeigner");
                }
            }
        }
        private string _naturalizeForeigner;
    
        [DataMember]
        public string naturalizeSwiss
        {
            get { return _naturalizeSwiss; }
            set
            {
                if (_naturalizeSwiss != value)
                {
                    _naturalizeSwiss = value;
                    OnPropertyChanged("naturalizeSwiss");
                }
            }
        }
        private string _naturalizeSwiss;
    
        [DataMember]
        public string paperLock
        {
            get { return _paperLock; }
            set
            {
                if (_paperLock != value)
                {
                    _paperLock = value;
                    OnPropertyChanged("paperLock");
                }
            }
        }
        private string _paperLock;
    
        [DataMember]
        public string partnership
        {
            get { return _partnership; }
            set
            {
                if (_partnership != value)
                {
                    _partnership = value;
                    OnPropertyChanged("partnership");
                }
            }
        }
        private string _partnership;
    
        [DataMember]
        public string renewPermit
        {
            get { return _renewPermit; }
            set
            {
                if (_renewPermit != value)
                {
                    _renewPermit = value;
                    OnPropertyChanged("renewPermit");
                }
            }
        }
        private string _renewPermit;
    
        [DataMember]
        public string replacePerson
        {
            get { return _replacePerson; }
            set
            {
                if (_replacePerson != value)
                {
                    _replacePerson = value;
                    OnPropertyChanged("replacePerson");
                }
            }
        }
        private string _replacePerson;
    
        [DataMember]
        public string separation
        {
            get { return _separation; }
            set
            {
                if (_separation != value)
                {
                    _separation = value;
                    OnPropertyChanged("separation");
                }
            }
        }
        private string _separation;
    
        [DataMember]
        public string changeCitizen
        {
            get { return _changeCitizen; }
            set
            {
                if (_changeCitizen != value)
                {
                    _changeCitizen = value;
                    OnPropertyChanged("changeCitizen");
                }
            }
        }
        private string _changeCitizen;
    
        [DataMember]
        public string changeGardian
        {
            get { return _changeGardian; }
            set
            {
                if (_changeGardian != value)
                {
                    _changeGardian = value;
                    OnPropertyChanged("changeGardian");
                }
            }
        }
        private string _changeGardian;
    
        [DataMember]
        public string changeName
        {
            get { return _changeName; }
            set
            {
                if (_changeName != value)
                {
                    _changeName = value;
                    OnPropertyChanged("changeName");
                }
            }
        }
        private string _changeName;
    
        [DataMember]
        public string changeNationality
        {
            get { return _changeNationality; }
            set
            {
                if (_changeNationality != value)
                {
                    _changeNationality = value;
                    OnPropertyChanged("changeNationality");
                }
            }
        }
        private string _changeNationality;
    
        [DataMember]
        public string changeNestRegister
        {
            get { return _changeNestRegister; }
            set
            {
                if (_changeNestRegister != value)
                {
                    _changeNestRegister = value;
                    OnPropertyChanged("changeNestRegister");
                }
            }
        }
        private string _changeNestRegister;
    
        [DataMember]
        public string changeNestTarget
        {
            get { return _changeNestTarget; }
            set
            {
                if (_changeNestTarget != value)
                {
                    _changeNestTarget = value;
                    OnPropertyChanged("changeNestTarget");
                }
            }
        }
        private string _changeNestTarget;
    
        [DataMember]
        public string changeOccupation
        {
            get { return _changeOccupation; }
            set
            {
                if (_changeOccupation != value)
                {
                    _changeOccupation = value;
                    OnPropertyChanged("changeOccupation");
                }
            }
        }
        private string _changeOccupation;
    
        [DataMember]
        public string changeOKV
        {
            get { return _changeOKV; }
            set
            {
                if (_changeOKV != value)
                {
                    _changeOKV = value;
                    OnPropertyChanged("changeOKV");
                }
            }
        }
        private string _changeOKV;
    
        [DataMember]
        public string changeReligion
        {
            get { return _changeReligion; }
            set
            {
                if (_changeReligion != value)
                {
                    _changeReligion = value;
                    OnPropertyChanged("changeReligion");
                }
            }
        }
        private string _changeReligion;
    
        [DataMember]
        public string changeResidencePermit
        {
            get { return _changeResidencePermit; }
            set
            {
                if (_changeResidencePermit != value)
                {
                    _changeResidencePermit = value;
                    OnPropertyChanged("changeResidencePermit");
                }
            }
        }
        private string _changeResidencePermit;
    
        [DataMember]
        public string changeResidenceType
        {
            get { return _changeResidenceType; }
            set
            {
                if (_changeResidenceType != value)
                {
                    _changeResidenceType = value;
                    OnPropertyChanged("changeResidenceType");
                }
            }
        }
        private string _changeResidenceType;
    
        [DataMember]
        public string changeSex
        {
            get { return _changeSex; }
            set
            {
                if (_changeSex != value)
                {
                    _changeSex = value;
                    OnPropertyChanged("changeSex");
                }
            }
        }
        private string _changeSex;
    
        [DataMember]
        public string correctAbsence
        {
            get { return _correctAbsence; }
            set
            {
                if (_correctAbsence != value)
                {
                    _correctAbsence = value;
                    OnPropertyChanged("correctAbsence");
                }
            }
        }
        private string _correctAbsence;
    
        [DataMember]
        public string correctAdditionalAddresses
        {
            get { return _correctAdditionalAddresses; }
            set
            {
                if (_correctAdditionalAddresses != value)
                {
                    _correctAdditionalAddresses = value;
                    OnPropertyChanged("correctAdditionalAddresses");
                }
            }
        }
        private string _correctAdditionalAddresses;
    
        [DataMember]
        public string correctAddress
        {
            get { return _correctAddress; }
            set
            {
                if (_correctAddress != value)
                {
                    _correctAddress = value;
                    OnPropertyChanged("correctAddress");
                }
            }
        }
        private string _correctAddress;
    
        [DataMember]
        public string correctCodes
        {
            get { return _correctCodes; }
            set
            {
                if (_correctCodes != value)
                {
                    _correctCodes = value;
                    OnPropertyChanged("correctCodes");
                }
            }
        }
        private string _correctCodes;
    
        [DataMember]
        public string correctContact
        {
            get { return _correctContact; }
            set
            {
                if (_correctContact != value)
                {
                    _correctContact = value;
                    OnPropertyChanged("correctContact");
                }
            }
        }
        private string _correctContact;
    
        [DataMember]
        public string correctDateOfDeath
        {
            get { return _correctDateOfDeath; }
            set
            {
                if (_correctDateOfDeath != value)
                {
                    _correctDateOfDeath = value;
                    OnPropertyChanged("correctDateOfDeath");
                }
            }
        }
        private string _correctDateOfDeath;
    
        [DataMember]
        public string correctDateOfNameChange
        {
            get { return _correctDateOfNameChange; }
            set
            {
                if (_correctDateOfNameChange != value)
                {
                    _correctDateOfNameChange = value;
                    OnPropertyChanged("correctDateOfNameChange");
                }
            }
        }
        private string _correctDateOfNameChange;
    
        [DataMember]
        public string correctDateOfNaturalization
        {
            get { return _correctDateOfNaturalization; }
            set
            {
                if (_correctDateOfNaturalization != value)
                {
                    _correctDateOfNaturalization = value;
                    OnPropertyChanged("correctDateOfNaturalization");
                }
            }
        }
        private string _correctDateOfNaturalization;
    
        [DataMember]
        public string correctDMP
        {
            get { return _correctDMP; }
            set
            {
                if (_correctDMP != value)
                {
                    _correctDMP = value;
                    OnPropertyChanged("correctDMP");
                }
            }
        }
        private string _correctDMP;
    
        [DataMember]
        public string correctIdentification
        {
            get { return _correctIdentification; }
            set
            {
                if (_correctIdentification != value)
                {
                    _correctIdentification = value;
                    OnPropertyChanged("correctIdentification");
                }
            }
        }
        private string _correctIdentification;
    
        [DataMember]
        public string correctLanguageOfCorrespondance
        {
            get { return _correctLanguageOfCorrespondance; }
            set
            {
                if (_correctLanguageOfCorrespondance != value)
                {
                    _correctLanguageOfCorrespondance = value;
                    OnPropertyChanged("correctLanguageOfCorrespondance");
                }
            }
        }
        private string _correctLanguageOfCorrespondance;
    
        [DataMember]
        public string correctLiabilities
        {
            get { return _correctLiabilities; }
            set
            {
                if (_correctLiabilities != value)
                {
                    _correctLiabilities = value;
                    OnPropertyChanged("correctLiabilities");
                }
            }
        }
        private string _correctLiabilities;
    
        [DataMember]
        public string correctMaritalData
        {
            get { return _correctMaritalData; }
            set
            {
                if (_correctMaritalData != value)
                {
                    _correctMaritalData = value;
                    OnPropertyChanged("correctMaritalData");
                }
            }
        }
        private string _correctMaritalData;
    
        [DataMember]
        public string correctName
        {
            get { return _correctName; }
            set
            {
                if (_correctName != value)
                {
                    _correctName = value;
                    OnPropertyChanged("correctName");
                }
            }
        }
        private string _correctName;
    
        [DataMember]
        public string correctNationality
        {
            get { return _correctNationality; }
            set
            {
                if (_correctNationality != value)
                {
                    _correctNationality = value;
                    OnPropertyChanged("correctNationality");
                }
            }
        }
        private string _correctNationality;
    
        [DataMember]
        public string correctOccupation
        {
            get { return _correctOccupation; }
            set
            {
                if (_correctOccupation != value)
                {
                    _correctOccupation = value;
                    OnPropertyChanged("correctOccupation");
                }
            }
        }
        private string _correctOccupation;
    
        [DataMember]
        public string correctOrigin
        {
            get { return _correctOrigin; }
            set
            {
                if (_correctOrigin != value)
                {
                    _correctOrigin = value;
                    OnPropertyChanged("correctOrigin");
                }
            }
        }
        private string _correctOrigin;
    
        [DataMember]
        public string correctPerson
        {
            get { return _correctPerson; }
            set
            {
                if (_correctPerson != value)
                {
                    _correctPerson = value;
                    OnPropertyChanged("correctPerson");
                }
            }
        }
        private string _correctPerson;
    
        [DataMember]
        public string correctPlaceOfBirth
        {
            get { return _correctPlaceOfBirth; }
            set
            {
                if (_correctPlaceOfBirth != value)
                {
                    _correctPlaceOfBirth = value;
                    OnPropertyChanged("correctPlaceOfBirth");
                }
            }
        }
        private string _correctPlaceOfBirth;
    
        [DataMember]
        public string correctRelationship
        {
            get { return _correctRelationship; }
            set
            {
                if (_correctRelationship != value)
                {
                    _correctRelationship = value;
                    OnPropertyChanged("correctRelationship");
                }
            }
        }
        private string _correctRelationship;
    
        [DataMember]
        public string correctReligion
        {
            get { return _correctReligion; }
            set
            {
                if (_correctReligion != value)
                {
                    _correctReligion = value;
                    OnPropertyChanged("correctReligion");
                }
            }
        }
        private string _correctReligion;
    
        [DataMember]
        public string correctReporting
        {
            get { return _correctReporting; }
            set
            {
                if (_correctReporting != value)
                {
                    _correctReporting = value;
                    OnPropertyChanged("correctReporting");
                }
            }
        }
        private string _correctReporting;
    
        [DataMember]
        public string correctResidencePermit
        {
            get { return _correctResidencePermit; }
            set
            {
                if (_correctResidencePermit != value)
                {
                    _correctResidencePermit = value;
                    OnPropertyChanged("correctResidencePermit");
                }
            }
        }
        private string _correctResidencePermit;
    
        [DataMember]
        public string undoAbsence
        {
            get { return _undoAbsence; }
            set
            {
                if (_undoAbsence != value)
                {
                    _undoAbsence = value;
                    OnPropertyChanged("undoAbsence");
                }
            }
        }
        private string _undoAbsence;
    
        [DataMember]
        public string undoCitizen
        {
            get { return _undoCitizen; }
            set
            {
                if (_undoCitizen != value)
                {
                    _undoCitizen = value;
                    OnPropertyChanged("undoCitizen");
                }
            }
        }
        private string _undoCitizen;
    
        [DataMember]
        public string undoGardian
        {
            get { return _undoGardian; }
            set
            {
                if (_undoGardian != value)
                {
                    _undoGardian = value;
                    OnPropertyChanged("undoGardian");
                }
            }
        }
        private string _undoGardian;
    
        [DataMember]
        public string undoMarriage
        {
            get { return _undoMarriage; }
            set
            {
                if (_undoMarriage != value)
                {
                    _undoMarriage = value;
                    OnPropertyChanged("undoMarriage");
                }
            }
        }
        private string _undoMarriage;
    
        [DataMember]
        public string undoMissing
        {
            get { return _undoMissing; }
            set
            {
                if (_undoMissing != value)
                {
                    _undoMissing = value;
                    OnPropertyChanged("undoMissing");
                }
            }
        }
        private string _undoMissing;
    
        [DataMember]
        public string undoPartnership
        {
            get { return _undoPartnership; }
            set
            {
                if (_undoPartnership != value)
                {
                    _undoPartnership = value;
                    OnPropertyChanged("undoPartnership");
                }
            }
        }
        private string _undoPartnership;
    
        [DataMember]
        public string undoSeparation
        {
            get { return _undoSeparation; }
            set
            {
                if (_undoSeparation != value)
                {
                    _undoSeparation = value;
                    OnPropertyChanged("undoSeparation");
                }
            }
        }
        private string _undoSeparation;
    
        [DataMember]
        public string undoSwiss
        {
            get { return _undoSwiss; }
            set
            {
                if (_undoSwiss != value)
                {
                    _undoSwiss = value;
                    OnPropertyChanged("undoSwiss");
                }
            }
        }
        private string _undoSwiss;
    
        [DataMember]
        public string baseDelivery_numberOfMessages
        {
            get { return _baseDelivery_numberOfMessages; }
            set
            {
                if (_baseDelivery_numberOfMessages != value)
                {
                    _baseDelivery_numberOfMessages = value;
                    OnPropertyChanged("baseDelivery_numberOfMessages");
                }
            }
        }
        private string _baseDelivery_numberOfMessages;
    
        [DataMember]
        public string baseDelivery_messages
        {
            get { return _baseDelivery_messages; }
            set
            {
                if (_baseDelivery_messages != value)
                {
                    _baseDelivery_messages = value;
                    OnPropertyChanged("baseDelivery_messages");
                }
            }
        }
        private string _baseDelivery_messages;
    
        [DataMember]
        public string keyDelivery_numberOfKeyMessages
        {
            get { return _keyDelivery_numberOfKeyMessages; }
            set
            {
                if (_keyDelivery_numberOfKeyMessages != value)
                {
                    _keyDelivery_numberOfKeyMessages = value;
                    OnPropertyChanged("keyDelivery_numberOfKeyMessages");
                }
            }
        }
        private string _keyDelivery_numberOfKeyMessages;
    
        [DataMember]
        public string keyDelivery_messages
        {
            get { return _keyDelivery_messages; }
            set
            {
                if (_keyDelivery_messages != value)
                {
                    _keyDelivery_messages = value;
                    OnPropertyChanged("keyDelivery_messages");
                }
            }
        }
        private string _keyDelivery_messages;
    
        [DataMember]
        public string dataRequest
        {
            get { return _dataRequest; }
            set
            {
                if (_dataRequest != value)
                {
                    _dataRequest = value;
                    OnPropertyChanged("dataRequest");
                }
            }
        }
        private string _dataRequest;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] BaEinwohnerregisterEmpfangeneEreignisseTS
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseTS; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseTS != value)
                {
                    _baEinwohnerregisterEmpfangeneEreignisseTS = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseTS");
                }
            }
        }
        private byte[] _baEinwohnerregisterEmpfangeneEreignisseTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public BaEinwohnerregisterEmpfangeneEreignisseRohdaten BaEinwohnerregisterEmpfangeneEreignisseRohdaten
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseRohdaten; }
            set
            {
                if (!ReferenceEquals(_baEinwohnerregisterEmpfangeneEreignisseRohdaten, value))
                {
                    var previousValue = _baEinwohnerregisterEmpfangeneEreignisseRohdaten;
                    _baEinwohnerregisterEmpfangeneEreignisseRohdaten = value;
                    FixupBaEinwohnerregisterEmpfangeneEreignisseRohdaten(previousValue);
                    OnNavigationPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseRohdaten");
                }
            }
        }
        private BaEinwohnerregisterEmpfangeneEreignisseRohdaten _baEinwohnerregisterEmpfangeneEreignisseRohdaten;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaEinwohnerregisterEmpfangeneEreignisseRohdaten = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaEinwohnerregisterEmpfangeneEreignisseRohdaten(BaEinwohnerregisterEmpfangeneEreignisseRohdaten previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaEinwohnerregisterEmpfangeneEreignisse.Contains(this))
            {
                previousValue.BaEinwohnerregisterEmpfangeneEreignisse.Remove(this);
            }
    
            if (BaEinwohnerregisterEmpfangeneEreignisseRohdaten != null)
            {
                if (!BaEinwohnerregisterEmpfangeneEreignisseRohdaten.BaEinwohnerregisterEmpfangeneEreignisse.Contains(this))
                {
                    BaEinwohnerregisterEmpfangeneEreignisseRohdaten.BaEinwohnerregisterEmpfangeneEreignisse.Add(this);
                }
    
                BaEinwohnerregisterEmpfangeneEreignisseRohdatenID = BaEinwohnerregisterEmpfangeneEreignisseRohdaten.BaEinwohnerregisterEmpfangeneEreignisseRohdatenID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaEinwohnerregisterEmpfangeneEreignisseRohdaten")
                    && (ChangeTracker.OriginalValues["BaEinwohnerregisterEmpfangeneEreignisseRohdaten"] == BaEinwohnerregisterEmpfangeneEreignisseRohdaten))
                {
                    ChangeTracker.OriginalValues.Remove("BaEinwohnerregisterEmpfangeneEreignisseRohdaten");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaEinwohnerregisterEmpfangeneEreignisseRohdaten", previousValue);
                }
                if (BaEinwohnerregisterEmpfangeneEreignisseRohdaten != null && !BaEinwohnerregisterEmpfangeneEreignisseRohdaten.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaEinwohnerregisterEmpfangeneEreignisseRohdaten.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaEinwohnerregisterEmpfangeneEreignisse)obj;
    		if (!_baEinwohnerregisterEmpfangeneEreignisseID.Equals(entity.BaEinwohnerregisterEmpfangeneEreignisseID) || _baEinwohnerregisterEmpfangeneEreignisseID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baEinwohnerregisterEmpfangeneEreignisseID.GetHashCode();
        }

        #endregion

    }
}
