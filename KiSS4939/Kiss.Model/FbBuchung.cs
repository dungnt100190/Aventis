//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FbPeriode))]
    [KnownType(typeof(XUser))]
    public partial class FbBuchung: EntityBase<FbBuchung>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int FbBuchungID
        {
            get { return _fbBuchungID; }
            set
            {
                if (_fbBuchungID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FbBuchungID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _fbBuchungID = value;
                    OnPropertyChanged("FbBuchungID");
                }
            }
        }
        private int _fbBuchungID;
    
        [DataMember]
        public int FbPeriodeID
        {
            get { return _fbPeriodeID; }
            set
            {
                if (_fbPeriodeID != value)
                {
                    ChangeTracker.RecordOriginalValue("FbPeriodeID", _fbPeriodeID);
                    if (!IsDeserializing)
                    {
                        if (FbPeriode != null && FbPeriode.FbPeriodeID != value)
                        {
                            FbPeriode = null;
                        }
                    }
                    _fbPeriodeID = value;
                    OnPropertyChanged("FbPeriodeID");
                }
            }
        }
        private int _fbPeriodeID;
    
        [DataMember]
        public int BuchungTypCode
        {
            get { return _buchungTypCode; }
            set
            {
                if (_buchungTypCode != value)
                {
                    _buchungTypCode = value;
                    OnPropertyChanged("BuchungTypCode");
                }
            }
        }
        private int _buchungTypCode;
    
        [DataMember]
        public string Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    _code = value;
                    OnPropertyChanged("Code");
                }
            }
        }
        private string _code;
    
        [DataMember]
        public string BelegNr
        {
            get { return _belegNr; }
            set
            {
                if (_belegNr != value)
                {
                    _belegNr = value;
                    OnPropertyChanged("BelegNr");
                }
            }
        }
        private string _belegNr;
    
        [DataMember]
        public int BelegNrPos
        {
            get { return _belegNrPos; }
            set
            {
                if (_belegNrPos != value)
                {
                    _belegNrPos = value;
                    OnPropertyChanged("BelegNrPos");
                }
            }
        }
        private int _belegNrPos;
    
        [DataMember]
        public System.DateTime BuchungsDatum
        {
            get { return _buchungsDatum; }
            set
            {
                if (_buchungsDatum != value)
                {
                    _buchungsDatum = value;
                    OnPropertyChanged("BuchungsDatum");
                }
            }
        }
        private System.DateTime _buchungsDatum;
    
        [DataMember]
        public Nullable<int> SollKtoNr
        {
            get { return _sollKtoNr; }
            set
            {
                if (_sollKtoNr != value)
                {
                    _sollKtoNr = value;
                    OnPropertyChanged("SollKtoNr");
                }
            }
        }
        private Nullable<int> _sollKtoNr;
    
        [DataMember]
        public Nullable<int> HabenKtoNr
        {
            get { return _habenKtoNr; }
            set
            {
                if (_habenKtoNr != value)
                {
                    _habenKtoNr = value;
                    OnPropertyChanged("HabenKtoNr");
                }
            }
        }
        private Nullable<int> _habenKtoNr;
    
        [DataMember]
        public decimal Betrag
        {
            get { return _betrag; }
            set
            {
                if (_betrag != value)
                {
                    _betrag = value;
                    OnPropertyChanged("Betrag");
                }
            }
        }
        private decimal _betrag;
    
        [DataMember]
        public string Text
        {
            get { return _text; }
            set
            {
                if (_text != value)
                {
                    _text = value;
                    OnPropertyChanged("Text");
                }
            }
        }
        private string _text;
    
        [DataMember]
        public Nullable<System.DateTime> ValutaDatum
        {
            get { return _valutaDatum; }
            set
            {
                if (_valutaDatum != value)
                {
                    _valutaDatum = value;
                    OnPropertyChanged("ValutaDatum");
                }
            }
        }
        private Nullable<System.DateTime> _valutaDatum;
    
        [DataMember]
        public Nullable<int> Zahlungsfrist
        {
            get { return _zahlungsfrist; }
            set
            {
                if (_zahlungsfrist != value)
                {
                    _zahlungsfrist = value;
                    OnPropertyChanged("Zahlungsfrist");
                }
            }
        }
        private Nullable<int> _zahlungsfrist;
    
        [DataMember]
        public Nullable<int> BuchungStatusCode
        {
            get { return _buchungStatusCode; }
            set
            {
                if (_buchungStatusCode != value)
                {
                    _buchungStatusCode = value;
                    OnPropertyChanged("BuchungStatusCode");
                }
            }
        }
        private Nullable<int> _buchungStatusCode;
    
        [DataMember]
        public Nullable<int> FbDauerauftragID
        {
            get { return _fbDauerauftragID; }
            set
            {
                if (_fbDauerauftragID != value)
                {
                    _fbDauerauftragID = value;
                    OnPropertyChanged("FbDauerauftragID");
                }
            }
        }
        private Nullable<int> _fbDauerauftragID;
    
        [DataMember]
        public Nullable<System.DateTime> ErfassungsDatum
        {
            get { return _erfassungsDatum; }
            set
            {
                if (_erfassungsDatum != value)
                {
                    _erfassungsDatum = value;
                    OnPropertyChanged("ErfassungsDatum");
                }
            }
        }
        private Nullable<System.DateTime> _erfassungsDatum;
    
        [DataMember]
        public Nullable<int> UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    ChangeTracker.RecordOriginalValue("UserID", _userID);
                    if (!IsDeserializing)
                    {
                        if (XUser != null && XUser.UserID != value)
                        {
                            XUser = null;
                        }
                    }
                    _userID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private Nullable<int> _userID;
    
        [DataMember]
        public Nullable<int> FbZahlungswegID
        {
            get { return _fbZahlungswegID; }
            set
            {
                if (_fbZahlungswegID != value)
                {
                    _fbZahlungswegID = value;
                    OnPropertyChanged("FbZahlungswegID");
                }
            }
        }
        private Nullable<int> _fbZahlungswegID;
    
        [DataMember]
        public string PCKontoNr
        {
            get { return _pCKontoNr; }
            set
            {
                if (_pCKontoNr != value)
                {
                    _pCKontoNr = value;
                    OnPropertyChanged("PCKontoNr");
                }
            }
        }
        private string _pCKontoNr;
    
        [DataMember]
        public string BankKontoNr
        {
            get { return _bankKontoNr; }
            set
            {
                if (_bankKontoNr != value)
                {
                    _bankKontoNr = value;
                    OnPropertyChanged("BankKontoNr");
                }
            }
        }
        private string _bankKontoNr;
    
        [DataMember]
        public Nullable<int> ZahlungsArtCode
        {
            get { return _zahlungsArtCode; }
            set
            {
                if (_zahlungsArtCode != value)
                {
                    _zahlungsArtCode = value;
                    OnPropertyChanged("ZahlungsArtCode");
                }
            }
        }
        private Nullable<int> _zahlungsArtCode;
    
        [DataMember]
        public string ReferenzNummer
        {
            get { return _referenzNummer; }
            set
            {
                if (_referenzNummer != value)
                {
                    _referenzNummer = value;
                    OnPropertyChanged("ReferenzNummer");
                }
            }
        }
        private string _referenzNummer;
    
        [DataMember]
        public string Zahlungsgrund
        {
            get { return _zahlungsgrund; }
            set
            {
                if (_zahlungsgrund != value)
                {
                    _zahlungsgrund = value;
                    OnPropertyChanged("Zahlungsgrund");
                }
            }
        }
        private string _zahlungsgrund;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string Zusatz
        {
            get { return _zusatz; }
            set
            {
                if (_zusatz != value)
                {
                    _zusatz = value;
                    OnPropertyChanged("Zusatz");
                }
            }
        }
        private string _zusatz;
    
        [DataMember]
        public string Strasse
        {
            get { return _strasse; }
            set
            {
                if (_strasse != value)
                {
                    _strasse = value;
                    OnPropertyChanged("Strasse");
                }
            }
        }
        private string _strasse;
    
        [DataMember]
        public string PLZ
        {
            get { return _pLZ; }
            set
            {
                if (_pLZ != value)
                {
                    _pLZ = value;
                    OnPropertyChanged("PLZ");
                }
            }
        }
        private string _pLZ;
    
        [DataMember]
        public string Ort
        {
            get { return _ort; }
            set
            {
                if (_ort != value)
                {
                    _ort = value;
                    OnPropertyChanged("Ort");
                }
            }
        }
        private string _ort;
    
        [DataMember]
        public byte[] FbBuchungTS
        {
            get { return _fbBuchungTS; }
            set
            {
                if (_fbBuchungTS != value)
                {
                    _fbBuchungTS = value;
                    OnPropertyChanged("FbBuchungTS");
                }
            }
        }
        private byte[] _fbBuchungTS;
    
        [DataMember]
        public string IBAN
        {
            get { return _iBAN; }
            set
            {
                if (_iBAN != value)
                {
                    _iBAN = value;
                    OnPropertyChanged("IBAN");
                }
            }
        }
        private string _iBAN;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public Nullable<System.DateTime> ValutaDatumOriginal
        {
            get { return _valutaDatumOriginal; }
            set
            {
                if (_valutaDatumOriginal != value)
                {
                    _valutaDatumOriginal = value;
                    OnPropertyChanged("ValutaDatumOriginal");
                }
            }
        }
        private Nullable<System.DateTime> _valutaDatumOriginal;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FbPeriode FbPeriode
        {
            get { return _fbPeriode; }
            set
            {
                if (!ReferenceEquals(_fbPeriode, value))
                {
                    var previousValue = _fbPeriode;
                    _fbPeriode = value;
                    FixupFbPeriode(previousValue);
                    OnNavigationPropertyChanged("FbPeriode");
                }
            }
        }
        private FbPeriode _fbPeriode;
    
        [DataMember]
        public XUser XUser
        {
            get { return _xUser; }
            set
            {
                if (!ReferenceEquals(_xUser, value))
                {
                    var previousValue = _xUser;
                    _xUser = value;
                    FixupXUser(previousValue);
                    OnNavigationPropertyChanged("XUser");
                }
            }
        }
        private XUser _xUser;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FbPeriode = null;
            XUser = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFbPeriode(FbPeriode previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FbBuchung.Contains(this))
            {
                previousValue.FbBuchung.Remove(this);
            }
    
            if (FbPeriode != null)
            {
                if (!FbPeriode.FbBuchung.Contains(this))
                {
                    FbPeriode.FbBuchung.Add(this);
                }
    
                FbPeriodeID = FbPeriode.FbPeriodeID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FbPeriode")
                    && (ChangeTracker.OriginalValues["FbPeriode"] == FbPeriode))
                {
                    ChangeTracker.OriginalValues.Remove("FbPeriode");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FbPeriode", previousValue);
                }
                if (FbPeriode != null && !FbPeriode.ChangeTracker.ChangeTrackingEnabled)
                {
                    FbPeriode.StartTracking();
                }
            }
        }
    
        private void FixupXUser(XUser previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FbBuchung.Contains(this))
            {
                previousValue.FbBuchung.Remove(this);
            }
    
            if (XUser != null)
            {
                if (!XUser.FbBuchung.Contains(this))
                {
                    XUser.FbBuchung.Add(this);
                }
    
                UserID = XUser.UserID;
            }
            else if (!skipKeys)
            {
                UserID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser")
                    && (ChangeTracker.OriginalValues["XUser"] == XUser))
                {
                    ChangeTracker.OriginalValues.Remove("XUser");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser", previousValue);
                }
                if (XUser != null && !XUser.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (FbBuchung)obj;
    		if (!_fbBuchungID.Equals(entity.FbBuchungID) || _fbBuchungID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _fbBuchungID.GetHashCode();
        }

        #endregion

    }
}
