//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(FaPhase))]
    [KnownType(typeof(XUser))]
    [KnownType(typeof(FaFall))]
    [KnownType(typeof(VmKlientenbudget))]
    [KnownType(typeof(FaAktennotizen))]
    [KnownType(typeof(FaDokumente))]
    [KnownType(typeof(FaWeisung))]
    [KnownType(typeof(XTask))]
    [KnownType(typeof(FaLeistungUserHist))]
    [KnownType(typeof(FaLeistungArchiv))]
    [KnownType(typeof(FaLeistungZugriff))]
    [KnownType(typeof(FaDokumentAblage))]
    [KnownType(typeof(XModul))]
    [KnownType(typeof(KesAuftrag))]
    [KnownType(typeof(KesPraevention))]
    [KnownType(typeof(KesMassnahme))]
    [KnownType(typeof(KesDokument))]
    [KnownType(typeof(KesVerlauf))]
    [KnownType(typeof(KesPflegekinderaufsicht))]
    public partial class FaLeistung: EntityBase<FaLeistung>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int FaLeistungID
        {
            get { return _faLeistungID; }
            set
            {
                if (_faLeistungID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FaLeistungID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _faLeistungID = value;
                    OnPropertyChanged("FaLeistungID");
                }
            }
        }
        private int _faLeistungID;
    
        [DataMember]
        public int BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    ChangeTracker.RecordOriginalValue("BaPersonID", _baPersonID);
                    if (!IsDeserializing)
                    {
                        if (BaPerson != null && BaPerson.BaPersonID != value)
                        {
                            BaPerson = null;
                        }
                    }
                    _baPersonID = value;
                    OnPropertyChanged("BaPersonID");
                }
            }
        }
        private int _baPersonID;
    
        [DataMember]
        public int ModulID
        {
            get { return _modulID; }
            set
            {
                if (_modulID != value)
                {
                    ChangeTracker.RecordOriginalValue("ModulID", _modulID);
                    if (!IsDeserializing)
                    {
                        if (XModul != null && XModul.ModulID != value)
                        {
                            XModul = null;
                        }
                    }
                    _modulID = value;
                    OnPropertyChanged("ModulID");
                }
            }
        }
        private int _modulID;
    
        [DataMember]
        public int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    ChangeTracker.RecordOriginalValue("UserID", _userID);
                    if (!IsDeserializing)
                    {
                        if (XUser != null && XUser.UserID != value)
                        {
                            XUser = null;
                        }
                    }
                    _userID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private int _userID;
    
        [DataMember]
        public Nullable<int> GemeindeCode
        {
            get { return _gemeindeCode; }
            set
            {
                if (_gemeindeCode != value)
                {
                    _gemeindeCode = value;
                    OnPropertyChanged("GemeindeCode");
                }
            }
        }
        private Nullable<int> _gemeindeCode;
    
        [DataMember]
        public Nullable<int> LeistungsartCode
        {
            get { return _leistungsartCode; }
            set
            {
                if (_leistungsartCode != value)
                {
                    _leistungsartCode = value;
                    OnPropertyChanged("LeistungsartCode");
                }
            }
        }
        private Nullable<int> _leistungsartCode;
    
        [DataMember]
        public Nullable<int> EroeffnungsGrundCode
        {
            get { return _eroeffnungsGrundCode; }
            set
            {
                if (_eroeffnungsGrundCode != value)
                {
                    _eroeffnungsGrundCode = value;
                    OnPropertyChanged("EroeffnungsGrundCode");
                }
            }
        }
        private Nullable<int> _eroeffnungsGrundCode;
    
        [DataMember]
        public Nullable<int> AbschlussGrundCode
        {
            get { return _abschlussGrundCode; }
            set
            {
                if (_abschlussGrundCode != value)
                {
                    _abschlussGrundCode = value;
                    OnPropertyChanged("AbschlussGrundCode");
                }
            }
        }
        private Nullable<int> _abschlussGrundCode;
    
        [DataMember]
        public System.DateTime DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private System.DateTime _datumVon;
    
        [DataMember]
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    OnPropertyChanged("DatumBis");
                }
            }
        }
        private Nullable<System.DateTime> _datumBis;
    
        [DataMember]
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    OnPropertyChanged("Bemerkung");
                }
            }
        }
        private string _bemerkung;
    
        [DataMember]
        public Nullable<int> IkSchuldnerStatusCode
        {
            get { return _ikSchuldnerStatusCode; }
            set
            {
                if (_ikSchuldnerStatusCode != value)
                {
                    _ikSchuldnerStatusCode = value;
                    OnPropertyChanged("IkSchuldnerStatusCode");
                }
            }
        }
        private Nullable<int> _ikSchuldnerStatusCode;
    
        [DataMember]
        public Nullable<int> IkAufenthaltsartCode
        {
            get { return _ikAufenthaltsartCode; }
            set
            {
                if (_ikAufenthaltsartCode != value)
                {
                    _ikAufenthaltsartCode = value;
                    OnPropertyChanged("IkAufenthaltsartCode");
                }
            }
        }
        private Nullable<int> _ikAufenthaltsartCode;
    
        [DataMember]
        public bool IkHatUnterstuetzung
        {
            get { return _ikHatUnterstuetzung; }
            set
            {
                if (_ikHatUnterstuetzung != value)
                {
                    _ikHatUnterstuetzung = value;
                    OnPropertyChanged("IkHatUnterstuetzung");
                }
            }
        }
        private bool _ikHatUnterstuetzung;
    
        [DataMember]
        public bool IkIstRentenbezueger
        {
            get { return _ikIstRentenbezueger; }
            set
            {
                if (_ikIstRentenbezueger != value)
                {
                    _ikIstRentenbezueger = value;
                    OnPropertyChanged("IkIstRentenbezueger");
                }
            }
        }
        private bool _ikIstRentenbezueger;
    
        [DataMember]
        public bool IkSchuldnerMahnen
        {
            get { return _ikSchuldnerMahnen; }
            set
            {
                if (_ikSchuldnerMahnen != value)
                {
                    _ikSchuldnerMahnen = value;
                    OnPropertyChanged("IkSchuldnerMahnen");
                }
            }
        }
        private bool _ikSchuldnerMahnen;
    
        [DataMember]
        public Nullable<int> IkEinnahmenQuoteCode
        {
            get { return _ikEinnahmenQuoteCode; }
            set
            {
                if (_ikEinnahmenQuoteCode != value)
                {
                    _ikEinnahmenQuoteCode = value;
                    OnPropertyChanged("IkEinnahmenQuoteCode");
                }
            }
        }
        private Nullable<int> _ikEinnahmenQuoteCode;
    
        [DataMember]
        public Nullable<System.DateTime> IkDatumRechtskraft
        {
            get { return _ikDatumRechtskraft; }
            set
            {
                if (_ikDatumRechtskraft != value)
                {
                    _ikDatumRechtskraft = value;
                    OnPropertyChanged("IkDatumRechtskraft");
                }
            }
        }
        private Nullable<System.DateTime> _ikDatumRechtskraft;
    
        [DataMember]
        public Nullable<int> IkInkassoBemuehungCode
        {
            get { return _ikInkassoBemuehungCode; }
            set
            {
                if (_ikInkassoBemuehungCode != value)
                {
                    _ikInkassoBemuehungCode = value;
                    OnPropertyChanged("IkInkassoBemuehungCode");
                }
            }
        }
        private Nullable<int> _ikInkassoBemuehungCode;
    
        [DataMember]
        public Nullable<System.DateTime> IkVerjaehrungAm
        {
            get { return _ikVerjaehrungAm; }
            set
            {
                if (_ikVerjaehrungAm != value)
                {
                    _ikVerjaehrungAm = value;
                    OnPropertyChanged("IkVerjaehrungAm");
                }
            }
        }
        private Nullable<System.DateTime> _ikVerjaehrungAm;
    
        [DataMember]
        public Nullable<int> IkLeistungStatusCode
        {
            get { return _ikLeistungStatusCode; }
            set
            {
                if (_ikLeistungStatusCode != value)
                {
                    _ikLeistungStatusCode = value;
                    OnPropertyChanged("IkLeistungStatusCode");
                }
            }
        }
        private Nullable<int> _ikLeistungStatusCode;
    
        [DataMember]
        public Nullable<System.DateTime> IkDatumForderungstitel
        {
            get { return _ikDatumForderungstitel; }
            set
            {
                if (_ikDatumForderungstitel != value)
                {
                    _ikDatumForderungstitel = value;
                    OnPropertyChanged("IkDatumForderungstitel");
                }
            }
        }
        private Nullable<System.DateTime> _ikDatumForderungstitel;
    
        [DataMember]
        public Nullable<int> IkRueckerstattungTypCode
        {
            get { return _ikRueckerstattungTypCode; }
            set
            {
                if (_ikRueckerstattungTypCode != value)
                {
                    _ikRueckerstattungTypCode = value;
                    OnPropertyChanged("IkRueckerstattungTypCode");
                }
            }
        }
        private Nullable<int> _ikRueckerstattungTypCode;
    
        [DataMember]
        public Nullable<int> IkForderungTitelCode
        {
            get { return _ikForderungTitelCode; }
            set
            {
                if (_ikForderungTitelCode != value)
                {
                    _ikForderungTitelCode = value;
                    OnPropertyChanged("IkForderungTitelCode");
                }
            }
        }
        private Nullable<int> _ikForderungTitelCode;
    
        [DataMember]
        public Nullable<int> SchuldnerBaPersonID
        {
            get { return _schuldnerBaPersonID; }
            set
            {
                if (_schuldnerBaPersonID != value)
                {
                    ChangeTracker.RecordOriginalValue("SchuldnerBaPersonID", _schuldnerBaPersonID);
                    if (!IsDeserializing)
                    {
                        if (SchuldnerBaPerson != null && SchuldnerBaPerson.BaPersonID != value)
                        {
                            SchuldnerBaPerson = null;
                        }
                    }
                    _schuldnerBaPersonID = value;
                    OnPropertyChanged("SchuldnerBaPersonID");
                }
            }
        }
        private Nullable<int> _schuldnerBaPersonID;
    
        [DataMember]
        public Nullable<int> IkErreichungsGradCode
        {
            get { return _ikErreichungsGradCode; }
            set
            {
                if (_ikErreichungsGradCode != value)
                {
                    _ikErreichungsGradCode = value;
                    OnPropertyChanged("IkErreichungsGradCode");
                }
            }
        }
        private Nullable<int> _ikErreichungsGradCode;
    
        [DataMember]
        public Nullable<int> OldUnitID
        {
            get { return _oldUnitID; }
            set
            {
                if (_oldUnitID != value)
                {
                    _oldUnitID = value;
                    OnPropertyChanged("OldUnitID");
                }
            }
        }
        private Nullable<int> _oldUnitID;
    
        [DataMember]
        public byte[] FaLeistungTS
        {
            get { return _faLeistungTS; }
            set
            {
                if (_faLeistungTS != value)
                {
                    _faLeistungTS = value;
                    OnPropertyChanged("FaLeistungTS");
                }
            }
        }
        private byte[] _faLeistungTS;
    
        [DataMember]
        public Nullable<int> VmAuftragCode
        {
            get { return _vmAuftragCode; }
            set
            {
                if (_vmAuftragCode != value)
                {
                    _vmAuftragCode = value;
                    OnPropertyChanged("VmAuftragCode");
                }
            }
        }
        private Nullable<int> _vmAuftragCode;
    
        [DataMember]
        public int FaFallID
        {
            get { return _faFallID; }
            set
            {
                if (_faFallID != value)
                {
                    ChangeTracker.RecordOriginalValue("FaFallID", _faFallID);
                    if (!IsDeserializing)
                    {
                        if (FaFall != null && FaFall.FaFallID != value)
                        {
                            FaFall = null;
                        }
                    }
                    _faFallID = value;
                    OnPropertyChanged("FaFallID");
                }
            }
        }
        private int _faFallID;
    
        [DataMember]
        public Nullable<int> FaProzessCode
        {
            get { return _faProzessCode; }
            set
            {
                if (_faProzessCode != value)
                {
                    _faProzessCode = value;
                    OnPropertyChanged("FaProzessCode");
                }
            }
        }
        private Nullable<int> _faProzessCode;
    
        [DataMember]
        public string Bezeichnung
        {
            get { return _bezeichnung; }
            set
            {
                if (_bezeichnung != value)
                {
                    _bezeichnung = value;
                    OnPropertyChanged("Bezeichnung");
                }
            }
        }
        private string _bezeichnung;
    
        [DataMember]
        public Nullable<int> KaProzessCode
        {
            get { return _kaProzessCode; }
            set
            {
                if (_kaProzessCode != value)
                {
                    _kaProzessCode = value;
                    OnPropertyChanged("KaProzessCode");
                }
            }
        }
        private Nullable<int> _kaProzessCode;
    
        [DataMember]
        public Nullable<bool> KaEpqJob
        {
            get { return _kaEpqJob; }
            set
            {
                if (_kaEpqJob != value)
                {
                    _kaEpqJob = value;
                    OnPropertyChanged("KaEpqJob");
                }
            }
        }
        private Nullable<bool> _kaEpqJob;
    
        [DataMember]
        public Nullable<int> MigrationKA
        {
            get { return _migrationKA; }
            set
            {
                if (_migrationKA != value)
                {
                    _migrationKA = value;
                    OnPropertyChanged("MigrationKA");
                }
            }
        }
        private Nullable<int> _migrationKA;
    
        [DataMember]
        public Nullable<int> FaAufnahmeartCode
        {
            get { return _faAufnahmeartCode; }
            set
            {
                if (_faAufnahmeartCode != value)
                {
                    _faAufnahmeartCode = value;
                    OnPropertyChanged("FaAufnahmeartCode");
                }
            }
        }
        private Nullable<int> _faAufnahmeartCode;
    
        [DataMember]
        public Nullable<int> FaKontaktveranlasserCode
        {
            get { return _faKontaktveranlasserCode; }
            set
            {
                if (_faKontaktveranlasserCode != value)
                {
                    _faKontaktveranlasserCode = value;
                    OnPropertyChanged("FaKontaktveranlasserCode");
                }
            }
        }
        private Nullable<int> _faKontaktveranlasserCode;
    
        [DataMember]
        public Nullable<long> PscdVertragsgegenstandID
        {
            get { return _pscdVertragsgegenstandID; }
            set
            {
                if (_pscdVertragsgegenstandID != value)
                {
                    _pscdVertragsgegenstandID = value;
                    OnPropertyChanged("PscdVertragsgegenstandID");
                }
            }
        }
        private Nullable<long> _pscdVertragsgegenstandID;
    
        [DataMember]
        public Nullable<int> SachbearbeiterID
        {
            get { return _sachbearbeiterID; }
            set
            {
                if (_sachbearbeiterID != value)
                {
                    ChangeTracker.RecordOriginalValue("SachbearbeiterID", _sachbearbeiterID);
                    if (!IsDeserializing)
                    {
                        if (XUser_Sachbearbeiter != null && XUser_Sachbearbeiter.UserID != value)
                        {
                            XUser_Sachbearbeiter = null;
                        }
                    }
                    _sachbearbeiterID = value;
                    OnPropertyChanged("SachbearbeiterID");
                }
            }
        }
        private Nullable<int> _sachbearbeiterID;
    
        [DataMember]
        public string MigBemerkung
        {
            get { return _migBemerkung; }
            set
            {
                if (_migBemerkung != value)
                {
                    _migBemerkung = value;
                    OnPropertyChanged("MigBemerkung");
                }
            }
        }
        private string _migBemerkung;
    
        [DataMember]
        public Nullable<int> MigHerkunftCode
        {
            get { return _migHerkunftCode; }
            set
            {
                if (_migHerkunftCode != value)
                {
                    _migHerkunftCode = value;
                    OnPropertyChanged("MigHerkunftCode");
                }
            }
        }
        private Nullable<int> _migHerkunftCode;
    
        [DataMember]
        public Nullable<int> MigAlteFallNr
        {
            get { return _migAlteFallNr; }
            set
            {
                if (_migAlteFallNr != value)
                {
                    _migAlteFallNr = value;
                    OnPropertyChanged("MigAlteFallNr");
                }
            }
        }
        private Nullable<int> _migAlteFallNr;
    
        [DataMember]
        public Nullable<int> VUFaFallID
        {
            get { return _vUFaFallID; }
            set
            {
                if (_vUFaFallID != value)
                {
                    _vUFaFallID = value;
                    OnPropertyChanged("VUFaFallID");
                }
            }
        }
        private Nullable<int> _vUFaFallID;
    
        [DataMember]
        public string visdat36Area
        {
            get { return _visdat36Area; }
            set
            {
                if (_visdat36Area != value)
                {
                    _visdat36Area = value;
                    OnPropertyChanged("visdat36Area");
                }
            }
        }
        private string _visdat36Area;
    
        [DataMember]
        public string visdat36FALLID
        {
            get { return _visdat36FALLID; }
            set
            {
                if (_visdat36FALLID != value)
                {
                    _visdat36FALLID = value;
                    OnPropertyChanged("visdat36FALLID");
                }
            }
        }
        private string _visdat36FALLID;
    
        [DataMember]
        public string visdat36LEISTUNGID
        {
            get { return _visdat36LEISTUNGID; }
            set
            {
                if (_visdat36LEISTUNGID != value)
                {
                    _visdat36LEISTUNGID = value;
                    OnPropertyChanged("visdat36LEISTUNGID");
                }
            }
        }
        private string _visdat36LEISTUNGID;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public string FaTeilleistungserbringerCodes
        {
            get { return _faTeilleistungserbringerCodes; }
            set
            {
                if (_faTeilleistungserbringerCodes != value)
                {
                    _faTeilleistungserbringerCodes = value;
                    OnPropertyChanged("FaTeilleistungserbringerCodes");
                }
            }
        }
        private string _faTeilleistungserbringerCodes;
    
        [DataMember]
        public Nullable<int> FaModulDienstleistungenCode
        {
            get { return _faModulDienstleistungenCode; }
            set
            {
                if (_faModulDienstleistungenCode != value)
                {
                    _faModulDienstleistungenCode = value;
                    OnPropertyChanged("FaModulDienstleistungenCode");
                }
            }
        }
        private Nullable<int> _faModulDienstleistungenCode;
    
        [DataMember]
        public bool WiederholteSpezifischeErmittlungEAF
        {
            get { return _wiederholteSpezifischeErmittlungEAF; }
            set
            {
                if (_wiederholteSpezifischeErmittlungEAF != value)
                {
                    _wiederholteSpezifischeErmittlungEAF = value;
                    OnPropertyChanged("WiederholteSpezifischeErmittlungEAF");
                }
            }
        }
        private bool _wiederholteSpezifischeErmittlungEAF;
    
        [DataMember]
        public string Dossiernummer
        {
            get { return _dossiernummer; }
            set
            {
                if (_dossiernummer != value)
                {
                    _dossiernummer = value;
                    OnPropertyChanged("Dossiernummer");
                }
            }
        }
        private string _dossiernummer;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public BaPerson BaPerson
        {
            get { return _baPerson; }
            set
            {
                if (!ReferenceEquals(_baPerson, value))
                {
                    var previousValue = _baPerson;
                    _baPerson = value;
                    FixupBaPerson(previousValue);
                    OnNavigationPropertyChanged("BaPerson");
                }
            }
        }
        private BaPerson _baPerson;
    
        [DataMember]
        public BaPerson SchuldnerBaPerson
        {
            get { return _schuldnerBaPerson; }
            set
            {
                if (!ReferenceEquals(_schuldnerBaPerson, value))
                {
                    var previousValue = _schuldnerBaPerson;
                    _schuldnerBaPerson = value;
                    FixupSchuldnerBaPerson(previousValue);
                    OnNavigationPropertyChanged("SchuldnerBaPerson");
                }
            }
        }
        private BaPerson _schuldnerBaPerson;
    
        [DataMember]
        public TrackableCollection<FaPhase> FaPhase
        {
            get
            {
                if (_faPhase == null)
                {
                    _faPhase = new TrackableCollection<FaPhase>();
                    _faPhase.CollectionChanged += FixupFaPhase;
                }
                return _faPhase;
            }
            set
            {
                if (!ReferenceEquals(_faPhase, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faPhase != null)
                    {
                        _faPhase.CollectionChanged -= FixupFaPhase;
                    }
                    _faPhase = value;
                    if (_faPhase != null)
                    {
                        _faPhase.CollectionChanged += FixupFaPhase;
                    }
                    OnNavigationPropertyChanged("FaPhase");
                }
            }
        }
        private TrackableCollection<FaPhase> _faPhase;
    
        [DataMember]
        public XUser XUser
        {
            get { return _xUser; }
            set
            {
                if (!ReferenceEquals(_xUser, value))
                {
                    var previousValue = _xUser;
                    _xUser = value;
                    FixupXUser(previousValue);
                    OnNavigationPropertyChanged("XUser");
                }
            }
        }
        private XUser _xUser;
    
        [DataMember]
        public XUser XUser_Sachbearbeiter
        {
            get { return _xUser_Sachbearbeiter; }
            set
            {
                if (!ReferenceEquals(_xUser_Sachbearbeiter, value))
                {
                    var previousValue = _xUser_Sachbearbeiter;
                    _xUser_Sachbearbeiter = value;
                    FixupXUser_Sachbearbeiter(previousValue);
                    OnNavigationPropertyChanged("XUser_Sachbearbeiter");
                }
            }
        }
        private XUser _xUser_Sachbearbeiter;
    
        [DataMember]
        public FaFall FaFall
        {
            get { return _faFall; }
            set
            {
                if (!ReferenceEquals(_faFall, value))
                {
                    var previousValue = _faFall;
                    _faFall = value;
                    FixupFaFall(previousValue);
                    OnNavigationPropertyChanged("FaFall");
                }
            }
        }
        private FaFall _faFall;
    
        [DataMember]
        public TrackableCollection<VmKlientenbudget> VmKlientenbudget
        {
            get
            {
                if (_vmKlientenbudget == null)
                {
                    _vmKlientenbudget = new TrackableCollection<VmKlientenbudget>();
                    _vmKlientenbudget.CollectionChanged += FixupVmKlientenbudget;
                }
                return _vmKlientenbudget;
            }
            set
            {
                if (!ReferenceEquals(_vmKlientenbudget, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vmKlientenbudget != null)
                    {
                        _vmKlientenbudget.CollectionChanged -= FixupVmKlientenbudget;
                    }
                    _vmKlientenbudget = value;
                    if (_vmKlientenbudget != null)
                    {
                        _vmKlientenbudget.CollectionChanged += FixupVmKlientenbudget;
                    }
                    OnNavigationPropertyChanged("VmKlientenbudget");
                }
            }
        }
        private TrackableCollection<VmKlientenbudget> _vmKlientenbudget;
    
        [DataMember]
        public TrackableCollection<FaAktennotizen> FaAktennotizen
        {
            get
            {
                if (_faAktennotizen == null)
                {
                    _faAktennotizen = new TrackableCollection<FaAktennotizen>();
                    _faAktennotizen.CollectionChanged += FixupFaAktennotizen;
                }
                return _faAktennotizen;
            }
            set
            {
                if (!ReferenceEquals(_faAktennotizen, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faAktennotizen != null)
                    {
                        _faAktennotizen.CollectionChanged -= FixupFaAktennotizen;
                    }
                    _faAktennotizen = value;
                    if (_faAktennotizen != null)
                    {
                        _faAktennotizen.CollectionChanged += FixupFaAktennotizen;
                    }
                    OnNavigationPropertyChanged("FaAktennotizen");
                }
            }
        }
        private TrackableCollection<FaAktennotizen> _faAktennotizen;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente
        {
            get
            {
                if (_faDokumente == null)
                {
                    _faDokumente = new TrackableCollection<FaDokumente>();
                    _faDokumente.CollectionChanged += FixupFaDokumente;
                }
                return _faDokumente;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged -= FixupFaDokumente;
                    }
                    _faDokumente = value;
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged += FixupFaDokumente;
                    }
                    OnNavigationPropertyChanged("FaDokumente");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung
        {
            get
            {
                if (_faWeisung == null)
                {
                    _faWeisung = new TrackableCollection<FaWeisung>();
                    _faWeisung.CollectionChanged += FixupFaWeisung;
                }
                return _faWeisung;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung != null)
                    {
                        _faWeisung.CollectionChanged -= FixupFaWeisung;
                    }
                    _faWeisung = value;
                    if (_faWeisung != null)
                    {
                        _faWeisung.CollectionChanged += FixupFaWeisung;
                    }
                    OnNavigationPropertyChanged("FaWeisung");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung;
    
        [DataMember]
        public TrackableCollection<XTask> XTask
        {
            get
            {
                if (_xTask == null)
                {
                    _xTask = new TrackableCollection<XTask>();
                    _xTask.CollectionChanged += FixupXTask;
                }
                return _xTask;
            }
            set
            {
                if (!ReferenceEquals(_xTask, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xTask != null)
                    {
                        _xTask.CollectionChanged -= FixupXTask;
                    }
                    _xTask = value;
                    if (_xTask != null)
                    {
                        _xTask.CollectionChanged += FixupXTask;
                    }
                    OnNavigationPropertyChanged("XTask");
                }
            }
        }
        private TrackableCollection<XTask> _xTask;
    
        [DataMember]
        public TrackableCollection<FaLeistungUserHist> FaLeistungUserHist
        {
            get
            {
                if (_faLeistungUserHist == null)
                {
                    _faLeistungUserHist = new TrackableCollection<FaLeistungUserHist>();
                    _faLeistungUserHist.CollectionChanged += FixupFaLeistungUserHist;
                }
                return _faLeistungUserHist;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungUserHist, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungUserHist != null)
                    {
                        _faLeistungUserHist.CollectionChanged -= FixupFaLeistungUserHist;
                    }
                    _faLeistungUserHist = value;
                    if (_faLeistungUserHist != null)
                    {
                        _faLeistungUserHist.CollectionChanged += FixupFaLeistungUserHist;
                    }
                    OnNavigationPropertyChanged("FaLeistungUserHist");
                }
            }
        }
        private TrackableCollection<FaLeistungUserHist> _faLeistungUserHist;
    
        [DataMember]
        public TrackableCollection<FaLeistungArchiv> FaLeistungArchiv
        {
            get
            {
                if (_faLeistungArchiv == null)
                {
                    _faLeistungArchiv = new TrackableCollection<FaLeistungArchiv>();
                    _faLeistungArchiv.CollectionChanged += FixupFaLeistungArchiv;
                }
                return _faLeistungArchiv;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungArchiv, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungArchiv != null)
                    {
                        _faLeistungArchiv.CollectionChanged -= FixupFaLeistungArchiv;
                    }
                    _faLeistungArchiv = value;
                    if (_faLeistungArchiv != null)
                    {
                        _faLeistungArchiv.CollectionChanged += FixupFaLeistungArchiv;
                    }
                    OnNavigationPropertyChanged("FaLeistungArchiv");
                }
            }
        }
        private TrackableCollection<FaLeistungArchiv> _faLeistungArchiv;
    
        [DataMember]
        public TrackableCollection<FaLeistungZugriff> FaLeistungZugriff
        {
            get
            {
                if (_faLeistungZugriff == null)
                {
                    _faLeistungZugriff = new TrackableCollection<FaLeistungZugriff>();
                    _faLeistungZugriff.CollectionChanged += FixupFaLeistungZugriff;
                }
                return _faLeistungZugriff;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungZugriff, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungZugriff != null)
                    {
                        _faLeistungZugriff.CollectionChanged -= FixupFaLeistungZugriff;
                    }
                    _faLeistungZugriff = value;
                    if (_faLeistungZugriff != null)
                    {
                        _faLeistungZugriff.CollectionChanged += FixupFaLeistungZugriff;
                    }
                    OnNavigationPropertyChanged("FaLeistungZugriff");
                }
            }
        }
        private TrackableCollection<FaLeistungZugriff> _faLeistungZugriff;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage> FaDokumentAblage
        {
            get
            {
                if (_faDokumentAblage == null)
                {
                    _faDokumentAblage = new TrackableCollection<FaDokumentAblage>();
                    _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                }
                return _faDokumentAblage;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged -= FixupFaDokumentAblage;
                    }
                    _faDokumentAblage = value;
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage> _faDokumentAblage;
    
        [DataMember]
        public XModul XModul
        {
            get { return _xModul; }
            set
            {
                if (!ReferenceEquals(_xModul, value))
                {
                    var previousValue = _xModul;
                    _xModul = value;
                    FixupXModul(previousValue);
                    OnNavigationPropertyChanged("XModul");
                }
            }
        }
        private XModul _xModul;
    
        [DataMember]
        public TrackableCollection<KesAuftrag> KesAuftrag
        {
            get
            {
                if (_kesAuftrag == null)
                {
                    _kesAuftrag = new TrackableCollection<KesAuftrag>();
                    _kesAuftrag.CollectionChanged += FixupKesAuftrag;
                }
                return _kesAuftrag;
            }
            set
            {
                if (!ReferenceEquals(_kesAuftrag, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesAuftrag != null)
                    {
                        _kesAuftrag.CollectionChanged -= FixupKesAuftrag;
                    }
                    _kesAuftrag = value;
                    if (_kesAuftrag != null)
                    {
                        _kesAuftrag.CollectionChanged += FixupKesAuftrag;
                    }
                    OnNavigationPropertyChanged("KesAuftrag");
                }
            }
        }
        private TrackableCollection<KesAuftrag> _kesAuftrag;
    
        [DataMember]
        public TrackableCollection<KesPraevention> KesPraevention
        {
            get
            {
                if (_kesPraevention == null)
                {
                    _kesPraevention = new TrackableCollection<KesPraevention>();
                    _kesPraevention.CollectionChanged += FixupKesPraevention;
                }
                return _kesPraevention;
            }
            set
            {
                if (!ReferenceEquals(_kesPraevention, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesPraevention != null)
                    {
                        _kesPraevention.CollectionChanged -= FixupKesPraevention;
                    }
                    _kesPraevention = value;
                    if (_kesPraevention != null)
                    {
                        _kesPraevention.CollectionChanged += FixupKesPraevention;
                    }
                    OnNavigationPropertyChanged("KesPraevention");
                }
            }
        }
        private TrackableCollection<KesPraevention> _kesPraevention;
    
        [DataMember]
        public TrackableCollection<KesMassnahme> KesMassnahme
        {
            get
            {
                if (_kesMassnahme == null)
                {
                    _kesMassnahme = new TrackableCollection<KesMassnahme>();
                    _kesMassnahme.CollectionChanged += FixupKesMassnahme;
                }
                return _kesMassnahme;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahme, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahme != null)
                    {
                        _kesMassnahme.CollectionChanged -= FixupKesMassnahme;
                    }
                    _kesMassnahme = value;
                    if (_kesMassnahme != null)
                    {
                        _kesMassnahme.CollectionChanged += FixupKesMassnahme;
                    }
                    OnNavigationPropertyChanged("KesMassnahme");
                }
            }
        }
        private TrackableCollection<KesMassnahme> _kesMassnahme;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument
        {
            get
            {
                if (_kesDokument == null)
                {
                    _kesDokument = new TrackableCollection<KesDokument>();
                    _kesDokument.CollectionChanged += FixupKesDokument;
                }
                return _kesDokument;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged -= FixupKesDokument;
                    }
                    _kesDokument = value;
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged += FixupKesDokument;
                    }
                    OnNavigationPropertyChanged("KesDokument");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument;
    
        [DataMember]
        public TrackableCollection<KesVerlauf> KesVerlauf
        {
            get
            {
                if (_kesVerlauf == null)
                {
                    _kesVerlauf = new TrackableCollection<KesVerlauf>();
                    _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                }
                return _kesVerlauf;
            }
            set
            {
                if (!ReferenceEquals(_kesVerlauf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged -= FixupKesVerlauf;
                    }
                    _kesVerlauf = value;
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                    }
                    OnNavigationPropertyChanged("KesVerlauf");
                }
            }
        }
        private TrackableCollection<KesVerlauf> _kesVerlauf;
    
        [DataMember]
        public TrackableCollection<KesPflegekinderaufsicht> KesPflegekinderaufsicht
        {
            get
            {
                if (_kesPflegekinderaufsicht == null)
                {
                    _kesPflegekinderaufsicht = new TrackableCollection<KesPflegekinderaufsicht>();
                    _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                }
                return _kesPflegekinderaufsicht;
            }
            set
            {
                if (!ReferenceEquals(_kesPflegekinderaufsicht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged -= FixupKesPflegekinderaufsicht;
                    }
                    _kesPflegekinderaufsicht = value;
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                    }
                    OnNavigationPropertyChanged("KesPflegekinderaufsicht");
                }
            }
        }
        private TrackableCollection<KesPflegekinderaufsicht> _kesPflegekinderaufsicht;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaPerson = null;
            SchuldnerBaPerson = null;
            FaPhase.Clear();
            XUser = null;
            XUser_Sachbearbeiter = null;
            FaFall = null;
            VmKlientenbudget.Clear();
            FaAktennotizen.Clear();
            FaDokumente.Clear();
            FaWeisung.Clear();
            XTask.Clear();
            FaLeistungUserHist.Clear();
            FaLeistungArchiv.Clear();
            FaLeistungZugriff.Clear();
            FaDokumentAblage.Clear();
            XModul = null;
            KesAuftrag.Clear();
            KesPraevention.Clear();
            KesMassnahme.Clear();
            KesDokument.Clear();
            KesVerlauf.Clear();
            KesPflegekinderaufsicht.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaPerson(BaPerson previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung.Contains(this))
            {
                previousValue.FaLeistung.Remove(this);
            }
    
            if (BaPerson != null)
            {
                if (!BaPerson.FaLeistung.Contains(this))
                {
                    BaPerson.FaLeistung.Add(this);
                }
    
                BaPersonID = BaPerson.BaPersonID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaPerson")
                    && (ChangeTracker.OriginalValues["BaPerson"] == BaPerson))
                {
                    ChangeTracker.OriginalValues.Remove("BaPerson");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaPerson", previousValue);
                }
                if (BaPerson != null && !BaPerson.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaPerson.StartTracking();
                }
            }
        }
    
        private void FixupSchuldnerBaPerson(BaPerson previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung_Schuldner.Contains(this))
            {
                previousValue.FaLeistung_Schuldner.Remove(this);
            }
    
            if (SchuldnerBaPerson != null)
            {
                if (!SchuldnerBaPerson.FaLeistung_Schuldner.Contains(this))
                {
                    SchuldnerBaPerson.FaLeistung_Schuldner.Add(this);
                }
    
                SchuldnerBaPersonID = SchuldnerBaPerson.BaPersonID;
            }
            else if (!skipKeys)
            {
                SchuldnerBaPersonID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SchuldnerBaPerson")
                    && (ChangeTracker.OriginalValues["SchuldnerBaPerson"] == SchuldnerBaPerson))
                {
                    ChangeTracker.OriginalValues.Remove("SchuldnerBaPerson");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SchuldnerBaPerson", previousValue);
                }
                if (SchuldnerBaPerson != null && !SchuldnerBaPerson.ChangeTracker.ChangeTrackingEnabled)
                {
                    SchuldnerBaPerson.StartTracking();
                }
            }
        }
    
        private void FixupXUser(XUser previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung.Contains(this))
            {
                previousValue.FaLeistung.Remove(this);
            }
    
            if (XUser != null)
            {
                if (!XUser.FaLeistung.Contains(this))
                {
                    XUser.FaLeistung.Add(this);
                }
    
                UserID = XUser.UserID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser")
                    && (ChangeTracker.OriginalValues["XUser"] == XUser))
                {
                    ChangeTracker.OriginalValues.Remove("XUser");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser", previousValue);
                }
                if (XUser != null && !XUser.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser.StartTracking();
                }
            }
        }
    
        private void FixupXUser_Sachbearbeiter(XUser previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung_Sachbearbeiter.Contains(this))
            {
                previousValue.FaLeistung_Sachbearbeiter.Remove(this);
            }
    
            if (XUser_Sachbearbeiter != null)
            {
                if (!XUser_Sachbearbeiter.FaLeistung_Sachbearbeiter.Contains(this))
                {
                    XUser_Sachbearbeiter.FaLeistung_Sachbearbeiter.Add(this);
                }
    
                SachbearbeiterID = XUser_Sachbearbeiter.UserID;
            }
            else if (!skipKeys)
            {
                SachbearbeiterID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser_Sachbearbeiter")
                    && (ChangeTracker.OriginalValues["XUser_Sachbearbeiter"] == XUser_Sachbearbeiter))
                {
                    ChangeTracker.OriginalValues.Remove("XUser_Sachbearbeiter");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser_Sachbearbeiter", previousValue);
                }
                if (XUser_Sachbearbeiter != null && !XUser_Sachbearbeiter.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser_Sachbearbeiter.StartTracking();
                }
            }
        }
    
        private void FixupFaFall(FaFall previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung.Contains(this))
            {
                previousValue.FaLeistung.Remove(this);
            }
    
            if (FaFall != null)
            {
                if (!FaFall.FaLeistung.Contains(this))
                {
                    FaFall.FaLeistung.Add(this);
                }
    
                FaFallID = FaFall.FaFallID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FaFall")
                    && (ChangeTracker.OriginalValues["FaFall"] == FaFall))
                {
                    ChangeTracker.OriginalValues.Remove("FaFall");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FaFall", previousValue);
                }
                if (FaFall != null && !FaFall.ChangeTracker.ChangeTrackingEnabled)
                {
                    FaFall.StartTracking();
                }
            }
        }
    
        private void FixupXModul(XModul previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FaLeistung.Contains(this))
            {
                previousValue.FaLeistung.Remove(this);
            }
    
            if (XModul != null)
            {
                if (!XModul.FaLeistung.Contains(this))
                {
                    XModul.FaLeistung.Add(this);
                }
    
                ModulID = XModul.ModulID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XModul")
                    && (ChangeTracker.OriginalValues["XModul"] == XModul))
                {
                    ChangeTracker.OriginalValues.Remove("XModul");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XModul", previousValue);
                }
                if (XModul != null && !XModul.ChangeTracker.ChangeTrackingEnabled)
                {
                    XModul.StartTracking();
                }
            }
        }
    
        private void FixupFaPhase(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaPhase item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaPhase", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaPhase item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaPhase", item);
                    }
                }
            }
        }
    
        private void FixupVmKlientenbudget(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VmKlientenbudget item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VmKlientenbudget", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VmKlientenbudget item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VmKlientenbudget", item);
                    }
                }
            }
        }
    
        private void FixupFaAktennotizen(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaAktennotizen item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaAktennotizen", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaAktennotizen item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaAktennotizen", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung", item);
                    }
                }
            }
        }
    
        private void FixupXTask(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XTask item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XTask", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XTask item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XTask", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungUserHist(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungUserHist item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungUserHist", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungUserHist item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungUserHist", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungArchiv(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungArchiv item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungArchiv", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungArchiv item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungArchiv", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungZugriff(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungZugriff item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungZugriff", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungZugriff item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungZugriff", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
        }
    
        private void FixupKesAuftrag(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesAuftrag item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesAuftrag", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesAuftrag", item);
                    }
                }
            }
        }
    
        private void FixupKesPraevention(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesPraevention item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesPraevention", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesPraevention item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesPraevention", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahme(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahme item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahme", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahme item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahme", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument", item);
                    }
                }
            }
        }
    
        private void FixupKesVerlauf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesVerlauf item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesVerlauf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesVerlauf item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesVerlauf", item);
                    }
                }
            }
        }
    
        private void FixupKesPflegekinderaufsicht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.NewItems)
                {
                    item.FaLeistung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.OldItems)
                {
                    if (ReferenceEquals(item.FaLeistung, this))
                    {
                        item.FaLeistung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (FaLeistung)obj;
    		if (!_faLeistungID.Equals(entity.FaLeistungID) || _faLeistungID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _faLeistungID.GetHashCode();
        }

        #endregion

    }
}
