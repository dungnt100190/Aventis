//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(KesMassnahme_KesArtikel))]
    [KnownType(typeof(KesMandatsfuehrendePerson))]
    [KnownType(typeof(KesMassnahmeBericht))]
    [KnownType(typeof(KesMassnahmeAuftrag))]
    [KnownType(typeof(KesBehoerde))]
    [KnownType(typeof(BaInstitution))]
    public partial class KesMassnahme: EntityBase<KesMassnahme>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int KesMassnahmeID
        {
            get { return _kesMassnahmeID; }
            set
            {
                if (_kesMassnahmeID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'KesMassnahmeID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _kesMassnahmeID = value;
                    OnPropertyChanged("KesMassnahmeID");
                }
            }
        }
        private int _kesMassnahmeID;
    
        [DataMember]
        public int FaLeistungID
        {
            get { return _faLeistungID; }
            set
            {
                if (_faLeistungID != value)
                {
                    ChangeTracker.RecordOriginalValue("FaLeistungID", _faLeistungID);
                    if (!IsDeserializing)
                    {
                        if (FaLeistung != null && FaLeistung.FaLeistungID != value)
                        {
                            FaLeistung = null;
                        }
                    }
                    _faLeistungID = value;
                    OnPropertyChanged("FaLeistungID");
                }
            }
        }
        private int _faLeistungID;
    
        [DataMember]
        public bool IsKS
        {
            get { return _isKS; }
            set
            {
                if (_isKS != value)
                {
                    _isKS = value;
                    OnPropertyChanged("IsKS");
                }
            }
        }
        private bool _isKS;
    
        [DataMember]
        public Nullable<int> DocumentID_Errichtungsbeschluss
        {
            get { return _documentID_Errichtungsbeschluss; }
            set
            {
                if (_documentID_Errichtungsbeschluss != value)
                {
                    _documentID_Errichtungsbeschluss = value;
                    OnPropertyChanged("DocumentID_Errichtungsbeschluss");
                }
            }
        }
        private Nullable<int> _documentID_Errichtungsbeschluss;
    
        [DataMember]
        public Nullable<int> DocumentID_Aufhebungsbeschluss
        {
            get { return _documentID_Aufhebungsbeschluss; }
            set
            {
                if (_documentID_Aufhebungsbeschluss != value)
                {
                    _documentID_Aufhebungsbeschluss = value;
                    OnPropertyChanged("DocumentID_Aufhebungsbeschluss");
                }
            }
        }
        private Nullable<int> _documentID_Aufhebungsbeschluss;
    
        [DataMember]
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private Nullable<System.DateTime> _datumVon;
    
        [DataMember]
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    OnPropertyChanged("DatumBis");
                }
            }
        }
        private Nullable<System.DateTime> _datumBis;
    
        [DataMember]
        public string KesAufgabenbereichCodes
        {
            get { return _kesAufgabenbereichCodes; }
            set
            {
                if (_kesAufgabenbereichCodes != value)
                {
                    _kesAufgabenbereichCodes = value;
                    OnPropertyChanged("KesAufgabenbereichCodes");
                }
            }
        }
        private string _kesAufgabenbereichCodes;
    
        [DataMember]
        public string KesIndikationCodes
        {
            get { return _kesIndikationCodes; }
            set
            {
                if (_kesIndikationCodes != value)
                {
                    _kesIndikationCodes = value;
                    OnPropertyChanged("KesIndikationCodes");
                }
            }
        }
        private string _kesIndikationCodes;
    
        [DataMember]
        public string Auftragstext
        {
            get { return _auftragstext; }
            set
            {
                if (_auftragstext != value)
                {
                    _auftragstext = value;
                    OnPropertyChanged("Auftragstext");
                }
            }
        }
        private string _auftragstext;
    
        [DataMember]
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    OnPropertyChanged("Bemerkung");
                }
            }
        }
        private string _bemerkung;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] KesMassnahmeTS
        {
            get { return _kesMassnahmeTS; }
            set
            {
                if (_kesMassnahmeTS != value)
                {
                    _kesMassnahmeTS = value;
                    OnPropertyChanged("KesMassnahmeTS");
                }
            }
        }
        private byte[] _kesMassnahmeTS;
    
        [DataMember]
        public Nullable<int> KesElterlicheSorgeObhutCode_Obhut
        {
            get { return _kesElterlicheSorgeObhutCode_Obhut; }
            set
            {
                if (_kesElterlicheSorgeObhutCode_Obhut != value)
                {
                    _kesElterlicheSorgeObhutCode_Obhut = value;
                    OnPropertyChanged("KesElterlicheSorgeObhutCode_Obhut");
                }
            }
        }
        private Nullable<int> _kesElterlicheSorgeObhutCode_Obhut;
    
        [DataMember]
        public Nullable<int> KesAenderungsgrundCode
        {
            get { return _kesAenderungsgrundCode; }
            set
            {
                if (_kesAenderungsgrundCode != value)
                {
                    _kesAenderungsgrundCode = value;
                    OnPropertyChanged("KesAenderungsgrundCode");
                }
            }
        }
        private Nullable<int> _kesAenderungsgrundCode;
    
        [DataMember]
        public Nullable<int> KesAufhebungsgrundCode
        {
            get { return _kesAufhebungsgrundCode; }
            set
            {
                if (_kesAufhebungsgrundCode != value)
                {
                    _kesAufhebungsgrundCode = value;
                    OnPropertyChanged("KesAufhebungsgrundCode");
                }
            }
        }
        private Nullable<int> _kesAufhebungsgrundCode;
    
        [DataMember]
        public Nullable<int> KesElterlicheSorgeObhutCode_ElterlicheSorge
        {
            get { return _kesElterlicheSorgeObhutCode_ElterlicheSorge; }
            set
            {
                if (_kesElterlicheSorgeObhutCode_ElterlicheSorge != value)
                {
                    _kesElterlicheSorgeObhutCode_ElterlicheSorge = value;
                    OnPropertyChanged("KesElterlicheSorgeObhutCode_ElterlicheSorge");
                }
            }
        }
        private Nullable<int> _kesElterlicheSorgeObhutCode_ElterlicheSorge;
    
        [DataMember]
        public Nullable<System.DateTime> UebernahmeVon_Datum
        {
            get { return _uebernahmeVon_Datum; }
            set
            {
                if (_uebernahmeVon_Datum != value)
                {
                    _uebernahmeVon_Datum = value;
                    OnPropertyChanged("UebernahmeVon_Datum");
                }
            }
        }
        private Nullable<System.DateTime> _uebernahmeVon_Datum;
    
        [DataMember]
        public Nullable<int> UebernahmeVon_OrtschaftCode
        {
            get { return _uebernahmeVon_OrtschaftCode; }
            set
            {
                if (_uebernahmeVon_OrtschaftCode != value)
                {
                    _uebernahmeVon_OrtschaftCode = value;
                    OnPropertyChanged("UebernahmeVon_OrtschaftCode");
                }
            }
        }
        private Nullable<int> _uebernahmeVon_OrtschaftCode;
    
        [DataMember]
        public string UebernahmeVon_PLZ
        {
            get { return _uebernahmeVon_PLZ; }
            set
            {
                if (_uebernahmeVon_PLZ != value)
                {
                    _uebernahmeVon_PLZ = value;
                    OnPropertyChanged("UebernahmeVon_PLZ");
                }
            }
        }
        private string _uebernahmeVon_PLZ;
    
        [DataMember]
        public string UebernahmeVon_Ort
        {
            get { return _uebernahmeVon_Ort; }
            set
            {
                if (_uebernahmeVon_Ort != value)
                {
                    _uebernahmeVon_Ort = value;
                    OnPropertyChanged("UebernahmeVon_Ort");
                }
            }
        }
        private string _uebernahmeVon_Ort;
    
        [DataMember]
        public string UebernahmeVon_Kanton
        {
            get { return _uebernahmeVon_Kanton; }
            set
            {
                if (_uebernahmeVon_Kanton != value)
                {
                    _uebernahmeVon_Kanton = value;
                    OnPropertyChanged("UebernahmeVon_Kanton");
                }
            }
        }
        private string _uebernahmeVon_Kanton;
    
        [DataMember]
        public Nullable<int> UebernahmeVon_KesBehoerdeID
        {
            get { return _uebernahmeVon_KesBehoerdeID; }
            set
            {
                if (_uebernahmeVon_KesBehoerdeID != value)
                {
                    ChangeTracker.RecordOriginalValue("UebernahmeVon_KesBehoerdeID", _uebernahmeVon_KesBehoerdeID);
                    if (!IsDeserializing)
                    {
                        if (UebernahmeVon_KesBehoerde != null && UebernahmeVon_KesBehoerde.KesBehoerdeID != value)
                        {
                            UebernahmeVon_KesBehoerde = null;
                        }
                    }
                    _uebernahmeVon_KesBehoerdeID = value;
                    OnPropertyChanged("UebernahmeVon_KesBehoerdeID");
                }
            }
        }
        private Nullable<int> _uebernahmeVon_KesBehoerdeID;
    
        [DataMember]
        public Nullable<System.DateTime> AenderungVom_Datum
        {
            get { return _aenderungVom_Datum; }
            set
            {
                if (_aenderungVom_Datum != value)
                {
                    _aenderungVom_Datum = value;
                    OnPropertyChanged("AenderungVom_Datum");
                }
            }
        }
        private Nullable<System.DateTime> _aenderungVom_Datum;
    
        [DataMember]
        public Nullable<System.DateTime> UebertragungAn_Datum
        {
            get { return _uebertragungAn_Datum; }
            set
            {
                if (_uebertragungAn_Datum != value)
                {
                    _uebertragungAn_Datum = value;
                    OnPropertyChanged("UebertragungAn_Datum");
                }
            }
        }
        private Nullable<System.DateTime> _uebertragungAn_Datum;
    
        [DataMember]
        public Nullable<int> UebertragungAn_OrtschaftCode
        {
            get { return _uebertragungAn_OrtschaftCode; }
            set
            {
                if (_uebertragungAn_OrtschaftCode != value)
                {
                    _uebertragungAn_OrtschaftCode = value;
                    OnPropertyChanged("UebertragungAn_OrtschaftCode");
                }
            }
        }
        private Nullable<int> _uebertragungAn_OrtschaftCode;
    
        [DataMember]
        public string UebertragungAn_PLZ
        {
            get { return _uebertragungAn_PLZ; }
            set
            {
                if (_uebertragungAn_PLZ != value)
                {
                    _uebertragungAn_PLZ = value;
                    OnPropertyChanged("UebertragungAn_PLZ");
                }
            }
        }
        private string _uebertragungAn_PLZ;
    
        [DataMember]
        public string UebertragungAn_Ort
        {
            get { return _uebertragungAn_Ort; }
            set
            {
                if (_uebertragungAn_Ort != value)
                {
                    _uebertragungAn_Ort = value;
                    OnPropertyChanged("UebertragungAn_Ort");
                }
            }
        }
        private string _uebertragungAn_Ort;
    
        [DataMember]
        public string UebertragungAn_Kanton
        {
            get { return _uebertragungAn_Kanton; }
            set
            {
                if (_uebertragungAn_Kanton != value)
                {
                    _uebertragungAn_Kanton = value;
                    OnPropertyChanged("UebertragungAn_Kanton");
                }
            }
        }
        private string _uebertragungAn_Kanton;
    
        [DataMember]
        public Nullable<int> UebertragungAn_KesBehoerdeID
        {
            get { return _uebertragungAn_KesBehoerdeID; }
            set
            {
                if (_uebertragungAn_KesBehoerdeID != value)
                {
                    ChangeTracker.RecordOriginalValue("UebertragungAn_KesBehoerdeID", _uebertragungAn_KesBehoerdeID);
                    if (!IsDeserializing)
                    {
                        if (UebertragungAn_KesBehoerde != null && UebertragungAn_KesBehoerde.KesBehoerdeID != value)
                        {
                            UebertragungAn_KesBehoerde = null;
                        }
                    }
                    _uebertragungAn_KesBehoerdeID = value;
                    OnPropertyChanged("UebertragungAn_KesBehoerdeID");
                }
            }
        }
        private Nullable<int> _uebertragungAn_KesBehoerdeID;
    
        [DataMember]
        public Nullable<int> Zustaendig_KesBehoerdeID
        {
            get { return _zustaendig_KesBehoerdeID; }
            set
            {
                if (_zustaendig_KesBehoerdeID != value)
                {
                    ChangeTracker.RecordOriginalValue("Zustaendig_KesBehoerdeID", _zustaendig_KesBehoerdeID);
                    if (!IsDeserializing)
                    {
                        if (Zustaendig_KesBehoerde != null && Zustaendig_KesBehoerde.KesBehoerdeID != value)
                        {
                            Zustaendig_KesBehoerde = null;
                        }
                    }
                    _zustaendig_KesBehoerdeID = value;
                    OnPropertyChanged("Zustaendig_KesBehoerdeID");
                }
            }
        }
        private Nullable<int> _zustaendig_KesBehoerdeID;
    
        [DataMember]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set
            {
                if (_isDeleted != value)
                {
                    _isDeleted = value;
                    OnPropertyChanged("IsDeleted");
                }
            }
        }
        private bool _isDeleted;
    
        [DataMember]
        public bool FuersorgerischeUnterbringung
        {
            get { return _fuersorgerischeUnterbringung; }
            set
            {
                if (_fuersorgerischeUnterbringung != value)
                {
                    _fuersorgerischeUnterbringung = value;
                    OnPropertyChanged("FuersorgerischeUnterbringung");
                }
            }
        }
        private bool _fuersorgerischeUnterbringung;
    
        [DataMember]
        public Nullable<int> Platzierung_BaInstitutionID
        {
            get { return _platzierung_BaInstitutionID; }
            set
            {
                if (_platzierung_BaInstitutionID != value)
                {
                    ChangeTracker.RecordOriginalValue("Platzierung_BaInstitutionID", _platzierung_BaInstitutionID);
                    if (!IsDeserializing)
                    {
                        if (BaInstitution != null && BaInstitution.BaInstitutionID != value)
                        {
                            BaInstitution = null;
                        }
                    }
                    _platzierung_BaInstitutionID = value;
                    OnPropertyChanged("Platzierung_BaInstitutionID");
                }
            }
        }
        private Nullable<int> _platzierung_BaInstitutionID;
    
        [DataMember]
        public Nullable<int> KesGrundlageCode
        {
            get { return _kesGrundlageCode; }
            set
            {
                if (_kesGrundlageCode != value)
                {
                    _kesGrundlageCode = value;
                    OnPropertyChanged("KesGrundlageCode");
                }
            }
        }
        private Nullable<int> _kesGrundlageCode;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FaLeistung FaLeistung
        {
            get { return _faLeistung; }
            set
            {
                if (!ReferenceEquals(_faLeistung, value))
                {
                    var previousValue = _faLeistung;
                    _faLeistung = value;
                    FixupFaLeistung(previousValue);
                    OnNavigationPropertyChanged("FaLeistung");
                }
            }
        }
        private FaLeistung _faLeistung;
    
        [DataMember]
        public TrackableCollection<KesMassnahme_KesArtikel> KesMassnahme_KesArtikel
        {
            get
            {
                if (_kesMassnahme_KesArtikel == null)
                {
                    _kesMassnahme_KesArtikel = new TrackableCollection<KesMassnahme_KesArtikel>();
                    _kesMassnahme_KesArtikel.CollectionChanged += FixupKesMassnahme_KesArtikel;
                }
                return _kesMassnahme_KesArtikel;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahme_KesArtikel, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahme_KesArtikel != null)
                    {
                        _kesMassnahme_KesArtikel.CollectionChanged -= FixupKesMassnahme_KesArtikel;
                    }
                    _kesMassnahme_KesArtikel = value;
                    if (_kesMassnahme_KesArtikel != null)
                    {
                        _kesMassnahme_KesArtikel.CollectionChanged += FixupKesMassnahme_KesArtikel;
                    }
                    OnNavigationPropertyChanged("KesMassnahme_KesArtikel");
                }
            }
        }
        private TrackableCollection<KesMassnahme_KesArtikel> _kesMassnahme_KesArtikel;
    
        [DataMember]
        public TrackableCollection<KesMandatsfuehrendePerson> KesMandatsfuehrendePerson
        {
            get
            {
                if (_kesMandatsfuehrendePerson == null)
                {
                    _kesMandatsfuehrendePerson = new TrackableCollection<KesMandatsfuehrendePerson>();
                    _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                }
                return _kesMandatsfuehrendePerson;
            }
            set
            {
                if (!ReferenceEquals(_kesMandatsfuehrendePerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged -= FixupKesMandatsfuehrendePerson;
                    }
                    _kesMandatsfuehrendePerson = value;
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                    }
                    OnNavigationPropertyChanged("KesMandatsfuehrendePerson");
                }
            }
        }
        private TrackableCollection<KesMandatsfuehrendePerson> _kesMandatsfuehrendePerson;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeBericht> KesMassnahmeBericht
        {
            get
            {
                if (_kesMassnahmeBericht == null)
                {
                    _kesMassnahmeBericht = new TrackableCollection<KesMassnahmeBericht>();
                    _kesMassnahmeBericht.CollectionChanged += FixupKesMassnahmeBericht;
                }
                return _kesMassnahmeBericht;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeBericht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeBericht != null)
                    {
                        _kesMassnahmeBericht.CollectionChanged -= FixupKesMassnahmeBericht;
                    }
                    _kesMassnahmeBericht = value;
                    if (_kesMassnahmeBericht != null)
                    {
                        _kesMassnahmeBericht.CollectionChanged += FixupKesMassnahmeBericht;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeBericht");
                }
            }
        }
        private TrackableCollection<KesMassnahmeBericht> _kesMassnahmeBericht;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeAuftrag> KesMassnahmeAuftrag
        {
            get
            {
                if (_kesMassnahmeAuftrag == null)
                {
                    _kesMassnahmeAuftrag = new TrackableCollection<KesMassnahmeAuftrag>();
                    _kesMassnahmeAuftrag.CollectionChanged += FixupKesMassnahmeAuftrag;
                }
                return _kesMassnahmeAuftrag;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeAuftrag, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeAuftrag != null)
                    {
                        _kesMassnahmeAuftrag.CollectionChanged -= FixupKesMassnahmeAuftrag;
                    }
                    _kesMassnahmeAuftrag = value;
                    if (_kesMassnahmeAuftrag != null)
                    {
                        _kesMassnahmeAuftrag.CollectionChanged += FixupKesMassnahmeAuftrag;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeAuftrag");
                }
            }
        }
        private TrackableCollection<KesMassnahmeAuftrag> _kesMassnahmeAuftrag;
    
        [DataMember]
        public KesBehoerde UebernahmeVon_KesBehoerde
        {
            get { return _uebernahmeVon_KesBehoerde; }
            set
            {
                if (!ReferenceEquals(_uebernahmeVon_KesBehoerde, value))
                {
                    var previousValue = _uebernahmeVon_KesBehoerde;
                    _uebernahmeVon_KesBehoerde = value;
                    FixupUebernahmeVon_KesBehoerde(previousValue);
                    OnNavigationPropertyChanged("UebernahmeVon_KesBehoerde");
                }
            }
        }
        private KesBehoerde _uebernahmeVon_KesBehoerde;
    
        [DataMember]
        public KesBehoerde UebertragungAn_KesBehoerde
        {
            get { return _uebertragungAn_KesBehoerde; }
            set
            {
                if (!ReferenceEquals(_uebertragungAn_KesBehoerde, value))
                {
                    var previousValue = _uebertragungAn_KesBehoerde;
                    _uebertragungAn_KesBehoerde = value;
                    FixupUebertragungAn_KesBehoerde(previousValue);
                    OnNavigationPropertyChanged("UebertragungAn_KesBehoerde");
                }
            }
        }
        private KesBehoerde _uebertragungAn_KesBehoerde;
    
        [DataMember]
        public KesBehoerde Zustaendig_KesBehoerde
        {
            get { return _zustaendig_KesBehoerde; }
            set
            {
                if (!ReferenceEquals(_zustaendig_KesBehoerde, value))
                {
                    var previousValue = _zustaendig_KesBehoerde;
                    _zustaendig_KesBehoerde = value;
                    FixupZustaendig_KesBehoerde(previousValue);
                    OnNavigationPropertyChanged("Zustaendig_KesBehoerde");
                }
            }
        }
        private KesBehoerde _zustaendig_KesBehoerde;
    
        [DataMember]
        public BaInstitution BaInstitution
        {
            get { return _baInstitution; }
            set
            {
                if (!ReferenceEquals(_baInstitution, value))
                {
                    var previousValue = _baInstitution;
                    _baInstitution = value;
                    FixupBaInstitution(previousValue);
                    OnNavigationPropertyChanged("BaInstitution");
                }
            }
        }
        private BaInstitution _baInstitution;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FaLeistung = null;
            KesMassnahme_KesArtikel.Clear();
            KesMandatsfuehrendePerson.Clear();
            KesMassnahmeBericht.Clear();
            KesMassnahmeAuftrag.Clear();
            UebernahmeVon_KesBehoerde = null;
            UebertragungAn_KesBehoerde = null;
            Zustaendig_KesBehoerde = null;
            BaInstitution = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFaLeistung(FaLeistung previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme.Contains(this))
            {
                previousValue.KesMassnahme.Remove(this);
            }
    
            if (FaLeistung != null)
            {
                if (!FaLeistung.KesMassnahme.Contains(this))
                {
                    FaLeistung.KesMassnahme.Add(this);
                }
    
                FaLeistungID = FaLeistung.FaLeistungID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FaLeistung")
                    && (ChangeTracker.OriginalValues["FaLeistung"] == FaLeistung))
                {
                    ChangeTracker.OriginalValues.Remove("FaLeistung");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FaLeistung", previousValue);
                }
                if (FaLeistung != null && !FaLeistung.ChangeTracker.ChangeTrackingEnabled)
                {
                    FaLeistung.StartTracking();
                }
            }
        }
    
        private void FixupUebernahmeVon_KesBehoerde(KesBehoerde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme_UebernahmeVon.Contains(this))
            {
                previousValue.KesMassnahme_UebernahmeVon.Remove(this);
            }
    
            if (UebernahmeVon_KesBehoerde != null)
            {
                if (!UebernahmeVon_KesBehoerde.KesMassnahme_UebernahmeVon.Contains(this))
                {
                    UebernahmeVon_KesBehoerde.KesMassnahme_UebernahmeVon.Add(this);
                }
    
                UebernahmeVon_KesBehoerdeID = UebernahmeVon_KesBehoerde.KesBehoerdeID;
            }
            else if (!skipKeys)
            {
                UebernahmeVon_KesBehoerdeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("UebernahmeVon_KesBehoerde")
                    && (ChangeTracker.OriginalValues["UebernahmeVon_KesBehoerde"] == UebernahmeVon_KesBehoerde))
                {
                    ChangeTracker.OriginalValues.Remove("UebernahmeVon_KesBehoerde");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("UebernahmeVon_KesBehoerde", previousValue);
                }
                if (UebernahmeVon_KesBehoerde != null && !UebernahmeVon_KesBehoerde.ChangeTracker.ChangeTrackingEnabled)
                {
                    UebernahmeVon_KesBehoerde.StartTracking();
                }
            }
        }
    
        private void FixupUebertragungAn_KesBehoerde(KesBehoerde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme_UebertragungAn.Contains(this))
            {
                previousValue.KesMassnahme_UebertragungAn.Remove(this);
            }
    
            if (UebertragungAn_KesBehoerde != null)
            {
                if (!UebertragungAn_KesBehoerde.KesMassnahme_UebertragungAn.Contains(this))
                {
                    UebertragungAn_KesBehoerde.KesMassnahme_UebertragungAn.Add(this);
                }
    
                UebertragungAn_KesBehoerdeID = UebertragungAn_KesBehoerde.KesBehoerdeID;
            }
            else if (!skipKeys)
            {
                UebertragungAn_KesBehoerdeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("UebertragungAn_KesBehoerde")
                    && (ChangeTracker.OriginalValues["UebertragungAn_KesBehoerde"] == UebertragungAn_KesBehoerde))
                {
                    ChangeTracker.OriginalValues.Remove("UebertragungAn_KesBehoerde");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("UebertragungAn_KesBehoerde", previousValue);
                }
                if (UebertragungAn_KesBehoerde != null && !UebertragungAn_KesBehoerde.ChangeTracker.ChangeTrackingEnabled)
                {
                    UebertragungAn_KesBehoerde.StartTracking();
                }
            }
        }
    
        private void FixupZustaendig_KesBehoerde(KesBehoerde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme_Zustaendig.Contains(this))
            {
                previousValue.KesMassnahme_Zustaendig.Remove(this);
            }
    
            if (Zustaendig_KesBehoerde != null)
            {
                if (!Zustaendig_KesBehoerde.KesMassnahme_Zustaendig.Contains(this))
                {
                    Zustaendig_KesBehoerde.KesMassnahme_Zustaendig.Add(this);
                }
    
                Zustaendig_KesBehoerdeID = Zustaendig_KesBehoerde.KesBehoerdeID;
            }
            else if (!skipKeys)
            {
                Zustaendig_KesBehoerdeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zustaendig_KesBehoerde")
                    && (ChangeTracker.OriginalValues["Zustaendig_KesBehoerde"] == Zustaendig_KesBehoerde))
                {
                    ChangeTracker.OriginalValues.Remove("Zustaendig_KesBehoerde");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zustaendig_KesBehoerde", previousValue);
                }
                if (Zustaendig_KesBehoerde != null && !Zustaendig_KesBehoerde.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zustaendig_KesBehoerde.StartTracking();
                }
            }
        }
    
        private void FixupBaInstitution(BaInstitution previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme.Contains(this))
            {
                previousValue.KesMassnahme.Remove(this);
            }
    
            if (BaInstitution != null)
            {
                if (!BaInstitution.KesMassnahme.Contains(this))
                {
                    BaInstitution.KesMassnahme.Add(this);
                }
    
                Platzierung_BaInstitutionID = BaInstitution.BaInstitutionID;
            }
            else if (!skipKeys)
            {
                Platzierung_BaInstitutionID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaInstitution")
                    && (ChangeTracker.OriginalValues["BaInstitution"] == BaInstitution))
                {
                    ChangeTracker.OriginalValues.Remove("BaInstitution");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaInstitution", previousValue);
                }
                if (BaInstitution != null && !BaInstitution.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaInstitution.StartTracking();
                }
            }
        }
    
        private void FixupKesMassnahme_KesArtikel(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahme_KesArtikel item in e.NewItems)
                {
                    item.KesMassnahme = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahme_KesArtikel", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahme_KesArtikel item in e.OldItems)
                {
                    if (ReferenceEquals(item.KesMassnahme, this))
                    {
                        item.KesMassnahme = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahme_KesArtikel", item);
                    }
                }
            }
        }
    
        private void FixupKesMandatsfuehrendePerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.NewItems)
                {
                    item.KesMassnahme = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.KesMassnahme, this))
                    {
                        item.KesMassnahme = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeBericht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeBericht item in e.NewItems)
                {
                    item.KesMassnahme = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeBericht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeBericht item in e.OldItems)
                {
                    if (ReferenceEquals(item.KesMassnahme, this))
                    {
                        item.KesMassnahme = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeBericht", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeAuftrag(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.NewItems)
                {
                    item.KesMassnahme = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeAuftrag", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.KesMassnahme, this))
                    {
                        item.KesMassnahme = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeAuftrag", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (KesMassnahme)obj;
    		if (!_kesMassnahmeID.Equals(entity.KesMassnahmeID) || _kesMassnahmeID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _kesMassnahmeID.GetHashCode();
        }

        #endregion

    }
}
