//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    public partial class HistoryVersion: EntityBase<HistoryVersion>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int VerID
        {
            get { return _verID; }
            set
            {
                if (_verID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'VerID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _verID = value;
                    OnPropertyChanged("VerID");
                }
            }
        }
        private int _verID;
    
        [DataMember]
        public System.DateTime VersionDate
        {
            get { return _versionDate; }
            set
            {
                if (_versionDate != value)
                {
                    _versionDate = value;
                    OnPropertyChanged("VersionDate");
                }
            }
        }
        private System.DateTime _versionDate;
    
        [DataMember]
        public string HostName
        {
            get { return _hostName; }
            set
            {
                if (_hostName != value)
                {
                    _hostName = value;
                    OnPropertyChanged("HostName");
                }
            }
        }
        private string _hostName;
    
        [DataMember]
        public string SystemUser
        {
            get { return _systemUser; }
            set
            {
                if (_systemUser != value)
                {
                    _systemUser = value;
                    OnPropertyChanged("SystemUser");
                }
            }
        }
        private string _systemUser;
    
        [DataMember]
        public string AppName
        {
            get { return _appName; }
            set
            {
                if (_appName != value)
                {
                    _appName = value;
                    OnPropertyChanged("AppName");
                }
            }
        }
        private string _appName;
    
        [DataMember]
        public string dbUser
        {
            get { return _dbUser; }
            set
            {
                if (_dbUser != value)
                {
                    _dbUser = value;
                    OnPropertyChanged("dbUser");
                }
            }
        }
        private string _dbUser;
    
        [DataMember]
        public int SessionID
        {
            get { return _sessionID; }
            set
            {
                if (_sessionID != value)
                {
                    _sessionID = value;
                    OnPropertyChanged("SessionID");
                }
            }
        }
        private int _sessionID;
    
        [DataMember]
        public string AppUser
        {
            get { return _appUser; }
            set
            {
                if (_appUser != value)
                {
                    _appUser = value;
                    OnPropertyChanged("AppUser");
                }
            }
        }
        private string _appUser;
    
        [DataMember]
        public string UserAction
        {
            get { return _userAction; }
            set
            {
                if (_userAction != value)
                {
                    _userAction = value;
                    OnPropertyChanged("UserAction");
                }
            }
        }
        private string _userAction;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (HistoryVersion)obj;
    		if (!_verID.Equals(entity.VerID) || _verID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _verID.GetHashCode();
        }

        #endregion

    }
}
