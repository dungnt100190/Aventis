//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(KesArtikel))]
    [KnownType(typeof(KesMassnahme))]
    public partial class KesMassnahme_KesArtikel: EntityBase<KesMassnahme_KesArtikel>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int KesMassnahme_KesArtikelID
        {
            get { return _kesMassnahme_KesArtikelID; }
            set
            {
                if (_kesMassnahme_KesArtikelID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'KesMassnahme_KesArtikelID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _kesMassnahme_KesArtikelID = value;
                    OnPropertyChanged("KesMassnahme_KesArtikelID");
                }
            }
        }
        private int _kesMassnahme_KesArtikelID;
    
        [DataMember]
        public int KesMassnahmeID
        {
            get { return _kesMassnahmeID; }
            set
            {
                if (_kesMassnahmeID != value)
                {
                    ChangeTracker.RecordOriginalValue("KesMassnahmeID", _kesMassnahmeID);
                    if (!IsDeserializing)
                    {
                        if (KesMassnahme != null && KesMassnahme.KesMassnahmeID != value)
                        {
                            KesMassnahme = null;
                        }
                    }
                    _kesMassnahmeID = value;
                    OnPropertyChanged("KesMassnahmeID");
                }
            }
        }
        private int _kesMassnahmeID;
    
        [DataMember]
        public int KesArtikelID
        {
            get { return _kesArtikelID; }
            set
            {
                if (_kesArtikelID != value)
                {
                    ChangeTracker.RecordOriginalValue("KesArtikelID", _kesArtikelID);
                    if (!IsDeserializing)
                    {
                        if (KesArtikel != null && KesArtikel.KesArtikelID != value)
                        {
                            KesArtikel = null;
                        }
                    }
                    _kesArtikelID = value;
                    OnPropertyChanged("KesArtikelID");
                }
            }
        }
        private int _kesArtikelID;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] KesMassnahme_KesArtikelTS
        {
            get { return _kesMassnahme_KesArtikelTS; }
            set
            {
                if (_kesMassnahme_KesArtikelTS != value)
                {
                    _kesMassnahme_KesArtikelTS = value;
                    OnPropertyChanged("KesMassnahme_KesArtikelTS");
                }
            }
        }
        private byte[] _kesMassnahme_KesArtikelTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public KesArtikel KesArtikel
        {
            get { return _kesArtikel; }
            set
            {
                if (!ReferenceEquals(_kesArtikel, value))
                {
                    var previousValue = _kesArtikel;
                    _kesArtikel = value;
                    FixupKesArtikel(previousValue);
                    OnNavigationPropertyChanged("KesArtikel");
                }
            }
        }
        private KesArtikel _kesArtikel;
    
        [DataMember]
        public KesMassnahme KesMassnahme
        {
            get { return _kesMassnahme; }
            set
            {
                if (!ReferenceEquals(_kesMassnahme, value))
                {
                    var previousValue = _kesMassnahme;
                    _kesMassnahme = value;
                    FixupKesMassnahme(previousValue);
                    OnNavigationPropertyChanged("KesMassnahme");
                }
            }
        }
        private KesMassnahme _kesMassnahme;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            KesArtikel = null;
            KesMassnahme = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupKesArtikel(KesArtikel previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme_KesArtikel.Contains(this))
            {
                previousValue.KesMassnahme_KesArtikel.Remove(this);
            }
    
            if (KesArtikel != null)
            {
                if (!KesArtikel.KesMassnahme_KesArtikel.Contains(this))
                {
                    KesArtikel.KesMassnahme_KesArtikel.Add(this);
                }
    
                KesArtikelID = KesArtikel.KesArtikelID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("KesArtikel")
                    && (ChangeTracker.OriginalValues["KesArtikel"] == KesArtikel))
                {
                    ChangeTracker.OriginalValues.Remove("KesArtikel");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("KesArtikel", previousValue);
                }
                if (KesArtikel != null && !KesArtikel.ChangeTracker.ChangeTrackingEnabled)
                {
                    KesArtikel.StartTracking();
                }
            }
        }
    
        private void FixupKesMassnahme(KesMassnahme previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.KesMassnahme_KesArtikel.Contains(this))
            {
                previousValue.KesMassnahme_KesArtikel.Remove(this);
            }
    
            if (KesMassnahme != null)
            {
                if (!KesMassnahme.KesMassnahme_KesArtikel.Contains(this))
                {
                    KesMassnahme.KesMassnahme_KesArtikel.Add(this);
                }
    
                KesMassnahmeID = KesMassnahme.KesMassnahmeID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("KesMassnahme")
                    && (ChangeTracker.OriginalValues["KesMassnahme"] == KesMassnahme))
                {
                    ChangeTracker.OriginalValues.Remove("KesMassnahme");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("KesMassnahme", previousValue);
                }
                if (KesMassnahme != null && !KesMassnahme.ChangeTracker.ChangeTrackingEnabled)
                {
                    KesMassnahme.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (KesMassnahme_KesArtikel)obj;
    		if (!_kesMassnahme_KesArtikelID.Equals(entity.KesMassnahme_KesArtikelID) || _kesMassnahme_KesArtikelID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _kesMassnahme_KesArtikelID.GetHashCode();
        }

        #endregion

    }
}
