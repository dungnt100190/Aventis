//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FaDokumente))]
    [KnownType(typeof(FaWeisung))]
    [KnownType(typeof(FaDokumentAblage))]
    [KnownType(typeof(KesDokument))]
    [KnownType(typeof(KesMassnahmeBericht))]
    [KnownType(typeof(KesMassnahmeAuftrag))]
    public partial class XDocument: EntityBase<XDocument>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int DocumentID
        {
            get { return _documentID; }
            set
            {
                if (_documentID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DocumentID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _documentID = value;
                    OnPropertyChanged("DocumentID");
                }
            }
        }
        private int _documentID;
    
        [DataMember]
        public System.DateTime DateCreation
        {
            get { return _dateCreation; }
            set
            {
                if (_dateCreation != value)
                {
                    _dateCreation = value;
                    OnPropertyChanged("DateCreation");
                }
            }
        }
        private System.DateTime _dateCreation;
    
        [DataMember]
        public Nullable<int> UserID_Creator
        {
            get { return _userID_Creator; }
            set
            {
                if (_userID_Creator != value)
                {
                    _userID_Creator = value;
                    OnPropertyChanged("UserID_Creator");
                }
            }
        }
        private Nullable<int> _userID_Creator;
    
        [DataMember]
        public System.DateTime DateLastSave
        {
            get { return _dateLastSave; }
            set
            {
                if (_dateLastSave != value)
                {
                    _dateLastSave = value;
                    OnPropertyChanged("DateLastSave");
                }
            }
        }
        private System.DateTime _dateLastSave;
    
        [DataMember]
        public Nullable<int> UserID_LastSave
        {
            get { return _userID_LastSave; }
            set
            {
                if (_userID_LastSave != value)
                {
                    _userID_LastSave = value;
                    OnPropertyChanged("UserID_LastSave");
                }
            }
        }
        private Nullable<int> _userID_LastSave;
    
        [DataMember]
        public byte[] FileBinary
        {
            get { return _fileBinary; }
            set
            {
                if (_fileBinary != value)
                {
                    _fileBinary = value;
                    OnPropertyChanged("FileBinary");
                }
            }
        }
        private byte[] _fileBinary;
    
        [DataMember]
        public Nullable<int> DocFormatCode
        {
            get { return _docFormatCode; }
            set
            {
                if (_docFormatCode != value)
                {
                    _docFormatCode = value;
                    OnPropertyChanged("DocFormatCode");
                }
            }
        }
        private Nullable<int> _docFormatCode;
    
        [DataMember]
        public string FileExtension
        {
            get { return _fileExtension; }
            set
            {
                if (_fileExtension != value)
                {
                    _fileExtension = value;
                    OnPropertyChanged("FileExtension");
                }
            }
        }
        private string _fileExtension;
    
        [DataMember]
        public bool DocReadOnly
        {
            get { return _docReadOnly; }
            set
            {
                if (_docReadOnly != value)
                {
                    _docReadOnly = value;
                    OnPropertyChanged("DocReadOnly");
                }
            }
        }
        private bool _docReadOnly;
    
        [DataMember]
        public Nullable<int> DocTemplateID
        {
            get { return _docTemplateID; }
            set
            {
                if (_docTemplateID != value)
                {
                    _docTemplateID = value;
                    OnPropertyChanged("DocTemplateID");
                }
            }
        }
        private Nullable<int> _docTemplateID;
    
        [DataMember]
        public byte[] XDocumentTS
        {
            get { return _xDocumentTS; }
            set
            {
                if (_xDocumentTS != value)
                {
                    _xDocumentTS = value;
                    OnPropertyChanged("XDocumentTS");
                }
            }
        }
        private byte[] _xDocumentTS;
    
        [DataMember]
        public Nullable<int> DocTypeCode
        {
            get { return _docTypeCode; }
            set
            {
                if (_docTypeCode != value)
                {
                    _docTypeCode = value;
                    OnPropertyChanged("DocTypeCode");
                }
            }
        }
        private Nullable<int> _docTypeCode;
    
        [DataMember]
        public string DocTemplateName
        {
            get { return _docTemplateName; }
            set
            {
                if (_docTemplateName != value)
                {
                    _docTemplateName = value;
                    OnPropertyChanged("DocTemplateName");
                }
            }
        }
        private string _docTemplateName;
    
        [DataMember]
        public Nullable<int> CheckOut_UserID
        {
            get { return _checkOut_UserID; }
            set
            {
                if (_checkOut_UserID != value)
                {
                    _checkOut_UserID = value;
                    OnPropertyChanged("CheckOut_UserID");
                }
            }
        }
        private Nullable<int> _checkOut_UserID;
    
        [DataMember]
        public Nullable<System.DateTime> CheckOut_Date
        {
            get { return _checkOut_Date; }
            set
            {
                if (_checkOut_Date != value)
                {
                    _checkOut_Date = value;
                    OnPropertyChanged("CheckOut_Date");
                }
            }
        }
        private Nullable<System.DateTime> _checkOut_Date;
    
        [DataMember]
        public string CheckOut_Filename
        {
            get { return _checkOut_Filename; }
            set
            {
                if (_checkOut_Filename != value)
                {
                    _checkOut_Filename = value;
                    OnPropertyChanged("CheckOut_Filename");
                }
            }
        }
        private string _checkOut_Filename;
    
        [DataMember]
        public string CheckOut_Machine
        {
            get { return _checkOut_Machine; }
            set
            {
                if (_checkOut_Machine != value)
                {
                    _checkOut_Machine = value;
                    OnPropertyChanged("CheckOut_Machine");
                }
            }
        }
        private string _checkOut_Machine;
    
        [DataMember]
        public Nullable<int> UserID_LastRead
        {
            get { return _userID_LastRead; }
            set
            {
                if (_userID_LastRead != value)
                {
                    _userID_LastRead = value;
                    OnPropertyChanged("UserID_LastRead");
                }
            }
        }
        private Nullable<int> _userID_LastRead;
    
        [DataMember]
        public Nullable<System.DateTime> DateLastRead
        {
            get { return _dateLastRead; }
            set
            {
                if (_dateLastRead != value)
                {
                    _dateLastRead = value;
                    OnPropertyChanged("DateLastRead");
                }
            }
        }
        private Nullable<System.DateTime> _dateLastRead;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente
        {
            get
            {
                if (_faDokumente == null)
                {
                    _faDokumente = new TrackableCollection<FaDokumente>();
                    _faDokumente.CollectionChanged += FixupFaDokumente;
                }
                return _faDokumente;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged -= FixupFaDokumente;
                    }
                    _faDokumente = value;
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged += FixupFaDokumente;
                    }
                    OnNavigationPropertyChanged("FaDokumente");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung
        {
            get
            {
                if (_faWeisung == null)
                {
                    _faWeisung = new TrackableCollection<FaWeisung>();
                    _faWeisung.CollectionChanged += FixupFaWeisung;
                }
                return _faWeisung;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung != null)
                    {
                        _faWeisung.CollectionChanged -= FixupFaWeisung;
                    }
                    _faWeisung = value;
                    if (_faWeisung != null)
                    {
                        _faWeisung.CollectionChanged += FixupFaWeisung;
                    }
                    OnNavigationPropertyChanged("FaWeisung");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_Mahnung1
        {
            get
            {
                if (_faWeisung_Mahnung1 == null)
                {
                    _faWeisung_Mahnung1 = new TrackableCollection<FaWeisung>();
                    _faWeisung_Mahnung1.CollectionChanged += FixupFaWeisung_Mahnung1;
                }
                return _faWeisung_Mahnung1;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_Mahnung1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_Mahnung1 != null)
                    {
                        _faWeisung_Mahnung1.CollectionChanged -= FixupFaWeisung_Mahnung1;
                    }
                    _faWeisung_Mahnung1 = value;
                    if (_faWeisung_Mahnung1 != null)
                    {
                        _faWeisung_Mahnung1.CollectionChanged += FixupFaWeisung_Mahnung1;
                    }
                    OnNavigationPropertyChanged("FaWeisung_Mahnung1");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_Mahnung1;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_Mahnung2
        {
            get
            {
                if (_faWeisung_Mahnung2 == null)
                {
                    _faWeisung_Mahnung2 = new TrackableCollection<FaWeisung>();
                    _faWeisung_Mahnung2.CollectionChanged += FixupFaWeisung_Mahnung2;
                }
                return _faWeisung_Mahnung2;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_Mahnung2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_Mahnung2 != null)
                    {
                        _faWeisung_Mahnung2.CollectionChanged -= FixupFaWeisung_Mahnung2;
                    }
                    _faWeisung_Mahnung2 = value;
                    if (_faWeisung_Mahnung2 != null)
                    {
                        _faWeisung_Mahnung2.CollectionChanged += FixupFaWeisung_Mahnung2;
                    }
                    OnNavigationPropertyChanged("FaWeisung_Mahnung2");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_Mahnung2;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_Mahnung3
        {
            get
            {
                if (_faWeisung_Mahnung3 == null)
                {
                    _faWeisung_Mahnung3 = new TrackableCollection<FaWeisung>();
                    _faWeisung_Mahnung3.CollectionChanged += FixupFaWeisung_Mahnung3;
                }
                return _faWeisung_Mahnung3;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_Mahnung3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_Mahnung3 != null)
                    {
                        _faWeisung_Mahnung3.CollectionChanged -= FixupFaWeisung_Mahnung3;
                    }
                    _faWeisung_Mahnung3 = value;
                    if (_faWeisung_Mahnung3 != null)
                    {
                        _faWeisung_Mahnung3.CollectionChanged += FixupFaWeisung_Mahnung3;
                    }
                    OnNavigationPropertyChanged("FaWeisung_Mahnung3");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_Mahnung3;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_Verfuegung
        {
            get
            {
                if (_faWeisung_Verfuegung == null)
                {
                    _faWeisung_Verfuegung = new TrackableCollection<FaWeisung>();
                    _faWeisung_Verfuegung.CollectionChanged += FixupFaWeisung_Verfuegung;
                }
                return _faWeisung_Verfuegung;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_Verfuegung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_Verfuegung != null)
                    {
                        _faWeisung_Verfuegung.CollectionChanged -= FixupFaWeisung_Verfuegung;
                    }
                    _faWeisung_Verfuegung = value;
                    if (_faWeisung_Verfuegung != null)
                    {
                        _faWeisung_Verfuegung.CollectionChanged += FixupFaWeisung_Verfuegung;
                    }
                    OnNavigationPropertyChanged("FaWeisung_Verfuegung");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_Verfuegung;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_Merkblatt
        {
            get
            {
                if (_faDokumente_Merkblatt == null)
                {
                    _faDokumente_Merkblatt = new TrackableCollection<FaDokumente>();
                    _faDokumente_Merkblatt.CollectionChanged += FixupFaDokumente_Merkblatt;
                }
                return _faDokumente_Merkblatt;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_Merkblatt, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_Merkblatt != null)
                    {
                        _faDokumente_Merkblatt.CollectionChanged -= FixupFaDokumente_Merkblatt;
                    }
                    _faDokumente_Merkblatt = value;
                    if (_faDokumente_Merkblatt != null)
                    {
                        _faDokumente_Merkblatt.CollectionChanged += FixupFaDokumente_Merkblatt;
                    }
                    OnNavigationPropertyChanged("FaDokumente_Merkblatt");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_Merkblatt;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage> FaDokumentAblage
        {
            get
            {
                if (_faDokumentAblage == null)
                {
                    _faDokumentAblage = new TrackableCollection<FaDokumentAblage>();
                    _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                }
                return _faDokumentAblage;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged -= FixupFaDokumentAblage;
                    }
                    _faDokumentAblage = value;
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage> _faDokumentAblage;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument1
        {
            get
            {
                if (_kesDokument1 == null)
                {
                    _kesDokument1 = new TrackableCollection<KesDokument>();
                    _kesDokument1.CollectionChanged += FixupKesDokument1;
                }
                return _kesDokument1;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument1 != null)
                    {
                        _kesDokument1.CollectionChanged -= FixupKesDokument1;
                    }
                    _kesDokument1 = value;
                    if (_kesDokument1 != null)
                    {
                        _kesDokument1.CollectionChanged += FixupKesDokument1;
                    }
                    OnNavigationPropertyChanged("KesDokument1");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument1;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument
        {
            get
            {
                if (_kesDokument == null)
                {
                    _kesDokument = new TrackableCollection<KesDokument>();
                    _kesDokument.CollectionChanged += FixupKesDokument;
                }
                return _kesDokument;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged -= FixupKesDokument;
                    }
                    _kesDokument = value;
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged += FixupKesDokument;
                    }
                    OnNavigationPropertyChanged("KesDokument");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeBericht> KesMassnahmeBericht
        {
            get
            {
                if (_kesMassnahmeBericht == null)
                {
                    _kesMassnahmeBericht = new TrackableCollection<KesMassnahmeBericht>();
                    _kesMassnahmeBericht.CollectionChanged += FixupKesMassnahmeBericht;
                }
                return _kesMassnahmeBericht;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeBericht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeBericht != null)
                    {
                        _kesMassnahmeBericht.CollectionChanged -= FixupKesMassnahmeBericht;
                    }
                    _kesMassnahmeBericht = value;
                    if (_kesMassnahmeBericht != null)
                    {
                        _kesMassnahmeBericht.CollectionChanged += FixupKesMassnahmeBericht;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeBericht");
                }
            }
        }
        private TrackableCollection<KesMassnahmeBericht> _kesMassnahmeBericht;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeBericht> KesMassnahmeBerichtVerfuegungKesb
        {
            get
            {
                if (_kesMassnahmeBerichtVerfuegungKesb == null)
                {
                    _kesMassnahmeBerichtVerfuegungKesb = new TrackableCollection<KesMassnahmeBericht>();
                    _kesMassnahmeBerichtVerfuegungKesb.CollectionChanged += FixupKesMassnahmeBerichtVerfuegungKesb;
                }
                return _kesMassnahmeBerichtVerfuegungKesb;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeBerichtVerfuegungKesb, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeBerichtVerfuegungKesb != null)
                    {
                        _kesMassnahmeBerichtVerfuegungKesb.CollectionChanged -= FixupKesMassnahmeBerichtVerfuegungKesb;
                    }
                    _kesMassnahmeBerichtVerfuegungKesb = value;
                    if (_kesMassnahmeBerichtVerfuegungKesb != null)
                    {
                        _kesMassnahmeBerichtVerfuegungKesb.CollectionChanged += FixupKesMassnahmeBerichtVerfuegungKesb;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeBerichtVerfuegungKesb");
                }
            }
        }
        private TrackableCollection<KesMassnahmeBericht> _kesMassnahmeBerichtVerfuegungKesb;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeBericht> KesMassnahmeBerichtVersand
        {
            get
            {
                if (_kesMassnahmeBerichtVersand == null)
                {
                    _kesMassnahmeBerichtVersand = new TrackableCollection<KesMassnahmeBericht>();
                    _kesMassnahmeBerichtVersand.CollectionChanged += FixupKesMassnahmeBerichtVersand;
                }
                return _kesMassnahmeBerichtVersand;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeBerichtVersand, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeBerichtVersand != null)
                    {
                        _kesMassnahmeBerichtVersand.CollectionChanged -= FixupKesMassnahmeBerichtVersand;
                    }
                    _kesMassnahmeBerichtVersand = value;
                    if (_kesMassnahmeBerichtVersand != null)
                    {
                        _kesMassnahmeBerichtVersand.CollectionChanged += FixupKesMassnahmeBerichtVersand;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeBerichtVersand");
                }
            }
        }
        private TrackableCollection<KesMassnahmeBericht> _kesMassnahmeBerichtVersand;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeBericht> KesMassnahmeBerichtRechnung
        {
            get
            {
                if (_kesMassnahmeBerichtRechnung == null)
                {
                    _kesMassnahmeBerichtRechnung = new TrackableCollection<KesMassnahmeBericht>();
                    _kesMassnahmeBerichtRechnung.CollectionChanged += FixupKesMassnahmeBerichtRechnung;
                }
                return _kesMassnahmeBerichtRechnung;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeBerichtRechnung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeBerichtRechnung != null)
                    {
                        _kesMassnahmeBerichtRechnung.CollectionChanged -= FixupKesMassnahmeBerichtRechnung;
                    }
                    _kesMassnahmeBerichtRechnung = value;
                    if (_kesMassnahmeBerichtRechnung != null)
                    {
                        _kesMassnahmeBerichtRechnung.CollectionChanged += FixupKesMassnahmeBerichtRechnung;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeBerichtRechnung");
                }
            }
        }
        private TrackableCollection<KesMassnahmeBericht> _kesMassnahmeBerichtRechnung;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeAuftrag> KesMassnahmeAuftragBericht
        {
            get
            {
                if (_kesMassnahmeAuftragBericht == null)
                {
                    _kesMassnahmeAuftragBericht = new TrackableCollection<KesMassnahmeAuftrag>();
                    _kesMassnahmeAuftragBericht.CollectionChanged += FixupKesMassnahmeAuftragBericht;
                }
                return _kesMassnahmeAuftragBericht;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeAuftragBericht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeAuftragBericht != null)
                    {
                        _kesMassnahmeAuftragBericht.CollectionChanged -= FixupKesMassnahmeAuftragBericht;
                    }
                    _kesMassnahmeAuftragBericht = value;
                    if (_kesMassnahmeAuftragBericht != null)
                    {
                        _kesMassnahmeAuftragBericht.CollectionChanged += FixupKesMassnahmeAuftragBericht;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeAuftragBericht");
                }
            }
        }
        private TrackableCollection<KesMassnahmeAuftrag> _kesMassnahmeAuftragBericht;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeAuftrag> KesMassnahmeAuftragBeschluss
        {
            get
            {
                if (_kesMassnahmeAuftragBeschluss == null)
                {
                    _kesMassnahmeAuftragBeschluss = new TrackableCollection<KesMassnahmeAuftrag>();
                    _kesMassnahmeAuftragBeschluss.CollectionChanged += FixupKesMassnahmeAuftragBeschluss;
                }
                return _kesMassnahmeAuftragBeschluss;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeAuftragBeschluss, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeAuftragBeschluss != null)
                    {
                        _kesMassnahmeAuftragBeschluss.CollectionChanged -= FixupKesMassnahmeAuftragBeschluss;
                    }
                    _kesMassnahmeAuftragBeschluss = value;
                    if (_kesMassnahmeAuftragBeschluss != null)
                    {
                        _kesMassnahmeAuftragBeschluss.CollectionChanged += FixupKesMassnahmeAuftragBeschluss;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeAuftragBeschluss");
                }
            }
        }
        private TrackableCollection<KesMassnahmeAuftrag> _kesMassnahmeAuftragBeschluss;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeAuftrag> KesMassnahmeAuftragVerfuegungKesb
        {
            get
            {
                if (_kesMassnahmeAuftragVerfuegungKesb == null)
                {
                    _kesMassnahmeAuftragVerfuegungKesb = new TrackableCollection<KesMassnahmeAuftrag>();
                    _kesMassnahmeAuftragVerfuegungKesb.CollectionChanged += FixupKesMassnahmeAuftragVerfuegungKesb;
                }
                return _kesMassnahmeAuftragVerfuegungKesb;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeAuftragVerfuegungKesb, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeAuftragVerfuegungKesb != null)
                    {
                        _kesMassnahmeAuftragVerfuegungKesb.CollectionChanged -= FixupKesMassnahmeAuftragVerfuegungKesb;
                    }
                    _kesMassnahmeAuftragVerfuegungKesb = value;
                    if (_kesMassnahmeAuftragVerfuegungKesb != null)
                    {
                        _kesMassnahmeAuftragVerfuegungKesb.CollectionChanged += FixupKesMassnahmeAuftragVerfuegungKesb;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeAuftragVerfuegungKesb");
                }
            }
        }
        private TrackableCollection<KesMassnahmeAuftrag> _kesMassnahmeAuftragVerfuegungKesb;
    
        [DataMember]
        public TrackableCollection<KesMassnahmeAuftrag> KesMassnahmeAuftragVersand
        {
            get
            {
                if (_kesMassnahmeAuftragVersand == null)
                {
                    _kesMassnahmeAuftragVersand = new TrackableCollection<KesMassnahmeAuftrag>();
                    _kesMassnahmeAuftragVersand.CollectionChanged += FixupKesMassnahmeAuftragVersand;
                }
                return _kesMassnahmeAuftragVersand;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahmeAuftragVersand, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahmeAuftragVersand != null)
                    {
                        _kesMassnahmeAuftragVersand.CollectionChanged -= FixupKesMassnahmeAuftragVersand;
                    }
                    _kesMassnahmeAuftragVersand = value;
                    if (_kesMassnahmeAuftragVersand != null)
                    {
                        _kesMassnahmeAuftragVersand.CollectionChanged += FixupKesMassnahmeAuftragVersand;
                    }
                    OnNavigationPropertyChanged("KesMassnahmeAuftragVersand");
                }
            }
        }
        private TrackableCollection<KesMassnahmeAuftrag> _kesMassnahmeAuftragVersand;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FaDokumente.Clear();
            FaWeisung.Clear();
            FaWeisung_Mahnung1.Clear();
            FaWeisung_Mahnung2.Clear();
            FaWeisung_Mahnung3.Clear();
            FaWeisung_Verfuegung.Clear();
            FaDokumente_Merkblatt.Clear();
            FaDokumentAblage.Clear();
            KesDokument1.Clear();
            KesDokument.Clear();
            KesMassnahmeBericht.Clear();
            KesMassnahmeBerichtVerfuegungKesb.Clear();
            KesMassnahmeBerichtVersand.Clear();
            KesMassnahmeBerichtRechnung.Clear();
            KesMassnahmeAuftragBericht.Clear();
            KesMassnahmeAuftragBeschluss.Clear();
            KesMassnahmeAuftragVerfuegungKesb.Clear();
            KesMassnahmeAuftragVersand.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupFaDokumente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XDocument = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument, this))
                    {
                        item.XDocument = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XDocument_Weisung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Weisung, this))
                    {
                        item.XDocument_Weisung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_Mahnung1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XDocument_Mahnung1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_Mahnung1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Mahnung1, this))
                    {
                        item.XDocument_Mahnung1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_Mahnung1", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_Mahnung2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XDocument_Mahnung2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_Mahnung2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Mahnung2, this))
                    {
                        item.XDocument_Mahnung2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_Mahnung2", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_Mahnung3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XDocument_Mahnung3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_Mahnung3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Mahnung3, this))
                    {
                        item.XDocument_Mahnung3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_Mahnung3", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_Verfuegung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XDocument_Verfuegung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_Verfuegung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Verfuegung, this))
                    {
                        item.XDocument_Verfuegung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_Verfuegung", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_Merkblatt(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XDocument_Merkblatt = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_Merkblatt", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument_Merkblatt, this))
                    {
                        item.XDocument_Merkblatt = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_Merkblatt", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage item in e.NewItems)
                {
                    item.XDocument = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocument, this))
                    {
                        item.XDocument = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.XDocumentVersand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentVersand, this))
                    {
                        item.XDocumentVersand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument1", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.XDocumentDokument = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentDokument, this))
                    {
                        item.XDocumentDokument = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeBericht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeBericht item in e.NewItems)
                {
                    item.XDocumentBericht = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeBericht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeBericht item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentBericht, this))
                    {
                        item.XDocumentBericht = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeBericht", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeBerichtVerfuegungKesb(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeBericht item in e.NewItems)
                {
                    item.XDocumentVerfuegungKesb = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeBerichtVerfuegungKesb", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeBericht item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentVerfuegungKesb, this))
                    {
                        item.XDocumentVerfuegungKesb = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeBerichtVerfuegungKesb", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeBerichtVersand(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeBericht item in e.NewItems)
                {
                    item.XDocumentVersand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeBerichtVersand", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeBericht item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentVersand, this))
                    {
                        item.XDocumentVersand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeBerichtVersand", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeBerichtRechnung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeBericht item in e.NewItems)
                {
                    item.XDocumentRechnung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeBerichtRechnung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeBericht item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentRechnung, this))
                    {
                        item.XDocumentRechnung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeBerichtRechnung", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeAuftragBericht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.NewItems)
                {
                    item.XDocumentBericht = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeAuftragBericht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentBericht, this))
                    {
                        item.XDocumentBericht = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeAuftragBericht", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeAuftragBeschluss(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.NewItems)
                {
                    item.XDocumentBeschluss = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeAuftragBeschluss", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentBeschluss, this))
                    {
                        item.XDocumentBeschluss = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeAuftragBeschluss", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeAuftragVerfuegungKesb(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.NewItems)
                {
                    item.XDocumentVerfuegungKesb = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeAuftragVerfuegungKesb", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentVerfuegungKesb, this))
                    {
                        item.XDocumentVerfuegungKesb = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeAuftragVerfuegungKesb", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahmeAuftragVersand(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.NewItems)
                {
                    item.XDocumentVersand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahmeAuftragVersand", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahmeAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.XDocumentVersand, this))
                    {
                        item.XDocumentVersand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahmeAuftragVersand", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (XDocument)obj;
    		if (!_documentID.Equals(entity.DocumentID) || _documentID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _documentID.GetHashCode();
        }

        #endregion

    }
}
