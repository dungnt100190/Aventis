//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FsReduktion))]
    [KnownType(typeof(XUser))]
    public partial class FsReduktionMitarbeiter: EntityBase<FsReduktionMitarbeiter>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int FsReduktionMitarbeiterID
        {
            get { return _fsReduktionMitarbeiterID; }
            set
            {
                if (_fsReduktionMitarbeiterID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FsReduktionMitarbeiterID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _fsReduktionMitarbeiterID = value;
                    OnPropertyChanged("FsReduktionMitarbeiterID");
                }
            }
        }
        private int _fsReduktionMitarbeiterID;
    
        [DataMember]
        public int FsReduktionID
        {
            get { return _fsReduktionID; }
            set
            {
                if (_fsReduktionID != value)
                {
                    ChangeTracker.RecordOriginalValue("FsReduktionID", _fsReduktionID);
                    if (!IsDeserializing)
                    {
                        if (FsReduktion != null && FsReduktion.FsReduktionID != value)
                        {
                            FsReduktion = null;
                        }
                    }
                    _fsReduktionID = value;
                    OnPropertyChanged("FsReduktionID");
                }
            }
        }
        private int _fsReduktionID;
    
        [DataMember]
        public int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    ChangeTracker.RecordOriginalValue("UserID", _userID);
                    if (!IsDeserializing)
                    {
                        if (XUser != null && XUser.UserID != value)
                        {
                            XUser = null;
                        }
                    }
                    _userID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private int _userID;
    
        [DataMember]
        public int Monat
        {
            get { return _monat; }
            set
            {
                if (_monat != value)
                {
                    _monat = value;
                    OnPropertyChanged("Monat");
                }
            }
        }
        private int _monat;
    
        [DataMember]
        public int Jahr
        {
            get { return _jahr; }
            set
            {
                if (_jahr != value)
                {
                    _jahr = value;
                    OnPropertyChanged("Jahr");
                }
            }
        }
        private int _jahr;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] FsReduktionMitarbeiterTS
        {
            get { return _fsReduktionMitarbeiterTS; }
            set
            {
                if (_fsReduktionMitarbeiterTS != value)
                {
                    _fsReduktionMitarbeiterTS = value;
                    OnPropertyChanged("FsReduktionMitarbeiterTS");
                }
            }
        }
        private byte[] _fsReduktionMitarbeiterTS;
    
        [DataMember]
        public decimal OriginalReduktionZeit
        {
            get { return _originalReduktionZeit; }
            set
            {
                if (_originalReduktionZeit != value)
                {
                    _originalReduktionZeit = value;
                    OnPropertyChanged("OriginalReduktionZeit");
                }
            }
        }
        private decimal _originalReduktionZeit;
    
        [DataMember]
        public Nullable<decimal> AngepassteReduktionZeit
        {
            get { return _angepassteReduktionZeit; }
            set
            {
                if (_angepassteReduktionZeit != value)
                {
                    _angepassteReduktionZeit = value;
                    OnPropertyChanged("AngepassteReduktionZeit");
                }
            }
        }
        private Nullable<decimal> _angepassteReduktionZeit;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FsReduktion FsReduktion
        {
            get { return _fsReduktion; }
            set
            {
                if (!ReferenceEquals(_fsReduktion, value))
                {
                    var previousValue = _fsReduktion;
                    _fsReduktion = value;
                    FixupFsReduktion(previousValue);
                    OnNavigationPropertyChanged("FsReduktion");
                }
            }
        }
        private FsReduktion _fsReduktion;
    
        [DataMember]
        public XUser XUser
        {
            get { return _xUser; }
            set
            {
                if (!ReferenceEquals(_xUser, value))
                {
                    var previousValue = _xUser;
                    _xUser = value;
                    FixupXUser(previousValue);
                    OnNavigationPropertyChanged("XUser");
                }
            }
        }
        private XUser _xUser;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FsReduktion = null;
            XUser = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFsReduktion(FsReduktion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FsReduktionMitarbeiter.Contains(this))
            {
                previousValue.FsReduktionMitarbeiter.Remove(this);
            }
    
            if (FsReduktion != null)
            {
                if (!FsReduktion.FsReduktionMitarbeiter.Contains(this))
                {
                    FsReduktion.FsReduktionMitarbeiter.Add(this);
                }
    
                FsReduktionID = FsReduktion.FsReduktionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FsReduktion")
                    && (ChangeTracker.OriginalValues["FsReduktion"] == FsReduktion))
                {
                    ChangeTracker.OriginalValues.Remove("FsReduktion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FsReduktion", previousValue);
                }
                if (FsReduktion != null && !FsReduktion.ChangeTracker.ChangeTrackingEnabled)
                {
                    FsReduktion.StartTracking();
                }
            }
        }
    
        private void FixupXUser(XUser previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FsReduktionMitarbeiter.Contains(this))
            {
                previousValue.FsReduktionMitarbeiter.Remove(this);
            }
    
            if (XUser != null)
            {
                if (!XUser.FsReduktionMitarbeiter.Contains(this))
                {
                    XUser.FsReduktionMitarbeiter.Add(this);
                }
    
                UserID = XUser.UserID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser")
                    && (ChangeTracker.OriginalValues["XUser"] == XUser))
                {
                    ChangeTracker.OriginalValues.Remove("XUser");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser", previousValue);
                }
                if (XUser != null && !XUser.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (FsReduktionMitarbeiter)obj;
    		if (!_fsReduktionMitarbeiterID.Equals(entity.FsReduktionMitarbeiterID) || _fsReduktionMitarbeiterID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _fsReduktionMitarbeiterID.GetHashCode();
        }

        #endregion

    }
}
