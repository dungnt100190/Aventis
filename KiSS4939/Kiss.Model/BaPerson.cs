//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaAdresse))]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(BaInstitution))]
    [KnownType(typeof(BaLand))]
    [KnownType(typeof(FaFall))]
    [KnownType(typeof(BaZahlungsweg))]
    [KnownType(typeof(FbPeriode))]
    [KnownType(typeof(FaDokumente))]
    [KnownType(typeof(XTask))]
    [KnownType(typeof(FaWeisung_BaPerson))]
    [KnownType(typeof(FaKategorisierung))]
    [KnownType(typeof(BaGemeinde))]
    [KnownType(typeof(BaGesundheit))]
    [KnownType(typeof(FaDokumentAblage))]
    [KnownType(typeof(FaDokumentAblage_BaPerson))]
    [KnownType(typeof(BaPerson_Relation))]
    [KnownType(typeof(BaPerson_BaInstitution))]
    [KnownType(typeof(KesAuftrag_BaPerson))]
    [KnownType(typeof(KesDokument))]
    [KnownType(typeof(KesVerlauf))]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(BaEinwohnerregisterPersonStatus))]
    [KnownType(typeof(BaEinwohnerregisterPersonAnAbmeldung))]
    [KnownType(typeof(ServiceProcessError))]
    [KnownType(typeof(FaFallPerson))]
    [KnownType(typeof(BaPraemienverbilligung))]
    public partial class BaPerson: EntityBase<BaPerson>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaPersonID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baPersonID = value;
                    OnPropertyChanged("BaPersonID");
                }
            }
        }
        private int _baPersonID;
    
        [DataMember]
        public string Titel
        {
            get { return _titel; }
            set
            {
                if (_titel != value)
                {
                    _titel = value;
                    OnPropertyChanged("Titel");
                }
            }
        }
        private string _titel;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string FruehererName
        {
            get { return _fruehererName; }
            set
            {
                if (_fruehererName != value)
                {
                    _fruehererName = value;
                    OnPropertyChanged("FruehererName");
                }
            }
        }
        private string _fruehererName;
    
        [DataMember]
        public string Vorname
        {
            get { return _vorname; }
            set
            {
                if (_vorname != value)
                {
                    _vorname = value;
                    OnPropertyChanged("Vorname");
                }
            }
        }
        private string _vorname;
    
        [DataMember]
        public string Vorname2
        {
            get { return _vorname2; }
            set
            {
                if (_vorname2 != value)
                {
                    _vorname2 = value;
                    OnPropertyChanged("Vorname2");
                }
            }
        }
        private string _vorname2;
    
        [DataMember]
        public Nullable<System.DateTime> Geburtsdatum
        {
            get { return _geburtsdatum; }
            set
            {
                if (_geburtsdatum != value)
                {
                    _geburtsdatum = value;
                    OnPropertyChanged("Geburtsdatum");
                }
            }
        }
        private Nullable<System.DateTime> _geburtsdatum;
    
        [DataMember]
        public Nullable<System.DateTime> Sterbedatum
        {
            get { return _sterbedatum; }
            set
            {
                if (_sterbedatum != value)
                {
                    _sterbedatum = value;
                    OnPropertyChanged("Sterbedatum");
                }
            }
        }
        private Nullable<System.DateTime> _sterbedatum;
    
        [DataMember]
        public string AHVNummer
        {
            get { return _aHVNummer; }
            set
            {
                if (_aHVNummer != value)
                {
                    _aHVNummer = value;
                    OnPropertyChanged("AHVNummer");
                }
            }
        }
        private string _aHVNummer;
    
        [DataMember]
        public string Versichertennummer
        {
            get { return _versichertennummer; }
            set
            {
                if (_versichertennummer != value)
                {
                    _versichertennummer = value;
                    OnPropertyChanged("Versichertennummer");
                }
            }
        }
        private string _versichertennummer;
    
        [DataMember]
        public string HaushaltVersicherungsNummer
        {
            get { return _haushaltVersicherungsNummer; }
            set
            {
                if (_haushaltVersicherungsNummer != value)
                {
                    _haushaltVersicherungsNummer = value;
                    OnPropertyChanged("HaushaltVersicherungsNummer");
                }
            }
        }
        private string _haushaltVersicherungsNummer;
    
        [DataMember]
        public string NNummer
        {
            get { return _nNummer; }
            set
            {
                if (_nNummer != value)
                {
                    _nNummer = value;
                    OnPropertyChanged("NNummer");
                }
            }
        }
        private string _nNummer;
    
        [DataMember]
        public string BFFNummer
        {
            get { return _bFFNummer; }
            set
            {
                if (_bFFNummer != value)
                {
                    _bFFNummer = value;
                    OnPropertyChanged("BFFNummer");
                }
            }
        }
        private string _bFFNummer;
    
        [DataMember]
        public Nullable<int> GeschlechtCode
        {
            get { return _geschlechtCode; }
            set
            {
                if (_geschlechtCode != value)
                {
                    _geschlechtCode = value;
                    OnPropertyChanged("GeschlechtCode");
                }
            }
        }
        private Nullable<int> _geschlechtCode;
    
        [DataMember]
        public Nullable<int> KonfessionCode
        {
            get { return _konfessionCode; }
            set
            {
                if (_konfessionCode != value)
                {
                    _konfessionCode = value;
                    OnPropertyChanged("KonfessionCode");
                }
            }
        }
        private Nullable<int> _konfessionCode;
    
        [DataMember]
        public Nullable<int> ZivilstandCode
        {
            get { return _zivilstandCode; }
            set
            {
                if (_zivilstandCode != value)
                {
                    _zivilstandCode = value;
                    OnPropertyChanged("ZivilstandCode");
                }
            }
        }
        private Nullable<int> _zivilstandCode;
    
        [DataMember]
        public Nullable<System.DateTime> ZivilstandDatum
        {
            get { return _zivilstandDatum; }
            set
            {
                if (_zivilstandDatum != value)
                {
                    _zivilstandDatum = value;
                    OnPropertyChanged("ZivilstandDatum");
                }
            }
        }
        private Nullable<System.DateTime> _zivilstandDatum;
    
        [DataMember]
        public Nullable<int> HeimatgemeindeBaGemeindeID
        {
            get { return _heimatgemeindeBaGemeindeID; }
            set
            {
                if (_heimatgemeindeBaGemeindeID != value)
                {
                    ChangeTracker.RecordOriginalValue("HeimatgemeindeBaGemeindeID", _heimatgemeindeBaGemeindeID);
                    if (!IsDeserializing)
                    {
                        if (BaGemeinde != null && BaGemeinde.BaGemeindeID != value)
                        {
                            BaGemeinde = null;
                        }
                    }
                    _heimatgemeindeBaGemeindeID = value;
                    OnPropertyChanged("HeimatgemeindeBaGemeindeID");
                }
            }
        }
        private Nullable<int> _heimatgemeindeBaGemeindeID;
    
        [DataMember]
        public Nullable<int> NationalitaetCode
        {
            get { return _nationalitaetCode; }
            set
            {
                if (_nationalitaetCode != value)
                {
                    ChangeTracker.RecordOriginalValue("NationalitaetCode", _nationalitaetCode);
                    if (!IsDeserializing)
                    {
                        if (BaLand_Nationalitaet != null && BaLand_Nationalitaet.BaLandID != value)
                        {
                            BaLand_Nationalitaet = null;
                        }
                    }
                    _nationalitaetCode = value;
                    OnPropertyChanged("NationalitaetCode");
                }
            }
        }
        private Nullable<int> _nationalitaetCode;
    
        [DataMember]
        public Nullable<int> AuslaenderStatusCode
        {
            get { return _auslaenderStatusCode; }
            set
            {
                if (_auslaenderStatusCode != value)
                {
                    _auslaenderStatusCode = value;
                    OnPropertyChanged("AuslaenderStatusCode");
                }
            }
        }
        private Nullable<int> _auslaenderStatusCode;
    
        [DataMember]
        public Nullable<System.DateTime> AuslaenderStatusGueltigBis
        {
            get { return _auslaenderStatusGueltigBis; }
            set
            {
                if (_auslaenderStatusGueltigBis != value)
                {
                    _auslaenderStatusGueltigBis = value;
                    OnPropertyChanged("AuslaenderStatusGueltigBis");
                }
            }
        }
        private Nullable<System.DateTime> _auslaenderStatusGueltigBis;
    
        [DataMember]
        public Nullable<System.DateTime> InGemeindeSeit
        {
            get { return _inGemeindeSeit; }
            set
            {
                if (_inGemeindeSeit != value)
                {
                    _inGemeindeSeit = value;
                    OnPropertyChanged("InGemeindeSeit");
                }
            }
        }
        private Nullable<System.DateTime> _inGemeindeSeit;
    
        [DataMember]
        public bool InCHSeitGeburt
        {
            get { return _inCHSeitGeburt; }
            set
            {
                if (_inCHSeitGeburt != value)
                {
                    _inCHSeitGeburt = value;
                    OnPropertyChanged("InCHSeitGeburt");
                }
            }
        }
        private bool _inCHSeitGeburt;
    
        [DataMember]
        public Nullable<System.DateTime> ImKantonSeit
        {
            get { return _imKantonSeit; }
            set
            {
                if (_imKantonSeit != value)
                {
                    _imKantonSeit = value;
                    OnPropertyChanged("ImKantonSeit");
                }
            }
        }
        private Nullable<System.DateTime> _imKantonSeit;
    
        [DataMember]
        public bool ImKantonSeitGeburt
        {
            get { return _imKantonSeitGeburt; }
            set
            {
                if (_imKantonSeitGeburt != value)
                {
                    _imKantonSeitGeburt = value;
                    OnPropertyChanged("ImKantonSeitGeburt");
                }
            }
        }
        private bool _imKantonSeitGeburt;
    
        [DataMember]
        public string Telefon_P
        {
            get { return _telefon_P; }
            set
            {
                if (_telefon_P != value)
                {
                    _telefon_P = value;
                    OnPropertyChanged("Telefon_P");
                }
            }
        }
        private string _telefon_P;
    
        [DataMember]
        public string Telefon_G
        {
            get { return _telefon_G; }
            set
            {
                if (_telefon_G != value)
                {
                    _telefon_G = value;
                    OnPropertyChanged("Telefon_G");
                }
            }
        }
        private string _telefon_G;
    
        [DataMember]
        public string MobilTel
        {
            get { return _mobilTel; }
            set
            {
                if (_mobilTel != value)
                {
                    _mobilTel = value;
                    OnPropertyChanged("MobilTel");
                }
            }
        }
        private string _mobilTel;
    
        [DataMember]
        public string Fax
        {
            get { return _fax; }
            set
            {
                if (_fax != value)
                {
                    _fax = value;
                    OnPropertyChanged("Fax");
                }
            }
        }
        private string _fax;
    
        [DataMember]
        public string EMail
        {
            get { return _eMail; }
            set
            {
                if (_eMail != value)
                {
                    _eMail = value;
                    OnPropertyChanged("EMail");
                }
            }
        }
        private string _eMail;
    
        [DataMember]
        public Nullable<int> SprachCode
        {
            get { return _sprachCode; }
            set
            {
                if (_sprachCode != value)
                {
                    _sprachCode = value;
                    OnPropertyChanged("SprachCode");
                }
            }
        }
        private Nullable<int> _sprachCode;
    
        [DataMember]
        public Nullable<bool> Unterstuetzt
        {
            get { return _unterstuetzt; }
            set
            {
                if (_unterstuetzt != value)
                {
                    _unterstuetzt = value;
                    OnPropertyChanged("Unterstuetzt");
                }
            }
        }
        private Nullable<bool> _unterstuetzt;
    
        [DataMember]
        public bool Fiktiv
        {
            get { return _fiktiv; }
            set
            {
                if (_fiktiv != value)
                {
                    _fiktiv = value;
                    OnPropertyChanged("Fiktiv");
                }
            }
        }
        private bool _fiktiv;
    
        [DataMember]
        public bool Testperson
        {
            get { return _testperson; }
            set
            {
                if (_testperson != value)
                {
                    _testperson = value;
                    OnPropertyChanged("Testperson");
                }
            }
        }
        private bool _testperson;
    
        [DataMember]
        public string NavigatorZusatz
        {
            get { return _navigatorZusatz; }
            set
            {
                if (_navigatorZusatz != value)
                {
                    _navigatorZusatz = value;
                    OnPropertyChanged("NavigatorZusatz");
                }
            }
        }
        private string _navigatorZusatz;
    
        [DataMember]
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    OnPropertyChanged("Bemerkung");
                }
            }
        }
        private string _bemerkung;
    
        [DataMember]
        public byte[] BaPersonTS
        {
            get { return _baPersonTS; }
            set
            {
                if (_baPersonTS != value)
                {
                    _baPersonTS = value;
                    OnPropertyChanged("BaPersonTS");
                }
            }
        }
        private byte[] _baPersonTS;
    
        [DataMember]
        public Nullable<int> VerID
        {
            get { return _verID; }
            set
            {
                if (_verID != value)
                {
                    _verID = value;
                    OnPropertyChanged("VerID");
                }
            }
        }
        private Nullable<int> _verID;
    
        [DataMember]
        public bool SichtbarSDFlag
        {
            get { return _sichtbarSDFlag; }
            set
            {
                if (_sichtbarSDFlag != value)
                {
                    _sichtbarSDFlag = value;
                    OnPropertyChanged("SichtbarSDFlag");
                }
            }
        }
        private bool _sichtbarSDFlag;
    
        [DataMember]
        public bool PersonSichtbarSDFlag
        {
            get { return _personSichtbarSDFlag; }
            set
            {
                if (_personSichtbarSDFlag != value)
                {
                    _personSichtbarSDFlag = value;
                    OnPropertyChanged("PersonSichtbarSDFlag");
                }
            }
        }
        private bool _personSichtbarSDFlag;
    
        [DataMember]
        public string ZuzugKtPLZ
        {
            get { return _zuzugKtPLZ; }
            set
            {
                if (_zuzugKtPLZ != value)
                {
                    _zuzugKtPLZ = value;
                    OnPropertyChanged("ZuzugKtPLZ");
                }
            }
        }
        private string _zuzugKtPLZ;
    
        [DataMember]
        public string ZuzugKtOrt
        {
            get { return _zuzugKtOrt; }
            set
            {
                if (_zuzugKtOrt != value)
                {
                    _zuzugKtOrt = value;
                    OnPropertyChanged("ZuzugKtOrt");
                }
            }
        }
        private string _zuzugKtOrt;
    
        [DataMember]
        public string ZuzugKtKanton
        {
            get { return _zuzugKtKanton; }
            set
            {
                if (_zuzugKtKanton != value)
                {
                    _zuzugKtKanton = value;
                    OnPropertyChanged("ZuzugKtKanton");
                }
            }
        }
        private string _zuzugKtKanton;
    
        [DataMember]
        public Nullable<int> ZuzugKtOrtCode
        {
            get { return _zuzugKtOrtCode; }
            set
            {
                if (_zuzugKtOrtCode != value)
                {
                    _zuzugKtOrtCode = value;
                    OnPropertyChanged("ZuzugKtOrtCode");
                }
            }
        }
        private Nullable<int> _zuzugKtOrtCode;
    
        [DataMember]
        public Nullable<int> ZuzugKtLandCode
        {
            get { return _zuzugKtLandCode; }
            set
            {
                if (_zuzugKtLandCode != value)
                {
                    ChangeTracker.RecordOriginalValue("ZuzugKtLandCode", _zuzugKtLandCode);
                    if (!IsDeserializing)
                    {
                        if (BaLand4 != null && BaLand4.BaLandID != value)
                        {
                            BaLand4 = null;
                        }
                    }
                    _zuzugKtLandCode = value;
                    OnPropertyChanged("ZuzugKtLandCode");
                }
            }
        }
        private Nullable<int> _zuzugKtLandCode;
    
        [DataMember]
        public Nullable<System.DateTime> ZuzugKtDatum
        {
            get { return _zuzugKtDatum; }
            set
            {
                if (_zuzugKtDatum != value)
                {
                    _zuzugKtDatum = value;
                    OnPropertyChanged("ZuzugKtDatum");
                }
            }
        }
        private Nullable<System.DateTime> _zuzugKtDatum;
    
        [DataMember]
        public Nullable<bool> ZuzugKtSeitGeburt
        {
            get { return _zuzugKtSeitGeburt; }
            set
            {
                if (_zuzugKtSeitGeburt != value)
                {
                    _zuzugKtSeitGeburt = value;
                    OnPropertyChanged("ZuzugKtSeitGeburt");
                }
            }
        }
        private Nullable<bool> _zuzugKtSeitGeburt;
    
        [DataMember]
        public string ZuzugGdePLZ
        {
            get { return _zuzugGdePLZ; }
            set
            {
                if (_zuzugGdePLZ != value)
                {
                    _zuzugGdePLZ = value;
                    OnPropertyChanged("ZuzugGdePLZ");
                }
            }
        }
        private string _zuzugGdePLZ;
    
        [DataMember]
        public string ZuzugGdeOrt
        {
            get { return _zuzugGdeOrt; }
            set
            {
                if (_zuzugGdeOrt != value)
                {
                    _zuzugGdeOrt = value;
                    OnPropertyChanged("ZuzugGdeOrt");
                }
            }
        }
        private string _zuzugGdeOrt;
    
        [DataMember]
        public string ZuzugGdeKanton
        {
            get { return _zuzugGdeKanton; }
            set
            {
                if (_zuzugGdeKanton != value)
                {
                    _zuzugGdeKanton = value;
                    OnPropertyChanged("ZuzugGdeKanton");
                }
            }
        }
        private string _zuzugGdeKanton;
    
        [DataMember]
        public Nullable<int> ZuzugGdeOrtCode
        {
            get { return _zuzugGdeOrtCode; }
            set
            {
                if (_zuzugGdeOrtCode != value)
                {
                    ChangeTracker.RecordOriginalValue("ZuzugGdeOrtCode", _zuzugGdeOrtCode);
                    if (!IsDeserializing)
                    {
                        if (BaGemeinde3 != null && BaGemeinde3.BaGemeindeID != value)
                        {
                            BaGemeinde3 = null;
                        }
                    }
                    _zuzugGdeOrtCode = value;
                    OnPropertyChanged("ZuzugGdeOrtCode");
                }
            }
        }
        private Nullable<int> _zuzugGdeOrtCode;
    
        [DataMember]
        public Nullable<int> ZuzugGdeLandCode
        {
            get { return _zuzugGdeLandCode; }
            set
            {
                if (_zuzugGdeLandCode != value)
                {
                    ChangeTracker.RecordOriginalValue("ZuzugGdeLandCode", _zuzugGdeLandCode);
                    if (!IsDeserializing)
                    {
                        if (BaLand3 != null && BaLand3.BaLandID != value)
                        {
                            BaLand3 = null;
                        }
                    }
                    _zuzugGdeLandCode = value;
                    OnPropertyChanged("ZuzugGdeLandCode");
                }
            }
        }
        private Nullable<int> _zuzugGdeLandCode;
    
        [DataMember]
        public Nullable<System.DateTime> ZuzugGdeDatum
        {
            get { return _zuzugGdeDatum; }
            set
            {
                if (_zuzugGdeDatum != value)
                {
                    _zuzugGdeDatum = value;
                    OnPropertyChanged("ZuzugGdeDatum");
                }
            }
        }
        private Nullable<System.DateTime> _zuzugGdeDatum;
    
        [DataMember]
        public Nullable<bool> ZuzugGdeSeitGeburt
        {
            get { return _zuzugGdeSeitGeburt; }
            set
            {
                if (_zuzugGdeSeitGeburt != value)
                {
                    _zuzugGdeSeitGeburt = value;
                    OnPropertyChanged("ZuzugGdeSeitGeburt");
                }
            }
        }
        private Nullable<bool> _zuzugGdeSeitGeburt;
    
        [DataMember]
        public string UntWohnsitzPLZ
        {
            get { return _untWohnsitzPLZ; }
            set
            {
                if (_untWohnsitzPLZ != value)
                {
                    _untWohnsitzPLZ = value;
                    OnPropertyChanged("UntWohnsitzPLZ");
                }
            }
        }
        private string _untWohnsitzPLZ;
    
        [DataMember]
        public string UntWohnsitzOrt
        {
            get { return _untWohnsitzOrt; }
            set
            {
                if (_untWohnsitzOrt != value)
                {
                    _untWohnsitzOrt = value;
                    OnPropertyChanged("UntWohnsitzOrt");
                }
            }
        }
        private string _untWohnsitzOrt;
    
        [DataMember]
        public string UntWohnsitzKanton
        {
            get { return _untWohnsitzKanton; }
            set
            {
                if (_untWohnsitzKanton != value)
                {
                    _untWohnsitzKanton = value;
                    OnPropertyChanged("UntWohnsitzKanton");
                }
            }
        }
        private string _untWohnsitzKanton;
    
        [DataMember]
        public Nullable<int> UntWohnsitzOrtCode
        {
            get { return _untWohnsitzOrtCode; }
            set
            {
                if (_untWohnsitzOrtCode != value)
                {
                    _untWohnsitzOrtCode = value;
                    OnPropertyChanged("UntWohnsitzOrtCode");
                }
            }
        }
        private Nullable<int> _untWohnsitzOrtCode;
    
        [DataMember]
        public Nullable<int> UntWohnsitzLandCode
        {
            get { return _untWohnsitzLandCode; }
            set
            {
                if (_untWohnsitzLandCode != value)
                {
                    ChangeTracker.RecordOriginalValue("UntWohnsitzLandCode", _untWohnsitzLandCode);
                    if (!IsDeserializing)
                    {
                        if (BaLand1 != null && BaLand1.BaLandID != value)
                        {
                            BaLand1 = null;
                        }
                    }
                    _untWohnsitzLandCode = value;
                    OnPropertyChanged("UntWohnsitzLandCode");
                }
            }
        }
        private Nullable<int> _untWohnsitzLandCode;
    
        [DataMember]
        public string WegzugPLZ
        {
            get { return _wegzugPLZ; }
            set
            {
                if (_wegzugPLZ != value)
                {
                    _wegzugPLZ = value;
                    OnPropertyChanged("WegzugPLZ");
                }
            }
        }
        private string _wegzugPLZ;
    
        [DataMember]
        public string WegzugOrt
        {
            get { return _wegzugOrt; }
            set
            {
                if (_wegzugOrt != value)
                {
                    _wegzugOrt = value;
                    OnPropertyChanged("WegzugOrt");
                }
            }
        }
        private string _wegzugOrt;
    
        [DataMember]
        public string WegzugKanton
        {
            get { return _wegzugKanton; }
            set
            {
                if (_wegzugKanton != value)
                {
                    _wegzugKanton = value;
                    OnPropertyChanged("WegzugKanton");
                }
            }
        }
        private string _wegzugKanton;
    
        [DataMember]
        public Nullable<int> WegzugOrtCode
        {
            get { return _wegzugOrtCode; }
            set
            {
                if (_wegzugOrtCode != value)
                {
                    ChangeTracker.RecordOriginalValue("WegzugOrtCode", _wegzugOrtCode);
                    if (!IsDeserializing)
                    {
                        if (BaGemeinde2 != null && BaGemeinde2.BaGemeindeID != value)
                        {
                            BaGemeinde2 = null;
                        }
                    }
                    _wegzugOrtCode = value;
                    OnPropertyChanged("WegzugOrtCode");
                }
            }
        }
        private Nullable<int> _wegzugOrtCode;
    
        [DataMember]
        public Nullable<int> WegzugLandCode
        {
            get { return _wegzugLandCode; }
            set
            {
                if (_wegzugLandCode != value)
                {
                    ChangeTracker.RecordOriginalValue("WegzugLandCode", _wegzugLandCode);
                    if (!IsDeserializing)
                    {
                        if (BaLand2 != null && BaLand2.BaLandID != value)
                        {
                            BaLand2 = null;
                        }
                    }
                    _wegzugLandCode = value;
                    OnPropertyChanged("WegzugLandCode");
                }
            }
        }
        private Nullable<int> _wegzugLandCode;
    
        [DataMember]
        public Nullable<System.DateTime> WegzugDatum
        {
            get { return _wegzugDatum; }
            set
            {
                if (_wegzugDatum != value)
                {
                    _wegzugDatum = value;
                    OnPropertyChanged("WegzugDatum");
                }
            }
        }
        private Nullable<System.DateTime> _wegzugDatum;
    
        [DataMember]
        public Nullable<System.DateTime> ErteilungVA
        {
            get { return _erteilungVA; }
            set
            {
                if (_erteilungVA != value)
                {
                    _erteilungVA = value;
                    OnPropertyChanged("ErteilungVA");
                }
            }
        }
        private Nullable<System.DateTime> _erteilungVA;
    
        [DataMember]
        public string ZEMISNummer
        {
            get { return _zEMISNummer; }
            set
            {
                if (_zEMISNummer != value)
                {
                    _zEMISNummer = value;
                    OnPropertyChanged("ZEMISNummer");
                }
            }
        }
        private string _zEMISNummer;
    
        [DataMember]
        public Nullable<int> MigrationKA
        {
            get { return _migrationKA; }
            set
            {
                if (_migrationKA != value)
                {
                    _migrationKA = value;
                    OnPropertyChanged("MigrationKA");
                }
            }
        }
        private Nullable<int> _migrationKA;
    
        [DataMember]
        public Nullable<bool> AktiveKopfQuote
        {
            get { return _aktiveKopfQuote; }
            set
            {
                if (_aktiveKopfQuote != value)
                {
                    _aktiveKopfQuote = value;
                    OnPropertyChanged("AktiveKopfQuote");
                }
            }
        }
        private Nullable<bool> _aktiveKopfQuote;
    
        [DataMember]
        public Nullable<System.DateTime> CAusweisDatum
        {
            get { return _cAusweisDatum; }
            set
            {
                if (_cAusweisDatum != value)
                {
                    _cAusweisDatum = value;
                    OnPropertyChanged("CAusweisDatum");
                }
            }
        }
        private Nullable<System.DateTime> _cAusweisDatum;
    
        [DataMember]
        public Nullable<decimal> Einrichtpauschale
        {
            get { return _einrichtpauschale; }
            set
            {
                if (_einrichtpauschale != value)
                {
                    _einrichtpauschale = value;
                    OnPropertyChanged("Einrichtpauschale");
                }
            }
        }
        private Nullable<decimal> _einrichtpauschale;
    
        [DataMember]
        public Nullable<int> EinrichtungspauschaleCode
        {
            get { return _einrichtungspauschaleCode; }
            set
            {
                if (_einrichtungspauschaleCode != value)
                {
                    _einrichtungspauschaleCode = value;
                    OnPropertyChanged("EinrichtungspauschaleCode");
                }
            }
        }
        private Nullable<int> _einrichtungspauschaleCode;
    
        [DataMember]
        public Nullable<int> Kopfquote_BaInstitutionID
        {
            get { return _kopfquote_BaInstitutionID; }
            set
            {
                if (_kopfquote_BaInstitutionID != value)
                {
                    ChangeTracker.RecordOriginalValue("Kopfquote_BaInstitutionID", _kopfquote_BaInstitutionID);
                    if (!IsDeserializing)
                    {
                        if (BaInstitution != null && BaInstitution.BaInstitutionID != value)
                        {
                            BaInstitution = null;
                        }
                    }
                    _kopfquote_BaInstitutionID = value;
                    OnPropertyChanged("Kopfquote_BaInstitutionID");
                }
            }
        }
        private Nullable<int> _kopfquote_BaInstitutionID;
    
        [DataMember]
        public Nullable<System.DateTime> KopfquoteAbDatum
        {
            get { return _kopfquoteAbDatum; }
            set
            {
                if (_kopfquoteAbDatum != value)
                {
                    _kopfquoteAbDatum = value;
                    OnPropertyChanged("KopfquoteAbDatum");
                }
            }
        }
        private Nullable<System.DateTime> _kopfquoteAbDatum;
    
        [DataMember]
        public Nullable<System.DateTime> KopfquoteBisDatum
        {
            get { return _kopfquoteBisDatum; }
            set
            {
                if (_kopfquoteBisDatum != value)
                {
                    _kopfquoteBisDatum = value;
                    OnPropertyChanged("KopfquoteBisDatum");
                }
            }
        }
        private Nullable<System.DateTime> _kopfquoteBisDatum;
    
        [DataMember]
        public Nullable<bool> PassiveKopfQuote
        {
            get { return _passiveKopfQuote; }
            set
            {
                if (_passiveKopfQuote != value)
                {
                    _passiveKopfQuote = value;
                    OnPropertyChanged("PassiveKopfQuote");
                }
            }
        }
        private Nullable<bool> _passiveKopfQuote;
    
        [DataMember]
        public Nullable<System.DateTime> PauschaleAktualDatum
        {
            get { return _pauschaleAktualDatum; }
            set
            {
                if (_pauschaleAktualDatum != value)
                {
                    _pauschaleAktualDatum = value;
                    OnPropertyChanged("PauschaleAktualDatum");
                }
            }
        }
        private Nullable<System.DateTime> _pauschaleAktualDatum;
    
        [DataMember]
        public Nullable<int> ProjNr
        {
            get { return _projNr; }
            set
            {
                if (_projNr != value)
                {
                    _projNr = value;
                    OnPropertyChanged("ProjNr");
                }
            }
        }
        private Nullable<int> _projNr;
    
        [DataMember]
        public Nullable<decimal> Sprachpauschale
        {
            get { return _sprachpauschale; }
            set
            {
                if (_sprachpauschale != value)
                {
                    _sprachpauschale = value;
                    OnPropertyChanged("Sprachpauschale");
                }
            }
        }
        private Nullable<decimal> _sprachpauschale;
    
        [DataMember]
        public Nullable<int> VerstaendigungSprachCode
        {
            get { return _verstaendigungSprachCode; }
            set
            {
                if (_verstaendigungSprachCode != value)
                {
                    _verstaendigungSprachCode = value;
                    OnPropertyChanged("VerstaendigungSprachCode");
                }
            }
        }
        private Nullable<int> _verstaendigungSprachCode;
    
        [DataMember]
        public bool KeinSerienbrief
        {
            get { return _keinSerienbrief; }
            set
            {
                if (_keinSerienbrief != value)
                {
                    _keinSerienbrief = value;
                    OnPropertyChanged("KeinSerienbrief");
                }
            }
        }
        private bool _keinSerienbrief;
    
        [DataMember]
        public Nullable<int> StatusPersonCode
        {
            get { return _statusPersonCode; }
            set
            {
                if (_statusPersonCode != value)
                {
                    _statusPersonCode = value;
                    OnPropertyChanged("StatusPersonCode");
                }
            }
        }
        private Nullable<int> _statusPersonCode;
    
        [DataMember]
        public Nullable<int> ZIPNr
        {
            get { return _zIPNr; }
            set
            {
                if (_zIPNr != value)
                {
                    _zIPNr = value;
                    OnPropertyChanged("ZIPNr");
                }
            }
        }
        private Nullable<int> _zIPNr;
    
        [DataMember]
        public string KantonaleReferenznummer
        {
            get { return _kantonaleReferenznummer; }
            set
            {
                if (_kantonaleReferenznummer != value)
                {
                    _kantonaleReferenznummer = value;
                    OnPropertyChanged("KantonaleReferenznummer");
                }
            }
        }
        private string _kantonaleReferenznummer;
    
        [DataMember]
        public Nullable<int> HeimatgemeindeCode
        {
            get { return _heimatgemeindeCode; }
            set
            {
                if (_heimatgemeindeCode != value)
                {
                    ChangeTracker.RecordOriginalValue("HeimatgemeindeCode", _heimatgemeindeCode);
                    if (!IsDeserializing)
                    {
                        if (BaGemeinde1 != null && BaGemeinde1.BaGemeindeID != value)
                        {
                            BaGemeinde1 = null;
                        }
                    }
                    _heimatgemeindeCode = value;
                    OnPropertyChanged("HeimatgemeindeCode");
                }
            }
        }
        private Nullable<int> _heimatgemeindeCode;
    
        [DataMember]
        public string HeimatgemeindeCodes
        {
            get { return _heimatgemeindeCodes; }
            set
            {
                if (_heimatgemeindeCodes != value)
                {
                    _heimatgemeindeCodes = value;
                    OnPropertyChanged("HeimatgemeindeCodes");
                }
            }
        }
        private string _heimatgemeindeCodes;
    
        [DataMember]
        public Nullable<int> ReligionCode
        {
            get { return _religionCode; }
            set
            {
                if (_religionCode != value)
                {
                    _religionCode = value;
                    OnPropertyChanged("ReligionCode");
                }
            }
        }
        private Nullable<int> _religionCode;
    
        [DataMember]
        public string MobilTel1
        {
            get { return _mobilTel1; }
            set
            {
                if (_mobilTel1 != value)
                {
                    _mobilTel1 = value;
                    OnPropertyChanged("MobilTel1");
                }
            }
        }
        private string _mobilTel1;
    
        [DataMember]
        public string MobilTel2
        {
            get { return _mobilTel2; }
            set
            {
                if (_mobilTel2 != value)
                {
                    _mobilTel2 = value;
                    OnPropertyChanged("MobilTel2");
                }
            }
        }
        private string _mobilTel2;
    
        [DataMember]
        public Nullable<int> DeutschVerstehenCode
        {
            get { return _deutschVerstehenCode; }
            set
            {
                if (_deutschVerstehenCode != value)
                {
                    _deutschVerstehenCode = value;
                    OnPropertyChanged("DeutschVerstehenCode");
                }
            }
        }
        private Nullable<int> _deutschVerstehenCode;
    
        [DataMember]
        public Nullable<int> WichtigerHinweisCode
        {
            get { return _wichtigerHinweisCode; }
            set
            {
                if (_wichtigerHinweisCode != value)
                {
                    _wichtigerHinweisCode = value;
                    OnPropertyChanged("WichtigerHinweisCode");
                }
            }
        }
        private Nullable<int> _wichtigerHinweisCode;
    
        [DataMember]
        public Nullable<int> WohnsitzWieBaPersonID
        {
            get { return _wohnsitzWieBaPersonID; }
            set
            {
                if (_wohnsitzWieBaPersonID != value)
                {
                    _wohnsitzWieBaPersonID = value;
                    OnPropertyChanged("WohnsitzWieBaPersonID");
                }
            }
        }
        private Nullable<int> _wohnsitzWieBaPersonID;
    
        [DataMember]
        public Nullable<int> AufenthaltWieBaInstitutionID
        {
            get { return _aufenthaltWieBaInstitutionID; }
            set
            {
                if (_aufenthaltWieBaInstitutionID != value)
                {
                    _aufenthaltWieBaInstitutionID = value;
                    OnPropertyChanged("AufenthaltWieBaInstitutionID");
                }
            }
        }
        private Nullable<int> _aufenthaltWieBaInstitutionID;
    
        [DataMember]
        public Nullable<int> ErwerbssituationCode
        {
            get { return _erwerbssituationCode; }
            set
            {
                if (_erwerbssituationCode != value)
                {
                    _erwerbssituationCode = value;
                    OnPropertyChanged("ErwerbssituationCode");
                }
            }
        }
        private Nullable<int> _erwerbssituationCode;
    
        [DataMember]
        public Nullable<int> GrundTeilzeitarbeit1Code
        {
            get { return _grundTeilzeitarbeit1Code; }
            set
            {
                if (_grundTeilzeitarbeit1Code != value)
                {
                    _grundTeilzeitarbeit1Code = value;
                    OnPropertyChanged("GrundTeilzeitarbeit1Code");
                }
            }
        }
        private Nullable<int> _grundTeilzeitarbeit1Code;
    
        [DataMember]
        public Nullable<int> GrundTeilzeitarbeit2Code
        {
            get { return _grundTeilzeitarbeit2Code; }
            set
            {
                if (_grundTeilzeitarbeit2Code != value)
                {
                    _grundTeilzeitarbeit2Code = value;
                    OnPropertyChanged("GrundTeilzeitarbeit2Code");
                }
            }
        }
        private Nullable<int> _grundTeilzeitarbeit2Code;
    
        [DataMember]
        public Nullable<int> ErwerbsBrancheCode
        {
            get { return _erwerbsBrancheCode; }
            set
            {
                if (_erwerbsBrancheCode != value)
                {
                    _erwerbsBrancheCode = value;
                    OnPropertyChanged("ErwerbsBrancheCode");
                }
            }
        }
        private Nullable<int> _erwerbsBrancheCode;
    
        [DataMember]
        public Nullable<int> ErlernterBerufCode
        {
            get { return _erlernterBerufCode; }
            set
            {
                if (_erlernterBerufCode != value)
                {
                    _erlernterBerufCode = value;
                    OnPropertyChanged("ErlernterBerufCode");
                }
            }
        }
        private Nullable<int> _erlernterBerufCode;
    
        [DataMember]
        public Nullable<int> BerufCode
        {
            get { return _berufCode; }
            set
            {
                if (_berufCode != value)
                {
                    _berufCode = value;
                    OnPropertyChanged("BerufCode");
                }
            }
        }
        private Nullable<int> _berufCode;
    
        [DataMember]
        public Nullable<int> HoechsteAusbildungCode
        {
            get { return _hoechsteAusbildungCode; }
            set
            {
                if (_hoechsteAusbildungCode != value)
                {
                    _hoechsteAusbildungCode = value;
                    OnPropertyChanged("HoechsteAusbildungCode");
                }
            }
        }
        private Nullable<int> _hoechsteAusbildungCode;
    
        [DataMember]
        public Nullable<int> AbgebrocheneAusbildungCode
        {
            get { return _abgebrocheneAusbildungCode; }
            set
            {
                if (_abgebrocheneAusbildungCode != value)
                {
                    _abgebrocheneAusbildungCode = value;
                    OnPropertyChanged("AbgebrocheneAusbildungCode");
                }
            }
        }
        private Nullable<int> _abgebrocheneAusbildungCode;
    
        [DataMember]
        public string ArbeitSpezFaehigkeiten
        {
            get { return _arbeitSpezFaehigkeiten; }
            set
            {
                if (_arbeitSpezFaehigkeiten != value)
                {
                    _arbeitSpezFaehigkeiten = value;
                    OnPropertyChanged("ArbeitSpezFaehigkeiten");
                }
            }
        }
        private string _arbeitSpezFaehigkeiten;
    
        [DataMember]
        public Nullable<int> KbKostenstelleID
        {
            get { return _kbKostenstelleID; }
            set
            {
                if (_kbKostenstelleID != value)
                {
                    _kbKostenstelleID = value;
                    OnPropertyChanged("KbKostenstelleID");
                }
            }
        }
        private Nullable<int> _kbKostenstelleID;
    
        [DataMember]
        public Nullable<System.DateTime> InCHSeit
        {
            get { return _inCHSeit; }
            set
            {
                if (_inCHSeit != value)
                {
                    _inCHSeit = value;
                    OnPropertyChanged("InCHSeit");
                }
            }
        }
        private Nullable<System.DateTime> _inCHSeit;
    
        [DataMember]
        public Nullable<int> PUAnzahlVerlustscheine
        {
            get { return _pUAnzahlVerlustscheine; }
            set
            {
                if (_pUAnzahlVerlustscheine != value)
                {
                    _pUAnzahlVerlustscheine = value;
                    OnPropertyChanged("PUAnzahlVerlustscheine");
                }
            }
        }
        private Nullable<int> _pUAnzahlVerlustscheine;
    
        [DataMember]
        public string PUKrankenkasse
        {
            get { return _pUKrankenkasse; }
            set
            {
                if (_pUKrankenkasse != value)
                {
                    _pUKrankenkasse = value;
                    OnPropertyChanged("PUKrankenkasse");
                }
            }
        }
        private string _pUKrankenkasse;
    
        [DataMember]
        public Nullable<System.DateTime> PraemienuebernahmeVon
        {
            get { return _praemienuebernahmeVon; }
            set
            {
                if (_praemienuebernahmeVon != value)
                {
                    _praemienuebernahmeVon = value;
                    OnPropertyChanged("PraemienuebernahmeVon");
                }
            }
        }
        private Nullable<System.DateTime> _praemienuebernahmeVon;
    
        [DataMember]
        public Nullable<System.DateTime> PraemienuebernahmeBis
        {
            get { return _praemienuebernahmeBis; }
            set
            {
                if (_praemienuebernahmeBis != value)
                {
                    _praemienuebernahmeBis = value;
                    OnPropertyChanged("PraemienuebernahmeBis");
                }
            }
        }
        private Nullable<System.DateTime> _praemienuebernahmeBis;
    
        [DataMember]
        public bool PersonOhneLeistung
        {
            get { return _personOhneLeistung; }
            set
            {
                if (_personOhneLeistung != value)
                {
                    _personOhneLeistung = value;
                    OnPropertyChanged("PersonOhneLeistung");
                }
            }
        }
        private bool _personOhneLeistung;
    
        [DataMember]
        public bool HCMCFluechtling
        {
            get { return _hCMCFluechtling; }
            set
            {
                if (_hCMCFluechtling != value)
                {
                    _hCMCFluechtling = value;
                    OnPropertyChanged("HCMCFluechtling");
                }
            }
        }
        private bool _hCMCFluechtling;
    
        [DataMember]
        public Nullable<int> StellensuchendCode
        {
            get { return _stellensuchendCode; }
            set
            {
                if (_stellensuchendCode != value)
                {
                    _stellensuchendCode = value;
                    OnPropertyChanged("StellensuchendCode");
                }
            }
        }
        private Nullable<int> _stellensuchendCode;
    
        [DataMember]
        public Nullable<int> ResoNr
        {
            get { return _resoNr; }
            set
            {
                if (_resoNr != value)
                {
                    _resoNr = value;
                    OnPropertyChanged("ResoNr");
                }
            }
        }
        private Nullable<int> _resoNr;
    
        [DataMember]
        public Nullable<System.DateTime> NEAnmeldung
        {
            get { return _nEAnmeldung; }
            set
            {
                if (_nEAnmeldung != value)
                {
                    _nEAnmeldung = value;
                    OnPropertyChanged("NEAnmeldung");
                }
            }
        }
        private Nullable<System.DateTime> _nEAnmeldung;
    
        [DataMember]
        public bool ALK
        {
            get { return _aLK; }
            set
            {
                if (_aLK != value)
                {
                    _aLK = value;
                    OnPropertyChanged("ALK");
                }
            }
        }
        private bool _aLK;
    
        [DataMember]
        public string AndereSVLeistungen
        {
            get { return _andereSVLeistungen; }
            set
            {
                if (_andereSVLeistungen != value)
                {
                    _andereSVLeistungen = value;
                    OnPropertyChanged("AndereSVLeistungen");
                }
            }
        }
        private string _andereSVLeistungen;
    
        [DataMember]
        public string Anrede
        {
            get { return _anrede; }
            set
            {
                if (_anrede != value)
                {
                    _anrede = value;
                    OnPropertyChanged("Anrede");
                }
            }
        }
        private string _anrede;
    
        [DataMember]
        public Nullable<int> AusbildungCode
        {
            get { return _ausbildungCode; }
            set
            {
                if (_ausbildungCode != value)
                {
                    _ausbildungCode = value;
                    OnPropertyChanged("AusbildungCode");
                }
            }
        }
        private Nullable<int> _ausbildungCode;
    
        [DataMember]
        public Nullable<int> Behinderungsart2Code
        {
            get { return _behinderungsart2Code; }
            set
            {
                if (_behinderungsart2Code != value)
                {
                    _behinderungsart2Code = value;
                    OnPropertyChanged("Behinderungsart2Code");
                }
            }
        }
        private Nullable<int> _behinderungsart2Code;
    
        [DataMember]
        public string BemerkungenAdresse
        {
            get { return _bemerkungenAdresse; }
            set
            {
                if (_bemerkungenAdresse != value)
                {
                    _bemerkungenAdresse = value;
                    OnPropertyChanged("BemerkungenAdresse");
                }
            }
        }
        private string _bemerkungenAdresse;
    
        [DataMember]
        public string BemerkungenSV
        {
            get { return _bemerkungenSV; }
            set
            {
                if (_bemerkungenSV != value)
                {
                    _bemerkungenSV = value;
                    OnPropertyChanged("BemerkungenSV");
                }
            }
        }
        private string _bemerkungenSV;
    
        [DataMember]
        public bool BeruflicheMassnahmeIV
        {
            get { return _beruflicheMassnahmeIV; }
            set
            {
                if (_beruflicheMassnahmeIV != value)
                {
                    _beruflicheMassnahmeIV = value;
                    OnPropertyChanged("BeruflicheMassnahmeIV");
                }
            }
        }
        private bool _beruflicheMassnahmeIV;
    
        [DataMember]
        public string Briefanrede
        {
            get { return _briefanrede; }
            set
            {
                if (_briefanrede != value)
                {
                    _briefanrede = value;
                    OnPropertyChanged("Briefanrede");
                }
            }
        }
        private string _briefanrede;
    
        [DataMember]
        public Nullable<int> BSVBehinderungsartCode
        {
            get { return _bSVBehinderungsartCode; }
            set
            {
                if (_bSVBehinderungsartCode != value)
                {
                    _bSVBehinderungsartCode = value;
                    OnPropertyChanged("BSVBehinderungsartCode");
                }
            }
        }
        private Nullable<int> _bSVBehinderungsartCode;
    
        [DataMember]
        public bool BVGRente
        {
            get { return _bVGRente; }
            set
            {
                if (_bVGRente != value)
                {
                    _bVGRente = value;
                    OnPropertyChanged("BVGRente");
                }
            }
        }
        private bool _bVGRente;
    
        [DataMember]
        public Nullable<int> DebitorNr
        {
            get { return _debitorNr; }
            set
            {
                if (_debitorNr != value)
                {
                    _debitorNr = value;
                    OnPropertyChanged("DebitorNr");
                }
            }
        }
        private Nullable<int> _debitorNr;
    
        [DataMember]
        public Nullable<System.DateTime> DebitorUpdate
        {
            get { return _debitorUpdate; }
            set
            {
                if (_debitorUpdate != value)
                {
                    _debitorUpdate = value;
                    OnPropertyChanged("DebitorUpdate");
                }
            }
        }
        private Nullable<System.DateTime> _debitorUpdate;
    
        [DataMember]
        public bool EigenerMietvertrag
        {
            get { return _eigenerMietvertrag; }
            set
            {
                if (_eigenerMietvertrag != value)
                {
                    _eigenerMietvertrag = value;
                    OnPropertyChanged("EigenerMietvertrag");
                }
            }
        }
        private bool _eigenerMietvertrag;
    
        [DataMember]
        public bool ErgaenzungsLeistungen
        {
            get { return _ergaenzungsLeistungen; }
            set
            {
                if (_ergaenzungsLeistungen != value)
                {
                    _ergaenzungsLeistungen = value;
                    OnPropertyChanged("ErgaenzungsLeistungen");
                }
            }
        }
        private bool _ergaenzungsLeistungen;
    
        [DataMember]
        public Nullable<int> HauptBehinderungsartCode
        {
            get { return _hauptBehinderungsartCode; }
            set
            {
                if (_hauptBehinderungsartCode != value)
                {
                    _hauptBehinderungsartCode = value;
                    OnPropertyChanged("HauptBehinderungsartCode");
                }
            }
        }
        private Nullable<int> _hauptBehinderungsartCode;
    
        [DataMember]
        public Nullable<System.DateTime> HELBAb
        {
            get { return _hELBAb; }
            set
            {
                if (_hELBAb != value)
                {
                    _hELBAb = value;
                    OnPropertyChanged("HELBAb");
                }
            }
        }
        private Nullable<System.DateTime> _hELBAb;
    
        [DataMember]
        public Nullable<System.DateTime> HELBAnmeldung
        {
            get { return _hELBAnmeldung; }
            set
            {
                if (_hELBAnmeldung != value)
                {
                    _hELBAnmeldung = value;
                    OnPropertyChanged("HELBAnmeldung");
                }
            }
        }
        private Nullable<System.DateTime> _hELBAnmeldung;
    
        [DataMember]
        public Nullable<System.DateTime> HELBEntscheid
        {
            get { return _hELBEntscheid; }
            set
            {
                if (_hELBEntscheid != value)
                {
                    _hELBEntscheid = value;
                    OnPropertyChanged("HELBEntscheid");
                }
            }
        }
        private Nullable<System.DateTime> _hELBEntscheid;
    
        [DataMember]
        public Nullable<int> HELBEntscheidCode
        {
            get { return _hELBEntscheidCode; }
            set
            {
                if (_hELBEntscheidCode != value)
                {
                    _hELBEntscheidCode = value;
                    OnPropertyChanged("HELBEntscheidCode");
                }
            }
        }
        private Nullable<int> _hELBEntscheidCode;
    
        [DataMember]
        public Nullable<int> HilfslosenEntschaedigungCode
        {
            get { return _hilfslosenEntschaedigungCode; }
            set
            {
                if (_hilfslosenEntschaedigungCode != value)
                {
                    _hilfslosenEntschaedigungCode = value;
                    OnPropertyChanged("HilfslosenEntschaedigungCode");
                }
            }
        }
        private Nullable<int> _hilfslosenEntschaedigungCode;
    
        [DataMember]
        public Nullable<int> IntensivPflegeZuschlagCode
        {
            get { return _intensivPflegeZuschlagCode; }
            set
            {
                if (_intensivPflegeZuschlagCode != value)
                {
                    _intensivPflegeZuschlagCode = value;
                    OnPropertyChanged("IntensivPflegeZuschlagCode");
                }
            }
        }
        private Nullable<int> _intensivPflegeZuschlagCode;
    
        [DataMember]
        public Nullable<int> IVBerechtigungAnfangsStatusCode
        {
            get { return _iVBerechtigungAnfangsStatusCode; }
            set
            {
                if (_iVBerechtigungAnfangsStatusCode != value)
                {
                    _iVBerechtigungAnfangsStatusCode = value;
                    OnPropertyChanged("IVBerechtigungAnfangsStatusCode");
                }
            }
        }
        private Nullable<int> _iVBerechtigungAnfangsStatusCode;
    
        [DataMember]
        public Nullable<System.DateTime> IVBerechtigungErsterEntscheidAb
        {
            get { return _iVBerechtigungErsterEntscheidAb; }
            set
            {
                if (_iVBerechtigungErsterEntscheidAb != value)
                {
                    _iVBerechtigungErsterEntscheidAb = value;
                    OnPropertyChanged("IVBerechtigungErsterEntscheidAb");
                }
            }
        }
        private Nullable<System.DateTime> _iVBerechtigungErsterEntscheidAb;
    
        [DataMember]
        public Nullable<int> IVBerechtigungErsterEntscheidCode
        {
            get { return _iVBerechtigungErsterEntscheidCode; }
            set
            {
                if (_iVBerechtigungErsterEntscheidCode != value)
                {
                    _iVBerechtigungErsterEntscheidCode = value;
                    OnPropertyChanged("IVBerechtigungErsterEntscheidCode");
                }
            }
        }
        private Nullable<int> _iVBerechtigungErsterEntscheidCode;
    
        [DataMember]
        public Nullable<System.DateTime> IVBerechtigungZweiterEntscheidAb
        {
            get { return _iVBerechtigungZweiterEntscheidAb; }
            set
            {
                if (_iVBerechtigungZweiterEntscheidAb != value)
                {
                    _iVBerechtigungZweiterEntscheidAb = value;
                    OnPropertyChanged("IVBerechtigungZweiterEntscheidAb");
                }
            }
        }
        private Nullable<System.DateTime> _iVBerechtigungZweiterEntscheidAb;
    
        [DataMember]
        public Nullable<int> IVBerechtigungZweiterEntscheidCode
        {
            get { return _iVBerechtigungZweiterEntscheidCode; }
            set
            {
                if (_iVBerechtigungZweiterEntscheidCode != value)
                {
                    _iVBerechtigungZweiterEntscheidCode = value;
                    OnPropertyChanged("IVBerechtigungZweiterEntscheidCode");
                }
            }
        }
        private Nullable<int> _iVBerechtigungZweiterEntscheidCode;
    
        [DataMember]
        public Nullable<int> IVGrad
        {
            get { return _iVGrad; }
            set
            {
                if (_iVGrad != value)
                {
                    _iVGrad = value;
                    OnPropertyChanged("IVGrad");
                }
            }
        }
        private Nullable<int> _iVGrad;
    
        [DataMember]
        public bool IVHilfsmittel
        {
            get { return _iVHilfsmittel; }
            set
            {
                if (_iVHilfsmittel != value)
                {
                    _iVHilfsmittel = value;
                    OnPropertyChanged("IVHilfsmittel");
                }
            }
        }
        private bool _iVHilfsmittel;
    
        [DataMember]
        public bool IVTaggeld
        {
            get { return _iVTaggeld; }
            set
            {
                if (_iVTaggeld != value)
                {
                    _iVTaggeld = value;
                    OnPropertyChanged("IVTaggeld");
                }
            }
        }
        private bool _iVTaggeld;
    
        [DataMember]
        public bool KontoFuehrung
        {
            get { return _kontoFuehrung; }
            set
            {
                if (_kontoFuehrung != value)
                {
                    _kontoFuehrung = value;
                    OnPropertyChanged("KontoFuehrung");
                }
            }
        }
        private bool _kontoFuehrung;
    
        [DataMember]
        public Nullable<int> KorrespondenzSpracheCode
        {
            get { return _korrespondenzSpracheCode; }
            set
            {
                if (_korrespondenzSpracheCode != value)
                {
                    _korrespondenzSpracheCode = value;
                    OnPropertyChanged("KorrespondenzSpracheCode");
                }
            }
        }
        private Nullable<int> _korrespondenzSpracheCode;
    
        [DataMember]
        public bool KTG
        {
            get { return _kTG; }
            set
            {
                if (_kTG != value)
                {
                    _kTG = value;
                    OnPropertyChanged("KTG");
                }
            }
        }
        private bool _kTG;
    
        [DataMember]
        public bool LaufendeVollmachtErlaubnis
        {
            get { return _laufendeVollmachtErlaubnis; }
            set
            {
                if (_laufendeVollmachtErlaubnis != value)
                {
                    _laufendeVollmachtErlaubnis = value;
                    OnPropertyChanged("LaufendeVollmachtErlaubnis");
                }
            }
        }
        private bool _laufendeVollmachtErlaubnis;
    
        [DataMember]
        public bool ManuelleAnrede
        {
            get { return _manuelleAnrede; }
            set
            {
                if (_manuelleAnrede != value)
                {
                    _manuelleAnrede = value;
                    OnPropertyChanged("ManuelleAnrede");
                }
            }
        }
        private bool _manuelleAnrede;
    
        [DataMember]
        public bool MedizinischeMassnahmeIV
        {
            get { return _medizinischeMassnahmeIV; }
            set
            {
                if (_medizinischeMassnahmeIV != value)
                {
                    _medizinischeMassnahmeIV = value;
                    OnPropertyChanged("MedizinischeMassnahmeIV");
                }
            }
        }
        private bool _medizinischeMassnahmeIV;
    
        [DataMember]
        public bool Mehrfachbehinderung
        {
            get { return _mehrfachbehinderung; }
            set
            {
                if (_mehrfachbehinderung != value)
                {
                    _mehrfachbehinderung = value;
                    OnPropertyChanged("Mehrfachbehinderung");
                }
            }
        }
        private bool _mehrfachbehinderung;
    
        [DataMember]
        public bool MietdepotPI
        {
            get { return _mietdepotPI; }
            set
            {
                if (_mietdepotPI != value)
                {
                    _mietdepotPI = value;
                    OnPropertyChanged("MietdepotPI");
                }
            }
        }
        private bool _mietdepotPI;
    
        [DataMember]
        public Nullable<int> RentenstufeCode
        {
            get { return _rentenstufeCode; }
            set
            {
                if (_rentenstufeCode != value)
                {
                    _rentenstufeCode = value;
                    OnPropertyChanged("RentenstufeCode");
                }
            }
        }
        private Nullable<int> _rentenstufeCode;
    
        [DataMember]
        public bool Sozialhilfe
        {
            get { return _sozialhilfe; }
            set
            {
                if (_sozialhilfe != value)
                {
                    _sozialhilfe = value;
                    OnPropertyChanged("Sozialhilfe");
                }
            }
        }
        private bool _sozialhilfe;
    
        [DataMember]
        public bool UVGRente
        {
            get { return _uVGRente; }
            set
            {
                if (_uVGRente != value)
                {
                    _uVGRente = value;
                    OnPropertyChanged("UVGRente");
                }
            }
        }
        private bool _uVGRente;
    
        [DataMember]
        public bool UVGTaggeld
        {
            get { return _uVGTaggeld; }
            set
            {
                if (_uVGTaggeld != value)
                {
                    _uVGTaggeld = value;
                    OnPropertyChanged("UVGTaggeld");
                }
            }
        }
        private bool _uVGTaggeld;
    
        [DataMember]
        public string visdat36Area
        {
            get { return _visdat36Area; }
            set
            {
                if (_visdat36Area != value)
                {
                    _visdat36Area = value;
                    OnPropertyChanged("visdat36Area");
                }
            }
        }
        private string _visdat36Area;
    
        [DataMember]
        public string visdat36ID
        {
            get { return _visdat36ID; }
            set
            {
                if (_visdat36ID != value)
                {
                    _visdat36ID = value;
                    OnPropertyChanged("visdat36ID");
                }
            }
        }
        private string _visdat36ID;
    
        [DataMember]
        public Nullable<int> VormundMassnahmenCode
        {
            get { return _vormundMassnahmenCode; }
            set
            {
                if (_vormundMassnahmenCode != value)
                {
                    _vormundMassnahmenCode = value;
                    OnPropertyChanged("VormundMassnahmenCode");
                }
            }
        }
        private Nullable<int> _vormundMassnahmenCode;
    
        [DataMember]
        public bool VormundPI
        {
            get { return _vormundPI; }
            set
            {
                if (_vormundPI != value)
                {
                    _vormundPI = value;
                    OnPropertyChanged("VormundPI");
                }
            }
        }
        private bool _vormundPI;
    
        [DataMember]
        public string WichtigerHinweis
        {
            get { return _wichtigerHinweis; }
            set
            {
                if (_wichtigerHinweis != value)
                {
                    _wichtigerHinweis = value;
                    OnPropertyChanged("WichtigerHinweis");
                }
            }
        }
        private string _wichtigerHinweis;
    
        [DataMember]
        public Nullable<int> WohnstatusCode
        {
            get { return _wohnstatusCode; }
            set
            {
                if (_wohnstatusCode != value)
                {
                    _wohnstatusCode = value;
                    OnPropertyChanged("WohnstatusCode");
                }
            }
        }
        private Nullable<int> _wohnstatusCode;
    
        [DataMember]
        public bool ZeigeDetails
        {
            get { return _zeigeDetails; }
            set
            {
                if (_zeigeDetails != value)
                {
                    _zeigeDetails = value;
                    OnPropertyChanged("ZeigeDetails");
                }
            }
        }
        private bool _zeigeDetails;
    
        [DataMember]
        public bool ZeigeTelGeschaeft
        {
            get { return _zeigeTelGeschaeft; }
            set
            {
                if (_zeigeTelGeschaeft != value)
                {
                    _zeigeTelGeschaeft = value;
                    OnPropertyChanged("ZeigeTelGeschaeft");
                }
            }
        }
        private bool _zeigeTelGeschaeft;
    
        [DataMember]
        public bool ZeigeTelMobil
        {
            get { return _zeigeTelMobil; }
            set
            {
                if (_zeigeTelMobil != value)
                {
                    _zeigeTelMobil = value;
                    OnPropertyChanged("ZeigeTelMobil");
                }
            }
        }
        private bool _zeigeTelMobil;
    
        [DataMember]
        public bool ZeigeTelPrivat
        {
            get { return _zeigeTelPrivat; }
            set
            {
                if (_zeigeTelPrivat != value)
                {
                    _zeigeTelPrivat = value;
                    OnPropertyChanged("ZeigeTelPrivat");
                }
            }
        }
        private bool _zeigeTelPrivat;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public bool HELBKeinAntrag
        {
            get { return _hELBKeinAntrag; }
            set
            {
                if (_hELBKeinAntrag != value)
                {
                    _hELBKeinAntrag = value;
                    OnPropertyChanged("HELBKeinAntrag");
                }
            }
        }
        private bool _hELBKeinAntrag;
    
        [DataMember]
        public bool IstFamiliennachzug
        {
            get { return _istFamiliennachzug; }
            set
            {
                if (_istFamiliennachzug != value)
                {
                    _istFamiliennachzug = value;
                    OnPropertyChanged("IstFamiliennachzug");
                }
            }
        }
        private bool _istFamiliennachzug;
    
        [DataMember]
        public bool WittwenWittwerWaisenrente
        {
            get { return _wittwenWittwerWaisenrente; }
            set
            {
                if (_wittwenWittwerWaisenrente != value)
                {
                    _wittwenWittwerWaisenrente = value;
                    OnPropertyChanged("WittwenWittwerWaisenrente");
                }
            }
        }
        private bool _wittwenWittwerWaisenrente;
    
        [DataMember]
        public bool Assistenzbeitrag
        {
            get { return _assistenzbeitrag; }
            set
            {
                if (_assistenzbeitrag != value)
                {
                    _assistenzbeitrag = value;
                    OnPropertyChanged("Assistenzbeitrag");
                }
            }
        }
        private bool _assistenzbeitrag;
    
        [DataMember]
        public Nullable<int> IvVerfuegteAssistenzberatung
        {
            get { return _ivVerfuegteAssistenzberatung; }
            set
            {
                if (_ivVerfuegteAssistenzberatung != value)
                {
                    _ivVerfuegteAssistenzberatung = value;
                    OnPropertyChanged("IvVerfuegteAssistenzberatung");
                }
            }
        }
        private Nullable<int> _ivVerfuegteAssistenzberatung;
    
        [DataMember]
        public Nullable<int> BaGrundNichtErwerbstaetigCode
        {
            get { return _baGrundNichtErwerbstaetigCode; }
            set
            {
                if (_baGrundNichtErwerbstaetigCode != value)
                {
                    _baGrundNichtErwerbstaetigCode = value;
                    OnPropertyChanged("BaGrundNichtErwerbstaetigCode");
                }
            }
        }
        private Nullable<int> _baGrundNichtErwerbstaetigCode;
    
        [DataMember]
        public Nullable<System.DateTime> DatumAssistenzbeitrag
        {
            get { return _datumAssistenzbeitrag; }
            set
            {
                if (_datumAssistenzbeitrag != value)
                {
                    _datumAssistenzbeitrag = value;
                    OnPropertyChanged("DatumAssistenzbeitrag");
                }
            }
        }
        private Nullable<System.DateTime> _datumAssistenzbeitrag;
    
        [DataMember]
        public Nullable<System.DateTime> DatumIvVerfuegung
        {
            get { return _datumIvVerfuegung; }
            set
            {
                if (_datumIvVerfuegung != value)
                {
                    _datumIvVerfuegung = value;
                    OnPropertyChanged("DatumIvVerfuegung");
                }
            }
        }
        private Nullable<System.DateTime> _datumIvVerfuegung;
    
        [DataMember]
        public bool IstBerechnungsperson
        {
            get { return _istBerechnungsperson; }
            set
            {
                if (_istBerechnungsperson != value)
                {
                    _istBerechnungsperson = value;
                    OnPropertyChanged("IstBerechnungsperson");
                }
            }
        }
        private bool _istBerechnungsperson;
    
        [DataMember]
        public Nullable<System.DateTime> DatumAsylgesuch
        {
            get { return _datumAsylgesuch; }
            set
            {
                if (_datumAsylgesuch != value)
                {
                    _datumAsylgesuch = value;
                    OnPropertyChanged("DatumAsylgesuch");
                }
            }
        }
        private Nullable<System.DateTime> _datumAsylgesuch;
    
        [DataMember]
        public Nullable<System.DateTime> DatumEinbezugFaz
        {
            get { return _datumEinbezugFaz; }
            set
            {
                if (_datumEinbezugFaz != value)
                {
                    _datumEinbezugFaz = value;
                    OnPropertyChanged("DatumEinbezugFaz");
                }
            }
        }
        private Nullable<System.DateTime> _datumEinbezugFaz;
    
        [DataMember]
        public Nullable<int> BaPersonID_Dossiertraeger
        {
            get { return _baPersonID_Dossiertraeger; }
            set
            {
                if (_baPersonID_Dossiertraeger != value)
                {
                    ChangeTracker.RecordOriginalValue("BaPersonID_Dossiertraeger", _baPersonID_Dossiertraeger);
                    if (!IsDeserializing)
                    {
                        if (BaPerson2 != null && BaPerson2.BaPersonID != value)
                        {
                            BaPerson2 = null;
                        }
                    }
                    _baPersonID_Dossiertraeger = value;
                    OnPropertyChanged("BaPersonID_Dossiertraeger");
                }
            }
        }
        private Nullable<int> _baPersonID_Dossiertraeger;
    
        [DataMember]
        public Nullable<int> KlientenkontoNr
        {
            get { return _klientenkontoNr; }
            set
            {
                if (_klientenkontoNr != value)
                {
                    _klientenkontoNr = value;
                    OnPropertyChanged("KlientenkontoNr");
                }
            }
        }
        private Nullable<int> _klientenkontoNr;
    
        [DataMember]
        public string ZARNummer
        {
            get { return _zARNummer; }
            set
            {
                if (_zARNummer != value)
                {
                    _zARNummer = value;
                    OnPropertyChanged("ZARNummer");
                }
            }
        }
        private string _zARNummer;
    
        [DataMember]
        public bool EinwohnerregisterAktiv
        {
            get { return _einwohnerregisterAktiv; }
            set
            {
                if (_einwohnerregisterAktiv != value)
                {
                    _einwohnerregisterAktiv = value;
                    OnPropertyChanged("EinwohnerregisterAktiv");
                }
            }
        }
        private bool _einwohnerregisterAktiv;
    
        [DataMember]
        public string EinwohnerregisterID
        {
            get { return _einwohnerregisterID; }
            set
            {
                if (_einwohnerregisterID != value)
                {
                    _einwohnerregisterID = value;
                    OnPropertyChanged("EinwohnerregisterID");
                }
            }
        }
        private string _einwohnerregisterID;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<BaAdresse> BaAdresse
        {
            get
            {
                if (_baAdresse == null)
                {
                    _baAdresse = new TrackableCollection<BaAdresse>();
                    _baAdresse.CollectionChanged += FixupBaAdresse;
                }
                return _baAdresse;
            }
            set
            {
                if (!ReferenceEquals(_baAdresse, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged -= FixupBaAdresse;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (BaAdresse item in _baAdresse)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _baAdresse = value;
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged += FixupBaAdresse;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (BaAdresse item in _baAdresse)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("BaAdresse");
                }
            }
        }
        private TrackableCollection<BaAdresse> _baAdresse;
    
        [DataMember]
        public TrackableCollection<FaLeistung> FaLeistung
        {
            get
            {
                if (_faLeistung == null)
                {
                    _faLeistung = new TrackableCollection<FaLeistung>();
                    _faLeistung.CollectionChanged += FixupFaLeistung;
                }
                return _faLeistung;
            }
            set
            {
                if (!ReferenceEquals(_faLeistung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistung != null)
                    {
                        _faLeistung.CollectionChanged -= FixupFaLeistung;
                    }
                    _faLeistung = value;
                    if (_faLeistung != null)
                    {
                        _faLeistung.CollectionChanged += FixupFaLeistung;
                    }
                    OnNavigationPropertyChanged("FaLeistung");
                }
            }
        }
        private TrackableCollection<FaLeistung> _faLeistung;
    
        [DataMember]
        public TrackableCollection<FaLeistung> FaLeistung_Schuldner
        {
            get
            {
                if (_faLeistung_Schuldner == null)
                {
                    _faLeistung_Schuldner = new TrackableCollection<FaLeistung>();
                    _faLeistung_Schuldner.CollectionChanged += FixupFaLeistung_Schuldner;
                }
                return _faLeistung_Schuldner;
            }
            set
            {
                if (!ReferenceEquals(_faLeistung_Schuldner, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistung_Schuldner != null)
                    {
                        _faLeistung_Schuldner.CollectionChanged -= FixupFaLeistung_Schuldner;
                    }
                    _faLeistung_Schuldner = value;
                    if (_faLeistung_Schuldner != null)
                    {
                        _faLeistung_Schuldner.CollectionChanged += FixupFaLeistung_Schuldner;
                    }
                    OnNavigationPropertyChanged("FaLeistung_Schuldner");
                }
            }
        }
        private TrackableCollection<FaLeistung> _faLeistung_Schuldner;
    
        [DataMember]
        public BaInstitution BaInstitution
        {
            get { return _baInstitution; }
            set
            {
                if (!ReferenceEquals(_baInstitution, value))
                {
                    var previousValue = _baInstitution;
                    _baInstitution = value;
                    FixupBaInstitution(previousValue);
                    OnNavigationPropertyChanged("BaInstitution");
                }
            }
        }
        private BaInstitution _baInstitution;
    
        [DataMember]
        public BaLand BaLand_Nationalitaet
        {
            get { return _baLand_Nationalitaet; }
            set
            {
                if (!ReferenceEquals(_baLand_Nationalitaet, value))
                {
                    var previousValue = _baLand_Nationalitaet;
                    _baLand_Nationalitaet = value;
                    FixupBaLand_Nationalitaet(previousValue);
                    OnNavigationPropertyChanged("BaLand_Nationalitaet");
                }
            }
        }
        private BaLand _baLand_Nationalitaet;
    
        [DataMember]
        public BaLand BaLand1
        {
            get { return _baLand1; }
            set
            {
                if (!ReferenceEquals(_baLand1, value))
                {
                    var previousValue = _baLand1;
                    _baLand1 = value;
                    FixupBaLand1(previousValue);
                    OnNavigationPropertyChanged("BaLand1");
                }
            }
        }
        private BaLand _baLand1;
    
        [DataMember]
        public BaLand BaLand2
        {
            get { return _baLand2; }
            set
            {
                if (!ReferenceEquals(_baLand2, value))
                {
                    var previousValue = _baLand2;
                    _baLand2 = value;
                    FixupBaLand2(previousValue);
                    OnNavigationPropertyChanged("BaLand2");
                }
            }
        }
        private BaLand _baLand2;
    
        [DataMember]
        public BaLand BaLand3
        {
            get { return _baLand3; }
            set
            {
                if (!ReferenceEquals(_baLand3, value))
                {
                    var previousValue = _baLand3;
                    _baLand3 = value;
                    FixupBaLand3(previousValue);
                    OnNavigationPropertyChanged("BaLand3");
                }
            }
        }
        private BaLand _baLand3;
    
        [DataMember]
        public BaLand BaLand4
        {
            get { return _baLand4; }
            set
            {
                if (!ReferenceEquals(_baLand4, value))
                {
                    var previousValue = _baLand4;
                    _baLand4 = value;
                    FixupBaLand4(previousValue);
                    OnNavigationPropertyChanged("BaLand4");
                }
            }
        }
        private BaLand _baLand4;
    
        [DataMember]
        public TrackableCollection<FaFall> FaFall
        {
            get
            {
                if (_faFall == null)
                {
                    _faFall = new TrackableCollection<FaFall>();
                    _faFall.CollectionChanged += FixupFaFall;
                }
                return _faFall;
            }
            set
            {
                if (!ReferenceEquals(_faFall, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faFall != null)
                    {
                        _faFall.CollectionChanged -= FixupFaFall;
                    }
                    _faFall = value;
                    if (_faFall != null)
                    {
                        _faFall.CollectionChanged += FixupFaFall;
                    }
                    OnNavigationPropertyChanged("FaFall");
                }
            }
        }
        private TrackableCollection<FaFall> _faFall;
    
        [DataMember]
        public TrackableCollection<BaZahlungsweg> BaZahlungsweg
        {
            get
            {
                if (_baZahlungsweg == null)
                {
                    _baZahlungsweg = new TrackableCollection<BaZahlungsweg>();
                    _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                }
                return _baZahlungsweg;
            }
            set
            {
                if (!ReferenceEquals(_baZahlungsweg, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged -= FixupBaZahlungsweg;
                    }
                    _baZahlungsweg = value;
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                    }
                    OnNavigationPropertyChanged("BaZahlungsweg");
                }
            }
        }
        private TrackableCollection<BaZahlungsweg> _baZahlungsweg;
    
        [DataMember]
        public TrackableCollection<FbPeriode> FbPeriode
        {
            get
            {
                if (_fbPeriode == null)
                {
                    _fbPeriode = new TrackableCollection<FbPeriode>();
                    _fbPeriode.CollectionChanged += FixupFbPeriode;
                }
                return _fbPeriode;
            }
            set
            {
                if (!ReferenceEquals(_fbPeriode, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fbPeriode != null)
                    {
                        _fbPeriode.CollectionChanged -= FixupFbPeriode;
                    }
                    _fbPeriode = value;
                    if (_fbPeriode != null)
                    {
                        _fbPeriode.CollectionChanged += FixupFbPeriode;
                    }
                    OnNavigationPropertyChanged("FbPeriode");
                }
            }
        }
        private TrackableCollection<FbPeriode> _fbPeriode;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsAdressatOf
        {
            get
            {
                if (_faDokumente_IsAdressatOf == null)
                {
                    _faDokumente_IsAdressatOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsAdressatOf.CollectionChanged += FixupFaDokumente_IsAdressatOf;
                }
                return _faDokumente_IsAdressatOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsAdressatOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsAdressatOf != null)
                    {
                        _faDokumente_IsAdressatOf.CollectionChanged -= FixupFaDokumente_IsAdressatOf;
                    }
                    _faDokumente_IsAdressatOf = value;
                    if (_faDokumente_IsAdressatOf != null)
                    {
                        _faDokumente_IsAdressatOf.CollectionChanged += FixupFaDokumente_IsAdressatOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsAdressatOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsAdressatOf;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsLtOf
        {
            get
            {
                if (_faDokumente_IsLtOf == null)
                {
                    _faDokumente_IsLtOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsLtOf.CollectionChanged += FixupFaDokumente_IsLtOf;
                }
                return _faDokumente_IsLtOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsLtOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsLtOf != null)
                    {
                        _faDokumente_IsLtOf.CollectionChanged -= FixupFaDokumente_IsLtOf;
                    }
                    _faDokumente_IsLtOf = value;
                    if (_faDokumente_IsLtOf != null)
                    {
                        _faDokumente_IsLtOf.CollectionChanged += FixupFaDokumente_IsLtOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsLtOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsLtOf;
    
        [DataMember]
        public TrackableCollection<XTask> XTask
        {
            get
            {
                if (_xTask == null)
                {
                    _xTask = new TrackableCollection<XTask>();
                    _xTask.CollectionChanged += FixupXTask;
                }
                return _xTask;
            }
            set
            {
                if (!ReferenceEquals(_xTask, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xTask != null)
                    {
                        _xTask.CollectionChanged -= FixupXTask;
                    }
                    _xTask = value;
                    if (_xTask != null)
                    {
                        _xTask.CollectionChanged += FixupXTask;
                    }
                    OnNavigationPropertyChanged("XTask");
                }
            }
        }
        private TrackableCollection<XTask> _xTask;
    
        [DataMember]
        public TrackableCollection<FaWeisung_BaPerson> FaWeisung_BaPerson
        {
            get
            {
                if (_faWeisung_BaPerson == null)
                {
                    _faWeisung_BaPerson = new TrackableCollection<FaWeisung_BaPerson>();
                    _faWeisung_BaPerson.CollectionChanged += FixupFaWeisung_BaPerson;
                }
                return _faWeisung_BaPerson;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_BaPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_BaPerson != null)
                    {
                        _faWeisung_BaPerson.CollectionChanged -= FixupFaWeisung_BaPerson;
                    }
                    _faWeisung_BaPerson = value;
                    if (_faWeisung_BaPerson != null)
                    {
                        _faWeisung_BaPerson.CollectionChanged += FixupFaWeisung_BaPerson;
                    }
                    OnNavigationPropertyChanged("FaWeisung_BaPerson");
                }
            }
        }
        private TrackableCollection<FaWeisung_BaPerson> _faWeisung_BaPerson;
    
        [DataMember]
        public TrackableCollection<FaKategorisierung> FaKategorisierung
        {
            get
            {
                if (_faKategorisierung == null)
                {
                    _faKategorisierung = new TrackableCollection<FaKategorisierung>();
                    _faKategorisierung.CollectionChanged += FixupFaKategorisierung;
                }
                return _faKategorisierung;
            }
            set
            {
                if (!ReferenceEquals(_faKategorisierung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faKategorisierung != null)
                    {
                        _faKategorisierung.CollectionChanged -= FixupFaKategorisierung;
                    }
                    _faKategorisierung = value;
                    if (_faKategorisierung != null)
                    {
                        _faKategorisierung.CollectionChanged += FixupFaKategorisierung;
                    }
                    OnNavigationPropertyChanged("FaKategorisierung");
                }
            }
        }
        private TrackableCollection<FaKategorisierung> _faKategorisierung;
    
        [DataMember]
        public BaGemeinde BaGemeinde
        {
            get { return _baGemeinde; }
            set
            {
                if (!ReferenceEquals(_baGemeinde, value))
                {
                    var previousValue = _baGemeinde;
                    _baGemeinde = value;
                    FixupBaGemeinde(previousValue);
                    OnNavigationPropertyChanged("BaGemeinde");
                }
            }
        }
        private BaGemeinde _baGemeinde;
    
        [DataMember]
        public BaGemeinde BaGemeinde1
        {
            get { return _baGemeinde1; }
            set
            {
                if (!ReferenceEquals(_baGemeinde1, value))
                {
                    var previousValue = _baGemeinde1;
                    _baGemeinde1 = value;
                    FixupBaGemeinde1(previousValue);
                    OnNavigationPropertyChanged("BaGemeinde1");
                }
            }
        }
        private BaGemeinde _baGemeinde1;
    
        [DataMember]
        public TrackableCollection<BaGesundheit> BaGesundheit
        {
            get
            {
                if (_baGesundheit == null)
                {
                    _baGesundheit = new TrackableCollection<BaGesundheit>();
                    _baGesundheit.CollectionChanged += FixupBaGesundheit;
                }
                return _baGesundheit;
            }
            set
            {
                if (!ReferenceEquals(_baGesundheit, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baGesundheit != null)
                    {
                        _baGesundheit.CollectionChanged -= FixupBaGesundheit;
                    }
                    _baGesundheit = value;
                    if (_baGesundheit != null)
                    {
                        _baGesundheit.CollectionChanged += FixupBaGesundheit;
                    }
                    OnNavigationPropertyChanged("BaGesundheit");
                }
            }
        }
        private TrackableCollection<BaGesundheit> _baGesundheit;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage> FaDokumentAblage
        {
            get
            {
                if (_faDokumentAblage == null)
                {
                    _faDokumentAblage = new TrackableCollection<FaDokumentAblage>();
                    _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                }
                return _faDokumentAblage;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged -= FixupFaDokumentAblage;
                    }
                    _faDokumentAblage = value;
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage> _faDokumentAblage;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage_BaPerson> FaDokumentAblage_BaPerson
        {
            get
            {
                if (_faDokumentAblage_BaPerson == null)
                {
                    _faDokumentAblage_BaPerson = new TrackableCollection<FaDokumentAblage_BaPerson>();
                    _faDokumentAblage_BaPerson.CollectionChanged += FixupFaDokumentAblage_BaPerson;
                }
                return _faDokumentAblage_BaPerson;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage_BaPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage_BaPerson != null)
                    {
                        _faDokumentAblage_BaPerson.CollectionChanged -= FixupFaDokumentAblage_BaPerson;
                    }
                    _faDokumentAblage_BaPerson = value;
                    if (_faDokumentAblage_BaPerson != null)
                    {
                        _faDokumentAblage_BaPerson.CollectionChanged += FixupFaDokumentAblage_BaPerson;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage_BaPerson");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage_BaPerson> _faDokumentAblage_BaPerson;
    
        [DataMember]
        public TrackableCollection<BaPerson_Relation> BaPerson_Relation1
        {
            get
            {
                if (_baPerson_Relation1 == null)
                {
                    _baPerson_Relation1 = new TrackableCollection<BaPerson_Relation>();
                    _baPerson_Relation1.CollectionChanged += FixupBaPerson_Relation1;
                }
                return _baPerson_Relation1;
            }
            set
            {
                if (!ReferenceEquals(_baPerson_Relation1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson_Relation1 != null)
                    {
                        _baPerson_Relation1.CollectionChanged -= FixupBaPerson_Relation1;
                    }
                    _baPerson_Relation1 = value;
                    if (_baPerson_Relation1 != null)
                    {
                        _baPerson_Relation1.CollectionChanged += FixupBaPerson_Relation1;
                    }
                    OnNavigationPropertyChanged("BaPerson_Relation1");
                }
            }
        }
        private TrackableCollection<BaPerson_Relation> _baPerson_Relation1;
    
        [DataMember]
        public TrackableCollection<BaPerson_Relation> BaPerson_Relation2
        {
            get
            {
                if (_baPerson_Relation2 == null)
                {
                    _baPerson_Relation2 = new TrackableCollection<BaPerson_Relation>();
                    _baPerson_Relation2.CollectionChanged += FixupBaPerson_Relation2;
                }
                return _baPerson_Relation2;
            }
            set
            {
                if (!ReferenceEquals(_baPerson_Relation2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson_Relation2 != null)
                    {
                        _baPerson_Relation2.CollectionChanged -= FixupBaPerson_Relation2;
                    }
                    _baPerson_Relation2 = value;
                    if (_baPerson_Relation2 != null)
                    {
                        _baPerson_Relation2.CollectionChanged += FixupBaPerson_Relation2;
                    }
                    OnNavigationPropertyChanged("BaPerson_Relation2");
                }
            }
        }
        private TrackableCollection<BaPerson_Relation> _baPerson_Relation2;
    
        [DataMember]
        public TrackableCollection<BaPerson_BaInstitution> BaPerson_BaInstitution
        {
            get
            {
                if (_baPerson_BaInstitution == null)
                {
                    _baPerson_BaInstitution = new TrackableCollection<BaPerson_BaInstitution>();
                    _baPerson_BaInstitution.CollectionChanged += FixupBaPerson_BaInstitution;
                }
                return _baPerson_BaInstitution;
            }
            set
            {
                if (!ReferenceEquals(_baPerson_BaInstitution, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson_BaInstitution != null)
                    {
                        _baPerson_BaInstitution.CollectionChanged -= FixupBaPerson_BaInstitution;
                    }
                    _baPerson_BaInstitution = value;
                    if (_baPerson_BaInstitution != null)
                    {
                        _baPerson_BaInstitution.CollectionChanged += FixupBaPerson_BaInstitution;
                    }
                    OnNavigationPropertyChanged("BaPerson_BaInstitution");
                }
            }
        }
        private TrackableCollection<BaPerson_BaInstitution> _baPerson_BaInstitution;
    
        [DataMember]
        public TrackableCollection<KesAuftrag_BaPerson> KesAuftrag_BaPerson
        {
            get
            {
                if (_kesAuftrag_BaPerson == null)
                {
                    _kesAuftrag_BaPerson = new TrackableCollection<KesAuftrag_BaPerson>();
                    _kesAuftrag_BaPerson.CollectionChanged += FixupKesAuftrag_BaPerson;
                }
                return _kesAuftrag_BaPerson;
            }
            set
            {
                if (!ReferenceEquals(_kesAuftrag_BaPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesAuftrag_BaPerson != null)
                    {
                        _kesAuftrag_BaPerson.CollectionChanged -= FixupKesAuftrag_BaPerson;
                    }
                    _kesAuftrag_BaPerson = value;
                    if (_kesAuftrag_BaPerson != null)
                    {
                        _kesAuftrag_BaPerson.CollectionChanged += FixupKesAuftrag_BaPerson;
                    }
                    OnNavigationPropertyChanged("KesAuftrag_BaPerson");
                }
            }
        }
        private TrackableCollection<KesAuftrag_BaPerson> _kesAuftrag_BaPerson;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument
        {
            get
            {
                if (_kesDokument == null)
                {
                    _kesDokument = new TrackableCollection<KesDokument>();
                    _kesDokument.CollectionChanged += FixupKesDokument;
                }
                return _kesDokument;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged -= FixupKesDokument;
                    }
                    _kesDokument = value;
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged += FixupKesDokument;
                    }
                    OnNavigationPropertyChanged("KesDokument");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument;
    
        [DataMember]
        public TrackableCollection<KesVerlauf> KesVerlauf
        {
            get
            {
                if (_kesVerlauf == null)
                {
                    _kesVerlauf = new TrackableCollection<KesVerlauf>();
                    _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                }
                return _kesVerlauf;
            }
            set
            {
                if (!ReferenceEquals(_kesVerlauf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged -= FixupKesVerlauf;
                    }
                    _kesVerlauf = value;
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                    }
                    OnNavigationPropertyChanged("KesVerlauf");
                }
            }
        }
        private TrackableCollection<KesVerlauf> _kesVerlauf;
    
        [DataMember]
        public BaGemeinde BaGemeinde2
        {
            get { return _baGemeinde2; }
            set
            {
                if (!ReferenceEquals(_baGemeinde2, value))
                {
                    var previousValue = _baGemeinde2;
                    _baGemeinde2 = value;
                    FixupBaGemeinde2(previousValue);
                    OnNavigationPropertyChanged("BaGemeinde2");
                }
            }
        }
        private BaGemeinde _baGemeinde2;
    
        [DataMember]
        public BaGemeinde BaGemeinde3
        {
            get { return _baGemeinde3; }
            set
            {
                if (!ReferenceEquals(_baGemeinde3, value))
                {
                    var previousValue = _baGemeinde3;
                    _baGemeinde3 = value;
                    FixupBaGemeinde3(previousValue);
                    OnNavigationPropertyChanged("BaGemeinde3");
                }
            }
        }
        private BaGemeinde _baGemeinde3;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson1
        {
            get
            {
                if (_baPerson1 == null)
                {
                    _baPerson1 = new TrackableCollection<BaPerson>();
                    _baPerson1.CollectionChanged += FixupBaPerson1;
                }
                return _baPerson1;
            }
            set
            {
                if (!ReferenceEquals(_baPerson1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson1 != null)
                    {
                        _baPerson1.CollectionChanged -= FixupBaPerson1;
                    }
                    _baPerson1 = value;
                    if (_baPerson1 != null)
                    {
                        _baPerson1.CollectionChanged += FixupBaPerson1;
                    }
                    OnNavigationPropertyChanged("BaPerson1");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson1;
    
        [DataMember]
        public BaPerson BaPerson2
        {
            get { return _baPerson2; }
            set
            {
                if (!ReferenceEquals(_baPerson2, value))
                {
                    var previousValue = _baPerson2;
                    _baPerson2 = value;
                    FixupBaPerson2(previousValue);
                    OnNavigationPropertyChanged("BaPerson2");
                }
            }
        }
        private BaPerson _baPerson2;
    
        [DataMember]
        public TrackableCollection<BaEinwohnerregisterPersonStatus> BaEinwohnerregisterPersonStatus
        {
            get
            {
                if (_baEinwohnerregisterPersonStatus == null)
                {
                    _baEinwohnerregisterPersonStatus = new TrackableCollection<BaEinwohnerregisterPersonStatus>();
                    _baEinwohnerregisterPersonStatus.CollectionChanged += FixupBaEinwohnerregisterPersonStatus;
                }
                return _baEinwohnerregisterPersonStatus;
            }
            set
            {
                if (!ReferenceEquals(_baEinwohnerregisterPersonStatus, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baEinwohnerregisterPersonStatus != null)
                    {
                        _baEinwohnerregisterPersonStatus.CollectionChanged -= FixupBaEinwohnerregisterPersonStatus;
                    }
                    _baEinwohnerregisterPersonStatus = value;
                    if (_baEinwohnerregisterPersonStatus != null)
                    {
                        _baEinwohnerregisterPersonStatus.CollectionChanged += FixupBaEinwohnerregisterPersonStatus;
                    }
                    OnNavigationPropertyChanged("BaEinwohnerregisterPersonStatus");
                }
            }
        }
        private TrackableCollection<BaEinwohnerregisterPersonStatus> _baEinwohnerregisterPersonStatus;
    
        [DataMember]
        public TrackableCollection<BaEinwohnerregisterPersonAnAbmeldung> BaEinwohnerregisterPersonAnAbmeldung
        {
            get
            {
                if (_baEinwohnerregisterPersonAnAbmeldung == null)
                {
                    _baEinwohnerregisterPersonAnAbmeldung = new TrackableCollection<BaEinwohnerregisterPersonAnAbmeldung>();
                    _baEinwohnerregisterPersonAnAbmeldung.CollectionChanged += FixupBaEinwohnerregisterPersonAnAbmeldung;
                }
                return _baEinwohnerregisterPersonAnAbmeldung;
            }
            set
            {
                if (!ReferenceEquals(_baEinwohnerregisterPersonAnAbmeldung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baEinwohnerregisterPersonAnAbmeldung != null)
                    {
                        _baEinwohnerregisterPersonAnAbmeldung.CollectionChanged -= FixupBaEinwohnerregisterPersonAnAbmeldung;
                    }
                    _baEinwohnerregisterPersonAnAbmeldung = value;
                    if (_baEinwohnerregisterPersonAnAbmeldung != null)
                    {
                        _baEinwohnerregisterPersonAnAbmeldung.CollectionChanged += FixupBaEinwohnerregisterPersonAnAbmeldung;
                    }
                    OnNavigationPropertyChanged("BaEinwohnerregisterPersonAnAbmeldung");
                }
            }
        }
        private TrackableCollection<BaEinwohnerregisterPersonAnAbmeldung> _baEinwohnerregisterPersonAnAbmeldung;
    
        [DataMember]
        public TrackableCollection<ServiceProcessError> ServiceProcessError
        {
            get
            {
                if (_serviceProcessError == null)
                {
                    _serviceProcessError = new TrackableCollection<ServiceProcessError>();
                    _serviceProcessError.CollectionChanged += FixupServiceProcessError;
                }
                return _serviceProcessError;
            }
            set
            {
                if (!ReferenceEquals(_serviceProcessError, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_serviceProcessError != null)
                    {
                        _serviceProcessError.CollectionChanged -= FixupServiceProcessError;
                    }
                    _serviceProcessError = value;
                    if (_serviceProcessError != null)
                    {
                        _serviceProcessError.CollectionChanged += FixupServiceProcessError;
                    }
                    OnNavigationPropertyChanged("ServiceProcessError");
                }
            }
        }
        private TrackableCollection<ServiceProcessError> _serviceProcessError;
    
        [DataMember]
        public TrackableCollection<FaFallPerson> FaFallPerson
        {
            get
            {
                if (_faFallPerson == null)
                {
                    _faFallPerson = new TrackableCollection<FaFallPerson>();
                    _faFallPerson.CollectionChanged += FixupFaFallPerson;
                }
                return _faFallPerson;
            }
            set
            {
                if (!ReferenceEquals(_faFallPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faFallPerson != null)
                    {
                        _faFallPerson.CollectionChanged -= FixupFaFallPerson;
                    }
                    _faFallPerson = value;
                    if (_faFallPerson != null)
                    {
                        _faFallPerson.CollectionChanged += FixupFaFallPerson;
                    }
                    OnNavigationPropertyChanged("FaFallPerson");
                }
            }
        }
        private TrackableCollection<FaFallPerson> _faFallPerson;
    
        [DataMember]
        public TrackableCollection<BaPraemienverbilligung> BaPraemienverbilligung
        {
            get
            {
                if (_baPraemienverbilligung == null)
                {
                    _baPraemienverbilligung = new TrackableCollection<BaPraemienverbilligung>();
                    _baPraemienverbilligung.CollectionChanged += FixupBaPraemienverbilligung;
                }
                return _baPraemienverbilligung;
            }
            set
            {
                if (!ReferenceEquals(_baPraemienverbilligung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPraemienverbilligung != null)
                    {
                        _baPraemienverbilligung.CollectionChanged -= FixupBaPraemienverbilligung;
                    }
                    _baPraemienverbilligung = value;
                    if (_baPraemienverbilligung != null)
                    {
                        _baPraemienverbilligung.CollectionChanged += FixupBaPraemienverbilligung;
                    }
                    OnNavigationPropertyChanged("BaPraemienverbilligung");
                }
            }
        }
        private TrackableCollection<BaPraemienverbilligung> _baPraemienverbilligung;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaAdresse.Clear();
            FaLeistung.Clear();
            FaLeistung_Schuldner.Clear();
            BaInstitution = null;
            BaLand_Nationalitaet = null;
            BaLand1 = null;
            BaLand2 = null;
            BaLand3 = null;
            BaLand4 = null;
            FaFall.Clear();
            BaZahlungsweg.Clear();
            FbPeriode.Clear();
            FaDokumente_IsAdressatOf.Clear();
            FaDokumente_IsLtOf.Clear();
            XTask.Clear();
            FaWeisung_BaPerson.Clear();
            FaKategorisierung.Clear();
            BaGemeinde = null;
            BaGemeinde1 = null;
            BaGesundheit.Clear();
            FaDokumentAblage.Clear();
            FaDokumentAblage_BaPerson.Clear();
            BaPerson_Relation1.Clear();
            BaPerson_Relation2.Clear();
            BaPerson_BaInstitution.Clear();
            KesAuftrag_BaPerson.Clear();
            KesDokument.Clear();
            KesVerlauf.Clear();
            BaGemeinde2 = null;
            BaGemeinde3 = null;
            BaPerson1.Clear();
            BaPerson2 = null;
            BaEinwohnerregisterPersonStatus.Clear();
            BaEinwohnerregisterPersonAnAbmeldung.Clear();
            ServiceProcessError.Clear();
            FaFallPerson.Clear();
            BaPraemienverbilligung.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaInstitution(BaInstitution previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson.Contains(this))
            {
                previousValue.BaPerson.Remove(this);
            }
    
            if (BaInstitution != null)
            {
                if (!BaInstitution.BaPerson.Contains(this))
                {
                    BaInstitution.BaPerson.Add(this);
                }
    
                Kopfquote_BaInstitutionID = BaInstitution.BaInstitutionID;
            }
            else if (!skipKeys)
            {
                Kopfquote_BaInstitutionID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaInstitution")
                    && (ChangeTracker.OriginalValues["BaInstitution"] == BaInstitution))
                {
                    ChangeTracker.OriginalValues.Remove("BaInstitution");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaInstitution", previousValue);
                }
                if (BaInstitution != null && !BaInstitution.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaInstitution.StartTracking();
                }
            }
        }
    
        private void FixupBaLand_Nationalitaet(BaLand previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson.Contains(this))
            {
                previousValue.BaPerson.Remove(this);
            }
    
            if (BaLand_Nationalitaet != null)
            {
                if (!BaLand_Nationalitaet.BaPerson.Contains(this))
                {
                    BaLand_Nationalitaet.BaPerson.Add(this);
                }
    
                NationalitaetCode = BaLand_Nationalitaet.BaLandID;
            }
            else if (!skipKeys)
            {
                NationalitaetCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaLand_Nationalitaet")
                    && (ChangeTracker.OriginalValues["BaLand_Nationalitaet"] == BaLand_Nationalitaet))
                {
                    ChangeTracker.OriginalValues.Remove("BaLand_Nationalitaet");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaLand_Nationalitaet", previousValue);
                }
                if (BaLand_Nationalitaet != null && !BaLand_Nationalitaet.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaLand_Nationalitaet.StartTracking();
                }
            }
        }
    
        private void FixupBaLand1(BaLand previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson1.Contains(this))
            {
                previousValue.BaPerson1.Remove(this);
            }
    
            if (BaLand1 != null)
            {
                if (!BaLand1.BaPerson1.Contains(this))
                {
                    BaLand1.BaPerson1.Add(this);
                }
    
                UntWohnsitzLandCode = BaLand1.BaLandID;
            }
            else if (!skipKeys)
            {
                UntWohnsitzLandCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaLand1")
                    && (ChangeTracker.OriginalValues["BaLand1"] == BaLand1))
                {
                    ChangeTracker.OriginalValues.Remove("BaLand1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaLand1", previousValue);
                }
                if (BaLand1 != null && !BaLand1.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaLand1.StartTracking();
                }
            }
        }
    
        private void FixupBaLand2(BaLand previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson2.Contains(this))
            {
                previousValue.BaPerson2.Remove(this);
            }
    
            if (BaLand2 != null)
            {
                if (!BaLand2.BaPerson2.Contains(this))
                {
                    BaLand2.BaPerson2.Add(this);
                }
    
                WegzugLandCode = BaLand2.BaLandID;
            }
            else if (!skipKeys)
            {
                WegzugLandCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaLand2")
                    && (ChangeTracker.OriginalValues["BaLand2"] == BaLand2))
                {
                    ChangeTracker.OriginalValues.Remove("BaLand2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaLand2", previousValue);
                }
                if (BaLand2 != null && !BaLand2.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaLand2.StartTracking();
                }
            }
        }
    
        private void FixupBaLand3(BaLand previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson3.Contains(this))
            {
                previousValue.BaPerson3.Remove(this);
            }
    
            if (BaLand3 != null)
            {
                if (!BaLand3.BaPerson3.Contains(this))
                {
                    BaLand3.BaPerson3.Add(this);
                }
    
                ZuzugGdeLandCode = BaLand3.BaLandID;
            }
            else if (!skipKeys)
            {
                ZuzugGdeLandCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaLand3")
                    && (ChangeTracker.OriginalValues["BaLand3"] == BaLand3))
                {
                    ChangeTracker.OriginalValues.Remove("BaLand3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaLand3", previousValue);
                }
                if (BaLand3 != null && !BaLand3.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaLand3.StartTracking();
                }
            }
        }
    
        private void FixupBaLand4(BaLand previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson4.Contains(this))
            {
                previousValue.BaPerson4.Remove(this);
            }
    
            if (BaLand4 != null)
            {
                if (!BaLand4.BaPerson4.Contains(this))
                {
                    BaLand4.BaPerson4.Add(this);
                }
    
                ZuzugKtLandCode = BaLand4.BaLandID;
            }
            else if (!skipKeys)
            {
                ZuzugKtLandCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaLand4")
                    && (ChangeTracker.OriginalValues["BaLand4"] == BaLand4))
                {
                    ChangeTracker.OriginalValues.Remove("BaLand4");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaLand4", previousValue);
                }
                if (BaLand4 != null && !BaLand4.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaLand4.StartTracking();
                }
            }
        }
    
        private void FixupBaGemeinde(BaGemeinde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson.Contains(this))
            {
                previousValue.BaPerson.Remove(this);
            }
    
            if (BaGemeinde != null)
            {
                if (!BaGemeinde.BaPerson.Contains(this))
                {
                    BaGemeinde.BaPerson.Add(this);
                }
    
                HeimatgemeindeBaGemeindeID = BaGemeinde.BaGemeindeID;
            }
            else if (!skipKeys)
            {
                HeimatgemeindeBaGemeindeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaGemeinde")
                    && (ChangeTracker.OriginalValues["BaGemeinde"] == BaGemeinde))
                {
                    ChangeTracker.OriginalValues.Remove("BaGemeinde");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaGemeinde", previousValue);
                }
                if (BaGemeinde != null && !BaGemeinde.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaGemeinde.StartTracking();
                }
            }
        }
    
        private void FixupBaGemeinde1(BaGemeinde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson1.Contains(this))
            {
                previousValue.BaPerson1.Remove(this);
            }
    
            if (BaGemeinde1 != null)
            {
                if (!BaGemeinde1.BaPerson1.Contains(this))
                {
                    BaGemeinde1.BaPerson1.Add(this);
                }
    
                HeimatgemeindeCode = BaGemeinde1.BaGemeindeID;
            }
            else if (!skipKeys)
            {
                HeimatgemeindeCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaGemeinde1")
                    && (ChangeTracker.OriginalValues["BaGemeinde1"] == BaGemeinde1))
                {
                    ChangeTracker.OriginalValues.Remove("BaGemeinde1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaGemeinde1", previousValue);
                }
                if (BaGemeinde1 != null && !BaGemeinde1.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaGemeinde1.StartTracking();
                }
            }
        }
    
        private void FixupBaGemeinde2(BaGemeinde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson2.Contains(this))
            {
                previousValue.BaPerson2.Remove(this);
            }
    
            if (BaGemeinde2 != null)
            {
                if (!BaGemeinde2.BaPerson2.Contains(this))
                {
                    BaGemeinde2.BaPerson2.Add(this);
                }
    
                WegzugOrtCode = BaGemeinde2.BaGemeindeID;
            }
            else if (!skipKeys)
            {
                WegzugOrtCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaGemeinde2")
                    && (ChangeTracker.OriginalValues["BaGemeinde2"] == BaGemeinde2))
                {
                    ChangeTracker.OriginalValues.Remove("BaGemeinde2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaGemeinde2", previousValue);
                }
                if (BaGemeinde2 != null && !BaGemeinde2.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaGemeinde2.StartTracking();
                }
            }
        }
    
        private void FixupBaGemeinde3(BaGemeinde previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson3.Contains(this))
            {
                previousValue.BaPerson3.Remove(this);
            }
    
            if (BaGemeinde3 != null)
            {
                if (!BaGemeinde3.BaPerson3.Contains(this))
                {
                    BaGemeinde3.BaPerson3.Add(this);
                }
    
                ZuzugGdeOrtCode = BaGemeinde3.BaGemeindeID;
            }
            else if (!skipKeys)
            {
                ZuzugGdeOrtCode = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaGemeinde3")
                    && (ChangeTracker.OriginalValues["BaGemeinde3"] == BaGemeinde3))
                {
                    ChangeTracker.OriginalValues.Remove("BaGemeinde3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaGemeinde3", previousValue);
                }
                if (BaGemeinde3 != null && !BaGemeinde3.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaGemeinde3.StartTracking();
                }
            }
        }
    
        private void FixupBaPerson2(BaPerson previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaPerson1.Contains(this))
            {
                previousValue.BaPerson1.Remove(this);
            }
    
            if (BaPerson2 != null)
            {
                if (!BaPerson2.BaPerson1.Contains(this))
                {
                    BaPerson2.BaPerson1.Add(this);
                }
    
                BaPersonID_Dossiertraeger = BaPerson2.BaPersonID;
            }
            else if (!skipKeys)
            {
                BaPersonID_Dossiertraeger = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaPerson2")
                    && (ChangeTracker.OriginalValues["BaPerson2"] == BaPerson2))
                {
                    ChangeTracker.OriginalValues.Remove("BaPerson2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaPerson2", previousValue);
                }
                if (BaPerson2 != null && !BaPerson2.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaPerson2.StartTracking();
                }
            }
        }
    
        private void FixupBaAdresse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaAdresse item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaAdresse", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaAdresse item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaAdresse", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupFaLeistung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistung item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistung item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistung", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistung_Schuldner(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistung item in e.NewItems)
                {
                    item.SchuldnerBaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistung_Schuldner", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistung item in e.OldItems)
                {
                    if (ReferenceEquals(item.SchuldnerBaPerson, this))
                    {
                        item.SchuldnerBaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistung_Schuldner", item);
                    }
                }
            }
        }
    
        private void FixupFaFall(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaFall item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaFall", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaFall item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaFall", item);
                    }
                }
            }
        }
    
        private void FixupBaZahlungsweg(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaZahlungsweg item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaZahlungsweg item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
        }
    
        private void FixupFbPeriode(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FbPeriode item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FbPeriode", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FbPeriode item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FbPeriode", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsAdressatOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.BaPerson_Adressat = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsAdressatOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson_Adressat, this))
                    {
                        item.BaPerson_Adressat = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsAdressatOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsLtOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.BaPerson_LT = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsLtOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson_LT, this))
                    {
                        item.BaPerson_LT = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsLtOf", item);
                    }
                }
            }
        }
    
        private void FixupXTask(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XTask item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XTask", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XTask item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XTask", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_BaPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung_BaPerson item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_BaPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung_BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_BaPerson", item);
                    }
                }
            }
        }
    
        private void FixupFaKategorisierung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaKategorisierung item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaKategorisierung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaKategorisierung item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaKategorisierung", item);
                    }
                }
            }
        }
    
        private void FixupBaGesundheit(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaGesundheit item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaGesundheit", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaGesundheit item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaGesundheit", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage_BaPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage_BaPerson item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage_BaPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage_BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage_BaPerson", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson_Relation1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson_Relation item in e.NewItems)
                {
                    item.BaPerson1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson_Relation1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson_Relation item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson1, this))
                    {
                        item.BaPerson1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson_Relation1", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson_Relation2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson_Relation item in e.NewItems)
                {
                    item.BaPerson2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson_Relation2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson_Relation item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson2, this))
                    {
                        item.BaPerson2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson_Relation2", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson_BaInstitution(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson_BaInstitution item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson_BaInstitution", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson_BaInstitution item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson_BaInstitution", item);
                    }
                }
            }
        }
    
        private void FixupKesAuftrag_BaPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesAuftrag_BaPerson item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesAuftrag_BaPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesAuftrag_BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesAuftrag_BaPerson", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument", item);
                    }
                }
            }
        }
    
        private void FixupKesVerlauf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesVerlauf item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesVerlauf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesVerlauf item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesVerlauf", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaPerson2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson2, this))
                    {
                        item.BaPerson2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson1", item);
                    }
                }
            }
        }
    
        private void FixupBaEinwohnerregisterPersonStatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaEinwohnerregisterPersonStatus item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaEinwohnerregisterPersonStatus", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaEinwohnerregisterPersonStatus item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaEinwohnerregisterPersonStatus", item);
                    }
                }
            }
        }
    
        private void FixupBaEinwohnerregisterPersonAnAbmeldung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaEinwohnerregisterPersonAnAbmeldung item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaEinwohnerregisterPersonAnAbmeldung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaEinwohnerregisterPersonAnAbmeldung item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaEinwohnerregisterPersonAnAbmeldung", item);
                    }
                }
            }
        }
    
        private void FixupServiceProcessError(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ServiceProcessError item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ServiceProcessError", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ServiceProcessError item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ServiceProcessError", item);
                    }
                }
            }
        }
    
        private void FixupFaFallPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaFallPerson item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaFallPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaFallPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaFallPerson", item);
                    }
                }
            }
        }
    
        private void FixupBaPraemienverbilligung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPraemienverbilligung item in e.NewItems)
                {
                    item.BaPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPraemienverbilligung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPraemienverbilligung item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaPerson, this))
                    {
                        item.BaPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPraemienverbilligung", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaPerson)obj;
    		if (!_baPersonID.Equals(entity.BaPersonID) || _baPersonID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baPersonID.GetHashCode();
        }

        #endregion

    }
}
