//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(XUser))]
    [KnownType(typeof(VmPosition))]
    public partial class VmKlientenbudget: EntityBase<VmKlientenbudget>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int VmKlientenbudgetID
        {
            get { return _vmKlientenbudgetID; }
            set
            {
                if (_vmKlientenbudgetID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'VmKlientenbudgetID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _vmKlientenbudgetID = value;
                    OnPropertyChanged("VmKlientenbudgetID");
                }
            }
        }
        private int _vmKlientenbudgetID;
    
        [DataMember]
        public int FaLeistungID
        {
            get { return _faLeistungID; }
            set
            {
                if (_faLeistungID != value)
                {
                    ChangeTracker.RecordOriginalValue("FaLeistungID", _faLeistungID);
                    if (!IsDeserializing)
                    {
                        if (FaLeistung != null && FaLeistung.FaLeistungID != value)
                        {
                            FaLeistung = null;
                        }
                    }
                    _faLeistungID = value;
                    OnPropertyChanged("FaLeistungID");
                }
            }
        }
        private int _faLeistungID;
    
        [DataMember]
        public int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    ChangeTracker.RecordOriginalValue("UserID", _userID);
                    if (!IsDeserializing)
                    {
                        if (XUser != null && XUser.UserID != value)
                        {
                            XUser = null;
                        }
                    }
                    _userID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private int _userID;
    
        [DataMember]
        public int VmKlientenbudgetStatusCode
        {
            get { return _vmKlientenbudgetStatusCode; }
            set
            {
                if (_vmKlientenbudgetStatusCode != value)
                {
                    _vmKlientenbudgetStatusCode = value;
                    OnPropertyChanged("VmKlientenbudgetStatusCode");
                }
            }
        }
        private int _vmKlientenbudgetStatusCode;
    
        [DataMember]
        public System.DateTime GueltigAb
        {
            get { return _gueltigAb; }
            set
            {
                if (_gueltigAb != value)
                {
                    _gueltigAb = value;
                    OnPropertyChanged("GueltigAb");
                }
            }
        }
        private System.DateTime _gueltigAb;
    
        [DataMember]
        public int VmKlientenbudgetMutationsgrundCode
        {
            get { return _vmKlientenbudgetMutationsgrundCode; }
            set
            {
                if (_vmKlientenbudgetMutationsgrundCode != value)
                {
                    _vmKlientenbudgetMutationsgrundCode = value;
                    OnPropertyChanged("VmKlientenbudgetMutationsgrundCode");
                }
            }
        }
        private int _vmKlientenbudgetMutationsgrundCode;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] VmKlientenbudgetTS
        {
            get { return _vmKlientenbudgetTS; }
            set
            {
                if (_vmKlientenbudgetTS != value)
                {
                    _vmKlientenbudgetTS = value;
                    OnPropertyChanged("VmKlientenbudgetTS");
                }
            }
        }
        private byte[] _vmKlientenbudgetTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FaLeistung FaLeistung
        {
            get { return _faLeistung; }
            set
            {
                if (!ReferenceEquals(_faLeistung, value))
                {
                    var previousValue = _faLeistung;
                    _faLeistung = value;
                    FixupFaLeistung(previousValue);
                    OnNavigationPropertyChanged("FaLeistung");
                }
            }
        }
        private FaLeistung _faLeistung;
    
        [DataMember]
        public XUser XUser
        {
            get { return _xUser; }
            set
            {
                if (!ReferenceEquals(_xUser, value))
                {
                    var previousValue = _xUser;
                    _xUser = value;
                    FixupXUser(previousValue);
                    OnNavigationPropertyChanged("XUser");
                }
            }
        }
        private XUser _xUser;
    
        [DataMember]
        public TrackableCollection<VmPosition> VmPosition
        {
            get
            {
                if (_vmPosition == null)
                {
                    _vmPosition = new TrackableCollection<VmPosition>();
                    _vmPosition.CollectionChanged += FixupVmPosition;
                }
                return _vmPosition;
            }
            set
            {
                if (!ReferenceEquals(_vmPosition, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vmPosition != null)
                    {
                        _vmPosition.CollectionChanged -= FixupVmPosition;
                    }
                    _vmPosition = value;
                    if (_vmPosition != null)
                    {
                        _vmPosition.CollectionChanged += FixupVmPosition;
                    }
                    OnNavigationPropertyChanged("VmPosition");
                }
            }
        }
        private TrackableCollection<VmPosition> _vmPosition;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FaLeistung = null;
            XUser = null;
            VmPosition.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupFaLeistung(FaLeistung previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.VmKlientenbudget.Contains(this))
            {
                previousValue.VmKlientenbudget.Remove(this);
            }
    
            if (FaLeistung != null)
            {
                if (!FaLeistung.VmKlientenbudget.Contains(this))
                {
                    FaLeistung.VmKlientenbudget.Add(this);
                }
    
                FaLeistungID = FaLeistung.FaLeistungID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FaLeistung")
                    && (ChangeTracker.OriginalValues["FaLeistung"] == FaLeistung))
                {
                    ChangeTracker.OriginalValues.Remove("FaLeistung");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FaLeistung", previousValue);
                }
                if (FaLeistung != null && !FaLeistung.ChangeTracker.ChangeTrackingEnabled)
                {
                    FaLeistung.StartTracking();
                }
            }
        }
    
        private void FixupXUser(XUser previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.VmKlientenbudget.Contains(this))
            {
                previousValue.VmKlientenbudget.Remove(this);
            }
    
            if (XUser != null)
            {
                if (!XUser.VmKlientenbudget.Contains(this))
                {
                    XUser.VmKlientenbudget.Add(this);
                }
    
                UserID = XUser.UserID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser")
                    && (ChangeTracker.OriginalValues["XUser"] == XUser))
                {
                    ChangeTracker.OriginalValues.Remove("XUser");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser", previousValue);
                }
                if (XUser != null && !XUser.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser.StartTracking();
                }
            }
        }
    
        private void FixupVmPosition(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VmPosition item in e.NewItems)
                {
                    item.VmKlientenbudget = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VmPosition", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VmPosition item in e.OldItems)
                {
                    if (ReferenceEquals(item.VmKlientenbudget, this))
                    {
                        item.VmKlientenbudget = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VmPosition", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (VmKlientenbudget)obj;
    		if (!_vmKlientenbudgetID.Equals(entity.VmKlientenbudgetID) || _vmKlientenbudgetID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _vmKlientenbudgetID.GetHashCode();
        }

        #endregion

    }
}
