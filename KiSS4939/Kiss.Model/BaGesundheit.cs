//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaInstitution))]
    [KnownType(typeof(BaPerson))]
    public partial class BaGesundheit: EntityBase<BaGesundheit>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaGesundheitID
        {
            get { return _baGesundheitID; }
            set
            {
                if (_baGesundheitID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaGesundheitID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baGesundheitID = value;
                    OnPropertyChanged("BaGesundheitID");
                }
            }
        }
        private int _baGesundheitID;
    
        [DataMember]
        public int BaPersonID
        {
            get { return _baPersonID; }
            set
            {
                if (_baPersonID != value)
                {
                    ChangeTracker.RecordOriginalValue("BaPersonID", _baPersonID);
                    if (!IsDeserializing)
                    {
                        if (BaPerson != null && BaPerson.BaPersonID != value)
                        {
                            BaPerson = null;
                        }
                    }
                    _baPersonID = value;
                    OnPropertyChanged("BaPersonID");
                }
            }
        }
        private int _baPersonID;
    
        [DataMember]
        public int Jahr
        {
            get { return _jahr; }
            set
            {
                if (_jahr != value)
                {
                    _jahr = value;
                    OnPropertyChanged("Jahr");
                }
            }
        }
        private int _jahr;
    
        [DataMember]
        public Nullable<int> KVGOrganisationID
        {
            get { return _kVGOrganisationID; }
            set
            {
                if (_kVGOrganisationID != value)
                {
                    ChangeTracker.RecordOriginalValue("KVGOrganisationID", _kVGOrganisationID);
                    if (!IsDeserializing)
                    {
                        if (BaInstitution_Kvg != null && BaInstitution_Kvg.BaInstitutionID != value)
                        {
                            BaInstitution_Kvg = null;
                        }
                    }
                    _kVGOrganisationID = value;
                    OnPropertyChanged("KVGOrganisationID");
                }
            }
        }
        private Nullable<int> _kVGOrganisationID;
    
        [DataMember]
        public string KVGKontaktPerson
        {
            get { return _kVGKontaktPerson; }
            set
            {
                if (_kVGKontaktPerson != value)
                {
                    _kVGKontaktPerson = value;
                    OnPropertyChanged("KVGKontaktPerson");
                }
            }
        }
        private string _kVGKontaktPerson;
    
        [DataMember]
        public string KVGKontaktTelefon
        {
            get { return _kVGKontaktTelefon; }
            set
            {
                if (_kVGKontaktTelefon != value)
                {
                    _kVGKontaktTelefon = value;
                    OnPropertyChanged("KVGKontaktTelefon");
                }
            }
        }
        private string _kVGKontaktTelefon;
    
        [DataMember]
        public string KVGMitgliedNr
        {
            get { return _kVGMitgliedNr; }
            set
            {
                if (_kVGMitgliedNr != value)
                {
                    _kVGMitgliedNr = value;
                    OnPropertyChanged("KVGMitgliedNr");
                }
            }
        }
        private string _kVGMitgliedNr;
    
        [DataMember]
        public Nullable<System.DateTime> KVGVersichertSeit
        {
            get { return _kVGVersichertSeit; }
            set
            {
                if (_kVGVersichertSeit != value)
                {
                    _kVGVersichertSeit = value;
                    OnPropertyChanged("KVGVersichertSeit");
                }
            }
        }
        private Nullable<System.DateTime> _kVGVersichertSeit;
    
        [DataMember]
        public Nullable<decimal> KVGGrundPraemie
        {
            get { return _kVGGrundPraemie; }
            set
            {
                if (_kVGGrundPraemie != value)
                {
                    _kVGGrundPraemie = value;
                    OnPropertyChanged("KVGGrundPraemie");
                }
            }
        }
        private Nullable<decimal> _kVGGrundPraemie;
    
        [DataMember]
        public Nullable<decimal> KVGUnfallPraemie
        {
            get { return _kVGUnfallPraemie; }
            set
            {
                if (_kVGUnfallPraemie != value)
                {
                    _kVGUnfallPraemie = value;
                    OnPropertyChanged("KVGUnfallPraemie");
                }
            }
        }
        private Nullable<decimal> _kVGUnfallPraemie;
    
        [DataMember]
        public Nullable<decimal> KVGGesundFoerdPraemie
        {
            get { return _kVGGesundFoerdPraemie; }
            set
            {
                if (_kVGGesundFoerdPraemie != value)
                {
                    _kVGGesundFoerdPraemie = value;
                    OnPropertyChanged("KVGGesundFoerdPraemie");
                }
            }
        }
        private Nullable<decimal> _kVGGesundFoerdPraemie;
    
        [DataMember]
        public Nullable<decimal> KVGZuschussBetrag
        {
            get { return _kVGZuschussBetrag; }
            set
            {
                if (_kVGZuschussBetrag != value)
                {
                    _kVGZuschussBetrag = value;
                    OnPropertyChanged("KVGZuschussBetrag");
                }
            }
        }
        private Nullable<decimal> _kVGZuschussBetrag;
    
        [DataMember]
        public Nullable<decimal> KVGUmweltabgabeBetrag
        {
            get { return _kVGUmweltabgabeBetrag; }
            set
            {
                if (_kVGUmweltabgabeBetrag != value)
                {
                    _kVGUmweltabgabeBetrag = value;
                    OnPropertyChanged("KVGUmweltabgabeBetrag");
                }
            }
        }
        private Nullable<decimal> _kVGUmweltabgabeBetrag;
    
        [DataMember]
        public Nullable<decimal> KVGPraemie
        {
            get { return _kVGPraemie; }
            set
            {
                if (_kVGPraemie != value)
                {
                    _kVGPraemie = value;
                    OnPropertyChanged("KVGPraemie");
                }
            }
        }
        private Nullable<decimal> _kVGPraemie;
    
        [DataMember]
        public Nullable<decimal> KVGFranchise
        {
            get { return _kVGFranchise; }
            set
            {
                if (_kVGFranchise != value)
                {
                    _kVGFranchise = value;
                    OnPropertyChanged("KVGFranchise");
                }
            }
        }
        private Nullable<decimal> _kVGFranchise;
    
        [DataMember]
        public Nullable<int> KVGZahlungsPeriodeCode
        {
            get { return _kVGZahlungsPeriodeCode; }
            set
            {
                if (_kVGZahlungsPeriodeCode != value)
                {
                    _kVGZahlungsPeriodeCode = value;
                    OnPropertyChanged("KVGZahlungsPeriodeCode");
                }
            }
        }
        private Nullable<int> _kVGZahlungsPeriodeCode;
    
        [DataMember]
        public Nullable<int> VVGOrganisationID
        {
            get { return _vVGOrganisationID; }
            set
            {
                if (_vVGOrganisationID != value)
                {
                    ChangeTracker.RecordOriginalValue("VVGOrganisationID", _vVGOrganisationID);
                    if (!IsDeserializing)
                    {
                        if (BaInstitution_Vvg != null && BaInstitution_Vvg.BaInstitutionID != value)
                        {
                            BaInstitution_Vvg = null;
                        }
                    }
                    _vVGOrganisationID = value;
                    OnPropertyChanged("VVGOrganisationID");
                }
            }
        }
        private Nullable<int> _vVGOrganisationID;
    
        [DataMember]
        public string VVGKontaktPerson
        {
            get { return _vVGKontaktPerson; }
            set
            {
                if (_vVGKontaktPerson != value)
                {
                    _vVGKontaktPerson = value;
                    OnPropertyChanged("VVGKontaktPerson");
                }
            }
        }
        private string _vVGKontaktPerson;
    
        [DataMember]
        public string VVGKontaktTelefon
        {
            get { return _vVGKontaktTelefon; }
            set
            {
                if (_vVGKontaktTelefon != value)
                {
                    _vVGKontaktTelefon = value;
                    OnPropertyChanged("VVGKontaktTelefon");
                }
            }
        }
        private string _vVGKontaktTelefon;
    
        [DataMember]
        public string VVGMitgliedNr
        {
            get { return _vVGMitgliedNr; }
            set
            {
                if (_vVGMitgliedNr != value)
                {
                    _vVGMitgliedNr = value;
                    OnPropertyChanged("VVGMitgliedNr");
                }
            }
        }
        private string _vVGMitgliedNr;
    
        [DataMember]
        public Nullable<System.DateTime> VVGVersichertSeit
        {
            get { return _vVGVersichertSeit; }
            set
            {
                if (_vVGVersichertSeit != value)
                {
                    _vVGVersichertSeit = value;
                    OnPropertyChanged("VVGVersichertSeit");
                }
            }
        }
        private Nullable<System.DateTime> _vVGVersichertSeit;
    
        [DataMember]
        public Nullable<decimal> VVGPraemie
        {
            get { return _vVGPraemie; }
            set
            {
                if (_vVGPraemie != value)
                {
                    _vVGPraemie = value;
                    OnPropertyChanged("VVGPraemie");
                }
            }
        }
        private Nullable<decimal> _vVGPraemie;
    
        [DataMember]
        public Nullable<decimal> VVGFranchise
        {
            get { return _vVGFranchise; }
            set
            {
                if (_vVGFranchise != value)
                {
                    _vVGFranchise = value;
                    OnPropertyChanged("VVGFranchise");
                }
            }
        }
        private Nullable<decimal> _vVGFranchise;
    
        [DataMember]
        public Nullable<int> VVGZahlungsPeriodeCode
        {
            get { return _vVGZahlungsPeriodeCode; }
            set
            {
                if (_vVGZahlungsPeriodeCode != value)
                {
                    _vVGZahlungsPeriodeCode = value;
                    OnPropertyChanged("VVGZahlungsPeriodeCode");
                }
            }
        }
        private Nullable<int> _vVGZahlungsPeriodeCode;
    
        [DataMember]
        public string VVGZusaetzeRTF
        {
            get { return _vVGZusaetzeRTF; }
            set
            {
                if (_vVGZusaetzeRTF != value)
                {
                    _vVGZusaetzeRTF = value;
                    OnPropertyChanged("VVGZusaetzeRTF");
                }
            }
        }
        private string _vVGZusaetzeRTF;
    
        [DataMember]
        public Nullable<bool> ZuschussInAbklaerungFlag
        {
            get { return _zuschussInAbklaerungFlag; }
            set
            {
                if (_zuschussInAbklaerungFlag != value)
                {
                    _zuschussInAbklaerungFlag = value;
                    OnPropertyChanged("ZuschussInAbklaerungFlag");
                }
            }
        }
        private Nullable<bool> _zuschussInAbklaerungFlag;
    
        [DataMember]
        public Nullable<int> IVEingliederungsmassnahmeCode
        {
            get { return _iVEingliederungsmassnahmeCode; }
            set
            {
                if (_iVEingliederungsmassnahmeCode != value)
                {
                    _iVEingliederungsmassnahmeCode = value;
                    OnPropertyChanged("IVEingliederungsmassnahmeCode");
                }
            }
        }
        private Nullable<int> _iVEingliederungsmassnahmeCode;
    
        [DataMember]
        public Nullable<int> PflegeDurchCode
        {
            get { return _pflegeDurchCode; }
            set
            {
                if (_pflegeDurchCode != value)
                {
                    _pflegeDurchCode = value;
                    OnPropertyChanged("PflegeDurchCode");
                }
            }
        }
        private Nullable<int> _pflegeDurchCode;
    
        [DataMember]
        public Nullable<bool> PflegebeduerftigFlag
        {
            get { return _pflegebeduerftigFlag; }
            set
            {
                if (_pflegebeduerftigFlag != value)
                {
                    _pflegebeduerftigFlag = value;
                    OnPropertyChanged("PflegebeduerftigFlag");
                }
            }
        }
        private Nullable<bool> _pflegebeduerftigFlag;
    
        [DataMember]
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private Nullable<System.DateTime> _datumVon;
    
        [DataMember]
        public Nullable<System.DateTime> ASVSAbmeldung
        {
            get { return _aSVSAbmeldung; }
            set
            {
                if (_aSVSAbmeldung != value)
                {
                    _aSVSAbmeldung = value;
                    OnPropertyChanged("ASVSAbmeldung");
                }
            }
        }
        private Nullable<System.DateTime> _aSVSAbmeldung;
    
        [DataMember]
        public Nullable<System.DateTime> ASVSAnmeldung
        {
            get { return _aSVSAnmeldung; }
            set
            {
                if (_aSVSAnmeldung != value)
                {
                    _aSVSAnmeldung = value;
                    OnPropertyChanged("ASVSAnmeldung");
                }
            }
        }
        private Nullable<System.DateTime> _aSVSAnmeldung;
    
        [DataMember]
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    OnPropertyChanged("Bemerkung");
                }
            }
        }
        private string _bemerkung;
    
        [DataMember]
        public bool AbtretungKK
        {
            get { return _abtretungKK; }
            set
            {
                if (_abtretungKK != value)
                {
                    _abtretungKK = value;
                    OnPropertyChanged("AbtretungKK");
                }
            }
        }
        private bool _abtretungKK;
    
        [DataMember]
        public Nullable<System.DateTime> EVAZDatum
        {
            get { return _eVAZDatum; }
            set
            {
                if (_eVAZDatum != value)
                {
                    _eVAZDatum = value;
                    OnPropertyChanged("EVAZDatum");
                }
            }
        }
        private Nullable<System.DateTime> _eVAZDatum;
    
        [DataMember]
        public Nullable<int> ZahnarztBaInstitutionID
        {
            get { return _zahnarztBaInstitutionID; }
            set
            {
                if (_zahnarztBaInstitutionID != value)
                {
                    ChangeTracker.RecordOriginalValue("ZahnarztBaInstitutionID", _zahnarztBaInstitutionID);
                    if (!IsDeserializing)
                    {
                        if (BaInstitution_Zahnarzt != null && BaInstitution_Zahnarzt.BaInstitutionID != value)
                        {
                            BaInstitution_Zahnarzt = null;
                        }
                    }
                    _zahnarztBaInstitutionID = value;
                    OnPropertyChanged("ZahnarztBaInstitutionID");
                }
            }
        }
        private Nullable<int> _zahnarztBaInstitutionID;
    
        [DataMember]
        public byte[] BaGesundheitTS
        {
            get { return _baGesundheitTS; }
            set
            {
                if (_baGesundheitTS != value)
                {
                    _baGesundheitTS = value;
                    OnPropertyChanged("BaGesundheitTS");
                }
            }
        }
        private byte[] _baGesundheitTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public BaInstitution BaInstitution_Zahnarzt
        {
            get { return _baInstitution_Zahnarzt; }
            set
            {
                if (!ReferenceEquals(_baInstitution_Zahnarzt, value))
                {
                    var previousValue = _baInstitution_Zahnarzt;
                    _baInstitution_Zahnarzt = value;
                    FixupBaInstitution_Zahnarzt(previousValue);
                    OnNavigationPropertyChanged("BaInstitution_Zahnarzt");
                }
            }
        }
        private BaInstitution _baInstitution_Zahnarzt;
    
        [DataMember]
        public BaInstitution BaInstitution_Kvg
        {
            get { return _baInstitution_Kvg; }
            set
            {
                if (!ReferenceEquals(_baInstitution_Kvg, value))
                {
                    var previousValue = _baInstitution_Kvg;
                    _baInstitution_Kvg = value;
                    FixupBaInstitution_Kvg(previousValue);
                    OnNavigationPropertyChanged("BaInstitution_Kvg");
                }
            }
        }
        private BaInstitution _baInstitution_Kvg;
    
        [DataMember]
        public BaInstitution BaInstitution_Vvg
        {
            get { return _baInstitution_Vvg; }
            set
            {
                if (!ReferenceEquals(_baInstitution_Vvg, value))
                {
                    var previousValue = _baInstitution_Vvg;
                    _baInstitution_Vvg = value;
                    FixupBaInstitution_Vvg(previousValue);
                    OnNavigationPropertyChanged("BaInstitution_Vvg");
                }
            }
        }
        private BaInstitution _baInstitution_Vvg;
    
        [DataMember]
        public BaPerson BaPerson
        {
            get { return _baPerson; }
            set
            {
                if (!ReferenceEquals(_baPerson, value))
                {
                    var previousValue = _baPerson;
                    _baPerson = value;
                    FixupBaPerson(previousValue);
                    OnNavigationPropertyChanged("BaPerson");
                }
            }
        }
        private BaPerson _baPerson;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaInstitution_Zahnarzt = null;
            BaInstitution_Kvg = null;
            BaInstitution_Vvg = null;
            BaPerson = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaInstitution_Zahnarzt(BaInstitution previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaGesundheit_IsZahnarztOf.Contains(this))
            {
                previousValue.BaGesundheit_IsZahnarztOf.Remove(this);
            }
    
            if (BaInstitution_Zahnarzt != null)
            {
                if (!BaInstitution_Zahnarzt.BaGesundheit_IsZahnarztOf.Contains(this))
                {
                    BaInstitution_Zahnarzt.BaGesundheit_IsZahnarztOf.Add(this);
                }
    
                ZahnarztBaInstitutionID = BaInstitution_Zahnarzt.BaInstitutionID;
            }
            else if (!skipKeys)
            {
                ZahnarztBaInstitutionID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaInstitution_Zahnarzt")
                    && (ChangeTracker.OriginalValues["BaInstitution_Zahnarzt"] == BaInstitution_Zahnarzt))
                {
                    ChangeTracker.OriginalValues.Remove("BaInstitution_Zahnarzt");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaInstitution_Zahnarzt", previousValue);
                }
                if (BaInstitution_Zahnarzt != null && !BaInstitution_Zahnarzt.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaInstitution_Zahnarzt.StartTracking();
                }
            }
        }
    
        private void FixupBaInstitution_Kvg(BaInstitution previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaGesundheit_IsKvgOf.Contains(this))
            {
                previousValue.BaGesundheit_IsKvgOf.Remove(this);
            }
    
            if (BaInstitution_Kvg != null)
            {
                if (!BaInstitution_Kvg.BaGesundheit_IsKvgOf.Contains(this))
                {
                    BaInstitution_Kvg.BaGesundheit_IsKvgOf.Add(this);
                }
    
                KVGOrganisationID = BaInstitution_Kvg.BaInstitutionID;
            }
            else if (!skipKeys)
            {
                KVGOrganisationID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaInstitution_Kvg")
                    && (ChangeTracker.OriginalValues["BaInstitution_Kvg"] == BaInstitution_Kvg))
                {
                    ChangeTracker.OriginalValues.Remove("BaInstitution_Kvg");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaInstitution_Kvg", previousValue);
                }
                if (BaInstitution_Kvg != null && !BaInstitution_Kvg.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaInstitution_Kvg.StartTracking();
                }
            }
        }
    
        private void FixupBaInstitution_Vvg(BaInstitution previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaGesundheit_IsVvgOf.Contains(this))
            {
                previousValue.BaGesundheit_IsVvgOf.Remove(this);
            }
    
            if (BaInstitution_Vvg != null)
            {
                if (!BaInstitution_Vvg.BaGesundheit_IsVvgOf.Contains(this))
                {
                    BaInstitution_Vvg.BaGesundheit_IsVvgOf.Add(this);
                }
    
                VVGOrganisationID = BaInstitution_Vvg.BaInstitutionID;
            }
            else if (!skipKeys)
            {
                VVGOrganisationID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaInstitution_Vvg")
                    && (ChangeTracker.OriginalValues["BaInstitution_Vvg"] == BaInstitution_Vvg))
                {
                    ChangeTracker.OriginalValues.Remove("BaInstitution_Vvg");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaInstitution_Vvg", previousValue);
                }
                if (BaInstitution_Vvg != null && !BaInstitution_Vvg.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaInstitution_Vvg.StartTracking();
                }
            }
        }
    
        private void FixupBaPerson(BaPerson previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaGesundheit.Contains(this))
            {
                previousValue.BaGesundheit.Remove(this);
            }
    
            if (BaPerson != null)
            {
                if (!BaPerson.BaGesundheit.Contains(this))
                {
                    BaPerson.BaGesundheit.Add(this);
                }
    
                BaPersonID = BaPerson.BaPersonID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BaPerson")
                    && (ChangeTracker.OriginalValues["BaPerson"] == BaPerson))
                {
                    ChangeTracker.OriginalValues.Remove("BaPerson");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BaPerson", previousValue);
                }
                if (BaPerson != null && !BaPerson.ChangeTracker.ChangeTrackingEnabled)
                {
                    BaPerson.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaGesundheit)obj;
    		if (!_baGesundheitID.Equals(entity.BaGesundheitID) || _baGesundheitID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baGesundheitID.GetHashCode();
        }

        #endregion

    }
}
