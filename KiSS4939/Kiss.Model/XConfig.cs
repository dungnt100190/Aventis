//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    public partial class XConfig: EntityBase<XConfig>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int XConfigID
        {
            get { return _xConfigID; }
            set
            {
                if (_xConfigID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'XConfigID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _xConfigID = value;
                    OnPropertyChanged("XConfigID");
                }
            }
        }
        private int _xConfigID;
    
        [DataMember]
        public Nullable<int> XNamespaceExtensionID
        {
            get { return _xNamespaceExtensionID; }
            set
            {
                if (_xNamespaceExtensionID != value)
                {
                    _xNamespaceExtensionID = value;
                    OnPropertyChanged("XNamespaceExtensionID");
                }
            }
        }
        private Nullable<int> _xNamespaceExtensionID;
    
        [DataMember]
        public string KeyPath
        {
            get { return _keyPath; }
            set
            {
                if (_keyPath != value)
                {
                    _keyPath = value;
                    OnPropertyChanged("KeyPath");
                }
            }
        }
        private string _keyPath;
    
        [DataMember]
        public bool System
        {
            get { return _system; }
            set
            {
                if (_system != value)
                {
                    _system = value;
                    OnPropertyChanged("System");
                }
            }
        }
        private bool _system;
    
        [DataMember]
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private Nullable<System.DateTime> _datumVon;
    
        [DataMember]
        public int ValueCode
        {
            get { return _valueCode; }
            set
            {
                if (_valueCode != value)
                {
                    _valueCode = value;
                    OnPropertyChanged("ValueCode");
                }
            }
        }
        private int _valueCode;
    
        [DataMember]
        public string LOVName
        {
            get { return _lOVName; }
            set
            {
                if (_lOVName != value)
                {
                    _lOVName = value;
                    OnPropertyChanged("LOVName");
                }
            }
        }
        private string _lOVName;
    
        [DataMember]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    _description = value;
                    OnPropertyChanged("Description");
                }
            }
        }
        private string _description;
    
        [DataMember]
        public Nullable<bool> ValueBit
        {
            get { return _valueBit; }
            set
            {
                if (_valueBit != value)
                {
                    _valueBit = value;
                    OnPropertyChanged("ValueBit");
                }
            }
        }
        private Nullable<bool> _valueBit;
    
        [DataMember]
        public Nullable<bool> OriginalValueBit
        {
            get { return _originalValueBit; }
            set
            {
                if (_originalValueBit != value)
                {
                    _originalValueBit = value;
                    OnPropertyChanged("OriginalValueBit");
                }
            }
        }
        private Nullable<bool> _originalValueBit;
    
        [DataMember]
        public Nullable<System.DateTime> ValueDateTime
        {
            get { return _valueDateTime; }
            set
            {
                if (_valueDateTime != value)
                {
                    _valueDateTime = value;
                    OnPropertyChanged("ValueDateTime");
                }
            }
        }
        private Nullable<System.DateTime> _valueDateTime;
    
        [DataMember]
        public Nullable<System.DateTime> OriginalValueDateTime
        {
            get { return _originalValueDateTime; }
            set
            {
                if (_originalValueDateTime != value)
                {
                    _originalValueDateTime = value;
                    OnPropertyChanged("OriginalValueDateTime");
                }
            }
        }
        private Nullable<System.DateTime> _originalValueDateTime;
    
        [DataMember]
        public Nullable<decimal> ValueDecimal
        {
            get { return _valueDecimal; }
            set
            {
                if (_valueDecimal != value)
                {
                    _valueDecimal = value;
                    OnPropertyChanged("ValueDecimal");
                }
            }
        }
        private Nullable<decimal> _valueDecimal;
    
        [DataMember]
        public Nullable<decimal> OriginalValueDecimal
        {
            get { return _originalValueDecimal; }
            set
            {
                if (_originalValueDecimal != value)
                {
                    _originalValueDecimal = value;
                    OnPropertyChanged("OriginalValueDecimal");
                }
            }
        }
        private Nullable<decimal> _originalValueDecimal;
    
        [DataMember]
        public Nullable<int> ValueInt
        {
            get { return _valueInt; }
            set
            {
                if (_valueInt != value)
                {
                    _valueInt = value;
                    OnPropertyChanged("ValueInt");
                }
            }
        }
        private Nullable<int> _valueInt;
    
        [DataMember]
        public Nullable<int> OriginalValueInt
        {
            get { return _originalValueInt; }
            set
            {
                if (_originalValueInt != value)
                {
                    _originalValueInt = value;
                    OnPropertyChanged("OriginalValueInt");
                }
            }
        }
        private Nullable<int> _originalValueInt;
    
        [DataMember]
        public Nullable<decimal> ValueMoney
        {
            get { return _valueMoney; }
            set
            {
                if (_valueMoney != value)
                {
                    _valueMoney = value;
                    OnPropertyChanged("ValueMoney");
                }
            }
        }
        private Nullable<decimal> _valueMoney;
    
        [DataMember]
        public Nullable<decimal> OriginalValueMoney
        {
            get { return _originalValueMoney; }
            set
            {
                if (_originalValueMoney != value)
                {
                    _originalValueMoney = value;
                    OnPropertyChanged("OriginalValueMoney");
                }
            }
        }
        private Nullable<decimal> _originalValueMoney;
    
        [DataMember]
        public string ValueVarchar
        {
            get { return _valueVarchar; }
            set
            {
                if (_valueVarchar != value)
                {
                    _valueVarchar = value;
                    OnPropertyChanged("ValueVarchar");
                }
            }
        }
        private string _valueVarchar;
    
        [DataMember]
        public string OriginalValueVarchar
        {
            get { return _originalValueVarchar; }
            set
            {
                if (_originalValueVarchar != value)
                {
                    _originalValueVarchar = value;
                    OnPropertyChanged("OriginalValueVarchar");
                }
            }
        }
        private string _originalValueVarchar;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] XConfigTS
        {
            get { return _xConfigTS; }
            set
            {
                if (_xConfigTS != value)
                {
                    _xConfigTS = value;
                    OnPropertyChanged("XConfigTS");
                }
            }
        }
        private byte[] _xConfigTS;
    
        [DataMember]
        public Nullable<int> KeyPathTID
        {
            get { return _keyPathTID; }
            set
            {
                if (_keyPathTID != value)
                {
                    _keyPathTID = value;
                    OnPropertyChanged("KeyPathTID");
                }
            }
        }
        private Nullable<int> _keyPathTID;
    
        [DataMember]
        public Nullable<int> DescriptionTID
        {
            get { return _descriptionTID; }
            set
            {
                if (_descriptionTID != value)
                {
                    _descriptionTID = value;
                    OnPropertyChanged("DescriptionTID");
                }
            }
        }
        private Nullable<int> _descriptionTID;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (XConfig)obj;
    		if (!_xConfigID.Equals(entity.XConfigID) || _xConfigID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _xConfigID.GetHashCode();
        }

        #endregion

    }
}
