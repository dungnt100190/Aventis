//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaAdresse))]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(BaZahlungsweg))]
    [KnownType(typeof(FaDokumente))]
    [KnownType(typeof(XOrgUnit))]
    [KnownType(typeof(BaGesundheit))]
    [KnownType(typeof(FaDokumentAblage))]
    [KnownType(typeof(BaPerson_BaInstitution))]
    [KnownType(typeof(KesDokument))]
    [KnownType(typeof(KesVerlauf))]
    [KnownType(typeof(KesPflegekinderaufsicht))]
    [KnownType(typeof(KesMandatsfuehrendePerson))]
    [KnownType(typeof(KesMassnahme))]
    public partial class BaInstitution: EntityBase<BaInstitution>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaInstitutionID
        {
            get { return _baInstitutionID; }
            set
            {
                if (_baInstitutionID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaInstitutionID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baInstitutionID = value;
                    OnPropertyChanged("BaInstitutionID");
                }
            }
        }
        private int _baInstitutionID;
    
        [DataMember]
        public Nullable<int> OrgUnitID
        {
            get { return _orgUnitID; }
            set
            {
                if (_orgUnitID != value)
                {
                    ChangeTracker.RecordOriginalValue("OrgUnitID", _orgUnitID);
                    if (!IsDeserializing)
                    {
                        if (XOrgUnit != null && XOrgUnit.OrgUnitID != value)
                        {
                            XOrgUnit = null;
                        }
                    }
                    _orgUnitID = value;
                    OnPropertyChanged("OrgUnitID");
                }
            }
        }
        private Nullable<int> _orgUnitID;
    
        [DataMember]
        public string InstitutionNr
        {
            get { return _institutionNr; }
            set
            {
                if (_institutionNr != value)
                {
                    _institutionNr = value;
                    OnPropertyChanged("InstitutionNr");
                }
            }
        }
        private string _institutionNr;
    
        [DataMember]
        public Nullable<int> BaInstitutionArtCode
        {
            get { return _baInstitutionArtCode; }
            set
            {
                if (_baInstitutionArtCode != value)
                {
                    _baInstitutionArtCode = value;
                    OnPropertyChanged("BaInstitutionArtCode");
                }
            }
        }
        private Nullable<int> _baInstitutionArtCode;
    
        [DataMember]
        public bool Aktiv
        {
            get { return _aktiv; }
            set
            {
                if (_aktiv != value)
                {
                    _aktiv = value;
                    OnPropertyChanged("Aktiv");
                }
            }
        }
        private bool _aktiv;
    
        [DataMember]
        public bool Debitor
        {
            get { return _debitor; }
            set
            {
                if (_debitor != value)
                {
                    _debitor = value;
                    OnPropertyChanged("Debitor");
                }
            }
        }
        private bool _debitor;
    
        [DataMember]
        public bool Kreditor
        {
            get { return _kreditor; }
            set
            {
                if (_kreditor != value)
                {
                    _kreditor = value;
                    OnPropertyChanged("Kreditor");
                }
            }
        }
        private bool _kreditor;
    
        [DataMember]
        public bool KeinSerienbrief
        {
            get { return _keinSerienbrief; }
            set
            {
                if (_keinSerienbrief != value)
                {
                    _keinSerienbrief = value;
                    OnPropertyChanged("KeinSerienbrief");
                }
            }
        }
        private bool _keinSerienbrief;
    
        [DataMember]
        public bool ManuelleAnrede
        {
            get { return _manuelleAnrede; }
            set
            {
                if (_manuelleAnrede != value)
                {
                    _manuelleAnrede = value;
                    OnPropertyChanged("ManuelleAnrede");
                }
            }
        }
        private bool _manuelleAnrede;
    
        [DataMember]
        public string Anrede
        {
            get { return _anrede; }
            set
            {
                if (_anrede != value)
                {
                    _anrede = value;
                    OnPropertyChanged("Anrede");
                }
            }
        }
        private string _anrede;
    
        [DataMember]
        public string Briefanrede
        {
            get { return _briefanrede; }
            set
            {
                if (_briefanrede != value)
                {
                    _briefanrede = value;
                    OnPropertyChanged("Briefanrede");
                }
            }
        }
        private string _briefanrede;
    
        [DataMember]
        public string Titel
        {
            get { return _titel; }
            set
            {
                if (_titel != value)
                {
                    _titel = value;
                    OnPropertyChanged("Titel");
                }
            }
        }
        private string _titel;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string Vorname
        {
            get { return _vorname; }
            set
            {
                if (_vorname != value)
                {
                    _vorname = value;
                    OnPropertyChanged("Vorname");
                }
            }
        }
        private string _vorname;
    
        [DataMember]
        public Nullable<int> GeschlechtCode
        {
            get { return _geschlechtCode; }
            set
            {
                if (_geschlechtCode != value)
                {
                    _geschlechtCode = value;
                    OnPropertyChanged("GeschlechtCode");
                }
            }
        }
        private Nullable<int> _geschlechtCode;
    
        [DataMember]
        public string Telefon
        {
            get { return _telefon; }
            set
            {
                if (_telefon != value)
                {
                    _telefon = value;
                    OnPropertyChanged("Telefon");
                }
            }
        }
        private string _telefon;
    
        [DataMember]
        public string Telefon2
        {
            get { return _telefon2; }
            set
            {
                if (_telefon2 != value)
                {
                    _telefon2 = value;
                    OnPropertyChanged("Telefon2");
                }
            }
        }
        private string _telefon2;
    
        [DataMember]
        public string Telefon3
        {
            get { return _telefon3; }
            set
            {
                if (_telefon3 != value)
                {
                    _telefon3 = value;
                    OnPropertyChanged("Telefon3");
                }
            }
        }
        private string _telefon3;
    
        [DataMember]
        public string Fax
        {
            get { return _fax; }
            set
            {
                if (_fax != value)
                {
                    _fax = value;
                    OnPropertyChanged("Fax");
                }
            }
        }
        private string _fax;
    
        [DataMember]
        public string EMail
        {
            get { return _eMail; }
            set
            {
                if (_eMail != value)
                {
                    _eMail = value;
                    OnPropertyChanged("EMail");
                }
            }
        }
        private string _eMail;
    
        [DataMember]
        public string Homepage
        {
            get { return _homepage; }
            set
            {
                if (_homepage != value)
                {
                    _homepage = value;
                    OnPropertyChanged("Homepage");
                }
            }
        }
        private string _homepage;
    
        [DataMember]
        public Nullable<int> SprachCode
        {
            get { return _sprachCode; }
            set
            {
                if (_sprachCode != value)
                {
                    _sprachCode = value;
                    OnPropertyChanged("SprachCode");
                }
            }
        }
        private Nullable<int> _sprachCode;
    
        [DataMember]
        public string Bemerkung
        {
            get { return _bemerkung; }
            set
            {
                if (_bemerkung != value)
                {
                    _bemerkung = value;
                    OnPropertyChanged("Bemerkung");
                }
            }
        }
        private string _bemerkung;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] BaInstitutionTS
        {
            get { return _baInstitutionTS; }
            set
            {
                if (_baInstitutionTS != value)
                {
                    _baInstitutionTS = value;
                    OnPropertyChanged("BaInstitutionTS");
                }
            }
        }
        private byte[] _baInstitutionTS;
    
        [DataMember]
        public string InstitutionName
        {
            get { return _institutionName; }
            set
            {
                if (_institutionName != value)
                {
                    _institutionName = value;
                    OnPropertyChanged("InstitutionName");
                }
            }
        }
        private string _institutionName;
    
        [DataMember]
        public Nullable<int> InstitutionTypCode
        {
            get { return _institutionTypCode; }
            set
            {
                if (_institutionTypCode != value)
                {
                    _institutionTypCode = value;
                    OnPropertyChanged("InstitutionTypCode");
                }
            }
        }
        private Nullable<int> _institutionTypCode;
    
        [DataMember]
        public Nullable<int> BaFreigabeStatusCode
        {
            get { return _baFreigabeStatusCode; }
            set
            {
                if (_baFreigabeStatusCode != value)
                {
                    _baFreigabeStatusCode = value;
                    OnPropertyChanged("BaFreigabeStatusCode");
                }
            }
        }
        private Nullable<int> _baFreigabeStatusCode;
    
        [DataMember]
        public Nullable<int> DefinitivUserID
        {
            get { return _definitivUserID; }
            set
            {
                if (_definitivUserID != value)
                {
                    _definitivUserID = value;
                    OnPropertyChanged("DefinitivUserID");
                }
            }
        }
        private Nullable<int> _definitivUserID;
    
        [DataMember]
        public Nullable<System.DateTime> DefinitivDatum
        {
            get { return _definitivDatum; }
            set
            {
                if (_definitivDatum != value)
                {
                    _definitivDatum = value;
                    OnPropertyChanged("DefinitivDatum");
                }
            }
        }
        private Nullable<System.DateTime> _definitivDatum;
    
        [DataMember]
        public Nullable<int> ErstelltUserID
        {
            get { return _erstelltUserID; }
            set
            {
                if (_erstelltUserID != value)
                {
                    _erstelltUserID = value;
                    OnPropertyChanged("ErstelltUserID");
                }
            }
        }
        private Nullable<int> _erstelltUserID;
    
        [DataMember]
        public Nullable<System.DateTime> ErstelltDatum
        {
            get { return _erstelltDatum; }
            set
            {
                if (_erstelltDatum != value)
                {
                    _erstelltDatum = value;
                    OnPropertyChanged("ErstelltDatum");
                }
            }
        }
        private Nullable<System.DateTime> _erstelltDatum;
    
        [DataMember]
        public Nullable<int> MutiertUserID
        {
            get { return _mutiertUserID; }
            set
            {
                if (_mutiertUserID != value)
                {
                    _mutiertUserID = value;
                    OnPropertyChanged("MutiertUserID");
                }
            }
        }
        private Nullable<int> _mutiertUserID;
    
        [DataMember]
        public Nullable<System.DateTime> MutiertDatum
        {
            get { return _mutiertDatum; }
            set
            {
                if (_mutiertDatum != value)
                {
                    _mutiertDatum = value;
                    OnPropertyChanged("MutiertDatum");
                }
            }
        }
        private Nullable<System.DateTime> _mutiertDatum;
    
        [DataMember]
        public Nullable<System.DateTime> Geburtsdatum
        {
            get { return _geburtsdatum; }
            set
            {
                if (_geburtsdatum != value)
                {
                    _geburtsdatum = value;
                    OnPropertyChanged("Geburtsdatum");
                }
            }
        }
        private Nullable<System.DateTime> _geburtsdatum;
    
        [DataMember]
        public string Versichertennummer
        {
            get { return _versichertennummer; }
            set
            {
                if (_versichertennummer != value)
                {
                    _versichertennummer = value;
                    OnPropertyChanged("Versichertennummer");
                }
            }
        }
        private string _versichertennummer;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<BaAdresse> BaAdresse
        {
            get
            {
                if (_baAdresse == null)
                {
                    _baAdresse = new TrackableCollection<BaAdresse>();
                    _baAdresse.CollectionChanged += FixupBaAdresse;
                }
                return _baAdresse;
            }
            set
            {
                if (!ReferenceEquals(_baAdresse, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged -= FixupBaAdresse;
                    }
                    _baAdresse = value;
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged += FixupBaAdresse;
                    }
                    OnNavigationPropertyChanged("BaAdresse");
                }
            }
        }
        private TrackableCollection<BaAdresse> _baAdresse;
    
        [DataMember]
        public TrackableCollection<BaAdresse> BaAdresse1
        {
            get
            {
                if (_baAdresse1 == null)
                {
                    _baAdresse1 = new TrackableCollection<BaAdresse>();
                    _baAdresse1.CollectionChanged += FixupBaAdresse1;
                }
                return _baAdresse1;
            }
            set
            {
                if (!ReferenceEquals(_baAdresse1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baAdresse1 != null)
                    {
                        _baAdresse1.CollectionChanged -= FixupBaAdresse1;
                    }
                    _baAdresse1 = value;
                    if (_baAdresse1 != null)
                    {
                        _baAdresse1.CollectionChanged += FixupBaAdresse1;
                    }
                    OnNavigationPropertyChanged("BaAdresse1");
                }
            }
        }
        private TrackableCollection<BaAdresse> _baAdresse1;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson
        {
            get
            {
                if (_baPerson == null)
                {
                    _baPerson = new TrackableCollection<BaPerson>();
                    _baPerson.CollectionChanged += FixupBaPerson;
                }
                return _baPerson;
            }
            set
            {
                if (!ReferenceEquals(_baPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson != null)
                    {
                        _baPerson.CollectionChanged -= FixupBaPerson;
                    }
                    _baPerson = value;
                    if (_baPerson != null)
                    {
                        _baPerson.CollectionChanged += FixupBaPerson;
                    }
                    OnNavigationPropertyChanged("BaPerson");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson;
    
        [DataMember]
        public TrackableCollection<BaZahlungsweg> BaZahlungsweg
        {
            get
            {
                if (_baZahlungsweg == null)
                {
                    _baZahlungsweg = new TrackableCollection<BaZahlungsweg>();
                    _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                }
                return _baZahlungsweg;
            }
            set
            {
                if (!ReferenceEquals(_baZahlungsweg, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged -= FixupBaZahlungsweg;
                    }
                    _baZahlungsweg = value;
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                    }
                    OnNavigationPropertyChanged("BaZahlungsweg");
                }
            }
        }
        private TrackableCollection<BaZahlungsweg> _baZahlungsweg;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente
        {
            get
            {
                if (_faDokumente == null)
                {
                    _faDokumente = new TrackableCollection<FaDokumente>();
                    _faDokumente.CollectionChanged += FixupFaDokumente;
                }
                return _faDokumente;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged -= FixupFaDokumente;
                    }
                    _faDokumente = value;
                    if (_faDokumente != null)
                    {
                        _faDokumente.CollectionChanged += FixupFaDokumente;
                    }
                    OnNavigationPropertyChanged("FaDokumente");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente;
    
        [DataMember]
        public XOrgUnit XOrgUnit
        {
            get { return _xOrgUnit; }
            set
            {
                if (!ReferenceEquals(_xOrgUnit, value))
                {
                    var previousValue = _xOrgUnit;
                    _xOrgUnit = value;
                    FixupXOrgUnit(previousValue);
                    OnNavigationPropertyChanged("XOrgUnit");
                }
            }
        }
        private XOrgUnit _xOrgUnit;
    
        [DataMember]
        public TrackableCollection<BaGesundheit> BaGesundheit_IsZahnarztOf
        {
            get
            {
                if (_baGesundheit_IsZahnarztOf == null)
                {
                    _baGesundheit_IsZahnarztOf = new TrackableCollection<BaGesundheit>();
                    _baGesundheit_IsZahnarztOf.CollectionChanged += FixupBaGesundheit_IsZahnarztOf;
                }
                return _baGesundheit_IsZahnarztOf;
            }
            set
            {
                if (!ReferenceEquals(_baGesundheit_IsZahnarztOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baGesundheit_IsZahnarztOf != null)
                    {
                        _baGesundheit_IsZahnarztOf.CollectionChanged -= FixupBaGesundheit_IsZahnarztOf;
                    }
                    _baGesundheit_IsZahnarztOf = value;
                    if (_baGesundheit_IsZahnarztOf != null)
                    {
                        _baGesundheit_IsZahnarztOf.CollectionChanged += FixupBaGesundheit_IsZahnarztOf;
                    }
                    OnNavigationPropertyChanged("BaGesundheit_IsZahnarztOf");
                }
            }
        }
        private TrackableCollection<BaGesundheit> _baGesundheit_IsZahnarztOf;
    
        [DataMember]
        public TrackableCollection<BaGesundheit> BaGesundheit_IsKvgOf
        {
            get
            {
                if (_baGesundheit_IsKvgOf == null)
                {
                    _baGesundheit_IsKvgOf = new TrackableCollection<BaGesundheit>();
                    _baGesundheit_IsKvgOf.CollectionChanged += FixupBaGesundheit_IsKvgOf;
                }
                return _baGesundheit_IsKvgOf;
            }
            set
            {
                if (!ReferenceEquals(_baGesundheit_IsKvgOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baGesundheit_IsKvgOf != null)
                    {
                        _baGesundheit_IsKvgOf.CollectionChanged -= FixupBaGesundheit_IsKvgOf;
                    }
                    _baGesundheit_IsKvgOf = value;
                    if (_baGesundheit_IsKvgOf != null)
                    {
                        _baGesundheit_IsKvgOf.CollectionChanged += FixupBaGesundheit_IsKvgOf;
                    }
                    OnNavigationPropertyChanged("BaGesundheit_IsKvgOf");
                }
            }
        }
        private TrackableCollection<BaGesundheit> _baGesundheit_IsKvgOf;
    
        [DataMember]
        public TrackableCollection<BaGesundheit> BaGesundheit_IsVvgOf
        {
            get
            {
                if (_baGesundheit_IsVvgOf == null)
                {
                    _baGesundheit_IsVvgOf = new TrackableCollection<BaGesundheit>();
                    _baGesundheit_IsVvgOf.CollectionChanged += FixupBaGesundheit_IsVvgOf;
                }
                return _baGesundheit_IsVvgOf;
            }
            set
            {
                if (!ReferenceEquals(_baGesundheit_IsVvgOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baGesundheit_IsVvgOf != null)
                    {
                        _baGesundheit_IsVvgOf.CollectionChanged -= FixupBaGesundheit_IsVvgOf;
                    }
                    _baGesundheit_IsVvgOf = value;
                    if (_baGesundheit_IsVvgOf != null)
                    {
                        _baGesundheit_IsVvgOf.CollectionChanged += FixupBaGesundheit_IsVvgOf;
                    }
                    OnNavigationPropertyChanged("BaGesundheit_IsVvgOf");
                }
            }
        }
        private TrackableCollection<BaGesundheit> _baGesundheit_IsVvgOf;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage> FaDokumentAblage
        {
            get
            {
                if (_faDokumentAblage == null)
                {
                    _faDokumentAblage = new TrackableCollection<FaDokumentAblage>();
                    _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                }
                return _faDokumentAblage;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged -= FixupFaDokumentAblage;
                    }
                    _faDokumentAblage = value;
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage> _faDokumentAblage;
    
        [DataMember]
        public TrackableCollection<BaPerson_BaInstitution> BaPerson_BaInstitution
        {
            get
            {
                if (_baPerson_BaInstitution == null)
                {
                    _baPerson_BaInstitution = new TrackableCollection<BaPerson_BaInstitution>();
                    _baPerson_BaInstitution.CollectionChanged += FixupBaPerson_BaInstitution;
                }
                return _baPerson_BaInstitution;
            }
            set
            {
                if (!ReferenceEquals(_baPerson_BaInstitution, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson_BaInstitution != null)
                    {
                        _baPerson_BaInstitution.CollectionChanged -= FixupBaPerson_BaInstitution;
                    }
                    _baPerson_BaInstitution = value;
                    if (_baPerson_BaInstitution != null)
                    {
                        _baPerson_BaInstitution.CollectionChanged += FixupBaPerson_BaInstitution;
                    }
                    OnNavigationPropertyChanged("BaPerson_BaInstitution");
                }
            }
        }
        private TrackableCollection<BaPerson_BaInstitution> _baPerson_BaInstitution;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument
        {
            get
            {
                if (_kesDokument == null)
                {
                    _kesDokument = new TrackableCollection<KesDokument>();
                    _kesDokument.CollectionChanged += FixupKesDokument;
                }
                return _kesDokument;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged -= FixupKesDokument;
                    }
                    _kesDokument = value;
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged += FixupKesDokument;
                    }
                    OnNavigationPropertyChanged("KesDokument");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument;
    
        [DataMember]
        public TrackableCollection<KesVerlauf> KesVerlauf
        {
            get
            {
                if (_kesVerlauf == null)
                {
                    _kesVerlauf = new TrackableCollection<KesVerlauf>();
                    _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                }
                return _kesVerlauf;
            }
            set
            {
                if (!ReferenceEquals(_kesVerlauf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged -= FixupKesVerlauf;
                    }
                    _kesVerlauf = value;
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                    }
                    OnNavigationPropertyChanged("KesVerlauf");
                }
            }
        }
        private TrackableCollection<KesVerlauf> _kesVerlauf;
    
        [DataMember]
        public TrackableCollection<KesPflegekinderaufsicht> KesPflegekinderaufsicht
        {
            get
            {
                if (_kesPflegekinderaufsicht == null)
                {
                    _kesPflegekinderaufsicht = new TrackableCollection<KesPflegekinderaufsicht>();
                    _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                }
                return _kesPflegekinderaufsicht;
            }
            set
            {
                if (!ReferenceEquals(_kesPflegekinderaufsicht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged -= FixupKesPflegekinderaufsicht;
                    }
                    _kesPflegekinderaufsicht = value;
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                    }
                    OnNavigationPropertyChanged("KesPflegekinderaufsicht");
                }
            }
        }
        private TrackableCollection<KesPflegekinderaufsicht> _kesPflegekinderaufsicht;
    
        [DataMember]
        public TrackableCollection<KesMandatsfuehrendePerson> KesMandatsfuehrendePerson
        {
            get
            {
                if (_kesMandatsfuehrendePerson == null)
                {
                    _kesMandatsfuehrendePerson = new TrackableCollection<KesMandatsfuehrendePerson>();
                    _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                }
                return _kesMandatsfuehrendePerson;
            }
            set
            {
                if (!ReferenceEquals(_kesMandatsfuehrendePerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged -= FixupKesMandatsfuehrendePerson;
                    }
                    _kesMandatsfuehrendePerson = value;
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                    }
                    OnNavigationPropertyChanged("KesMandatsfuehrendePerson");
                }
            }
        }
        private TrackableCollection<KesMandatsfuehrendePerson> _kesMandatsfuehrendePerson;
    
        [DataMember]
        public TrackableCollection<KesMassnahme> KesMassnahme
        {
            get
            {
                if (_kesMassnahme == null)
                {
                    _kesMassnahme = new TrackableCollection<KesMassnahme>();
                    _kesMassnahme.CollectionChanged += FixupKesMassnahme;
                }
                return _kesMassnahme;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahme, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahme != null)
                    {
                        _kesMassnahme.CollectionChanged -= FixupKesMassnahme;
                    }
                    _kesMassnahme = value;
                    if (_kesMassnahme != null)
                    {
                        _kesMassnahme.CollectionChanged += FixupKesMassnahme;
                    }
                    OnNavigationPropertyChanged("KesMassnahme");
                }
            }
        }
        private TrackableCollection<KesMassnahme> _kesMassnahme;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaAdresse.Clear();
            BaAdresse1.Clear();
            BaPerson.Clear();
            BaZahlungsweg.Clear();
            FaDokumente.Clear();
            XOrgUnit = null;
            BaGesundheit_IsZahnarztOf.Clear();
            BaGesundheit_IsKvgOf.Clear();
            BaGesundheit_IsVvgOf.Clear();
            FaDokumentAblage.Clear();
            BaPerson_BaInstitution.Clear();
            KesDokument.Clear();
            KesVerlauf.Clear();
            KesPflegekinderaufsicht.Clear();
            KesMandatsfuehrendePerson.Clear();
            KesMassnahme.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupXOrgUnit(XOrgUnit previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.BaInstitution.Contains(this))
            {
                previousValue.BaInstitution.Remove(this);
            }
    
            if (XOrgUnit != null)
            {
                if (!XOrgUnit.BaInstitution.Contains(this))
                {
                    XOrgUnit.BaInstitution.Add(this);
                }
    
                OrgUnitID = XOrgUnit.OrgUnitID;
            }
            else if (!skipKeys)
            {
                OrgUnitID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XOrgUnit")
                    && (ChangeTracker.OriginalValues["XOrgUnit"] == XOrgUnit))
                {
                    ChangeTracker.OriginalValues.Remove("XOrgUnit");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XOrgUnit", previousValue);
                }
                if (XOrgUnit != null && !XOrgUnit.ChangeTracker.ChangeTrackingEnabled)
                {
                    XOrgUnit.StartTracking();
                }
            }
        }
    
        private void FixupBaAdresse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaAdresse item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaAdresse", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaAdresse item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaAdresse", item);
                    }
                }
            }
        }
    
        private void FixupBaAdresse1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaAdresse item in e.NewItems)
                {
                    item.BaInstitution1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaAdresse1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaAdresse item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution1, this))
                    {
                        item.BaInstitution1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaAdresse1", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson", item);
                    }
                }
            }
        }
    
        private void FixupBaZahlungsweg(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaZahlungsweg item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaZahlungsweg item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente", item);
                    }
                }
            }
        }
    
        private void FixupBaGesundheit_IsZahnarztOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaGesundheit item in e.NewItems)
                {
                    item.BaInstitution_Zahnarzt = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaGesundheit_IsZahnarztOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaGesundheit item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution_Zahnarzt, this))
                    {
                        item.BaInstitution_Zahnarzt = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaGesundheit_IsZahnarztOf", item);
                    }
                }
            }
        }
    
        private void FixupBaGesundheit_IsKvgOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaGesundheit item in e.NewItems)
                {
                    item.BaInstitution_Kvg = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaGesundheit_IsKvgOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaGesundheit item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution_Kvg, this))
                    {
                        item.BaInstitution_Kvg = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaGesundheit_IsKvgOf", item);
                    }
                }
            }
        }
    
        private void FixupBaGesundheit_IsVvgOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaGesundheit item in e.NewItems)
                {
                    item.BaInstitution_Vvg = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaGesundheit_IsVvgOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaGesundheit item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution_Vvg, this))
                    {
                        item.BaInstitution_Vvg = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaGesundheit_IsVvgOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson_BaInstitution(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson_BaInstitution item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson_BaInstitution", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson_BaInstitution item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson_BaInstitution", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument", item);
                    }
                }
            }
        }
    
        private void FixupKesVerlauf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesVerlauf item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesVerlauf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesVerlauf item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesVerlauf", item);
                    }
                }
            }
        }
    
        private void FixupKesPflegekinderaufsicht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
        }
    
        private void FixupKesMandatsfuehrendePerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
        }
    
        private void FixupKesMassnahme(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahme item in e.NewItems)
                {
                    item.BaInstitution = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahme", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahme item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaInstitution, this))
                    {
                        item.BaInstitution = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahme", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaInstitution)obj;
    		if (!_baInstitutionID.Equals(entity.BaInstitutionID) || _baInstitutionID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baInstitutionID.GetHashCode();
        }

        #endregion

    }
}
