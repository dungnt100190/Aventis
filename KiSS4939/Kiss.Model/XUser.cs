//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FaLeistung))]
    [KnownType(typeof(FaPhase))]
    [KnownType(typeof(XUser))]
    [KnownType(typeof(BDEPensum_XUser))]
    [KnownType(typeof(FsReduktionMitarbeiter))]
    [KnownType(typeof(VmKlientenbudget))]
    [KnownType(typeof(FbBuchung))]
    [KnownType(typeof(BaAdresse))]
    [KnownType(typeof(FaAktennotizen))]
    [KnownType(typeof(FaDokumente))]
    [KnownType(typeof(FaWeisung))]
    [KnownType(typeof(XTask))]
    [KnownType(typeof(FaKategorisierung))]
    [KnownType(typeof(FaLeistungUserHist))]
    [KnownType(typeof(FaLeistungArchiv))]
    [KnownType(typeof(XOrgUnit))]
    [KnownType(typeof(XOrgUnit_User))]
    [KnownType(typeof(FaLeistungZugriff))]
    [KnownType(typeof(BDESollStundenProJahr_XUser))]
    [KnownType(typeof(XUser_UserGroup))]
    [KnownType(typeof(FaFall))]
    [KnownType(typeof(UserSession))]
    [KnownType(typeof(FaDokumentAblage))]
    [KnownType(typeof(XModul))]
    [KnownType(typeof(KesAuftrag))]
    [KnownType(typeof(KesPraevention))]
    [KnownType(typeof(KesMandatsfuehrendePerson))]
    [KnownType(typeof(KesDokument))]
    [KnownType(typeof(KesVerlauf))]
    [KnownType(typeof(KesPflegekinderaufsicht))]
    [KnownType(typeof(ServiceCall))]
    [KnownType(typeof(ServiceProcessError))]
    public partial class XUser: EntityBase<XUser>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'UserID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _userID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private int _userID;
    
        [DataMember]
        public Nullable<int> ChiefID
        {
            get { return _chiefID; }
            set
            {
                if (_chiefID != value)
                {
                    ChangeTracker.RecordOriginalValue("ChiefID", _chiefID);
                    if (!IsDeserializing)
                    {
                        if (XUser_Chief != null && XUser_Chief.UserID != value)
                        {
                            XUser_Chief = null;
                        }
                    }
                    _chiefID = value;
                    OnPropertyChanged("ChiefID");
                }
            }
        }
        private Nullable<int> _chiefID;
    
        [DataMember]
        public Nullable<int> PrimaryUserID
        {
            get { return _primaryUserID; }
            set
            {
                if (_primaryUserID != value)
                {
                    ChangeTracker.RecordOriginalValue("PrimaryUserID", _primaryUserID);
                    if (!IsDeserializing)
                    {
                        if (XUser_PrimaryUser != null && XUser_PrimaryUser.UserID != value)
                        {
                            XUser_PrimaryUser = null;
                        }
                    }
                    _primaryUserID = value;
                    OnPropertyChanged("PrimaryUserID");
                }
            }
        }
        private Nullable<int> _primaryUserID;
    
        [DataMember]
        public Nullable<int> PermissionGroupID
        {
            get { return _permissionGroupID; }
            set
            {
                if (_permissionGroupID != value)
                {
                    _permissionGroupID = value;
                    OnPropertyChanged("PermissionGroupID");
                }
            }
        }
        private Nullable<int> _permissionGroupID;
    
        [DataMember]
        public Nullable<int> GrantPermGroupID
        {
            get { return _grantPermGroupID; }
            set
            {
                if (_grantPermGroupID != value)
                {
                    _grantPermGroupID = value;
                    OnPropertyChanged("GrantPermGroupID");
                }
            }
        }
        private Nullable<int> _grantPermGroupID;
    
        [DataMember]
        public Nullable<int> XProfileID
        {
            get { return _xProfileID; }
            set
            {
                if (_xProfileID != value)
                {
                    _xProfileID = value;
                    OnPropertyChanged("XProfileID");
                }
            }
        }
        private Nullable<int> _xProfileID;
    
        [DataMember]
        public Nullable<int> ModulID
        {
            get { return _modulID; }
            set
            {
                if (_modulID != value)
                {
                    ChangeTracker.RecordOriginalValue("ModulID", _modulID);
                    if (!IsDeserializing)
                    {
                        if (XModul != null && XModul.ModulID != value)
                        {
                            XModul = null;
                        }
                    }
                    _modulID = value;
                    OnPropertyChanged("ModulID");
                }
            }
        }
        private Nullable<int> _modulID;
    
        [DataMember]
        public Nullable<int> SachbearbeiterID
        {
            get { return _sachbearbeiterID; }
            set
            {
                if (_sachbearbeiterID != value)
                {
                    ChangeTracker.RecordOriginalValue("SachbearbeiterID", _sachbearbeiterID);
                    if (!IsDeserializing)
                    {
                        if (XUser_Sachbearbeiter != null && XUser_Sachbearbeiter.UserID != value)
                        {
                            XUser_Sachbearbeiter = null;
                        }
                    }
                    _sachbearbeiterID = value;
                    OnPropertyChanged("SachbearbeiterID");
                }
            }
        }
        private Nullable<int> _sachbearbeiterID;
    
        [DataMember]
        public string MitarbeiterNr
        {
            get { return _mitarbeiterNr; }
            set
            {
                if (_mitarbeiterNr != value)
                {
                    _mitarbeiterNr = value;
                    OnPropertyChanged("MitarbeiterNr");
                }
            }
        }
        private string _mitarbeiterNr;
    
        [DataMember]
        public string LogonName
        {
            get { return _logonName; }
            set
            {
                if (_logonName != value)
                {
                    _logonName = value;
                    OnPropertyChanged("LogonName");
                }
            }
        }
        private string _logonName;
    
        [DataMember]
        public string PasswordHash
        {
            get { return _passwordHash; }
            set
            {
                if (_passwordHash != value)
                {
                    _passwordHash = value;
                    OnPropertyChanged("PasswordHash");
                }
            }
        }
        private string _passwordHash;
    
        [DataMember]
        public string FirstName
        {
            get { return _firstName; }
            set
            {
                if (_firstName != value)
                {
                    _firstName = value;
                    OnPropertyChanged("FirstName");
                }
            }
        }
        private string _firstName;
    
        [DataMember]
        public string LastName
        {
            get { return _lastName; }
            set
            {
                if (_lastName != value)
                {
                    _lastName = value;
                    OnPropertyChanged("LastName");
                }
            }
        }
        private string _lastName;
    
        [DataMember]
        public string ShortName
        {
            get { return _shortName; }
            set
            {
                if (_shortName != value)
                {
                    _shortName = value;
                    OnPropertyChanged("ShortName");
                }
            }
        }
        private string _shortName;
    
        [DataMember]
        public bool IsLocked
        {
            get { return _isLocked; }
            set
            {
                if (_isLocked != value)
                {
                    _isLocked = value;
                    OnPropertyChanged("IsLocked");
                }
            }
        }
        private bool _isLocked;
    
        [DataMember]
        public bool IsUserAdmin
        {
            get { return _isUserAdmin; }
            set
            {
                if (_isUserAdmin != value)
                {
                    _isUserAdmin = value;
                    OnPropertyChanged("IsUserAdmin");
                }
            }
        }
        private bool _isUserAdmin;
    
        [DataMember]
        public bool IsUserBIAGAdmin
        {
            get { return _isUserBIAGAdmin; }
            set
            {
                if (_isUserBIAGAdmin != value)
                {
                    _isUserBIAGAdmin = value;
                    OnPropertyChanged("IsUserBIAGAdmin");
                }
            }
        }
        private bool _isUserBIAGAdmin;
    
        [DataMember]
        public bool IsMandatsTraeger
        {
            get { return _isMandatsTraeger; }
            set
            {
                if (_isMandatsTraeger != value)
                {
                    _isMandatsTraeger = value;
                    OnPropertyChanged("IsMandatsTraeger");
                }
            }
        }
        private bool _isMandatsTraeger;
    
        [DataMember]
        public Nullable<int> GenderCode
        {
            get { return _genderCode; }
            set
            {
                if (_genderCode != value)
                {
                    _genderCode = value;
                    OnPropertyChanged("GenderCode");
                }
            }
        }
        private Nullable<int> _genderCode;
    
        [DataMember]
        public Nullable<System.DateTime> Geburtstag
        {
            get { return _geburtstag; }
            set
            {
                if (_geburtstag != value)
                {
                    _geburtstag = value;
                    OnPropertyChanged("Geburtstag");
                }
            }
        }
        private Nullable<System.DateTime> _geburtstag;
    
        [DataMember]
        public Nullable<int> LanguageCode
        {
            get { return _languageCode; }
            set
            {
                if (_languageCode != value)
                {
                    _languageCode = value;
                    OnPropertyChanged("LanguageCode");
                }
            }
        }
        private Nullable<int> _languageCode;
    
        [DataMember]
        public string Phone
        {
            get { return _phone; }
            set
            {
                if (_phone != value)
                {
                    _phone = value;
                    OnPropertyChanged("Phone");
                }
            }
        }
        private string _phone;
    
        [DataMember]
        public string PhoneOffice
        {
            get { return _phoneOffice; }
            set
            {
                if (_phoneOffice != value)
                {
                    _phoneOffice = value;
                    OnPropertyChanged("PhoneOffice");
                }
            }
        }
        private string _phoneOffice;
    
        [DataMember]
        public string PhoneIntern
        {
            get { return _phoneIntern; }
            set
            {
                if (_phoneIntern != value)
                {
                    _phoneIntern = value;
                    OnPropertyChanged("PhoneIntern");
                }
            }
        }
        private string _phoneIntern;
    
        [DataMember]
        public string PhonePrivat
        {
            get { return _phonePrivat; }
            set
            {
                if (_phonePrivat != value)
                {
                    _phonePrivat = value;
                    OnPropertyChanged("PhonePrivat");
                }
            }
        }
        private string _phonePrivat;
    
        [DataMember]
        public string EMail
        {
            get { return _eMail; }
            set
            {
                if (_eMail != value)
                {
                    _eMail = value;
                    OnPropertyChanged("EMail");
                }
            }
        }
        private string _eMail;
    
        [DataMember]
        public Nullable<int> UserProfileCode
        {
            get { return _userProfileCode; }
            set
            {
                if (_userProfileCode != value)
                {
                    _userProfileCode = value;
                    OnPropertyChanged("UserProfileCode");
                }
            }
        }
        private Nullable<int> _userProfileCode;
    
        [DataMember]
        public string Funktion
        {
            get { return _funktion; }
            set
            {
                if (_funktion != value)
                {
                    _funktion = value;
                    OnPropertyChanged("Funktion");
                }
            }
        }
        private string _funktion;
    
        [DataMember]
        public string Bemerkungen
        {
            get { return _bemerkungen; }
            set
            {
                if (_bemerkungen != value)
                {
                    _bemerkungen = value;
                    OnPropertyChanged("Bemerkungen");
                }
            }
        }
        private string _bemerkungen;
    
        [DataMember]
        public string Text1
        {
            get { return _text1; }
            set
            {
                if (_text1 != value)
                {
                    _text1 = value;
                    OnPropertyChanged("Text1");
                }
            }
        }
        private string _text1;
    
        [DataMember]
        public string Text2
        {
            get { return _text2; }
            set
            {
                if (_text2 != value)
                {
                    _text2 = value;
                    OnPropertyChanged("Text2");
                }
            }
        }
        private string _text2;
    
        [DataMember]
        public Nullable<double> JobPercentage
        {
            get { return _jobPercentage; }
            set
            {
                if (_jobPercentage != value)
                {
                    _jobPercentage = value;
                    OnPropertyChanged("JobPercentage");
                }
            }
        }
        private Nullable<double> _jobPercentage;
    
        [DataMember]
        public Nullable<int> HoursPerYearForCaseMgmt
        {
            get { return _hoursPerYearForCaseMgmt; }
            set
            {
                if (_hoursPerYearForCaseMgmt != value)
                {
                    _hoursPerYearForCaseMgmt = value;
                    OnPropertyChanged("HoursPerYearForCaseMgmt");
                }
            }
        }
        private Nullable<int> _hoursPerYearForCaseMgmt;
    
        [DataMember]
        public Nullable<System.DateTime> Eintrittsdatum
        {
            get { return _eintrittsdatum; }
            set
            {
                if (_eintrittsdatum != value)
                {
                    _eintrittsdatum = value;
                    OnPropertyChanged("Eintrittsdatum");
                }
            }
        }
        private Nullable<System.DateTime> _eintrittsdatum;
    
        [DataMember]
        public Nullable<System.DateTime> Austrittsdatum
        {
            get { return _austrittsdatum; }
            set
            {
                if (_austrittsdatum != value)
                {
                    _austrittsdatum = value;
                    OnPropertyChanged("Austrittsdatum");
                }
            }
        }
        private Nullable<System.DateTime> _austrittsdatum;
    
        [DataMember]
        public Nullable<int> LohntypCode
        {
            get { return _lohntypCode; }
            set
            {
                if (_lohntypCode != value)
                {
                    _lohntypCode = value;
                    OnPropertyChanged("LohntypCode");
                }
            }
        }
        private Nullable<int> _lohntypCode;
    
        [DataMember]
        public Nullable<int> Kostentraeger
        {
            get { return _kostentraeger; }
            set
            {
                if (_kostentraeger != value)
                {
                    _kostentraeger = value;
                    OnPropertyChanged("Kostentraeger");
                }
            }
        }
        private Nullable<int> _kostentraeger;
    
        [DataMember]
        public Nullable<int> Kostenart
        {
            get { return _kostenart; }
            set
            {
                if (_kostenart != value)
                {
                    _kostenart = value;
                    OnPropertyChanged("Kostenart");
                }
            }
        }
        private Nullable<int> _kostenart;
    
        [DataMember]
        public string MigHerkunft
        {
            get { return _migHerkunft; }
            set
            {
                if (_migHerkunft != value)
                {
                    _migHerkunft = value;
                    OnPropertyChanged("MigHerkunft");
                }
            }
        }
        private string _migHerkunft;
    
        [DataMember]
        public string MigMAKuerzel
        {
            get { return _migMAKuerzel; }
            set
            {
                if (_migMAKuerzel != value)
                {
                    _migMAKuerzel = value;
                    OnPropertyChanged("MigMAKuerzel");
                }
            }
        }
        private string _migMAKuerzel;
    
        [DataMember]
        public bool MigUserFix
        {
            get { return _migUserFix; }
            set
            {
                if (_migUserFix != value)
                {
                    _migUserFix = value;
                    OnPropertyChanged("MigUserFix");
                }
            }
        }
        private bool _migUserFix;
    
        [DataMember]
        public string visdat36Area
        {
            get { return _visdat36Area; }
            set
            {
                if (_visdat36Area != value)
                {
                    _visdat36Area = value;
                    OnPropertyChanged("visdat36Area");
                }
            }
        }
        private string _visdat36Area;
    
        [DataMember]
        public string visdat36SourceFile
        {
            get { return _visdat36SourceFile; }
            set
            {
                if (_visdat36SourceFile != value)
                {
                    _visdat36SourceFile = value;
                    OnPropertyChanged("visdat36SourceFile");
                }
            }
        }
        private string _visdat36SourceFile;
    
        [DataMember]
        public string visdat36ID
        {
            get { return _visdat36ID; }
            set
            {
                if (_visdat36ID != value)
                {
                    _visdat36ID = value;
                    OnPropertyChanged("visdat36ID");
                }
            }
        }
        private string _visdat36ID;
    
        [DataMember]
        public string visdat36Name
        {
            get { return _visdat36Name; }
            set
            {
                if (_visdat36Name != value)
                {
                    _visdat36Name = value;
                    OnPropertyChanged("visdat36Name");
                }
            }
        }
        private string _visdat36Name;
    
        [DataMember]
        public Nullable<int> VerID
        {
            get { return _verID; }
            set
            {
                if (_verID != value)
                {
                    _verID = value;
                    OnPropertyChanged("VerID");
                }
            }
        }
        private Nullable<int> _verID;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] XUserTS
        {
            get { return _xUserTS; }
            set
            {
                if (_xUserTS != value)
                {
                    _xUserTS = value;
                    OnPropertyChanged("XUserTS");
                }
            }
        }
        private byte[] _xUserTS;
    
        [DataMember]
        public string PhoneMobile
        {
            get { return _phoneMobile; }
            set
            {
                if (_phoneMobile != value)
                {
                    _phoneMobile = value;
                    OnPropertyChanged("PhoneMobile");
                }
            }
        }
        private string _phoneMobile;
    
        [DataMember]
        public string Fax
        {
            get { return _fax; }
            set
            {
                if (_fax != value)
                {
                    _fax = value;
                    OnPropertyChanged("Fax");
                }
            }
        }
        private string _fax;
    
        [DataMember]
        public Nullable<int> RoleTitleCode
        {
            get { return _roleTitleCode; }
            set
            {
                if (_roleTitleCode != value)
                {
                    _roleTitleCode = value;
                    OnPropertyChanged("RoleTitleCode");
                }
            }
        }
        private Nullable<int> _roleTitleCode;
    
        [DataMember]
        public Nullable<int> QualificationTitleCode
        {
            get { return _qualificationTitleCode; }
            set
            {
                if (_qualificationTitleCode != value)
                {
                    _qualificationTitleCode = value;
                    OnPropertyChanged("QualificationTitleCode");
                }
            }
        }
        private Nullable<int> _qualificationTitleCode;
    
        [DataMember]
        public bool KeinBDEExport
        {
            get { return _keinBDEExport; }
            set
            {
                if (_keinBDEExport != value)
                {
                    _keinBDEExport = value;
                    OnPropertyChanged("KeinBDEExport");
                }
            }
        }
        private bool _keinBDEExport;
    
        [DataMember]
        public string WeitereKostentraeger
        {
            get { return _weitereKostentraeger; }
            set
            {
                if (_weitereKostentraeger != value)
                {
                    _weitereKostentraeger = value;
                    OnPropertyChanged("WeitereKostentraeger");
                }
            }
        }
        private string _weitereKostentraeger;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<FaLeistung> FaLeistung
        {
            get
            {
                if (_faLeistung == null)
                {
                    _faLeistung = new TrackableCollection<FaLeistung>();
                    _faLeistung.CollectionChanged += FixupFaLeistung;
                }
                return _faLeistung;
            }
            set
            {
                if (!ReferenceEquals(_faLeistung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistung != null)
                    {
                        _faLeistung.CollectionChanged -= FixupFaLeistung;
                    }
                    _faLeistung = value;
                    if (_faLeistung != null)
                    {
                        _faLeistung.CollectionChanged += FixupFaLeistung;
                    }
                    OnNavigationPropertyChanged("FaLeistung");
                }
            }
        }
        private TrackableCollection<FaLeistung> _faLeistung;
    
        [DataMember]
        public TrackableCollection<FaPhase> FaPhase
        {
            get
            {
                if (_faPhase == null)
                {
                    _faPhase = new TrackableCollection<FaPhase>();
                    _faPhase.CollectionChanged += FixupFaPhase;
                }
                return _faPhase;
            }
            set
            {
                if (!ReferenceEquals(_faPhase, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faPhase != null)
                    {
                        _faPhase.CollectionChanged -= FixupFaPhase;
                    }
                    _faPhase = value;
                    if (_faPhase != null)
                    {
                        _faPhase.CollectionChanged += FixupFaPhase;
                    }
                    OnNavigationPropertyChanged("FaPhase");
                }
            }
        }
        private TrackableCollection<FaPhase> _faPhase;
    
        [DataMember]
        public TrackableCollection<XUser> XUser_IsChiefOf
        {
            get
            {
                if (_xUser_IsChiefOf == null)
                {
                    _xUser_IsChiefOf = new TrackableCollection<XUser>();
                    _xUser_IsChiefOf.CollectionChanged += FixupXUser_IsChiefOf;
                }
                return _xUser_IsChiefOf;
            }
            set
            {
                if (!ReferenceEquals(_xUser_IsChiefOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xUser_IsChiefOf != null)
                    {
                        _xUser_IsChiefOf.CollectionChanged -= FixupXUser_IsChiefOf;
                    }
                    _xUser_IsChiefOf = value;
                    if (_xUser_IsChiefOf != null)
                    {
                        _xUser_IsChiefOf.CollectionChanged += FixupXUser_IsChiefOf;
                    }
                    OnNavigationPropertyChanged("XUser_IsChiefOf");
                }
            }
        }
        private TrackableCollection<XUser> _xUser_IsChiefOf;
    
        [DataMember]
        public XUser XUser_Chief
        {
            get { return _xUser_Chief; }
            set
            {
                if (!ReferenceEquals(_xUser_Chief, value))
                {
                    var previousValue = _xUser_Chief;
                    _xUser_Chief = value;
                    FixupXUser_Chief(previousValue);
                    OnNavigationPropertyChanged("XUser_Chief");
                }
            }
        }
        private XUser _xUser_Chief;
    
        [DataMember]
        public TrackableCollection<XUser> XUser_IsPrimaryUserOf
        {
            get
            {
                if (_xUser_IsPrimaryUserOf == null)
                {
                    _xUser_IsPrimaryUserOf = new TrackableCollection<XUser>();
                    _xUser_IsPrimaryUserOf.CollectionChanged += FixupXUser_IsPrimaryUserOf;
                }
                return _xUser_IsPrimaryUserOf;
            }
            set
            {
                if (!ReferenceEquals(_xUser_IsPrimaryUserOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xUser_IsPrimaryUserOf != null)
                    {
                        _xUser_IsPrimaryUserOf.CollectionChanged -= FixupXUser_IsPrimaryUserOf;
                    }
                    _xUser_IsPrimaryUserOf = value;
                    if (_xUser_IsPrimaryUserOf != null)
                    {
                        _xUser_IsPrimaryUserOf.CollectionChanged += FixupXUser_IsPrimaryUserOf;
                    }
                    OnNavigationPropertyChanged("XUser_IsPrimaryUserOf");
                }
            }
        }
        private TrackableCollection<XUser> _xUser_IsPrimaryUserOf;
    
        [DataMember]
        public XUser XUser_PrimaryUser
        {
            get { return _xUser_PrimaryUser; }
            set
            {
                if (!ReferenceEquals(_xUser_PrimaryUser, value))
                {
                    var previousValue = _xUser_PrimaryUser;
                    _xUser_PrimaryUser = value;
                    FixupXUser_PrimaryUser(previousValue);
                    OnNavigationPropertyChanged("XUser_PrimaryUser");
                }
            }
        }
        private XUser _xUser_PrimaryUser;
    
        [DataMember]
        public TrackableCollection<XUser> XUser_IsSachbearbeiterOf
        {
            get
            {
                if (_xUser_IsSachbearbeiterOf == null)
                {
                    _xUser_IsSachbearbeiterOf = new TrackableCollection<XUser>();
                    _xUser_IsSachbearbeiterOf.CollectionChanged += FixupXUser_IsSachbearbeiterOf;
                }
                return _xUser_IsSachbearbeiterOf;
            }
            set
            {
                if (!ReferenceEquals(_xUser_IsSachbearbeiterOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xUser_IsSachbearbeiterOf != null)
                    {
                        _xUser_IsSachbearbeiterOf.CollectionChanged -= FixupXUser_IsSachbearbeiterOf;
                    }
                    _xUser_IsSachbearbeiterOf = value;
                    if (_xUser_IsSachbearbeiterOf != null)
                    {
                        _xUser_IsSachbearbeiterOf.CollectionChanged += FixupXUser_IsSachbearbeiterOf;
                    }
                    OnNavigationPropertyChanged("XUser_IsSachbearbeiterOf");
                }
            }
        }
        private TrackableCollection<XUser> _xUser_IsSachbearbeiterOf;
    
        [DataMember]
        public XUser XUser_Sachbearbeiter
        {
            get { return _xUser_Sachbearbeiter; }
            set
            {
                if (!ReferenceEquals(_xUser_Sachbearbeiter, value))
                {
                    var previousValue = _xUser_Sachbearbeiter;
                    _xUser_Sachbearbeiter = value;
                    FixupXUser_Sachbearbeiter(previousValue);
                    OnNavigationPropertyChanged("XUser_Sachbearbeiter");
                }
            }
        }
        private XUser _xUser_Sachbearbeiter;
    
        [DataMember]
        public TrackableCollection<BDEPensum_XUser> BDEPensum_XUser
        {
            get
            {
                if (_bDEPensum_XUser == null)
                {
                    _bDEPensum_XUser = new TrackableCollection<BDEPensum_XUser>();
                    _bDEPensum_XUser.CollectionChanged += FixupBDEPensum_XUser;
                }
                return _bDEPensum_XUser;
            }
            set
            {
                if (!ReferenceEquals(_bDEPensum_XUser, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bDEPensum_XUser != null)
                    {
                        _bDEPensum_XUser.CollectionChanged -= FixupBDEPensum_XUser;
                    }
                    _bDEPensum_XUser = value;
                    if (_bDEPensum_XUser != null)
                    {
                        _bDEPensum_XUser.CollectionChanged += FixupBDEPensum_XUser;
                    }
                    OnNavigationPropertyChanged("BDEPensum_XUser");
                }
            }
        }
        private TrackableCollection<BDEPensum_XUser> _bDEPensum_XUser;
    
        [DataMember]
        public TrackableCollection<FsReduktionMitarbeiter> FsReduktionMitarbeiter
        {
            get
            {
                if (_fsReduktionMitarbeiter == null)
                {
                    _fsReduktionMitarbeiter = new TrackableCollection<FsReduktionMitarbeiter>();
                    _fsReduktionMitarbeiter.CollectionChanged += FixupFsReduktionMitarbeiter;
                }
                return _fsReduktionMitarbeiter;
            }
            set
            {
                if (!ReferenceEquals(_fsReduktionMitarbeiter, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fsReduktionMitarbeiter != null)
                    {
                        _fsReduktionMitarbeiter.CollectionChanged -= FixupFsReduktionMitarbeiter;
                    }
                    _fsReduktionMitarbeiter = value;
                    if (_fsReduktionMitarbeiter != null)
                    {
                        _fsReduktionMitarbeiter.CollectionChanged += FixupFsReduktionMitarbeiter;
                    }
                    OnNavigationPropertyChanged("FsReduktionMitarbeiter");
                }
            }
        }
        private TrackableCollection<FsReduktionMitarbeiter> _fsReduktionMitarbeiter;
    
        [DataMember]
        public TrackableCollection<FaLeistung> FaLeistung_Sachbearbeiter
        {
            get
            {
                if (_faLeistung_Sachbearbeiter == null)
                {
                    _faLeistung_Sachbearbeiter = new TrackableCollection<FaLeistung>();
                    _faLeistung_Sachbearbeiter.CollectionChanged += FixupFaLeistung_Sachbearbeiter;
                }
                return _faLeistung_Sachbearbeiter;
            }
            set
            {
                if (!ReferenceEquals(_faLeistung_Sachbearbeiter, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistung_Sachbearbeiter != null)
                    {
                        _faLeistung_Sachbearbeiter.CollectionChanged -= FixupFaLeistung_Sachbearbeiter;
                    }
                    _faLeistung_Sachbearbeiter = value;
                    if (_faLeistung_Sachbearbeiter != null)
                    {
                        _faLeistung_Sachbearbeiter.CollectionChanged += FixupFaLeistung_Sachbearbeiter;
                    }
                    OnNavigationPropertyChanged("FaLeistung_Sachbearbeiter");
                }
            }
        }
        private TrackableCollection<FaLeistung> _faLeistung_Sachbearbeiter;
    
        [DataMember]
        public TrackableCollection<VmKlientenbudget> VmKlientenbudget
        {
            get
            {
                if (_vmKlientenbudget == null)
                {
                    _vmKlientenbudget = new TrackableCollection<VmKlientenbudget>();
                    _vmKlientenbudget.CollectionChanged += FixupVmKlientenbudget;
                }
                return _vmKlientenbudget;
            }
            set
            {
                if (!ReferenceEquals(_vmKlientenbudget, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vmKlientenbudget != null)
                    {
                        _vmKlientenbudget.CollectionChanged -= FixupVmKlientenbudget;
                    }
                    _vmKlientenbudget = value;
                    if (_vmKlientenbudget != null)
                    {
                        _vmKlientenbudget.CollectionChanged += FixupVmKlientenbudget;
                    }
                    OnNavigationPropertyChanged("VmKlientenbudget");
                }
            }
        }
        private TrackableCollection<VmKlientenbudget> _vmKlientenbudget;
    
        [DataMember]
        public TrackableCollection<FbBuchung> FbBuchung
        {
            get
            {
                if (_fbBuchung == null)
                {
                    _fbBuchung = new TrackableCollection<FbBuchung>();
                    _fbBuchung.CollectionChanged += FixupFbBuchung;
                }
                return _fbBuchung;
            }
            set
            {
                if (!ReferenceEquals(_fbBuchung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fbBuchung != null)
                    {
                        _fbBuchung.CollectionChanged -= FixupFbBuchung;
                    }
                    _fbBuchung = value;
                    if (_fbBuchung != null)
                    {
                        _fbBuchung.CollectionChanged += FixupFbBuchung;
                    }
                    OnNavigationPropertyChanged("FbBuchung");
                }
            }
        }
        private TrackableCollection<FbBuchung> _fbBuchung;
    
        [DataMember]
        public TrackableCollection<BaAdresse> BaAdresse
        {
            get
            {
                if (_baAdresse == null)
                {
                    _baAdresse = new TrackableCollection<BaAdresse>();
                    _baAdresse.CollectionChanged += FixupBaAdresse;
                }
                return _baAdresse;
            }
            set
            {
                if (!ReferenceEquals(_baAdresse, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged -= FixupBaAdresse;
                    }
                    _baAdresse = value;
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged += FixupBaAdresse;
                    }
                    OnNavigationPropertyChanged("BaAdresse");
                }
            }
        }
        private TrackableCollection<BaAdresse> _baAdresse;
    
        [DataMember]
        public TrackableCollection<FaAktennotizen> FaAktennotizen
        {
            get
            {
                if (_faAktennotizen == null)
                {
                    _faAktennotizen = new TrackableCollection<FaAktennotizen>();
                    _faAktennotizen.CollectionChanged += FixupFaAktennotizen;
                }
                return _faAktennotizen;
            }
            set
            {
                if (!ReferenceEquals(_faAktennotizen, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faAktennotizen != null)
                    {
                        _faAktennotizen.CollectionChanged -= FixupFaAktennotizen;
                    }
                    _faAktennotizen = value;
                    if (_faAktennotizen != null)
                    {
                        _faAktennotizen.CollectionChanged += FixupFaAktennotizen;
                    }
                    OnNavigationPropertyChanged("FaAktennotizen");
                }
            }
        }
        private TrackableCollection<FaAktennotizen> _faAktennotizen;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsAbsenderOf
        {
            get
            {
                if (_faDokumente_IsAbsenderOf == null)
                {
                    _faDokumente_IsAbsenderOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsAbsenderOf.CollectionChanged += FixupFaDokumente_IsAbsenderOf;
                }
                return _faDokumente_IsAbsenderOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsAbsenderOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsAbsenderOf != null)
                    {
                        _faDokumente_IsAbsenderOf.CollectionChanged -= FixupFaDokumente_IsAbsenderOf;
                    }
                    _faDokumente_IsAbsenderOf = value;
                    if (_faDokumente_IsAbsenderOf != null)
                    {
                        _faDokumente_IsAbsenderOf.CollectionChanged += FixupFaDokumente_IsAbsenderOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsAbsenderOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsAbsenderOf;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsEkVisumOf
        {
            get
            {
                if (_faDokumente_IsEkVisumOf == null)
                {
                    _faDokumente_IsEkVisumOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsEkVisumOf.CollectionChanged += FixupFaDokumente_IsEkVisumOf;
                }
                return _faDokumente_IsEkVisumOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsEkVisumOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsEkVisumOf != null)
                    {
                        _faDokumente_IsEkVisumOf.CollectionChanged -= FixupFaDokumente_IsEkVisumOf;
                    }
                    _faDokumente_IsEkVisumOf = value;
                    if (_faDokumente_IsEkVisumOf != null)
                    {
                        _faDokumente_IsEkVisumOf.CollectionChanged += FixupFaDokumente_IsEkVisumOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsEkVisumOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsEkVisumOf;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsVisiertDurchOf
        {
            get
            {
                if (_faDokumente_IsVisiertDurchOf == null)
                {
                    _faDokumente_IsVisiertDurchOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsVisiertDurchOf.CollectionChanged += FixupFaDokumente_IsVisiertDurchOf;
                }
                return _faDokumente_IsVisiertDurchOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsVisiertDurchOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsVisiertDurchOf != null)
                    {
                        _faDokumente_IsVisiertDurchOf.CollectionChanged -= FixupFaDokumente_IsVisiertDurchOf;
                    }
                    _faDokumente_IsVisiertDurchOf = value;
                    if (_faDokumente_IsVisiertDurchOf != null)
                    {
                        _faDokumente_IsVisiertDurchOf.CollectionChanged += FixupFaDokumente_IsVisiertDurchOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsVisiertDurchOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsVisiertDurchOf;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsVisumBeantragtBeiOf
        {
            get
            {
                if (_faDokumente_IsVisumBeantragtBeiOf == null)
                {
                    _faDokumente_IsVisumBeantragtBeiOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsVisumBeantragtBeiOf.CollectionChanged += FixupFaDokumente_IsVisumBeantragtBeiOf;
                }
                return _faDokumente_IsVisumBeantragtBeiOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsVisumBeantragtBeiOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsVisumBeantragtBeiOf != null)
                    {
                        _faDokumente_IsVisumBeantragtBeiOf.CollectionChanged -= FixupFaDokumente_IsVisumBeantragtBeiOf;
                    }
                    _faDokumente_IsVisumBeantragtBeiOf = value;
                    if (_faDokumente_IsVisumBeantragtBeiOf != null)
                    {
                        _faDokumente_IsVisumBeantragtBeiOf.CollectionChanged += FixupFaDokumente_IsVisumBeantragtBeiOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsVisumBeantragtBeiOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsVisumBeantragtBeiOf;
    
        [DataMember]
        public TrackableCollection<FaDokumente> FaDokumente_IsVisumBeantragtDurchOf
        {
            get
            {
                if (_faDokumente_IsVisumBeantragtDurchOf == null)
                {
                    _faDokumente_IsVisumBeantragtDurchOf = new TrackableCollection<FaDokumente>();
                    _faDokumente_IsVisumBeantragtDurchOf.CollectionChanged += FixupFaDokumente_IsVisumBeantragtDurchOf;
                }
                return _faDokumente_IsVisumBeantragtDurchOf;
            }
            set
            {
                if (!ReferenceEquals(_faDokumente_IsVisumBeantragtDurchOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumente_IsVisumBeantragtDurchOf != null)
                    {
                        _faDokumente_IsVisumBeantragtDurchOf.CollectionChanged -= FixupFaDokumente_IsVisumBeantragtDurchOf;
                    }
                    _faDokumente_IsVisumBeantragtDurchOf = value;
                    if (_faDokumente_IsVisumBeantragtDurchOf != null)
                    {
                        _faDokumente_IsVisumBeantragtDurchOf.CollectionChanged += FixupFaDokumente_IsVisumBeantragtDurchOf;
                    }
                    OnNavigationPropertyChanged("FaDokumente_IsVisumBeantragtDurchOf");
                }
            }
        }
        private TrackableCollection<FaDokumente> _faDokumente_IsVisumBeantragtDurchOf;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_IsCreatorOf
        {
            get
            {
                if (_faWeisung_IsCreatorOf == null)
                {
                    _faWeisung_IsCreatorOf = new TrackableCollection<FaWeisung>();
                    _faWeisung_IsCreatorOf.CollectionChanged += FixupFaWeisung_IsCreatorOf;
                }
                return _faWeisung_IsCreatorOf;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_IsCreatorOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_IsCreatorOf != null)
                    {
                        _faWeisung_IsCreatorOf.CollectionChanged -= FixupFaWeisung_IsCreatorOf;
                    }
                    _faWeisung_IsCreatorOf = value;
                    if (_faWeisung_IsCreatorOf != null)
                    {
                        _faWeisung_IsCreatorOf.CollectionChanged += FixupFaWeisung_IsCreatorOf;
                    }
                    OnNavigationPropertyChanged("FaWeisung_IsCreatorOf");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_IsCreatorOf;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_IsVerantwortlichRdOf
        {
            get
            {
                if (_faWeisung_IsVerantwortlichRdOf == null)
                {
                    _faWeisung_IsVerantwortlichRdOf = new TrackableCollection<FaWeisung>();
                    _faWeisung_IsVerantwortlichRdOf.CollectionChanged += FixupFaWeisung_IsVerantwortlichRdOf;
                }
                return _faWeisung_IsVerantwortlichRdOf;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_IsVerantwortlichRdOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_IsVerantwortlichRdOf != null)
                    {
                        _faWeisung_IsVerantwortlichRdOf.CollectionChanged -= FixupFaWeisung_IsVerantwortlichRdOf;
                    }
                    _faWeisung_IsVerantwortlichRdOf = value;
                    if (_faWeisung_IsVerantwortlichRdOf != null)
                    {
                        _faWeisung_IsVerantwortlichRdOf.CollectionChanged += FixupFaWeisung_IsVerantwortlichRdOf;
                    }
                    OnNavigationPropertyChanged("FaWeisung_IsVerantwortlichRdOf");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_IsVerantwortlichRdOf;
    
        [DataMember]
        public TrackableCollection<FaWeisung> FaWeisung_IsVerantwortlichSarOf
        {
            get
            {
                if (_faWeisung_IsVerantwortlichSarOf == null)
                {
                    _faWeisung_IsVerantwortlichSarOf = new TrackableCollection<FaWeisung>();
                    _faWeisung_IsVerantwortlichSarOf.CollectionChanged += FixupFaWeisung_IsVerantwortlichSarOf;
                }
                return _faWeisung_IsVerantwortlichSarOf;
            }
            set
            {
                if (!ReferenceEquals(_faWeisung_IsVerantwortlichSarOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faWeisung_IsVerantwortlichSarOf != null)
                    {
                        _faWeisung_IsVerantwortlichSarOf.CollectionChanged -= FixupFaWeisung_IsVerantwortlichSarOf;
                    }
                    _faWeisung_IsVerantwortlichSarOf = value;
                    if (_faWeisung_IsVerantwortlichSarOf != null)
                    {
                        _faWeisung_IsVerantwortlichSarOf.CollectionChanged += FixupFaWeisung_IsVerantwortlichSarOf;
                    }
                    OnNavigationPropertyChanged("FaWeisung_IsVerantwortlichSarOf");
                }
            }
        }
        private TrackableCollection<FaWeisung> _faWeisung_IsVerantwortlichSarOf;
    
        [DataMember]
        public TrackableCollection<XTask> XTask_IsBearbeitungOf
        {
            get
            {
                if (_xTask_IsBearbeitungOf == null)
                {
                    _xTask_IsBearbeitungOf = new TrackableCollection<XTask>();
                    _xTask_IsBearbeitungOf.CollectionChanged += FixupXTask_IsBearbeitungOf;
                }
                return _xTask_IsBearbeitungOf;
            }
            set
            {
                if (!ReferenceEquals(_xTask_IsBearbeitungOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xTask_IsBearbeitungOf != null)
                    {
                        _xTask_IsBearbeitungOf.CollectionChanged -= FixupXTask_IsBearbeitungOf;
                    }
                    _xTask_IsBearbeitungOf = value;
                    if (_xTask_IsBearbeitungOf != null)
                    {
                        _xTask_IsBearbeitungOf.CollectionChanged += FixupXTask_IsBearbeitungOf;
                    }
                    OnNavigationPropertyChanged("XTask_IsBearbeitungOf");
                }
            }
        }
        private TrackableCollection<XTask> _xTask_IsBearbeitungOf;
    
        [DataMember]
        public TrackableCollection<XTask> XTask_IsErledigtOf
        {
            get
            {
                if (_xTask_IsErledigtOf == null)
                {
                    _xTask_IsErledigtOf = new TrackableCollection<XTask>();
                    _xTask_IsErledigtOf.CollectionChanged += FixupXTask_IsErledigtOf;
                }
                return _xTask_IsErledigtOf;
            }
            set
            {
                if (!ReferenceEquals(_xTask_IsErledigtOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xTask_IsErledigtOf != null)
                    {
                        _xTask_IsErledigtOf.CollectionChanged -= FixupXTask_IsErledigtOf;
                    }
                    _xTask_IsErledigtOf = value;
                    if (_xTask_IsErledigtOf != null)
                    {
                        _xTask_IsErledigtOf.CollectionChanged += FixupXTask_IsErledigtOf;
                    }
                    OnNavigationPropertyChanged("XTask_IsErledigtOf");
                }
            }
        }
        private TrackableCollection<XTask> _xTask_IsErledigtOf;
    
        [DataMember]
        public TrackableCollection<FaKategorisierung> FaKategorisierung
        {
            get
            {
                if (_faKategorisierung == null)
                {
                    _faKategorisierung = new TrackableCollection<FaKategorisierung>();
                    _faKategorisierung.CollectionChanged += FixupFaKategorisierung;
                }
                return _faKategorisierung;
            }
            set
            {
                if (!ReferenceEquals(_faKategorisierung, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faKategorisierung != null)
                    {
                        _faKategorisierung.CollectionChanged -= FixupFaKategorisierung;
                    }
                    _faKategorisierung = value;
                    if (_faKategorisierung != null)
                    {
                        _faKategorisierung.CollectionChanged += FixupFaKategorisierung;
                    }
                    OnNavigationPropertyChanged("FaKategorisierung");
                }
            }
        }
        private TrackableCollection<FaKategorisierung> _faKategorisierung;
    
        [DataMember]
        public TrackableCollection<FaLeistungUserHist> FaLeistungUserHist
        {
            get
            {
                if (_faLeistungUserHist == null)
                {
                    _faLeistungUserHist = new TrackableCollection<FaLeistungUserHist>();
                    _faLeistungUserHist.CollectionChanged += FixupFaLeistungUserHist;
                }
                return _faLeistungUserHist;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungUserHist, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungUserHist != null)
                    {
                        _faLeistungUserHist.CollectionChanged -= FixupFaLeistungUserHist;
                    }
                    _faLeistungUserHist = value;
                    if (_faLeistungUserHist != null)
                    {
                        _faLeistungUserHist.CollectionChanged += FixupFaLeistungUserHist;
                    }
                    OnNavigationPropertyChanged("FaLeistungUserHist");
                }
            }
        }
        private TrackableCollection<FaLeistungUserHist> _faLeistungUserHist;
    
        [DataMember]
        public TrackableCollection<FaLeistungArchiv> FaLeistungArchiv
        {
            get
            {
                if (_faLeistungArchiv == null)
                {
                    _faLeistungArchiv = new TrackableCollection<FaLeistungArchiv>();
                    _faLeistungArchiv.CollectionChanged += FixupFaLeistungArchiv;
                }
                return _faLeistungArchiv;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungArchiv, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungArchiv != null)
                    {
                        _faLeistungArchiv.CollectionChanged -= FixupFaLeistungArchiv;
                    }
                    _faLeistungArchiv = value;
                    if (_faLeistungArchiv != null)
                    {
                        _faLeistungArchiv.CollectionChanged += FixupFaLeistungArchiv;
                    }
                    OnNavigationPropertyChanged("FaLeistungArchiv");
                }
            }
        }
        private TrackableCollection<FaLeistungArchiv> _faLeistungArchiv;
    
        [DataMember]
        public TrackableCollection<FaLeistungArchiv> FaLeistungArchiv1
        {
            get
            {
                if (_faLeistungArchiv1 == null)
                {
                    _faLeistungArchiv1 = new TrackableCollection<FaLeistungArchiv>();
                    _faLeistungArchiv1.CollectionChanged += FixupFaLeistungArchiv1;
                }
                return _faLeistungArchiv1;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungArchiv1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungArchiv1 != null)
                    {
                        _faLeistungArchiv1.CollectionChanged -= FixupFaLeistungArchiv1;
                    }
                    _faLeistungArchiv1 = value;
                    if (_faLeistungArchiv1 != null)
                    {
                        _faLeistungArchiv1.CollectionChanged += FixupFaLeistungArchiv1;
                    }
                    OnNavigationPropertyChanged("FaLeistungArchiv1");
                }
            }
        }
        private TrackableCollection<FaLeistungArchiv> _faLeistungArchiv1;
    
        [DataMember]
        public TrackableCollection<XOrgUnit> XOrgUnit_IsChiefOf
        {
            get
            {
                if (_xOrgUnit_IsChiefOf == null)
                {
                    _xOrgUnit_IsChiefOf = new TrackableCollection<XOrgUnit>();
                    _xOrgUnit_IsChiefOf.CollectionChanged += FixupXOrgUnit_IsChiefOf;
                }
                return _xOrgUnit_IsChiefOf;
            }
            set
            {
                if (!ReferenceEquals(_xOrgUnit_IsChiefOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xOrgUnit_IsChiefOf != null)
                    {
                        _xOrgUnit_IsChiefOf.CollectionChanged -= FixupXOrgUnit_IsChiefOf;
                    }
                    _xOrgUnit_IsChiefOf = value;
                    if (_xOrgUnit_IsChiefOf != null)
                    {
                        _xOrgUnit_IsChiefOf.CollectionChanged += FixupXOrgUnit_IsChiefOf;
                    }
                    OnNavigationPropertyChanged("XOrgUnit_IsChiefOf");
                }
            }
        }
        private TrackableCollection<XOrgUnit> _xOrgUnit_IsChiefOf;
    
        [DataMember]
        public TrackableCollection<XOrgUnit> XOrgUnit_IsRechtsdienstOf
        {
            get
            {
                if (_xOrgUnit_IsRechtsdienstOf == null)
                {
                    _xOrgUnit_IsRechtsdienstOf = new TrackableCollection<XOrgUnit>();
                    _xOrgUnit_IsRechtsdienstOf.CollectionChanged += FixupXOrgUnit_IsRechtsdienstOf;
                }
                return _xOrgUnit_IsRechtsdienstOf;
            }
            set
            {
                if (!ReferenceEquals(_xOrgUnit_IsRechtsdienstOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xOrgUnit_IsRechtsdienstOf != null)
                    {
                        _xOrgUnit_IsRechtsdienstOf.CollectionChanged -= FixupXOrgUnit_IsRechtsdienstOf;
                    }
                    _xOrgUnit_IsRechtsdienstOf = value;
                    if (_xOrgUnit_IsRechtsdienstOf != null)
                    {
                        _xOrgUnit_IsRechtsdienstOf.CollectionChanged += FixupXOrgUnit_IsRechtsdienstOf;
                    }
                    OnNavigationPropertyChanged("XOrgUnit_IsRechtsdienstOf");
                }
            }
        }
        private TrackableCollection<XOrgUnit> _xOrgUnit_IsRechtsdienstOf;
    
        [DataMember]
        public TrackableCollection<XOrgUnit> XOrgUnit_IsRepresentativeOf
        {
            get
            {
                if (_xOrgUnit_IsRepresentativeOf == null)
                {
                    _xOrgUnit_IsRepresentativeOf = new TrackableCollection<XOrgUnit>();
                    _xOrgUnit_IsRepresentativeOf.CollectionChanged += FixupXOrgUnit_IsRepresentativeOf;
                }
                return _xOrgUnit_IsRepresentativeOf;
            }
            set
            {
                if (!ReferenceEquals(_xOrgUnit_IsRepresentativeOf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xOrgUnit_IsRepresentativeOf != null)
                    {
                        _xOrgUnit_IsRepresentativeOf.CollectionChanged -= FixupXOrgUnit_IsRepresentativeOf;
                    }
                    _xOrgUnit_IsRepresentativeOf = value;
                    if (_xOrgUnit_IsRepresentativeOf != null)
                    {
                        _xOrgUnit_IsRepresentativeOf.CollectionChanged += FixupXOrgUnit_IsRepresentativeOf;
                    }
                    OnNavigationPropertyChanged("XOrgUnit_IsRepresentativeOf");
                }
            }
        }
        private TrackableCollection<XOrgUnit> _xOrgUnit_IsRepresentativeOf;
    
        [DataMember]
        public TrackableCollection<XOrgUnit_User> XOrgUnit_User
        {
            get
            {
                if (_xOrgUnit_User == null)
                {
                    _xOrgUnit_User = new TrackableCollection<XOrgUnit_User>();
                    _xOrgUnit_User.CollectionChanged += FixupXOrgUnit_User;
                }
                return _xOrgUnit_User;
            }
            set
            {
                if (!ReferenceEquals(_xOrgUnit_User, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xOrgUnit_User != null)
                    {
                        _xOrgUnit_User.CollectionChanged -= FixupXOrgUnit_User;
                    }
                    _xOrgUnit_User = value;
                    if (_xOrgUnit_User != null)
                    {
                        _xOrgUnit_User.CollectionChanged += FixupXOrgUnit_User;
                    }
                    OnNavigationPropertyChanged("XOrgUnit_User");
                }
            }
        }
        private TrackableCollection<XOrgUnit_User> _xOrgUnit_User;
    
        [DataMember]
        public TrackableCollection<FaLeistungZugriff> FaLeistungZugriff
        {
            get
            {
                if (_faLeistungZugriff == null)
                {
                    _faLeistungZugriff = new TrackableCollection<FaLeistungZugriff>();
                    _faLeistungZugriff.CollectionChanged += FixupFaLeistungZugriff;
                }
                return _faLeistungZugriff;
            }
            set
            {
                if (!ReferenceEquals(_faLeistungZugriff, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faLeistungZugriff != null)
                    {
                        _faLeistungZugriff.CollectionChanged -= FixupFaLeistungZugriff;
                    }
                    _faLeistungZugriff = value;
                    if (_faLeistungZugriff != null)
                    {
                        _faLeistungZugriff.CollectionChanged += FixupFaLeistungZugriff;
                    }
                    OnNavigationPropertyChanged("FaLeistungZugriff");
                }
            }
        }
        private TrackableCollection<FaLeistungZugriff> _faLeistungZugriff;
    
        [DataMember]
        public TrackableCollection<BDESollStundenProJahr_XUser> BDESollStundenProJahr_XUser
        {
            get
            {
                if (_bDESollStundenProJahr_XUser == null)
                {
                    _bDESollStundenProJahr_XUser = new TrackableCollection<BDESollStundenProJahr_XUser>();
                    _bDESollStundenProJahr_XUser.CollectionChanged += FixupBDESollStundenProJahr_XUser;
                }
                return _bDESollStundenProJahr_XUser;
            }
            set
            {
                if (!ReferenceEquals(_bDESollStundenProJahr_XUser, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bDESollStundenProJahr_XUser != null)
                    {
                        _bDESollStundenProJahr_XUser.CollectionChanged -= FixupBDESollStundenProJahr_XUser;
                    }
                    _bDESollStundenProJahr_XUser = value;
                    if (_bDESollStundenProJahr_XUser != null)
                    {
                        _bDESollStundenProJahr_XUser.CollectionChanged += FixupBDESollStundenProJahr_XUser;
                    }
                    OnNavigationPropertyChanged("BDESollStundenProJahr_XUser");
                }
            }
        }
        private TrackableCollection<BDESollStundenProJahr_XUser> _bDESollStundenProJahr_XUser;
    
        [DataMember]
        public TrackableCollection<XUser_UserGroup> XUser_UserGroup
        {
            get
            {
                if (_xUser_UserGroup == null)
                {
                    _xUser_UserGroup = new TrackableCollection<XUser_UserGroup>();
                    _xUser_UserGroup.CollectionChanged += FixupXUser_UserGroup;
                }
                return _xUser_UserGroup;
            }
            set
            {
                if (!ReferenceEquals(_xUser_UserGroup, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xUser_UserGroup != null)
                    {
                        _xUser_UserGroup.CollectionChanged -= FixupXUser_UserGroup;
                    }
                    _xUser_UserGroup = value;
                    if (_xUser_UserGroup != null)
                    {
                        _xUser_UserGroup.CollectionChanged += FixupXUser_UserGroup;
                    }
                    OnNavigationPropertyChanged("XUser_UserGroup");
                }
            }
        }
        private TrackableCollection<XUser_UserGroup> _xUser_UserGroup;
    
        [DataMember]
        public TrackableCollection<XTask> XTask_Received
        {
            get
            {
                if (_xTask_Received == null)
                {
                    _xTask_Received = new TrackableCollection<XTask>();
                    _xTask_Received.CollectionChanged += FixupXTask_Received;
                }
                return _xTask_Received;
            }
            set
            {
                if (!ReferenceEquals(_xTask_Received, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_xTask_Received != null)
                    {
                        _xTask_Received.CollectionChanged -= FixupXTask_Received;
                    }
                    _xTask_Received = value;
                    if (_xTask_Received != null)
                    {
                        _xTask_Received.CollectionChanged += FixupXTask_Received;
                    }
                    OnNavigationPropertyChanged("XTask_Received");
                }
            }
        }
        private TrackableCollection<XTask> _xTask_Received;
    
        [DataMember]
        public TrackableCollection<FaFall> FaFall
        {
            get
            {
                if (_faFall == null)
                {
                    _faFall = new TrackableCollection<FaFall>();
                    _faFall.CollectionChanged += FixupFaFall;
                }
                return _faFall;
            }
            set
            {
                if (!ReferenceEquals(_faFall, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faFall != null)
                    {
                        _faFall.CollectionChanged -= FixupFaFall;
                    }
                    _faFall = value;
                    if (_faFall != null)
                    {
                        _faFall.CollectionChanged += FixupFaFall;
                    }
                    OnNavigationPropertyChanged("FaFall");
                }
            }
        }
        private TrackableCollection<FaFall> _faFall;
    
        [DataMember]
        public TrackableCollection<UserSession> UserSession
        {
            get
            {
                if (_userSession == null)
                {
                    _userSession = new TrackableCollection<UserSession>();
                    _userSession.CollectionChanged += FixupUserSession;
                }
                return _userSession;
            }
            set
            {
                if (!ReferenceEquals(_userSession, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_userSession != null)
                    {
                        _userSession.CollectionChanged -= FixupUserSession;
                    }
                    _userSession = value;
                    if (_userSession != null)
                    {
                        _userSession.CollectionChanged += FixupUserSession;
                    }
                    OnNavigationPropertyChanged("UserSession");
                }
            }
        }
        private TrackableCollection<UserSession> _userSession;
    
        [DataMember]
        public TrackableCollection<FaDokumentAblage> FaDokumentAblage
        {
            get
            {
                if (_faDokumentAblage == null)
                {
                    _faDokumentAblage = new TrackableCollection<FaDokumentAblage>();
                    _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                }
                return _faDokumentAblage;
            }
            set
            {
                if (!ReferenceEquals(_faDokumentAblage, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged -= FixupFaDokumentAblage;
                    }
                    _faDokumentAblage = value;
                    if (_faDokumentAblage != null)
                    {
                        _faDokumentAblage.CollectionChanged += FixupFaDokumentAblage;
                    }
                    OnNavigationPropertyChanged("FaDokumentAblage");
                }
            }
        }
        private TrackableCollection<FaDokumentAblage> _faDokumentAblage;
    
        [DataMember]
        public XModul XModul
        {
            get { return _xModul; }
            set
            {
                if (!ReferenceEquals(_xModul, value))
                {
                    var previousValue = _xModul;
                    _xModul = value;
                    FixupXModul(previousValue);
                    OnNavigationPropertyChanged("XModul");
                }
            }
        }
        private XModul _xModul;
    
        [DataMember]
        public TrackableCollection<KesAuftrag> KesAuftrag
        {
            get
            {
                if (_kesAuftrag == null)
                {
                    _kesAuftrag = new TrackableCollection<KesAuftrag>();
                    _kesAuftrag.CollectionChanged += FixupKesAuftrag;
                }
                return _kesAuftrag;
            }
            set
            {
                if (!ReferenceEquals(_kesAuftrag, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesAuftrag != null)
                    {
                        _kesAuftrag.CollectionChanged -= FixupKesAuftrag;
                    }
                    _kesAuftrag = value;
                    if (_kesAuftrag != null)
                    {
                        _kesAuftrag.CollectionChanged += FixupKesAuftrag;
                    }
                    OnNavigationPropertyChanged("KesAuftrag");
                }
            }
        }
        private TrackableCollection<KesAuftrag> _kesAuftrag;
    
        [DataMember]
        public TrackableCollection<KesPraevention> KesPraevention
        {
            get
            {
                if (_kesPraevention == null)
                {
                    _kesPraevention = new TrackableCollection<KesPraevention>();
                    _kesPraevention.CollectionChanged += FixupKesPraevention;
                }
                return _kesPraevention;
            }
            set
            {
                if (!ReferenceEquals(_kesPraevention, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesPraevention != null)
                    {
                        _kesPraevention.CollectionChanged -= FixupKesPraevention;
                    }
                    _kesPraevention = value;
                    if (_kesPraevention != null)
                    {
                        _kesPraevention.CollectionChanged += FixupKesPraevention;
                    }
                    OnNavigationPropertyChanged("KesPraevention");
                }
            }
        }
        private TrackableCollection<KesPraevention> _kesPraevention;
    
        [DataMember]
        public TrackableCollection<KesMandatsfuehrendePerson> KesMandatsfuehrendePerson
        {
            get
            {
                if (_kesMandatsfuehrendePerson == null)
                {
                    _kesMandatsfuehrendePerson = new TrackableCollection<KesMandatsfuehrendePerson>();
                    _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                }
                return _kesMandatsfuehrendePerson;
            }
            set
            {
                if (!ReferenceEquals(_kesMandatsfuehrendePerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged -= FixupKesMandatsfuehrendePerson;
                    }
                    _kesMandatsfuehrendePerson = value;
                    if (_kesMandatsfuehrendePerson != null)
                    {
                        _kesMandatsfuehrendePerson.CollectionChanged += FixupKesMandatsfuehrendePerson;
                    }
                    OnNavigationPropertyChanged("KesMandatsfuehrendePerson");
                }
            }
        }
        private TrackableCollection<KesMandatsfuehrendePerson> _kesMandatsfuehrendePerson;
    
        [DataMember]
        public TrackableCollection<KesDokument> KesDokument
        {
            get
            {
                if (_kesDokument == null)
                {
                    _kesDokument = new TrackableCollection<KesDokument>();
                    _kesDokument.CollectionChanged += FixupKesDokument;
                }
                return _kesDokument;
            }
            set
            {
                if (!ReferenceEquals(_kesDokument, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged -= FixupKesDokument;
                    }
                    _kesDokument = value;
                    if (_kesDokument != null)
                    {
                        _kesDokument.CollectionChanged += FixupKesDokument;
                    }
                    OnNavigationPropertyChanged("KesDokument");
                }
            }
        }
        private TrackableCollection<KesDokument> _kesDokument;
    
        [DataMember]
        public TrackableCollection<KesVerlauf> KesVerlauf
        {
            get
            {
                if (_kesVerlauf == null)
                {
                    _kesVerlauf = new TrackableCollection<KesVerlauf>();
                    _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                }
                return _kesVerlauf;
            }
            set
            {
                if (!ReferenceEquals(_kesVerlauf, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged -= FixupKesVerlauf;
                    }
                    _kesVerlauf = value;
                    if (_kesVerlauf != null)
                    {
                        _kesVerlauf.CollectionChanged += FixupKesVerlauf;
                    }
                    OnNavigationPropertyChanged("KesVerlauf");
                }
            }
        }
        private TrackableCollection<KesVerlauf> _kesVerlauf;
    
        [DataMember]
        public TrackableCollection<KesPflegekinderaufsicht> KesPflegekinderaufsicht
        {
            get
            {
                if (_kesPflegekinderaufsicht == null)
                {
                    _kesPflegekinderaufsicht = new TrackableCollection<KesPflegekinderaufsicht>();
                    _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                }
                return _kesPflegekinderaufsicht;
            }
            set
            {
                if (!ReferenceEquals(_kesPflegekinderaufsicht, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged -= FixupKesPflegekinderaufsicht;
                    }
                    _kesPflegekinderaufsicht = value;
                    if (_kesPflegekinderaufsicht != null)
                    {
                        _kesPflegekinderaufsicht.CollectionChanged += FixupKesPflegekinderaufsicht;
                    }
                    OnNavigationPropertyChanged("KesPflegekinderaufsicht");
                }
            }
        }
        private TrackableCollection<KesPflegekinderaufsicht> _kesPflegekinderaufsicht;
    
        [DataMember]
        public TrackableCollection<ServiceCall> ServiceCall
        {
            get
            {
                if (_serviceCall == null)
                {
                    _serviceCall = new TrackableCollection<ServiceCall>();
                    _serviceCall.CollectionChanged += FixupServiceCall;
                }
                return _serviceCall;
            }
            set
            {
                if (!ReferenceEquals(_serviceCall, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_serviceCall != null)
                    {
                        _serviceCall.CollectionChanged -= FixupServiceCall;
                    }
                    _serviceCall = value;
                    if (_serviceCall != null)
                    {
                        _serviceCall.CollectionChanged += FixupServiceCall;
                    }
                    OnNavigationPropertyChanged("ServiceCall");
                }
            }
        }
        private TrackableCollection<ServiceCall> _serviceCall;
    
        [DataMember]
        public TrackableCollection<ServiceProcessError> ServiceProcessError
        {
            get
            {
                if (_serviceProcessError == null)
                {
                    _serviceProcessError = new TrackableCollection<ServiceProcessError>();
                    _serviceProcessError.CollectionChanged += FixupServiceProcessError;
                }
                return _serviceProcessError;
            }
            set
            {
                if (!ReferenceEquals(_serviceProcessError, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_serviceProcessError != null)
                    {
                        _serviceProcessError.CollectionChanged -= FixupServiceProcessError;
                    }
                    _serviceProcessError = value;
                    if (_serviceProcessError != null)
                    {
                        _serviceProcessError.CollectionChanged += FixupServiceProcessError;
                    }
                    OnNavigationPropertyChanged("ServiceProcessError");
                }
            }
        }
        private TrackableCollection<ServiceProcessError> _serviceProcessError;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FaLeistung.Clear();
            FaPhase.Clear();
            XUser_IsChiefOf.Clear();
            XUser_Chief = null;
            XUser_IsPrimaryUserOf.Clear();
            XUser_PrimaryUser = null;
            XUser_IsSachbearbeiterOf.Clear();
            XUser_Sachbearbeiter = null;
            BDEPensum_XUser.Clear();
            FsReduktionMitarbeiter.Clear();
            FaLeistung_Sachbearbeiter.Clear();
            VmKlientenbudget.Clear();
            FbBuchung.Clear();
            BaAdresse.Clear();
            FaAktennotizen.Clear();
            FaDokumente_IsAbsenderOf.Clear();
            FaDokumente_IsEkVisumOf.Clear();
            FaDokumente_IsVisiertDurchOf.Clear();
            FaDokumente_IsVisumBeantragtBeiOf.Clear();
            FaDokumente_IsVisumBeantragtDurchOf.Clear();
            FaWeisung_IsCreatorOf.Clear();
            FaWeisung_IsVerantwortlichRdOf.Clear();
            FaWeisung_IsVerantwortlichSarOf.Clear();
            XTask_IsBearbeitungOf.Clear();
            XTask_IsErledigtOf.Clear();
            FaKategorisierung.Clear();
            FaLeistungUserHist.Clear();
            FaLeistungArchiv.Clear();
            FaLeistungArchiv1.Clear();
            XOrgUnit_IsChiefOf.Clear();
            XOrgUnit_IsRechtsdienstOf.Clear();
            XOrgUnit_IsRepresentativeOf.Clear();
            XOrgUnit_User.Clear();
            FaLeistungZugriff.Clear();
            BDESollStundenProJahr_XUser.Clear();
            XUser_UserGroup.Clear();
            XTask_Received.Clear();
            FaFall.Clear();
            UserSession.Clear();
            FaDokumentAblage.Clear();
            XModul = null;
            KesAuftrag.Clear();
            KesPraevention.Clear();
            KesMandatsfuehrendePerson.Clear();
            KesDokument.Clear();
            KesVerlauf.Clear();
            KesPflegekinderaufsicht.Clear();
            ServiceCall.Clear();
            ServiceProcessError.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupXUser_Chief(XUser previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.XUser_IsChiefOf.Contains(this))
            {
                previousValue.XUser_IsChiefOf.Remove(this);
            }
    
            if (XUser_Chief != null)
            {
                if (!XUser_Chief.XUser_IsChiefOf.Contains(this))
                {
                    XUser_Chief.XUser_IsChiefOf.Add(this);
                }
    
                ChiefID = XUser_Chief.UserID;
            }
            else if (!skipKeys)
            {
                ChiefID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser_Chief")
                    && (ChangeTracker.OriginalValues["XUser_Chief"] == XUser_Chief))
                {
                    ChangeTracker.OriginalValues.Remove("XUser_Chief");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser_Chief", previousValue);
                }
                if (XUser_Chief != null && !XUser_Chief.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser_Chief.StartTracking();
                }
            }
        }
    
        private void FixupXUser_PrimaryUser(XUser previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.XUser_IsPrimaryUserOf.Contains(this))
            {
                previousValue.XUser_IsPrimaryUserOf.Remove(this);
            }
    
            if (XUser_PrimaryUser != null)
            {
                if (!XUser_PrimaryUser.XUser_IsPrimaryUserOf.Contains(this))
                {
                    XUser_PrimaryUser.XUser_IsPrimaryUserOf.Add(this);
                }
    
                PrimaryUserID = XUser_PrimaryUser.UserID;
            }
            else if (!skipKeys)
            {
                PrimaryUserID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser_PrimaryUser")
                    && (ChangeTracker.OriginalValues["XUser_PrimaryUser"] == XUser_PrimaryUser))
                {
                    ChangeTracker.OriginalValues.Remove("XUser_PrimaryUser");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser_PrimaryUser", previousValue);
                }
                if (XUser_PrimaryUser != null && !XUser_PrimaryUser.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser_PrimaryUser.StartTracking();
                }
            }
        }
    
        private void FixupXUser_Sachbearbeiter(XUser previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.XUser_IsSachbearbeiterOf.Contains(this))
            {
                previousValue.XUser_IsSachbearbeiterOf.Remove(this);
            }
    
            if (XUser_Sachbearbeiter != null)
            {
                if (!XUser_Sachbearbeiter.XUser_IsSachbearbeiterOf.Contains(this))
                {
                    XUser_Sachbearbeiter.XUser_IsSachbearbeiterOf.Add(this);
                }
    
                SachbearbeiterID = XUser_Sachbearbeiter.UserID;
            }
            else if (!skipKeys)
            {
                SachbearbeiterID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XUser_Sachbearbeiter")
                    && (ChangeTracker.OriginalValues["XUser_Sachbearbeiter"] == XUser_Sachbearbeiter))
                {
                    ChangeTracker.OriginalValues.Remove("XUser_Sachbearbeiter");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XUser_Sachbearbeiter", previousValue);
                }
                if (XUser_Sachbearbeiter != null && !XUser_Sachbearbeiter.ChangeTracker.ChangeTrackingEnabled)
                {
                    XUser_Sachbearbeiter.StartTracking();
                }
            }
        }
    
        private void FixupXModul(XModul previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.XUser.Contains(this))
            {
                previousValue.XUser.Remove(this);
            }
    
            if (XModul != null)
            {
                if (!XModul.XUser.Contains(this))
                {
                    XModul.XUser.Add(this);
                }
    
                ModulID = XModul.ModulID;
            }
            else if (!skipKeys)
            {
                ModulID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("XModul")
                    && (ChangeTracker.OriginalValues["XModul"] == XModul))
                {
                    ChangeTracker.OriginalValues.Remove("XModul");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("XModul", previousValue);
                }
                if (XModul != null && !XModul.ChangeTracker.ChangeTrackingEnabled)
                {
                    XModul.StartTracking();
                }
            }
        }
    
        private void FixupFaLeistung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistung item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistung", item);
                    }
                }
            }
        }
    
        private void FixupFaPhase(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaPhase item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaPhase", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaPhase item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaPhase", item);
                    }
                }
            }
        }
    
        private void FixupXUser_IsChiefOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XUser item in e.NewItems)
                {
                    item.XUser_Chief = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XUser_IsChiefOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Chief, this))
                    {
                        item.XUser_Chief = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XUser_IsChiefOf", item);
                    }
                }
            }
        }
    
        private void FixupXUser_IsPrimaryUserOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XUser item in e.NewItems)
                {
                    item.XUser_PrimaryUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XUser_IsPrimaryUserOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_PrimaryUser, this))
                    {
                        item.XUser_PrimaryUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XUser_IsPrimaryUserOf", item);
                    }
                }
            }
        }
    
        private void FixupXUser_IsSachbearbeiterOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XUser item in e.NewItems)
                {
                    item.XUser_Sachbearbeiter = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XUser_IsSachbearbeiterOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Sachbearbeiter, this))
                    {
                        item.XUser_Sachbearbeiter = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XUser_IsSachbearbeiterOf", item);
                    }
                }
            }
        }
    
        private void FixupBDEPensum_XUser(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BDEPensum_XUser item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BDEPensum_XUser", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BDEPensum_XUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BDEPensum_XUser", item);
                    }
                }
            }
        }
    
        private void FixupFsReduktionMitarbeiter(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FsReduktionMitarbeiter item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FsReduktionMitarbeiter", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FsReduktionMitarbeiter item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FsReduktionMitarbeiter", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistung_Sachbearbeiter(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistung item in e.NewItems)
                {
                    item.XUser_Sachbearbeiter = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistung_Sachbearbeiter", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Sachbearbeiter, this))
                    {
                        item.XUser_Sachbearbeiter = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistung_Sachbearbeiter", item);
                    }
                }
            }
        }
    
        private void FixupVmKlientenbudget(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VmKlientenbudget item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VmKlientenbudget", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VmKlientenbudget item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VmKlientenbudget", item);
                    }
                }
            }
        }
    
        private void FixupFbBuchung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FbBuchung item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FbBuchung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FbBuchung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FbBuchung", item);
                    }
                }
            }
        }
    
        private void FixupBaAdresse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaAdresse item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaAdresse", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaAdresse item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaAdresse", item);
                    }
                }
            }
        }
    
        private void FixupFaAktennotizen(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaAktennotizen item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaAktennotizen", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaAktennotizen item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaAktennotizen", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsAbsenderOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XUser_Absender = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsAbsenderOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Absender, this))
                    {
                        item.XUser_Absender = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsAbsenderOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsEkVisumOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XUser_EkVisum = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsEkVisumOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_EkVisum, this))
                    {
                        item.XUser_EkVisum = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsEkVisumOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsVisiertDurchOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XUser_VisiertDurch = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsVisiertDurchOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_VisiertDurch, this))
                    {
                        item.XUser_VisiertDurch = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsVisiertDurchOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsVisumBeantragtBeiOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XUser_VisumBeantragtBei = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsVisumBeantragtBeiOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_VisumBeantragtBei, this))
                    {
                        item.XUser_VisumBeantragtBei = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsVisumBeantragtBeiOf", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumente_IsVisumBeantragtDurchOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumente item in e.NewItems)
                {
                    item.XUser_VisumBeantragtDurch = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumente_IsVisumBeantragtDurchOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumente item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_VisumBeantragtDurch, this))
                    {
                        item.XUser_VisumBeantragtDurch = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumente_IsVisumBeantragtDurchOf", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_IsCreatorOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XUser_Creator = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_IsCreatorOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Creator, this))
                    {
                        item.XUser_Creator = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_IsCreatorOf", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_IsVerantwortlichRdOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XUser_VerantwortlichRd = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_IsVerantwortlichRdOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_VerantwortlichRd, this))
                    {
                        item.XUser_VerantwortlichRd = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_IsVerantwortlichRdOf", item);
                    }
                }
            }
        }
    
        private void FixupFaWeisung_IsVerantwortlichSarOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaWeisung item in e.NewItems)
                {
                    item.XUser_VerantwortlichSar = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaWeisung_IsVerantwortlichSarOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaWeisung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_VerantwortlichSar, this))
                    {
                        item.XUser_VerantwortlichSar = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaWeisung_IsVerantwortlichSarOf", item);
                    }
                }
            }
        }
    
        private void FixupXTask_IsBearbeitungOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XTask item in e.NewItems)
                {
                    item.XUser_Bearbeitung = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XTask_IsBearbeitungOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XTask item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Bearbeitung, this))
                    {
                        item.XUser_Bearbeitung = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XTask_IsBearbeitungOf", item);
                    }
                }
            }
        }
    
        private void FixupXTask_IsErledigtOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XTask item in e.NewItems)
                {
                    item.XUser_Erledigt = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XTask_IsErledigtOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XTask item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Erledigt, this))
                    {
                        item.XUser_Erledigt = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XTask_IsErledigtOf", item);
                    }
                }
            }
        }
    
        private void FixupFaKategorisierung(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaKategorisierung item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaKategorisierung", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaKategorisierung item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaKategorisierung", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungUserHist(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungUserHist item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungUserHist", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungUserHist item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungUserHist", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungArchiv(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungArchiv item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungArchiv", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungArchiv item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungArchiv", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungArchiv1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungArchiv item in e.NewItems)
                {
                    item.XUser1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungArchiv1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungArchiv item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser1, this))
                    {
                        item.XUser1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungArchiv1", item);
                    }
                }
            }
        }
    
        private void FixupXOrgUnit_IsChiefOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XOrgUnit item in e.NewItems)
                {
                    item.XUser_Chief = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XOrgUnit_IsChiefOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XOrgUnit item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Chief, this))
                    {
                        item.XUser_Chief = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XOrgUnit_IsChiefOf", item);
                    }
                }
            }
        }
    
        private void FixupXOrgUnit_IsRechtsdienstOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XOrgUnit item in e.NewItems)
                {
                    item.XUser_Rechtsdienst = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XOrgUnit_IsRechtsdienstOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XOrgUnit item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Rechtsdienst, this))
                    {
                        item.XUser_Rechtsdienst = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XOrgUnit_IsRechtsdienstOf", item);
                    }
                }
            }
        }
    
        private void FixupXOrgUnit_IsRepresentativeOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XOrgUnit item in e.NewItems)
                {
                    item.XUser_Representative = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XOrgUnit_IsRepresentativeOf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XOrgUnit item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Representative, this))
                    {
                        item.XUser_Representative = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XOrgUnit_IsRepresentativeOf", item);
                    }
                }
            }
        }
    
        private void FixupXOrgUnit_User(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XOrgUnit_User item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XOrgUnit_User", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XOrgUnit_User item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XOrgUnit_User", item);
                    }
                }
            }
        }
    
        private void FixupFaLeistungZugriff(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaLeistungZugriff item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaLeistungZugriff", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaLeistungZugriff item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaLeistungZugriff", item);
                    }
                }
            }
        }
    
        private void FixupBDESollStundenProJahr_XUser(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BDESollStundenProJahr_XUser item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BDESollStundenProJahr_XUser", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BDESollStundenProJahr_XUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BDESollStundenProJahr_XUser", item);
                    }
                }
            }
        }
    
        private void FixupXUser_UserGroup(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XUser_UserGroup item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XUser_UserGroup", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XUser_UserGroup item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XUser_UserGroup", item);
                    }
                }
            }
        }
    
        private void FixupXTask_Received(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (XTask item in e.NewItems)
                {
                    item.XUser_Receiver = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("XTask_Received", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (XTask item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser_Receiver, this))
                    {
                        item.XUser_Receiver = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("XTask_Received", item);
                    }
                }
            }
        }
    
        private void FixupFaFall(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaFall item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaFall", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaFall item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaFall", item);
                    }
                }
            }
        }
    
        private void FixupUserSession(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (UserSession item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("UserSession", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserSession item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("UserSession", item);
                    }
                }
            }
        }
    
        private void FixupFaDokumentAblage(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FaDokumentAblage item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FaDokumentAblage item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FaDokumentAblage", item);
                    }
                }
            }
        }
    
        private void FixupKesAuftrag(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesAuftrag item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesAuftrag", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesAuftrag item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesAuftrag", item);
                    }
                }
            }
        }
    
        private void FixupKesPraevention(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesPraevention item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesPraevention", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesPraevention item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesPraevention", item);
                    }
                }
            }
        }
    
        private void FixupKesMandatsfuehrendePerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMandatsfuehrendePerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMandatsfuehrendePerson", item);
                    }
                }
            }
        }
    
        private void FixupKesDokument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesDokument item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesDokument", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesDokument item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesDokument", item);
                    }
                }
            }
        }
    
        private void FixupKesVerlauf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesVerlauf item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesVerlauf", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesVerlauf item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesVerlauf", item);
                    }
                }
            }
        }
    
        private void FixupKesPflegekinderaufsicht(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesPflegekinderaufsicht item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesPflegekinderaufsicht", item);
                    }
                }
            }
        }
    
        private void FixupServiceCall(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ServiceCall item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ServiceCall", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ServiceCall item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ServiceCall", item);
                    }
                }
            }
        }
    
        private void FixupServiceProcessError(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ServiceProcessError item in e.NewItems)
                {
                    item.XUser = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ServiceProcessError", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ServiceProcessError item in e.OldItems)
                {
                    if (ReferenceEquals(item.XUser, this))
                    {
                        item.XUser = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ServiceProcessError", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (XUser)obj;
    		if (!_userID.Equals(entity.UserID) || _userID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _userID.GetHashCode();
        }

        #endregion

    }
}
