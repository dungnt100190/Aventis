//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaAdresse))]
    [KnownType(typeof(BaBank))]
    [KnownType(typeof(BaPerson))]
    [KnownType(typeof(BaZahlungsweg))]
    public partial class BaLand: EntityBase<BaLand>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaLandID
        {
            get { return _baLandID; }
            set
            {
                if (_baLandID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaLandID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baLandID = value;
                    OnPropertyChanged("BaLandID");
                }
            }
        }
        private int _baLandID;
    
        [DataMember]
        public string Text
        {
            get { return _text; }
            set
            {
                if (_text != value)
                {
                    _text = value;
                    OnPropertyChanged("Text");
                }
            }
        }
        private string _text;
    
        [DataMember]
        public string TextFR
        {
            get { return _textFR; }
            set
            {
                if (_textFR != value)
                {
                    _textFR = value;
                    OnPropertyChanged("TextFR");
                }
            }
        }
        private string _textFR;
    
        [DataMember]
        public string TextIT
        {
            get { return _textIT; }
            set
            {
                if (_textIT != value)
                {
                    _textIT = value;
                    OnPropertyChanged("TextIT");
                }
            }
        }
        private string _textIT;
    
        [DataMember]
        public string TextEN
        {
            get { return _textEN; }
            set
            {
                if (_textEN != value)
                {
                    _textEN = value;
                    OnPropertyChanged("TextEN");
                }
            }
        }
        private string _textEN;
    
        [DataMember]
        public string Iso2Code
        {
            get { return _iso2Code; }
            set
            {
                if (_iso2Code != value)
                {
                    _iso2Code = value;
                    OnPropertyChanged("Iso2Code");
                }
            }
        }
        private string _iso2Code;
    
        [DataMember]
        public string Iso3Code
        {
            get { return _iso3Code; }
            set
            {
                if (_iso3Code != value)
                {
                    _iso3Code = value;
                    OnPropertyChanged("Iso3Code");
                }
            }
        }
        private string _iso3Code;
    
        [DataMember]
        public Nullable<int> BFSCode
        {
            get { return _bFSCode; }
            set
            {
                if (_bFSCode != value)
                {
                    _bFSCode = value;
                    OnPropertyChanged("BFSCode");
                }
            }
        }
        private Nullable<int> _bFSCode;
    
        [DataMember]
        public Nullable<int> SortKey
        {
            get { return _sortKey; }
            set
            {
                if (_sortKey != value)
                {
                    _sortKey = value;
                    OnPropertyChanged("SortKey");
                }
            }
        }
        private Nullable<int> _sortKey;
    
        [DataMember]
        public string SAPCode
        {
            get { return _sAPCode; }
            set
            {
                if (_sAPCode != value)
                {
                    _sAPCode = value;
                    OnPropertyChanged("SAPCode");
                }
            }
        }
        private string _sAPCode;
    
        [DataMember]
        public System.DateTime DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private System.DateTime _datumVon;
    
        [DataMember]
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    OnPropertyChanged("DatumBis");
                }
            }
        }
        private Nullable<System.DateTime> _datumBis;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] BaLandTS
        {
            get { return _baLandTS; }
            set
            {
                if (_baLandTS != value)
                {
                    _baLandTS = value;
                    OnPropertyChanged("BaLandTS");
                }
            }
        }
        private byte[] _baLandTS;
    
        [DataMember]
        public bool BFSDelivered
        {
            get { return _bFSDelivered; }
            set
            {
                if (_bFSDelivered != value)
                {
                    _bFSDelivered = value;
                    OnPropertyChanged("BFSDelivered");
                }
            }
        }
        private bool _bFSDelivered;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<BaAdresse> BaAdresse
        {
            get
            {
                if (_baAdresse == null)
                {
                    _baAdresse = new TrackableCollection<BaAdresse>();
                    _baAdresse.CollectionChanged += FixupBaAdresse;
                }
                return _baAdresse;
            }
            set
            {
                if (!ReferenceEquals(_baAdresse, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged -= FixupBaAdresse;
                    }
                    _baAdresse = value;
                    if (_baAdresse != null)
                    {
                        _baAdresse.CollectionChanged += FixupBaAdresse;
                    }
                    OnNavigationPropertyChanged("BaAdresse");
                }
            }
        }
        private TrackableCollection<BaAdresse> _baAdresse;
    
        [DataMember]
        public TrackableCollection<BaBank> BaBank
        {
            get
            {
                if (_baBank == null)
                {
                    _baBank = new TrackableCollection<BaBank>();
                    _baBank.CollectionChanged += FixupBaBank;
                }
                return _baBank;
            }
            set
            {
                if (!ReferenceEquals(_baBank, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baBank != null)
                    {
                        _baBank.CollectionChanged -= FixupBaBank;
                    }
                    _baBank = value;
                    if (_baBank != null)
                    {
                        _baBank.CollectionChanged += FixupBaBank;
                    }
                    OnNavigationPropertyChanged("BaBank");
                }
            }
        }
        private TrackableCollection<BaBank> _baBank;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson
        {
            get
            {
                if (_baPerson == null)
                {
                    _baPerson = new TrackableCollection<BaPerson>();
                    _baPerson.CollectionChanged += FixupBaPerson;
                }
                return _baPerson;
            }
            set
            {
                if (!ReferenceEquals(_baPerson, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson != null)
                    {
                        _baPerson.CollectionChanged -= FixupBaPerson;
                    }
                    _baPerson = value;
                    if (_baPerson != null)
                    {
                        _baPerson.CollectionChanged += FixupBaPerson;
                    }
                    OnNavigationPropertyChanged("BaPerson");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson1
        {
            get
            {
                if (_baPerson1 == null)
                {
                    _baPerson1 = new TrackableCollection<BaPerson>();
                    _baPerson1.CollectionChanged += FixupBaPerson1;
                }
                return _baPerson1;
            }
            set
            {
                if (!ReferenceEquals(_baPerson1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson1 != null)
                    {
                        _baPerson1.CollectionChanged -= FixupBaPerson1;
                    }
                    _baPerson1 = value;
                    if (_baPerson1 != null)
                    {
                        _baPerson1.CollectionChanged += FixupBaPerson1;
                    }
                    OnNavigationPropertyChanged("BaPerson1");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson1;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson2
        {
            get
            {
                if (_baPerson2 == null)
                {
                    _baPerson2 = new TrackableCollection<BaPerson>();
                    _baPerson2.CollectionChanged += FixupBaPerson2;
                }
                return _baPerson2;
            }
            set
            {
                if (!ReferenceEquals(_baPerson2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson2 != null)
                    {
                        _baPerson2.CollectionChanged -= FixupBaPerson2;
                    }
                    _baPerson2 = value;
                    if (_baPerson2 != null)
                    {
                        _baPerson2.CollectionChanged += FixupBaPerson2;
                    }
                    OnNavigationPropertyChanged("BaPerson2");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson2;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson3
        {
            get
            {
                if (_baPerson3 == null)
                {
                    _baPerson3 = new TrackableCollection<BaPerson>();
                    _baPerson3.CollectionChanged += FixupBaPerson3;
                }
                return _baPerson3;
            }
            set
            {
                if (!ReferenceEquals(_baPerson3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson3 != null)
                    {
                        _baPerson3.CollectionChanged -= FixupBaPerson3;
                    }
                    _baPerson3 = value;
                    if (_baPerson3 != null)
                    {
                        _baPerson3.CollectionChanged += FixupBaPerson3;
                    }
                    OnNavigationPropertyChanged("BaPerson3");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson3;
    
        [DataMember]
        public TrackableCollection<BaPerson> BaPerson4
        {
            get
            {
                if (_baPerson4 == null)
                {
                    _baPerson4 = new TrackableCollection<BaPerson>();
                    _baPerson4.CollectionChanged += FixupBaPerson4;
                }
                return _baPerson4;
            }
            set
            {
                if (!ReferenceEquals(_baPerson4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baPerson4 != null)
                    {
                        _baPerson4.CollectionChanged -= FixupBaPerson4;
                    }
                    _baPerson4 = value;
                    if (_baPerson4 != null)
                    {
                        _baPerson4.CollectionChanged += FixupBaPerson4;
                    }
                    OnNavigationPropertyChanged("BaPerson4");
                }
            }
        }
        private TrackableCollection<BaPerson> _baPerson4;
    
        [DataMember]
        public TrackableCollection<BaZahlungsweg> BaZahlungsweg
        {
            get
            {
                if (_baZahlungsweg == null)
                {
                    _baZahlungsweg = new TrackableCollection<BaZahlungsweg>();
                    _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                }
                return _baZahlungsweg;
            }
            set
            {
                if (!ReferenceEquals(_baZahlungsweg, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged -= FixupBaZahlungsweg;
                    }
                    _baZahlungsweg = value;
                    if (_baZahlungsweg != null)
                    {
                        _baZahlungsweg.CollectionChanged += FixupBaZahlungsweg;
                    }
                    OnNavigationPropertyChanged("BaZahlungsweg");
                }
            }
        }
        private TrackableCollection<BaZahlungsweg> _baZahlungsweg;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaAdresse.Clear();
            BaBank.Clear();
            BaPerson.Clear();
            BaPerson1.Clear();
            BaPerson2.Clear();
            BaPerson3.Clear();
            BaPerson4.Clear();
            BaZahlungsweg.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaAdresse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaAdresse item in e.NewItems)
                {
                    item.BaLand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaAdresse", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaAdresse item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand, this))
                    {
                        item.BaLand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaAdresse", item);
                    }
                }
            }
        }
    
        private void FixupBaBank(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaBank item in e.NewItems)
                {
                    item.BaLand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaBank", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaBank item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand, this))
                    {
                        item.BaLand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaBank", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaLand_Nationalitaet = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand_Nationalitaet, this))
                    {
                        item.BaLand_Nationalitaet = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaLand1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand1, this))
                    {
                        item.BaLand1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson1", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaLand2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand2, this))
                    {
                        item.BaLand2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson2", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaLand3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand3, this))
                    {
                        item.BaLand3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson3", item);
                    }
                }
            }
        }
    
        private void FixupBaPerson4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaPerson item in e.NewItems)
                {
                    item.BaLand4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaPerson4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaPerson item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand4, this))
                    {
                        item.BaLand4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaPerson4", item);
                    }
                }
            }
        }
    
        private void FixupBaZahlungsweg(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaZahlungsweg item in e.NewItems)
                {
                    item.BaLand = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaZahlungsweg item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaLand, this))
                    {
                        item.BaLand = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaZahlungsweg", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaLand)obj;
    		if (!_baLandID.Equals(entity.BaLandID) || _baLandID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baLandID.GetHashCode();
        }

        #endregion

    }
}
