//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BDELeistungsart))]
    [KnownType(typeof(FsReduktionMitarbeiter))]
    public partial class FsReduktion: EntityBase<FsReduktion>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int FsReduktionID
        {
            get { return _fsReduktionID; }
            set
            {
                if (_fsReduktionID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FsReduktionID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _fsReduktionID = value;
                    OnPropertyChanged("FsReduktionID");
                }
            }
        }
        private int _fsReduktionID;
    
        [DataMember]
        public Nullable<int> BDELeistungsartID
        {
            get { return _bDELeistungsartID; }
            set
            {
                if (_bDELeistungsartID != value)
                {
                    ChangeTracker.RecordOriginalValue("BDELeistungsartID", _bDELeistungsartID);
                    if (!IsDeserializing)
                    {
                        if (BDELeistungsart != null && BDELeistungsart.BDELeistungsartID != value)
                        {
                            BDELeistungsart = null;
                        }
                    }
                    _bDELeistungsartID = value;
                    OnPropertyChanged("BDELeistungsartID");
                }
            }
        }
        private Nullable<int> _bDELeistungsartID;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public decimal StandardAufwand
        {
            get { return _standardAufwand; }
            set
            {
                if (_standardAufwand != value)
                {
                    _standardAufwand = value;
                    OnPropertyChanged("StandardAufwand");
                }
            }
        }
        private decimal _standardAufwand;
    
        [DataMember]
        public bool AbhaengigVonBG
        {
            get { return _abhaengigVonBG; }
            set
            {
                if (_abhaengigVonBG != value)
                {
                    _abhaengigVonBG = value;
                    OnPropertyChanged("AbhaengigVonBG");
                }
            }
        }
        private bool _abhaengigVonBG;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] FsReduktionTS
        {
            get { return _fsReduktionTS; }
            set
            {
                if (_fsReduktionTS != value)
                {
                    _fsReduktionTS = value;
                    OnPropertyChanged("FsReduktionTS");
                }
            }
        }
        private byte[] _fsReduktionTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public BDELeistungsart BDELeistungsart
        {
            get { return _bDELeistungsart; }
            set
            {
                if (!ReferenceEquals(_bDELeistungsart, value))
                {
                    var previousValue = _bDELeistungsart;
                    _bDELeistungsart = value;
                    FixupBDELeistungsart(previousValue);
                    OnNavigationPropertyChanged("BDELeistungsart");
                }
            }
        }
        private BDELeistungsart _bDELeistungsart;
    
        [DataMember]
        public TrackableCollection<FsReduktionMitarbeiter> FsReduktionMitarbeiter
        {
            get
            {
                if (_fsReduktionMitarbeiter == null)
                {
                    _fsReduktionMitarbeiter = new TrackableCollection<FsReduktionMitarbeiter>();
                    _fsReduktionMitarbeiter.CollectionChanged += FixupFsReduktionMitarbeiter;
                }
                return _fsReduktionMitarbeiter;
            }
            set
            {
                if (!ReferenceEquals(_fsReduktionMitarbeiter, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fsReduktionMitarbeiter != null)
                    {
                        _fsReduktionMitarbeiter.CollectionChanged -= FixupFsReduktionMitarbeiter;
                    }
                    _fsReduktionMitarbeiter = value;
                    if (_fsReduktionMitarbeiter != null)
                    {
                        _fsReduktionMitarbeiter.CollectionChanged += FixupFsReduktionMitarbeiter;
                    }
                    OnNavigationPropertyChanged("FsReduktionMitarbeiter");
                }
            }
        }
        private TrackableCollection<FsReduktionMitarbeiter> _fsReduktionMitarbeiter;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BDELeistungsart = null;
            FsReduktionMitarbeiter.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupBDELeistungsart(BDELeistungsart previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FsReduktion.Contains(this))
            {
                previousValue.FsReduktion.Remove(this);
            }
    
            if (BDELeistungsart != null)
            {
                if (!BDELeistungsart.FsReduktion.Contains(this))
                {
                    BDELeistungsart.FsReduktion.Add(this);
                }
    
                BDELeistungsartID = BDELeistungsart.BDELeistungsartID;
            }
            else if (!skipKeys)
            {
                BDELeistungsartID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BDELeistungsart")
                    && (ChangeTracker.OriginalValues["BDELeistungsart"] == BDELeistungsart))
                {
                    ChangeTracker.OriginalValues.Remove("BDELeistungsart");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BDELeistungsart", previousValue);
                }
                if (BDELeistungsart != null && !BDELeistungsart.ChangeTracker.ChangeTrackingEnabled)
                {
                    BDELeistungsart.StartTracking();
                }
            }
        }
    
        private void FixupFsReduktionMitarbeiter(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FsReduktionMitarbeiter item in e.NewItems)
                {
                    item.FsReduktion = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FsReduktionMitarbeiter", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FsReduktionMitarbeiter item in e.OldItems)
                {
                    if (ReferenceEquals(item.FsReduktion, this))
                    {
                        item.FsReduktion = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FsReduktionMitarbeiter", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (FsReduktion)obj;
    		if (!_fsReduktionID.Equals(entity.FsReduktionID) || _fsReduktionID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _fsReduktionID.GetHashCode();
        }

        #endregion

    }
}
