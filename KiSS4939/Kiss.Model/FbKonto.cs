//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FbPeriode))]
    public partial class FbKonto: EntityBase<FbKonto>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int FbKontoID
        {
            get { return _fbKontoID; }
            set
            {
                if (_fbKontoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'FbKontoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _fbKontoID = value;
                    OnPropertyChanged("FbKontoID");
                }
            }
        }
        private int _fbKontoID;
    
        [DataMember]
        public Nullable<int> FbPeriodeID
        {
            get { return _fbPeriodeID; }
            set
            {
                if (_fbPeriodeID != value)
                {
                    ChangeTracker.RecordOriginalValue("FbPeriodeID", _fbPeriodeID);
                    if (!IsDeserializing)
                    {
                        if (FbPeriode != null && FbPeriode.FbPeriodeID != value)
                        {
                            FbPeriode = null;
                        }
                    }
                    _fbPeriodeID = value;
                    OnPropertyChanged("FbPeriodeID");
                }
            }
        }
        private Nullable<int> _fbPeriodeID;
    
        [DataMember]
        public int KontoKlasseCode
        {
            get { return _kontoKlasseCode; }
            set
            {
                if (_kontoKlasseCode != value)
                {
                    _kontoKlasseCode = value;
                    OnPropertyChanged("KontoKlasseCode");
                }
            }
        }
        private int _kontoKlasseCode;
    
        [DataMember]
        public int KontoTypCode
        {
            get { return _kontoTypCode; }
            set
            {
                if (_kontoTypCode != value)
                {
                    _kontoTypCode = value;
                    OnPropertyChanged("KontoTypCode");
                }
            }
        }
        private int _kontoTypCode;
    
        [DataMember]
        public int KontoNr
        {
            get { return _kontoNr; }
            set
            {
                if (_kontoNr != value)
                {
                    _kontoNr = value;
                    OnPropertyChanged("KontoNr");
                }
            }
        }
        private int _kontoNr;
    
        [DataMember]
        public string KontoName
        {
            get { return _kontoName; }
            set
            {
                if (_kontoName != value)
                {
                    _kontoName = value;
                    OnPropertyChanged("KontoName");
                }
            }
        }
        private string _kontoName;
    
        [DataMember]
        public decimal EroeffnungsSaldo
        {
            get { return _eroeffnungsSaldo; }
            set
            {
                if (_eroeffnungsSaldo != value)
                {
                    _eroeffnungsSaldo = value;
                    OnPropertyChanged("EroeffnungsSaldo");
                }
            }
        }
        private decimal _eroeffnungsSaldo;
    
        [DataMember]
        public string SaldoGruppeName
        {
            get { return _saldoGruppeName; }
            set
            {
                if (_saldoGruppeName != value)
                {
                    _saldoGruppeName = value;
                    OnPropertyChanged("SaldoGruppeName");
                }
            }
        }
        private string _saldoGruppeName;
    
        [DataMember]
        public Nullable<int> FbDTAZugangID
        {
            get { return _fbDTAZugangID; }
            set
            {
                if (_fbDTAZugangID != value)
                {
                    _fbDTAZugangID = value;
                    OnPropertyChanged("FbDTAZugangID");
                }
            }
        }
        private Nullable<int> _fbDTAZugangID;
    
        [DataMember]
        public byte[] FbKontoTS
        {
            get { return _fbKontoTS; }
            set
            {
                if (_fbKontoTS != value)
                {
                    _fbKontoTS = value;
                    OnPropertyChanged("FbKontoTS");
                }
            }
        }
        private byte[] _fbKontoTS;
    
        [DataMember]
        public string FbDepotNr
        {
            get { return _fbDepotNr; }
            set
            {
                if (_fbDepotNr != value)
                {
                    _fbDepotNr = value;
                    OnPropertyChanged("FbDepotNr");
                }
            }
        }
        private string _fbDepotNr;
    
        [DataMember]
        public string EroeffnungsSaldoModifier
        {
            get { return _eroeffnungsSaldoModifier; }
            set
            {
                if (_eroeffnungsSaldoModifier != value)
                {
                    _eroeffnungsSaldoModifier = value;
                    OnPropertyChanged("EroeffnungsSaldoModifier");
                }
            }
        }
        private string _eroeffnungsSaldoModifier;
    
        [DataMember]
        public Nullable<System.DateTime> EroeffnungsSaldoModified
        {
            get { return _eroeffnungsSaldoModified; }
            set
            {
                if (_eroeffnungsSaldoModified != value)
                {
                    _eroeffnungsSaldoModified = value;
                    OnPropertyChanged("EroeffnungsSaldoModified");
                }
            }
        }
        private Nullable<System.DateTime> _eroeffnungsSaldoModified;
    
        [DataMember]
        public string EroeffnungsSaldoCreator
        {
            get { return _eroeffnungsSaldoCreator; }
            set
            {
                if (_eroeffnungsSaldoCreator != value)
                {
                    _eroeffnungsSaldoCreator = value;
                    OnPropertyChanged("EroeffnungsSaldoCreator");
                }
            }
        }
        private string _eroeffnungsSaldoCreator;
    
        [DataMember]
        public Nullable<System.DateTime> EroeffnungsSaldoCreated
        {
            get { return _eroeffnungsSaldoCreated; }
            set
            {
                if (_eroeffnungsSaldoCreated != value)
                {
                    _eroeffnungsSaldoCreated = value;
                    OnPropertyChanged("EroeffnungsSaldoCreated");
                }
            }
        }
        private Nullable<System.DateTime> _eroeffnungsSaldoCreated;
    
        [DataMember]
        public Nullable<decimal> EroeffnungsSaldo_AtCreation
        {
            get { return _eroeffnungsSaldo_AtCreation; }
            set
            {
                if (_eroeffnungsSaldo_AtCreation != value)
                {
                    _eroeffnungsSaldo_AtCreation = value;
                    OnPropertyChanged("EroeffnungsSaldo_AtCreation");
                }
            }
        }
        private Nullable<decimal> _eroeffnungsSaldo_AtCreation;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FbPeriode FbPeriode
        {
            get { return _fbPeriode; }
            set
            {
                if (!ReferenceEquals(_fbPeriode, value))
                {
                    var previousValue = _fbPeriode;
                    _fbPeriode = value;
                    FixupFbPeriode(previousValue);
                    OnNavigationPropertyChanged("FbPeriode");
                }
            }
        }
        private FbPeriode _fbPeriode;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            FbPeriode = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFbPeriode(FbPeriode previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FbKonto.Contains(this))
            {
                previousValue.FbKonto.Remove(this);
            }
    
            if (FbPeriode != null)
            {
                if (!FbPeriode.FbKonto.Contains(this))
                {
                    FbPeriode.FbKonto.Add(this);
                }
    
                FbPeriodeID = FbPeriode.FbPeriodeID;
            }
            else if (!skipKeys)
            {
                FbPeriodeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FbPeriode")
                    && (ChangeTracker.OriginalValues["FbPeriode"] == FbPeriode))
                {
                    ChangeTracker.OriginalValues.Remove("FbPeriode");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FbPeriode", previousValue);
                }
                if (FbPeriode != null && !FbPeriode.ChangeTracker.ChangeTrackingEnabled)
                {
                    FbPeriode.StartTracking();
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (FbKonto)obj;
    		if (!_fbKontoID.Equals(entity.FbKontoID) || _fbKontoID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _fbKontoID.GetHashCode();
        }

        #endregion

    }
}
