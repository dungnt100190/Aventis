//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BaEinwohnerregisterEmpfangeneEreignisse))]
    public partial class BaEinwohnerregisterEmpfangeneEreignisseRohdaten: EntityBase<BaEinwohnerregisterEmpfangeneEreignisseRohdaten>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int BaEinwohnerregisterEmpfangeneEreignisseRohdatenID
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseRohdatenID; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseRohdatenID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BaEinwohnerregisterEmpfangeneEreignisseRohdatenID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _baEinwohnerregisterEmpfangeneEreignisseRohdatenID = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseRohdatenID");
                }
            }
        }
        private int _baEinwohnerregisterEmpfangeneEreignisseRohdatenID;
    
        [DataMember]
        public string Xml
        {
            get { return _xml; }
            set
            {
                if (_xml != value)
                {
                    _xml = value;
                    OnPropertyChanged("Xml");
                }
            }
        }
        private string _xml;
    
        [DataMember]
        public int BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode != value)
                {
                    _baEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode");
                }
            }
        }
        private int _baEinwohnerregisterEmpfangeneEreignisseRohdatenStatusCode;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS
        {
            get { return _baEinwohnerregisterEmpfangeneEreignisseRohdatenTS; }
            set
            {
                if (_baEinwohnerregisterEmpfangeneEreignisseRohdatenTS != value)
                {
                    _baEinwohnerregisterEmpfangeneEreignisseRohdatenTS = value;
                    OnPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisseRohdatenTS");
                }
            }
        }
        private byte[] _baEinwohnerregisterEmpfangeneEreignisseRohdatenTS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<BaEinwohnerregisterEmpfangeneEreignisse> BaEinwohnerregisterEmpfangeneEreignisse
        {
            get
            {
                if (_baEinwohnerregisterEmpfangeneEreignisse == null)
                {
                    _baEinwohnerregisterEmpfangeneEreignisse = new TrackableCollection<BaEinwohnerregisterEmpfangeneEreignisse>();
                    _baEinwohnerregisterEmpfangeneEreignisse.CollectionChanged += FixupBaEinwohnerregisterEmpfangeneEreignisse;
                }
                return _baEinwohnerregisterEmpfangeneEreignisse;
            }
            set
            {
                if (!ReferenceEquals(_baEinwohnerregisterEmpfangeneEreignisse, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_baEinwohnerregisterEmpfangeneEreignisse != null)
                    {
                        _baEinwohnerregisterEmpfangeneEreignisse.CollectionChanged -= FixupBaEinwohnerregisterEmpfangeneEreignisse;
                    }
                    _baEinwohnerregisterEmpfangeneEreignisse = value;
                    if (_baEinwohnerregisterEmpfangeneEreignisse != null)
                    {
                        _baEinwohnerregisterEmpfangeneEreignisse.CollectionChanged += FixupBaEinwohnerregisterEmpfangeneEreignisse;
                    }
                    OnNavigationPropertyChanged("BaEinwohnerregisterEmpfangeneEreignisse");
                }
            }
        }
        private TrackableCollection<BaEinwohnerregisterEmpfangeneEreignisse> _baEinwohnerregisterEmpfangeneEreignisse;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            BaEinwohnerregisterEmpfangeneEreignisse.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupBaEinwohnerregisterEmpfangeneEreignisse(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BaEinwohnerregisterEmpfangeneEreignisse item in e.NewItems)
                {
                    item.BaEinwohnerregisterEmpfangeneEreignisseRohdaten = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BaEinwohnerregisterEmpfangeneEreignisse", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BaEinwohnerregisterEmpfangeneEreignisse item in e.OldItems)
                {
                    if (ReferenceEquals(item.BaEinwohnerregisterEmpfangeneEreignisseRohdaten, this))
                    {
                        item.BaEinwohnerregisterEmpfangeneEreignisseRohdaten = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BaEinwohnerregisterEmpfangeneEreignisse", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (BaEinwohnerregisterEmpfangeneEreignisseRohdaten)obj;
    		if (!_baEinwohnerregisterEmpfangeneEreignisseRohdatenID.Equals(entity.BaEinwohnerregisterEmpfangeneEreignisseRohdatenID) || _baEinwohnerregisterEmpfangeneEreignisseRohdatenID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _baEinwohnerregisterEmpfangeneEreignisseRohdatenID.GetHashCode();
        }

        #endregion

    }
}
