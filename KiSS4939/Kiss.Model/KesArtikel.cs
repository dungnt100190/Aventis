//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kiss.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(KesMassnahme_KesArtikel))]
    public partial class KesArtikel: EntityBase<KesArtikel>, IObjectWithChangeTracker
    {
        #region Primitive Properties
    
        [DataMember]
        public int KesArtikelID
        {
            get { return _kesArtikelID; }
            set
            {
                if (_kesArtikelID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'KesArtikelID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _kesArtikelID = value;
                    OnPropertyChanged("KesArtikelID");
                }
            }
        }
        private int _kesArtikelID;
    
        [DataMember]
        public string CodeKokes
        {
            get { return _codeKokes; }
            set
            {
                if (_codeKokes != value)
                {
                    _codeKokes = value;
                    OnPropertyChanged("CodeKokes");
                }
            }
        }
        private string _codeKokes;
    
        [DataMember]
        public string Artikel
        {
            get { return _artikel; }
            set
            {
                if (_artikel != value)
                {
                    _artikel = value;
                    OnPropertyChanged("Artikel");
                }
            }
        }
        private string _artikel;
    
        [DataMember]
        public string Absatz
        {
            get { return _absatz; }
            set
            {
                if (_absatz != value)
                {
                    _absatz = value;
                    OnPropertyChanged("Absatz");
                }
            }
        }
        private string _absatz;
    
        [DataMember]
        public string Ziffer
        {
            get { return _ziffer; }
            set
            {
                if (_ziffer != value)
                {
                    _ziffer = value;
                    OnPropertyChanged("Ziffer");
                }
            }
        }
        private string _ziffer;
    
        [DataMember]
        public string Gesetz
        {
            get { return _gesetz; }
            set
            {
                if (_gesetz != value)
                {
                    _gesetz = value;
                    OnPropertyChanged("Gesetz");
                }
            }
        }
        private string _gesetz;
    
        [DataMember]
        public string Bezeichnung
        {
            get { return _bezeichnung; }
            set
            {
                if (_bezeichnung != value)
                {
                    _bezeichnung = value;
                    OnPropertyChanged("Bezeichnung");
                }
            }
        }
        private string _bezeichnung;
    
        [DataMember]
        public int KesMassnahmeTypCode
        {
            get { return _kesMassnahmeTypCode; }
            set
            {
                if (_kesMassnahmeTypCode != value)
                {
                    _kesMassnahmeTypCode = value;
                    OnPropertyChanged("KesMassnahmeTypCode");
                }
            }
        }
        private int _kesMassnahmeTypCode;
    
        [DataMember]
        public bool IsMassnahmeGebunden
        {
            get { return _isMassnahmeGebunden; }
            set
            {
                if (_isMassnahmeGebunden != value)
                {
                    _isMassnahmeGebunden = value;
                    OnPropertyChanged("IsMassnahmeGebunden");
                }
            }
        }
        private bool _isMassnahmeGebunden;
    
        [DataMember]
        public string Creator
        {
            get { return _creator; }
            set
            {
                if (_creator != value)
                {
                    _creator = value;
                    OnPropertyChanged("Creator");
                }
            }
        }
        private string _creator;
    
        [DataMember]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private System.DateTime _created;
    
        [DataMember]
        public string Modifier
        {
            get { return _modifier; }
            set
            {
                if (_modifier != value)
                {
                    _modifier = value;
                    OnPropertyChanged("Modifier");
                }
            }
        }
        private string _modifier;
    
        [DataMember]
        public System.DateTime Modified
        {
            get { return _modified; }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }
        private System.DateTime _modified;
    
        [DataMember]
        public byte[] KesArtikelTS
        {
            get { return _kesArtikelTS; }
            set
            {
                if (_kesArtikelTS != value)
                {
                    _kesArtikelTS = value;
                    OnPropertyChanged("KesArtikelTS");
                }
            }
        }
        private byte[] _kesArtikelTS;
    
        [DataMember]
        public string BezeichnungKurz
        {
            get { return _bezeichnungKurz; }
            set
            {
                if (_bezeichnungKurz != value)
                {
                    _bezeichnungKurz = value;
                    OnPropertyChanged("BezeichnungKurz");
                }
            }
        }
        private string _bezeichnungKurz;
    
        [DataMember]
        public Nullable<System.DateTime> DatumVon
        {
            get { return _datumVon; }
            set
            {
                if (_datumVon != value)
                {
                    _datumVon = value;
                    OnPropertyChanged("DatumVon");
                }
            }
        }
        private Nullable<System.DateTime> _datumVon;
    
        [DataMember]
        public Nullable<System.DateTime> DatumBis
        {
            get { return _datumBis; }
            set
            {
                if (_datumBis != value)
                {
                    _datumBis = value;
                    OnPropertyChanged("DatumBis");
                }
            }
        }
        private Nullable<System.DateTime> _datumBis;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<KesMassnahme_KesArtikel> KesMassnahme_KesArtikel
        {
            get
            {
                if (_kesMassnahme_KesArtikel == null)
                {
                    _kesMassnahme_KesArtikel = new TrackableCollection<KesMassnahme_KesArtikel>();
                    _kesMassnahme_KesArtikel.CollectionChanged += FixupKesMassnahme_KesArtikel;
                }
                return _kesMassnahme_KesArtikel;
            }
            set
            {
                if (!ReferenceEquals(_kesMassnahme_KesArtikel, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kesMassnahme_KesArtikel != null)
                    {
                        _kesMassnahme_KesArtikel.CollectionChanged -= FixupKesMassnahme_KesArtikel;
                    }
                    _kesMassnahme_KesArtikel = value;
                    if (_kesMassnahme_KesArtikel != null)
                    {
                        _kesMassnahme_KesArtikel.CollectionChanged += FixupKesMassnahme_KesArtikel;
                    }
                    OnNavigationPropertyChanged("KesMassnahme_KesArtikel");
                }
            }
        }
        private TrackableCollection<KesMassnahme_KesArtikel> _kesMassnahme_KesArtikel;

        #endregion

        #region ChangeTracking
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected override void ClearNavigationProperties()
        {
            KesMassnahme_KesArtikel.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupKesMassnahme_KesArtikel(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (KesMassnahme_KesArtikel item in e.NewItems)
                {
                    item.KesArtikel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("KesMassnahme_KesArtikel", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KesMassnahme_KesArtikel item in e.OldItems)
                {
                    if (ReferenceEquals(item.KesArtikel, this))
                    {
                        item.KesArtikel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("KesMassnahme_KesArtikel", item);
                    }
                }
            }
        }

        #endregion

        #region Methods
    
    	public override bool Equals(object obj)
    	{
    		if (obj == null)
    		{
    			return false;
    		}
    		
    		if (ReferenceEquals(this, obj))
    		{
    			return true;
    		}
    
    		if (GetType() != obj.GetType())
    		{
    			return false;
    		}
    
    		var entity = (KesArtikel)obj;
    		if (!_kesArtikelID.Equals(entity.KesArtikelID) || _kesArtikelID == 0)
    		{
    			return false;
    		}
    		
    		return true;
    	}
    	
    	public override int GetHashCode()
        {
            return _kesArtikelID.GetHashCode();
        }

        #endregion

    }
}
