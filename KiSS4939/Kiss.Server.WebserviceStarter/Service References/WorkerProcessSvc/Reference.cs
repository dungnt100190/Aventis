//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kiss.Server.WebserviceStarter.WorkerProcessSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", ConfigurationName="WorkerProcessSvc.WorkerProcessSvcSoap")]
    public interface WorkerProcessSvcSoap {
        
        // CODEGEN: Generating message contract since element name GetServerVersionResult from namespace http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/GetServerVersion", ReplyAction="*")]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse GetServerVersion(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/GetServerVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse> GetServerVersionAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest request);
        
        // CODEGEN: Generating message contract since element name dbName from namespace http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/IKAuszuegeGenerieren", ReplyAction="*")]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse IKAuszuegeGenerieren(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/IKAuszuegeGenerieren", ReplyAction="*")]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse> IKAuszuegeGenerierenAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest request);
        
        // CODEGEN: Generating message contract since element name dbName from namespace http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/ZKBDokumenteImportieren", ReplyAction="*")]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse ZKBDokumenteImportieren(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/ZKBDokumenteImportieren", ReplyAction="*")]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse> ZKBDokumenteImportierenAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerVersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerVersion", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequestBody Body;
        
        public GetServerVersionRequest() {
        }
        
        public GetServerVersionRequest(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetServerVersionRequestBody {
        
        public GetServerVersionRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerVersionResponse", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponseBody Body;
        
        public GetServerVersionResponse() {
        }
        
        public GetServerVersionResponse(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class GetServerVersionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetServerVersionResult;
        
        public GetServerVersionResponseBody() {
        }
        
        public GetServerVersionResponseBody(string GetServerVersionResult) {
            this.GetServerVersionResult = GetServerVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IKAuszuegeGenerierenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IKAuszuegeGenerieren", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequestBody Body;
        
        public IKAuszuegeGenerierenRequest() {
        }
        
        public IKAuszuegeGenerierenRequest(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class IKAuszuegeGenerierenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string dbName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int userIDSender;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string userWinLogonName;
        
        public IKAuszuegeGenerierenRequestBody() {
        }
        
        public IKAuszuegeGenerierenRequestBody(string dbName, int userIDSender, string userWinLogonName) {
            this.dbName = dbName;
            this.userIDSender = userIDSender;
            this.userWinLogonName = userWinLogonName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IKAuszuegeGenerierenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IKAuszuegeGenerierenResponse", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponseBody Body;
        
        public IKAuszuegeGenerierenResponse() {
        }
        
        public IKAuszuegeGenerierenResponse(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class IKAuszuegeGenerierenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string IKAuszuegeGenerierenResult;
        
        public IKAuszuegeGenerierenResponseBody() {
        }
        
        public IKAuszuegeGenerierenResponseBody(string IKAuszuegeGenerierenResult) {
            this.IKAuszuegeGenerierenResult = IKAuszuegeGenerierenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ZKBDokumenteImportierenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ZKBDokumenteImportieren", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequestBody Body;
        
        public ZKBDokumenteImportierenRequest() {
        }
        
        public ZKBDokumenteImportierenRequest(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class ZKBDokumenteImportierenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string dbName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int userIDSender;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string userWinLogonName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> minSize;
        
        public ZKBDokumenteImportierenRequestBody() {
        }
        
        public ZKBDokumenteImportierenRequestBody(string dbName, int userIDSender, string userWinLogonName, System.Nullable<int> minSize) {
            this.dbName = dbName;
            this.userIDSender = userIDSender;
            this.userWinLogonName = userWinLogonName;
            this.minSize = minSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ZKBDokumenteImportierenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ZKBDokumenteImportierenResponse", Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Order=0)]
        public Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponseBody Body;
        
        public ZKBDokumenteImportierenResponse() {
        }
        
        public ZKBDokumenteImportierenResponse(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class ZKBDokumenteImportierenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ZKBDokumenteImportierenResult;
        
        public ZKBDokumenteImportierenResponseBody() {
        }
        
        public ZKBDokumenteImportierenResponseBody(string ZKBDokumenteImportierenResult) {
            this.ZKBDokumenteImportierenResult = ZKBDokumenteImportierenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WorkerProcessSvcSoapChannel : Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkerProcessSvcSoapClient : System.ServiceModel.ClientBase<Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap>, Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap {
        
        public WorkerProcessSvcSoapClient() {
        }
        
        public WorkerProcessSvcSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkerProcessSvcSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkerProcessSvcSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkerProcessSvcSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.GetServerVersion(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest request) {
            return base.Channel.GetServerVersion(request);
        }
        
        public string GetServerVersion() {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequestBody();
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse retVal = ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).GetServerVersion(inValue);
            return retVal.Body.GetServerVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse> Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.GetServerVersionAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest request) {
            return base.Channel.GetServerVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionResponse> GetServerVersionAsync() {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.GetServerVersionRequestBody();
            return ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).GetServerVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.IKAuszuegeGenerieren(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest request) {
            return base.Channel.IKAuszuegeGenerieren(request);
        }
        
        public string IKAuszuegeGenerieren(string dbName, int userIDSender, string userWinLogonName) {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequestBody();
            inValue.Body.dbName = dbName;
            inValue.Body.userIDSender = userIDSender;
            inValue.Body.userWinLogonName = userWinLogonName;
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse retVal = ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).IKAuszuegeGenerieren(inValue);
            return retVal.Body.IKAuszuegeGenerierenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse> Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.IKAuszuegeGenerierenAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest request) {
            return base.Channel.IKAuszuegeGenerierenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenResponse> IKAuszuegeGenerierenAsync(string dbName, int userIDSender, string userWinLogonName) {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.IKAuszuegeGenerierenRequestBody();
            inValue.Body.dbName = dbName;
            inValue.Body.userIDSender = userIDSender;
            inValue.Body.userWinLogonName = userWinLogonName;
            return ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).IKAuszuegeGenerierenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.ZKBDokumenteImportieren(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest request) {
            return base.Channel.ZKBDokumenteImportieren(request);
        }
        
        public string ZKBDokumenteImportieren(string dbName, int userIDSender, string userWinLogonName, System.Nullable<int> minSize) {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequestBody();
            inValue.Body.dbName = dbName;
            inValue.Body.userIDSender = userIDSender;
            inValue.Body.userWinLogonName = userWinLogonName;
            inValue.Body.minSize = minSize;
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse retVal = ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).ZKBDokumenteImportieren(inValue);
            return retVal.Body.ZKBDokumenteImportierenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse> Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap.ZKBDokumenteImportierenAsync(Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest request) {
            return base.Channel.ZKBDokumenteImportierenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenResponse> ZKBDokumenteImportierenAsync(string dbName, int userIDSender, string userWinLogonName, System.Nullable<int> minSize) {
            Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest inValue = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequest();
            inValue.Body = new Kiss.Server.WebserviceStarter.WorkerProcessSvc.ZKBDokumenteImportierenRequestBody();
            inValue.Body.dbName = dbName;
            inValue.Body.userIDSender = userIDSender;
            inValue.Body.userWinLogonName = userWinLogonName;
            inValue.Body.minSize = minSize;
            return ((Kiss.Server.WebserviceStarter.WorkerProcessSvc.WorkerProcessSvcSoap)(this)).ZKBDokumenteImportierenAsync(inValue);
        }
    }
}
