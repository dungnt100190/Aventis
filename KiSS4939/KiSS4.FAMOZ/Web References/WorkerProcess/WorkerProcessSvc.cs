//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
//
namespace KiSS4.FAMOZ.WorkerProcess
{
    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IKAuszuegeGenerierenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WorkerProcessSvcSoap", Namespace = "http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/")]
    public partial class WorkerProcessSvc : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        private System.Threading.SendOrPostCallback IKAuszuegeGenerierenOperationCompleted;

        /// <remarks/>
        public WorkerProcessSvc()
        {
            this.Url = "http://localhost/BackgroundWorkerSvc/Master/WorkerProcess.asmx";
        }

        /// <remarks/>
        public event IKAuszuegeGenerierenCompletedEventHandler IKAuszuegeGenerierenCompleted;

        /// <remarks/>
        public System.IAsyncResult BeginIKAuszuegeGenerieren(string dbName, int userIDSender, string userWinLogonName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IKAuszuegeGenerieren", new object[] {
                        dbName,
                        userIDSender,
                        userWinLogonName}, callback, asyncState);
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        /// <remarks/>
        public void EndIKAuszuegeGenerieren(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/IKAuszuegeGenerieren", RequestNamespace = "http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", ResponseNamespace = "http://www.bedag.ch/KiSS/FAMOZ/WorkerProcess/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IKAuszuegeGenerieren(string dbName, int userIDSender, string userWinLogonName)
        {
            this.Invoke("IKAuszuegeGenerieren", new object[] {
                        dbName,
                        userIDSender,
                        userWinLogonName});
        }

        /// <remarks/>
        public void IKAuszuegeGenerierenAsync(string dbName, int userIDSender, string userWinLogonName)
        {
            this.IKAuszuegeGenerierenAsync(dbName, userIDSender, userWinLogonName, null);
        }

        /// <remarks/>
        public void IKAuszuegeGenerierenAsync(string dbName, int userIDSender, string userWinLogonName, object userState)
        {
            if ((this.IKAuszuegeGenerierenOperationCompleted == null))
            {
                this.IKAuszuegeGenerierenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIKAuszuegeGenerierenOperationCompleted);
            }
            this.InvokeAsync("IKAuszuegeGenerieren", new object[] {
                        dbName,
                        userIDSender,
                        userWinLogonName}, this.IKAuszuegeGenerierenOperationCompleted, userState);
        }

        private void OnIKAuszuegeGenerierenOperationCompleted(object arg)
        {
            if ((this.IKAuszuegeGenerierenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IKAuszuegeGenerierenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
}