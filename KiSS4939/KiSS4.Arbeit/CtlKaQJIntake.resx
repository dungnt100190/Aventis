<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picTitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAYklEQVQ4T+2OUQ7AIAhDuf+puJkDGwfi
        wPi3D19SiZWC5GgHWmgg1MTXfsSMYb6SY/GCJvp0ZsaWcI9V+xEzLCjKgtsBWncqB3xtyvyecviHUuWA
        +4M//iCr2o+YMcwTCUQP8gaS/f+dG1gAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="qryIntake.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>53</value>
  </metadata>
  <metadata name="qryIntakegespraech.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>119, 17</value>
  </metadata>
  <data name="qryIntakegespraech.SelectStatement" xml:space="preserve">
    <value>SELECT KING.KaQJIntakeGespraechID,
       KING.KaQJIntakeID,
       KING.Datum,
       KING.KaQjIntakePraesenzCode,
       KING.KaQjIntakeEntscheidCode,
       KING.Creator,
       KING.Created,
       KING.Modifier,
       KING.Modified,
       KING.KaQJIntakeGespraechTS
FROM dbo.KaQJIntakeGespraech KING
WHERE KING.KaQJIntakeID = {0}
ORDER BY KING.Datum;</value>
  </data>
  <metadata name="qryZuweiser.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>277, 17</value>
  </metadata>
  <data name="qryZuweiser.SelectStatement" xml:space="preserve">
    <value>SELECT ZuweiserInfo = ISNULL(Name, ' - ') + ISNULL( ', ' + Phone, '') + ISNULL( ', ' + Email, ''), ZuweiserID, Name, Phone, Email
FROM (
  SELECT
    ZuweiserID = -XUR1.UserID,
    Name       = ISNULL(XOU.ItemName, ISNULL(XUR1.FirstName + ' ','')  + ISNULL(XUR1.LastName,'')), -- mit ISNULL(xVar + ' ') : Falls xVar null, dann ist das ganze String NULL
    Phone      = COALESCE(XUR1.Phone, XUR1.PhoneMobile, XUR1.PhoneOffice),
    Email      = XUR1.EMail
  FROM dbo.XUser XUR1
    LEFT JOIN dbo.XOrgUnit_User OUU ON OUU.UserID = XUR1.UserID
    LEFT JOIN dbo.XOrgUnit XOU ON XOU.OrgUnitID = OUU.OrgUnitID
UNION ALL
  SELECT
    ZuweiserID    = OKO.BaInstitutionKontaktID,
    Name  = ORG1.Name,
    Phone = OKO.Telefon,
    Email = OKO.EMail
  FROM dbo.BaInstitutionKontakt OKO
    LEFT JOIN dbo.BaInstitution ORG1 ON ORG1.BaInstitutionID = OKO.BaInstitutionID
) ZUW
WHERE ZUW.ZuweiserID = {0};</value>
  </data>
  <data name="edtDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtIntakegespraech.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABfSURBVDhPrY7RDYAwCESZgkXYqTs5LeYqRFsBNfaS98W9
        cISIiGb0whwcVLcbzNyx2hkXWqMBlF206pGnD2CYlwlXQmGe5KRCxRohmgNSoWKNEM0BqVDxX3iD1b+E
        aAfWfHr9nSYTxgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtIntakegespraech.Properties.Buttons1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABYSURBVDhPnY3BDQAgCAPZyf1nw6DWGC2gXuID2wMxtIja
        a8MNEL6kMR4cGQQmuYuY4C2ZrIW0bKB0VQZPZePpwlpOhb0USix0BQQspP9eGUQZJVtI6YJIBeu5cfV3
        tfQcAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="edtIntakegespraech.Properties.Buttons2" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABBSURBVDhPYwABY2Pj/7gwWAE6AEn8/z8TA4uJiYExVBkC
        4NMAo6FKIYCQDSCM4jxcGpDxqIbhooEYDFVOCmBgAADnY6JvpgSjlwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="edtIntakegespraech.Properties.Buttons3" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABdSURBVDhPxY6LCcAwCESdwkWcNtNaLlUam5oPBHrwCJJ7
        KCEiohm18A4+VEsHM1es9mQk+GvVO7MNIJyXCS1nhSIUZpAKKC8LXh4RhFby2UlPAtvCFz8IK1h9J0QX
        DTKNHhU9EmkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryIntake.SelectStatement" xml:space="preserve">
    <value>SELECT KIN.KaQJIntakeID,
       KIN.FaLeistungID,
       KIN.ZuweiserID,
       KIN.ZuteilungCode,
       KIN.WerkstattCode,
       KIN.ExternFlag,
       KIN.Eintritt,
       KIN.WartelisteCode,
       KIN.KaQjIntakeSpracheCode_Hauptsprache,
       KIN.KaQjIntakeSpracheCode_Erstsprache,
       KIN.Bemerkung,
       KIN.SichtbarSDFlag,
       KIN.AbgemeldetALVFlag,
       KIN.NichtErschFlag,
       KIN.GesprStattgefFlag,
       KIN.DocumentID_Intakegespraech,
       KIN.Creator,
       KIN.Created,
       KIN.Modifier,
       KIN.Modified,
       KIN.KaQJIntakeTS,
       Zuweiser        = CASE WHEN KIN.ZuweiserID &lt; 0 THEN
                                   XUR1.LastName + ISNULL(', ' + XUR1.FirstName,'')
                              ELSE OKO.Name + ISNULL(', ' + OKO.Vorname,'')
                              END,
       ZuweiserAnzeige = CASE WHEN KIN.ZuweiserID &lt; 0 THEN
                                   XUR1.LastName + ISNULL(' ' + XUR1.FirstName,'') + ISNULL(', ' + XOU.ItemName, '') + ISNULL(', ' + XUR1.Phone, '')
                              ELSE OKO.Name + ISNULL(' ' + OKO.Vorname,'') + ISNULL(', ' + ORG1.Name, '') + ISNULL(', ' + OKO.Telefon, '')
                              END,
       ZuweiserName    = CASE WHEN KIN.ZuweiserID &lt; 0 THEN XUR1.LastName ELSE OKO.Name END,
       ZuweiserVorname = CASE WHEN KIN.ZuweiserID &lt; 0 THEN XUR1.FirstName ELSE OKO.Vorname END,
       AbgemALV        = CASE WHEN KIN.AbgemeldetALVFlag = 1 THEN '1' ELSE CASE WHEN KIN.AbgemeldetALVFlag = 0 THEN '0' ELSE null END END,
       NichtErsch      = CASE WHEN KIN.NichtErschFlag = 1 THEN '1' ELSE CASE WHEN KIN.NichtErschFlag = 0 THEN '0' ELSE null END END,
       GespStattgef    = CASE WHEN KIN.GesprStattgefFlag = 1 THEN '1' ELSE CASE WHEN KIN.GesprStattgefFlag = 0 THEN '0' ELSE null END END
FROM dbo.KaQJIntake KIN
  LEFT JOIN dbo.XUser                XUR1 ON XUR1.UserID = -KIN.ZuweiserID
  LEFT JOIN dbo.BaInstitutionKontakt OKO  ON OKO.BaInstitutionKontaktID = KIN.ZuweiserID
  LEFT JOIN dbo.BaInstitution        ORG1 ON ORG1.BaInstitutionID =  OKO.BaInstitutionID
  LEFT JOIN dbo.XOrgUnit_User        OUU  ON OUU.UserID = -KIN.ZuweiserID
                                         AND (OUU.OrgUnitMemberCode = 1 OR OUU.OrgUnitMemberCode = 2)
  LEFT JOIN dbo.XOrgUnit             XOU  ON XOU.OrgUnitID = OUU.OrgUnitID
WHERE KIN.FaLeistungID = {0}
  AND (KIN.SichtbarSDFlag = {1} or KIN.SichtbarSDFlag = 1);</value>
  </data>
</root>