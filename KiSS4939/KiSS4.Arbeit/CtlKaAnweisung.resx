<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryEinsatz.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>55</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtAustrittDatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtRahmenfristBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtDatumBis.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="edtDatumVon.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABMSURBVDhPYwABY2Pj/8RgsGIQgHFQBKEAqxyIQwyGKsdu
        MjrAqaGhgQErG6sGkAKYInSaOhpAYERrAAFkNk4NuACGBmIwVDkpgIEBAO2ojyYwtBe7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="picTitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAYklEQVQ4T+2OUQ7AIAhDuf+puJkDGwfi
        wPi3D19SiZWC5GgHWmgg1MTXfsSMYb6SY/GCJvp0ZsaWcI9V+xEzLCjKgtsBWncqB3xtyvyecviHUuWA
        +4M//iCr2o+YMcwTCUQP8gaS/f+dG1gAAAAASUVORK5CYII=
</value>
  </data>
  <data name="qryEinsatz.SelectStatement" xml:space="preserve">
    <value>SELECT KAE.KaEinsatzID,
       KAE.BaPersonID,
       KAE.KaEinsatzplatzID,
       KAE.FaLeistungID,
       KAE.AnweisungCode,
       KAE.DatumVon,
       KAE.DatumBis,
       KAE.SamstagAktiv,
       KAE.SonntagAktiv,
       KAE.BeschGrad,
       KAE.APVZusatzCode,
       KAE.PersonenNr,
       KAE.RahmenfristBis,
       KAE.ALKasseID,
       KAE.ZuweiserID,
       KAE.SichtbarSDFlag,
       KAE.KaEinsatzTS,
       EinsatzplatzName = dbo.fnLOVText('KaAPV', KEP.APVCode),
       ALKAnzeige = ORG.InstitutionNr + ISNULL(', ' + ORG.Name, '') + ISNULL(', ' + ADR.Ort, ''),
       ALKasse = COALESCE(ORG.InstitutionNr + ', ' + ORG.Name, ORG.Name, ORG.InstitutionNr),
       Zuweiser = CASE
                    WHEN KAE.ZuweiserID &lt; 0
                      THEN XUR1.LastName + ISNULL(', ' + XUR1.FirstName,'')
                    ELSE OKO.Name + ISNULL(', ' + OKO.Vorname,'')
                  END,
       ZuweiserAnzeige = CASE
                           WHEN KAE.ZuweiserID &lt; 0
                             THEN XUR1.LastName + ISNULL(' ' + XUR1.FirstName,'') + ISNULL(', ' + XOU.ItemName, '') + ISNULL(', ' + XUR1.Phone, '') + ISNULL(', ' + XUR1.EMail, '')
                           ELSE OKO.Name + ISNULL(' ' + OKO.Vorname,'') + ISNULL(', ' + ORG1.Name, '') + ISNULL(', ' + OKO.Telefon, '')
                         END,
        ZuweiserName = CASE WHEN KAE.ZuweiserID &lt; 0 THEN XUR1.LastName ELSE OKO.Name END,
        ZuweiserVorname = CASE WHEN KAE.ZuweiserID &lt; 0 THEN XUR1.FirstName ELSE OKO.Vorname END,
        InstNr = ORG.InstitutionNr,
        AUS.AustrittDatum,
        KAE.Creator,
        KAE.Created,
        KAE.Modifier,
        KAE.Modified
FROM dbo.KaEinsatz                   KAE  WITH (READUNCOMMITTED)
  LEFT JOIN dbo.KaEinsatzplatz2      KEP  WITH (READUNCOMMITTED) ON KAE.KaEinsatzplatzID = KEP.KaEinsatzplatzID
  LEFT JOIN dbo.BaInstitution        ORG  WITH (READUNCOMMITTED) ON ORG.BaInstitutionID = KAE.ALKasseID
  LEFT JOIN dbo.BaAdresse            ADR  WITH (READUNCOMMITTED) ON ADR.BaInstitutionID = ORG.BaInstitutionID
  LEFT JOIN dbo.XUser                XUR1 WITH (READUNCOMMITTED) ON XUR1.UserID = -KAE.ZuweiserID
  LEFT JOIN dbo.BaInstitutionKontakt OKO  WITH (READUNCOMMITTED) ON OKO.BaInstitutionKontaktID = KAE.ZuweiserID
  LEFT JOIN dbo.BaInstitution        ORG1 WITH (READUNCOMMITTED) ON ORG1.BaInstitutionID =  OKO.BaInstitutionID
  LEFT JOIN dbo.XOrgUnit_User        OUU  WITH (READUNCOMMITTED) ON OUU.UserID = -KAE.ZuweiserID
                                                                AND (OUU.OrgUnitMemberCode = 1 OR OUU.OrgUnitMemberCode = 2)
  LEFT JOIN dbo.XOrgUnit             XOU  WITH (READUNCOMMITTED) ON XOU.OrgUnitID = OUU.OrgUnitID
  OUTER APPLY dbo.fnKaGetAustrittDatumCode(KAE.FaLeistungID, KAE.KaEinsatzID) AUS
WHERE KAE.BaPersonID = {0}
  AND (KAE.SichtbarSDFlag = {1} OR KAE.SichtbarSDFlag = 1)
ORDER BY KAE.DatumBis DESC;
</value>
  </data>
  <metadata name="qryLeistung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
  <data name="qryLeistung.SelectStatement" xml:space="preserve">
    <value>SELECT [Code] = LEI.FaLeistungID,
       [Text] = dbo.fnGetLOVMLText('FaProzess', LEI.FaProzessCode, 1) +
                ', ' + CONVERT(VARCHAR, LEI.DatumVon, 104) +
                ISNULL(' - ' + CONVERT(VARCHAR, LEI.DatumBis, 104), '')
FROM dbo.FaLeistung LEI WITH(READUNCOMMITTED)
WHERE LEI.FaLeistungID = {0}
   OR (LEI.BaPersonID = {1} AND
       LEI.DatumBis IS NULL AND
       LEI.ModulID = 7 AND
       LEI.FaProzessCode NOT IN (
         700, -- Allgemein
         702  -- Inizio
       ))
ORDER BY LEI.DatumVon ASC;
</value>
  </data>
  <metadata name="qryApvNr.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>239, 17</value>
  </metadata>
  <data name="qryApvNr.SelectStatement" xml:space="preserve">
    <value>SELECT Code = KaEinsatzplatzID,
       Text = dbo.fnLOVText('KaAPV', APVCode)
FROM dbo.KaEinsatzplatz2 WITH (READUNCOMMITTED)
WHERE KaEinsatzplatzID = {0}
   OR DatumBis IS NULL
   OR DatumBis &gt;= GETDATE()
ORDER BY Text;
</value>
  </data>
</root>