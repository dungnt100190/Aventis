<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:core="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v14.1" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:kiss="clr-namespace:DevExpress.Xpf.Themes.Kiss"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <Style TargetType="ListBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="2,1,2,1" />
        <Setter Property="Background" Value="{DynamicResource {kiss:KissBrushKey ResourceKey=ButtonBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
          <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
            <Border x:Name="hover" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1" Background="#FF3399FF" />
            <Border x:Name="selected" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1" Background="#FF3399FF" />
            <Border x:Name="Bd" SnapsToDevicePixels="True" Padding="1">
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter Property="Visibility" TargetName="selected" Value="Visible" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" TargetName="hover" Value="Visible" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Bd" Value="0.35" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Background" Value="{DynamicResource {kiss:KissBrushKey ResourceKey=ButtonBackground}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IsMouseOver">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IsChecked">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Normal" Padding="2">
              <Border Background="{TemplateBinding Background}" />
            </Border>
            <Border x:Name="IsMouseOver" Padding="2" Opacity="0" Background="Transparent">
              <Border Padding="1" Background="#FF3399FF">
                <Border Background="#C2E0FF" />
              </Border>
            </Border>
            <Border x:Name="IsChecked" Padding="2" Opacity="0" Background="Transparent">
              <Grid>
                <Border Padding="1" Background="#FF3399FF">
                  <Border x:Name="border4" Width="Auto" Height="Auto" CornerRadius="0" Background="#FFC2E0FF" />
                </Border>
                <Border Height="2" VerticalAlignment="Top">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#3F000000" Offset="0" />
                      <GradientStop Color="#00000000" Offset="1" />
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
              </Grid>
            </Border>
            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="#FF7C7C7C" HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true" />
            <Trigger Property="IsEnabled" Value="false" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainGrid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="FocusedDropDown" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="EditStates">
                    <VisualState x:Name="Editable" />
                    <VisualState x:Name="Uneditable" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" ScrollViewer.CanContentScroll="False" Grid.IsSharedSizeScope="False" Grid.ColumnSpan="2" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="#FF7C7C94" Background="White" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <ItemsPresenter x:Name="ItemsPresenter" Margin="1" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="True" />
                    </ScrollViewer>
                </Border>
            </Popup>
            <Border Background="{TemplateBinding BorderBrush}" CornerRadius="2" Grid.ColumnSpan="2">
                <Border Margin="1" CornerRadius="1" Background="{TemplateBinding Background}" />
            </Border>
            <ToggleButton Grid.ColumnSpan="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Grid.Column="1" />
            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <TextBox x:Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=Kiss, FullName=System.Windows.Controls.ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {kiss:KissBrushKey ResourceKey=EditControlBorder}}" />
    <Setter Property="Background" Value="{DynamicResource {kiss:KissBrushKey ResourceKey=EditControlBackgroundNormal}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="5,3" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
                <VisualState x:Name="FocusedDropDown" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditStates">
                <VisualState x:Name="Editable" />
                <VisualState x:Name="Uneditable" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" ScrollViewer.CanContentScroll="False" Grid.IsSharedSizeScope="False" Grid.ColumnSpan="2" MaxHeight="{TemplateBinding MaxDropDownHeight}">
              <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="#FF7C7C94" Background="White" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <ScrollViewer x:Name="DropDownScrollViewer">
                  <ItemsPresenter x:Name="ItemsPresenter" Margin="1" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="True" />
                </ScrollViewer>
              </Border>
            </Popup>
            <!--<Border Margin="-2" x:Name="focus" Opacity="0" Background="#FFFFC200" CornerRadius="4" Grid.ColumnSpan="2" />-->
            <Border Background="{TemplateBinding BorderBrush}" CornerRadius="2" Grid.ColumnSpan="2">
                <Border x:Name="background" Margin="1" CornerRadius="1" Background="{TemplateBinding Background}" />
            </Border>
            <ToggleButton IsTabStop="False" Grid.ColumnSpan="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Grid.Column="1" />
            <ToggleButton IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <Border Background="Transparent" />
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <!--<Trigger Property="IsFocused" Value="True">
                    <Setter TargetName="focus" Property="Opacity" Value="0.35" />
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
  </Style>
</ResourceDictionary>