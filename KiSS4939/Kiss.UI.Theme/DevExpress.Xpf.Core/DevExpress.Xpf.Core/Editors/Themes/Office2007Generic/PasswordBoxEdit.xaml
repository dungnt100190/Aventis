<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxepc="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <!--PROCESS SETTERS WITH BINDING-->
    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Kiss.v14.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/PasswordBoxEdit.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <!--ONLY SL
    <dxei:TextBoxPaddingConverter x:Key="TextBoxPaddingConverter" />
    ONLY SL-->
    
    <dxei:HorizontalContentAlignmentToTextAlignmentConverter x:Key="HorizontalContentAlignmentToTextAlignmentConverter" />
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}" TargetType="{x:Type PasswordBox}">
        <!--BEGIN WPF-->
        <Border Background="{TemplateBinding Background}">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Focusable="False" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}">
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--END WPF-->
        <!--ONLY SL
            <Border Background="{TemplateBinding Background}">
                <ScrollViewer x:Name="ContentElement" 
                        dx:StyleManager.ApplyApplicationTheme="True" 
                        BorderThickness="0" IsTabStop="False" 
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextBoxPaddingConverter}}"
                        Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}"
                        VerticalScrollBarVisibility="Hidden"/>
            </Border>
        ONLY SL-->
    </ControlTemplate>

    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Template" Value="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}}" />
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}" />
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" />
        <!--BEGIN WPF-->
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
        <Setter Property="TextBlock.TextAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}" />
        <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}" />
        <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}" />
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}" />
        <Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}" />
        <Setter Property="Opacity" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible, Converter={dx:BoolToVisibilityViaOpacityConverter Invert=true}}" />
        <Setter Property="PasswordChar" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).PasswordChar}" />
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="3,3,3,3,0,3,3,3" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="3,3,3,3,0,3,3,3"/>
        ONLY SL-->
    </Style>
    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=NullTextEditorStyle}" TargetType="{x:Type TextBlock}">
        <!--BEGIN WPF-->
        <Setter Property="KeyboardNavigation.IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <!--END WPF-->
        <Setter Property="VerticalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=NullTextForeground}}" />    
    </Style>

</ResourceDictionary>