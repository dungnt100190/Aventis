<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxel="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:Kiss="clr-namespace:DevExpress.Xpf.Themes.Kiss">
    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Kiss.v14.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Kiss/TextEditBase.xaml" />
		<dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Kiss.v14.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2007Generic/TextEdit.xaml" />
	</ResourceDictionary.MergedDictionaries>
    <!--END WPF-->
    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
		<Grid Width="Auto" Height="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    BorderThickness="1"
                    CornerRadius="1"
                    BorderBrush="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBorder}}"
                    Background="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBackgroundNormal}}" />
            <Border x:Name="FocusElement"
                    BorderThickness="1"
                    CornerRadius="1"
                    Opacity="0"
                    IsHitTestVisible="False"
                    BorderBrush="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBorderFocused}}"
                    Background="Transparent" />
            <ContentPresenter />
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsRequired, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBackgroundRequired}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsAuthorized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:BaseEdit}}}" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBackgroundReadOnly}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {Kiss:KissBrushKey ResourceKey=EditControlBackgroundReadOnly}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>