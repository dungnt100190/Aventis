<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys" xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet" xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys">
   
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Kiss.v14.1;component/DevExpress.Xpf.Spreadsheet/Generic/DefaultStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
    <dx:ColorOverlayConverter x:Key="ColorOverlayConveter" />

    <Color x:Key="{themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}">#FFDCE0E8</Color>
    <Color x:Key="GlyphColor">#FF6F7074</Color>

    <!-- General Resources -->
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetForegroundBrush}" Color="#FF000000" /> 
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=VisualFeedbackLineBrush}" Color="#FF000000" />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=FrozenSeparatorBrush}" Color="#FF6F7074" />
    
    <SolidColorBrush x:Key="Spreadsheet.BorderBrush" Color="#FF6F7074" />
    <SolidColorBrush x:Key="Selection.BorderBrush" Color="#FF000000" />  
    <SolidColorBrush x:Key="Selection.Background" Color="#7FFFCC00" />
    <SolidColorBrush x:Key="TabPanel.BorderBrush" Color="#FF6F7074" /> 
    <SolidColorBrush x:Key="TabPanel.Background" Color="#FFEBECEF" />
    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush" Color="#FF6F7074" />
    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush.IsMouseOver" Color="#FF6F7074" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#FF6F7074" />

    <RadialGradientBrush x:Key="ScrollBar.Corner.Background" GradientOrigin="0.154,0.154">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.581" ScaleY="1.581" />
                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                <TranslateTransform X="0" Y="0" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FFEBEDEF" Offset="1" />
        <GradientStop Color="#FFF0F0F0" Offset="0.676" />
        <GradientStop Color="#FFF4F4F4" Offset="0.218" />
        <GradientStop Color="#FFEFEFEF" Offset="0.288" />
        <GradientStop Color="#FFEBEDEF" Offset="0" />
        <GradientStop Color="#FFEBEDEF" Offset="0.08" />
        <GradientStop Color="#FFFCFCFC" Offset="0.08" />
    </RadialGradientBrush>

    <!-- Header -->
    <SolidColorBrush x:Key="Header.BorderBrush" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="Header.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCFDFD" Offset="0" />
        <GradientStop Color="#FFD4D7DB" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Header.BorderBrush.IsMouseOver" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="Header.Background.IsMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCFDFD" Offset="0" />
        <GradientStop Color="#FFD4D7DB" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Header.BorderBrush.IsSelected" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="Header.Background.IsSelected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDCDEE3" Offset="0" />
        <GradientStop Color="#FFE4E6EA" Offset="1" />
        <GradientStop Color="#FFE4E6EA" Offset="0.25" />
    </LinearGradientBrush>
    
    <!-- TabSelectorItem -->
    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border1" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="TabSelectorItem.UnselectedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8FAFB" Offset="0" />
        <GradientStop Color="#FFFFFFFF" Offset="1" />
        <GradientStop Color="#FFF3F5F7" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabSelectorItem.UnselectedState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFEFFFF" Offset="0" />
        <GradientStop Color="#FFFAFFFF" Offset="1" />
        <GradientStop Color="#FFE0E5EB" Offset="0.5" />
        <GradientStop Color="#FFCBD5DF" Offset="0.5" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border1" Color="#FF6F7074" />
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border2" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border3" Color="#FFFFFFFF" />
    
    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border1" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="TabSelectorItem.MouseHoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFEFB" Offset="0" />
        <GradientStop Color="#FFFFF5D7" Offset="1" />
        <GradientStop Color="#FFFFF6DC" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabSelectorItem.MouseHoverState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBE5" Offset="0" />
        <GradientStop Color="#FFFCEBB7" Offset="1" />
        <GradientStop Color="#FFFADF8F" Offset="0.5" />
        <GradientStop Color="#FFF4C233" Offset="0.5" />
    </LinearGradientBrush>

    <!-- NavButton -->    
    <LinearGradientBrush x:Key="NavButton.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE8E8E8" Offset="0" />
        <GradientStop Color="#FFD8D8D8" Offset="1" />
        <GradientStop Color="#FFDDDDDD" Offset="0.5" />
        <GradientStop Color="#FFC3C3C3" Offset="0.5" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NavButton.HoverState.Border1" Color="#FFDBCE99" />
    <LinearGradientBrush x:Key="NavButton.HoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFDF3" Offset="0" />
        <GradientStop Color="#FFFFE996" Offset="1" />
        <GradientStop Color="#FFFFF5CD" Offset="0.5" />
        <GradientStop Color="#FFFFEEAB" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavButton.HoverState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFF8D9" Offset="0" />
        <GradientStop Color="#FFFFE894" Offset="1" />
        <GradientStop Color="#FFFFEA9A" Offset="0.5" />
        <GradientStop Color="#FFFFDC58" Offset="0.5" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="NavButton.PressedState.Border1" Color="#FF9A8F63" />
    <LinearGradientBrush x:Key="NavButton.PressedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE7CAA6" Offset="0" />
        <GradientStop Color="#FFFCE190" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NavButton.PressedState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8D6AD" Offset="0" />
        <GradientStop Color="#FFFBD681" Offset="1" />
        <GradientStop Color="#FFF8C37E" Offset="0.5" />
        <GradientStop Color="#FFF9B555" Offset="0.5" />
    </LinearGradientBrush>

    <!-- AddButton -->
    <SolidColorBrush x:Key="AddButton.DefaultState.Border1" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="AddButton.DefaultState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8FAFB" Offset="0" />
        <GradientStop Color="#FFFFFFFF" Offset="1" />
        <GradientStop Color="#FFF3F5F7" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AddButton.DefaultState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEDF1F5" Offset="0" />
        <GradientStop Color="#FFF0F4F9" Offset="1" />
        <GradientStop Color="#FFE5E9EE" Offset="0.5" />
        <GradientStop Color="#FFCBD2DB" Offset="0.5" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AddButton.HoverState.Border1" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="AddButton.HoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFEFB" Offset="0" />
        <GradientStop Color="#FFFFF5D7" Offset="1" />
        <GradientStop Color="#FFFFF6DC" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AddButton.HoverState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBE5" Offset="0" />
        <GradientStop Color="#FFFCEBB7" Offset="1" />
        <GradientStop Color="#FFFADF8F" Offset="0.5" />
        <GradientStop Color="#FFF4C233" Offset="0.5" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AddButton.PressedState.Border1" Color="#FF6F7074" />
    <LinearGradientBrush x:Key="AddButton.PressedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC18C5D" Offset="0" />
        <GradientStop Color="#FFFFC14C" Offset="1" />
        <GradientStop Color="#FFFFAB49" Offset="0.5" />
        <GradientStop Color="#FFFF8F08" Offset="0.5" />
        <GradientStop Color="#FFFCB06A" Offset="0.1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AddButton.PressedState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC18C5D" Offset="0" />
        <GradientStop Color="#FFFFC14C" Offset="1" />
        <GradientStop Color="#FFFFAB49" Offset="0.5" />
        <GradientStop Color="#FFFF8F08" Offset="0.5" />
        <GradientStop Color="#FFFCB06A" Offset="0.1" />
    </LinearGradientBrush>

    <!-- FormulaBarItem Hover/Pressed -->
    <LinearGradientBrush x:Key="FormulaBarItem.HoverState.Border1" EndPoint="0.5,1" StartPoint="0.5,0">
         <GradientStop Color="#FFDDCF9B" Offset="0" />
         <GradientStop Color="#FFDDCF9B" Offset="1" />
         <GradientStop Color="#FFC0A776" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FormulaBarItem.HoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFFFF362" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FormulaBarItem.HoverState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFDDE" Offset="0" />
        <GradientStop Color="#FFFFE794" Offset="1" />
        <GradientStop Color="#FFFFE797" Offset="0.5" />
        <GradientStop Color="#FFFFD758" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FormulaBarItem.PressedState.Border1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFDAD11 " Offset="1" />
        <GradientStop Color="#FFF0A85C " Offset="0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FormulaBarItem.PressedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8B56A" Offset="0" />
        <GradientStop Color="#FFFFC570" Offset="1" />
        <GradientStop Color="#FFFCA160" Offset="0.5" />
        <GradientStop Color="#FFFB8C3B" Offset="0.5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="FormulaBarItem.Editor.BorderBrush" Color="#FF6F7074" />
    <!-- FormulaBar Collapse/Expand Button -->
    <SolidColorBrush x:Key="ExpandButton.DefaultState.Border1" Color="#FFD6D8DC" />
    <LinearGradientBrush x:Key="ExpandButton.DefaultState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD8DDE5" Offset="0" />
        <GradientStop Color="#FFD8DDE5" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpandButton.DefaultState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD8DDE5" Offset="0" />
        <GradientStop Color="#FFD8DDE5" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ExpandButton.HoverState.Border1" Color="#FFE1BD29" />
    <LinearGradientBrush x:Key="ExpandButton.HoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFEF8" Offset="0" />
        <GradientStop Color="#FFFFF4D3" Offset="1" />
        <GradientStop Color="#FFFFF9E8" Offset="0.5" />
        <GradientStop Color="#FFFFF4D3" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpandButton.HoverState.Border3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEE" Offset="0" />
        <GradientStop Color="#FFFFE8A6" Offset="1" />
        <GradientStop Color="#FFFFF3D1" Offset="0.5" />
        <GradientStop Color="#FFFFE8A6" Offset="0.5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ExpandButton.PressedState.Border1" Color="#FFCDC1A6" />
    <SolidColorBrush x:Key="ExpandButton.PressedState.Border2" Color="#FFFFE8A6" />
    <SolidColorBrush x:Key="ExpandButton.PressedState.Border3" Color="#FFFFE8A6" />

    <!--FormulaBarContol-->
    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlMinHeight}">28</sys:Double>
    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="buttonTemplate">
        <Grid Background="Transparent">
            <Grid.Resources>
                <!--ONLY SL
                <dx:EnumToObjectConverter x:Key="EnumToObjectConverter" DefaultValue="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=ButtonInfoContentStyle}}">
                    <dx:EnumToObjectConverter.Values>
                        <dx:EnumObjectProvider x:Key="User" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=UserButtonInfoContentStyle}}"/>
                        <dx:EnumObjectProvider x:Key="None" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=NoneButtonInfoContentStyle}}"/>
                    </dx:EnumToObjectConverter.Values>
                </dx:EnumToObjectConverter>
                ONLY SL-->
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked" />
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto">
                    <!--BEGIN WPF-->
                    <ColumnDefinition.SharedSizeGroup>
                        <sys:String>ComboBoxButton</sys:String>
                    </ColumnDefinition.SharedSizeGroup>
                    <!--END WPF-->
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid x:Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="0.3*" />
                </Grid.ColumnDefinitions>
                <!--BEGIN WPF-->
                <ContentPresenter x:Name="Glyph" Grid.ColumnSpan="2" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=ButtonInfoContentStyle}}" />
                <!--END WPF-->
                <!--ONLY SL
                <ContentPresenter x:Name="Glyph" Grid.ColumnSpan="2" Style="{Binding Path=DataContext.GlyphKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EnumToObjectConverter}}"/>
                ONLY SL-->
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="User">
                <Setter TargetName="Glyph" Property="Style" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=UserButtonInfoContentStyle}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="None">
                <Setter TargetName="Glyph" Property="Style" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=NoneButtonInfoContentStyle}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="buttonInfoTemplate">
        <ToggleButton x:Name="PART_Item" IsChecked="{Binding Path=IsChecked, Mode=TwoWay}" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=ButtonStyle}}" Template="{StaticResource buttonTemplate}" />
    </DataTemplate>
    <Style x:Key="SpreadsheetNameBoxControlStyle" TargetType="{x:Type dxspsi:SpreadsheetNameBoxControl}">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Margin" Value="3,0,0,0" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="EditValuePostMode" Value="Immediate" />
        <Setter Property="ValidateOnTextInput" Value="True" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo IsDefaultButton="True" GlyphKind="Down" ButtonKind="Toggle" Template="{StaticResource buttonInfoTemplate}" />
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowBorder" Value="False" />
    </Style>
    <Style x:Key="FormulaBarEditorStyle" TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="FormulaBarEditorBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource FormulaBarItem.Editor.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
    </Style>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlTemplate}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="PART_HorizontalContainer" Margin="0,3,0,0">
                <Border BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,0,1" />
                <Grid x:Name="PART_FormulaBarEditorContainer" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" MinWidth="100" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MinHeight}" MinHeight="22" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border Background="#FFFFFFFF" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,0,1" MinHeight="22" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                        <dxspsi:SpreadsheetNameBoxControl x:Name="PART_Combobox" MaxHeight="{TemplateBinding MinHeight}" SpreadsheetControl="{Binding SpreadsheetControl, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SpreadsheetNameBoxControlStyle}" />
                    </Border>
                    <Thumb x:Name="PART_VerticalThumb" VerticalAlignment="Top" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}}" Grid.Column="1" />
                    <Border Background="{StaticResource Header.Background}" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,0,1" VerticalAlignment="Top" Height="22" Padding="4,0,2,0" Grid.Column="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_CancelButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}}" />
                            <Button x:Name="PART_OkButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}}" Grid.Column="1" />
                            <Button x:Name="PART_FunctionButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}}" Grid.Column="2" />
                        </Grid>
                    </Border>
                    <Border Style="{StaticResource FormulaBarEditorBorderStyle}" Grid.Column="3" Grid.RowSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxspsi:FormulaBarEditor x:Name="PART_Editor" Style="{StaticResource FormulaBarEditorStyle}" />
                            <Border Grid.Column="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="PART_ExpandButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                    <ScrollBar Minimum="0" Maximum="{Binding ScrollViewer.ScrollableHeight, ElementName=PART_Editor}" ViewportSize="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}" Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Grid.Column="3" Grid.Row="1" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <Thumb x:Name="PART_HorizontalThumb" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}}" VerticalAlignment="Bottom" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="{StaticResource TabPanel.Background}" SnapsToDevicePixels="True">
                        <Grid Margin="0,0,0,-1">
                            <Border x:Name="HoverState" Background="{StaticResource FormulaBarItem.HoverState.Border2}" BorderBrush="{StaticResource FormulaBarItem.HoverState.Border1}" BorderThickness="1,0,0,1" Opacity="0">
                                <Border Background="{StaticResource FormulaBarItem.HoverState.Border3}" Margin="1" />
                            </Border>
                            <Border x:Name="PressedState" Background="{StaticResource FormulaBarItem.PressedState.Border2}" BorderBrush="{StaticResource FormulaBarItem.PressedState.Border1}" BorderThickness="1,0,0,1" Opacity="0" />
                        </Grid>
                        <Grid>
                            <Grid x:Name="GlyphCollapsed" Margin="0,1,0,0">
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1,5L 2,5L 2,6L 3,6L 3,7L 4,7L 4,8L 5,8L 5,7L 6,7L 6,6L 7,6L 7,5L 8,5L 8,1L 7,1L 7,2L 6,2L 6,3L 5,3L 5,4L 4,4L 4,3L 3,3L 3,2L 2,2L 2,1L 1,1L 1,5 Z " Width="7" Height="7" Opacity="0.5" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 4,6L 4,5L 3,5L 3,4L 2,4L 2,3L 1,3L 1,2L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,4L 5,4L 5,3L 6,3L 6,2L 7,2L 7,1L 8,1L 8,2L 8,3L 7,3L 7,4L 6,4L 6,5L 5,5L 5,6L 4,6 Z " Width="7" Height="5" Margin="0,1,0,1" />
                            </Grid>
                            <Grid x:Name="GlyphExpanded" Opacity="0">
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1,4L 2,4L 2,3L 3,3L 3,2L 4,2L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,4L 8,4L 8,8L 7,8L 7,7L 6,7L 6,6L 5,6L 5,5L 4,5L 4,6L 3,6L 3,7L 2,7L 2,8L 1,8L 1,4 Z " Width="7" Height="7" Opacity="0.5" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 4,1L 4,2L 3,2L 3,3L 2,3L 2,4L 1,4L 1,5L 1,6L 2,6L 2,5L 3,5L 3,4L 4,4L 4,3L 5,3L 5,4L 6,4L 6,5L 7,5L 7,6L 8,6L 8,5L 8,4L 7,4L 7,3L 6,3L 6,2L 5,2L 5,1L 4,1 Z " Width="7" Height="5" Margin="0,0,0,1" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="GlyphExpanded" Value="1" />
                            <Setter Property="Opacity" TargetName="GlyphCollapsed" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="20" MinHeight="20">
                        <Border x:Name="HoverState" Background="{StaticResource FormulaBarItem.HoverState.Border2}" BorderBrush="{StaticResource FormulaBarItem.HoverState.Border1}" BorderThickness="1,0,1,0" Opacity="0">
                            <Border Background="{StaticResource FormulaBarItem.HoverState.Border3}" Margin="1" />
                        </Border>
                        <Border x:Name="PressedState" Background="{StaticResource FormulaBarItem.PressedState.Border2}" BorderBrush="{StaticResource FormulaBarItem.PressedState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
                        <Grid Margin="2">
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="20" MinHeight="20">
                        <Border x:Name="HoverState" Background="{StaticResource FormulaBarItem.HoverState.Border2}" BorderBrush="{StaticResource FormulaBarItem.HoverState.Border1}" BorderThickness="1,0,1,0" Opacity="0">
                            <Border Background="{StaticResource FormulaBarItem.HoverState.Border3}" Margin="1" />
                        </Border>
                        <Border x:Name="PressedState" Background="{StaticResource FormulaBarItem.PressedState.Border2}" BorderBrush="{StaticResource FormulaBarItem.PressedState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
                        <Grid Margin="2">
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="20" MinHeight="20">
                        <Border x:Name="HoverState" Background="{StaticResource FormulaBarItem.HoverState.Border2}" BorderBrush="{StaticResource FormulaBarItem.HoverState.Border1}" BorderThickness="1,0,1,0" Opacity="0">
                            <Border Background="{StaticResource FormulaBarItem.HoverState.Border3}" Margin="1" />
                        </Border>
                        <Border x:Name="PressedState" Background="{StaticResource FormulaBarItem.PressedState.Border2}" BorderBrush="{StaticResource FormulaBarItem.PressedState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
                        <Grid Margin="2">
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v14.1;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#FFD4D7DB" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,0,0" Height="4">
                        <Border BorderBrush="#BFFFFFFF" BorderThickness="1,1,0,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#FFFFFFFF" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,0,1" Width="22" Height="22">
                        <Grid Margin="4,-1,-1,-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="12" />
                            </Grid.ColumnDefinitions>
                            <Border Background="{StaticResource TabPanel.BorderBrush}" CornerRadius="64,0,0,64" Grid.Column="0">
                                <Border Background="{StaticResource Header.Background}" CornerRadius="64,0,0,64" Margin="1,1,0,1" />
                            </Border>
                            <Border Background="{StaticResource TabPanel.BorderBrush}" Grid.Column="1">
                                <Border Background="{StaticResource Header.Background}" Margin="0,1,0,1" />
                            </Border>
                            <Border x:Name="Glyph" Width="8" Height="8" CornerRadius="16" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#7F4C535C" Offset="0" />
                                        <GradientStop Color="#BFFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:FormulaBarEditor}">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border x:Name="focus" Opacity="0" BorderThickness="0" />
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" IsTabStop="False" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--HeaderControl-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeadersControlTemplate}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Border>
            <dxspsi:HeadersPanel LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}" Orientation="{TemplateBinding Orientation}" />
        </Border>
    </ControlTemplate>
    
    <!-- Header Item -->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HorizontalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="1,0,0,1" Margin="-1,0,0,-1">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border> 
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsMouseOver}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsMouseOver}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsSelected}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=VerticalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="0,1,1,0" Margin="0,-1,-1,0">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border> 
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsSelected}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--TabSelector-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root">
            <Grid Margin="0,1,0,-1">
                <Grid x:Name="UnselectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="HoverState" Opacity="0">
                    <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="SelectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Background="{StaticResource TabSelectorItem.SelectedState.Border1}" Padding="0,0,1,0" Margin="0,-1,0,0">
                        <Border Background="{StaticResource TabSelectorItem.SelectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.SelectedState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
            </Grid>
            <TextBlock Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" Focusable="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root">
            <Grid.Resources>
                <SolidColorBrush x:Key="UnselectedStateBorderBrush1" Color="Red" />
                <SolidColorBrush x:Key="UnselectedStateBorderBrush2" Color="Red" />
                <SolidColorBrush x:Key="UnselectedStateBrush" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" />

                <SolidColorBrush x:Key="SelectedStateBorderBrush1" Color="Green" />
                <SolidColorBrush x:Key="SelectedStateBorderBrush2" Color="Green" />
                <LinearGradientBrush x:Key="SelectedStateBrush" StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="White" Offset="0.4" />
                    <GradientStop Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" Offset="1" />
                </LinearGradientBrush>

                <SolidColorBrush x:Key="HoveredStateBorderBrush1" Color="Green" />
                <SolidColorBrush x:Key="HoveredStateBorderBrush2" Color="Green" />
                <SolidColorBrush x:Key="HoveredStateBrush" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" />
            </Grid.Resources>
            <Grid Margin="0,1,0,-1">
                <Grid x:Name="UnselectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource UnselectedStateBorderBrush1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource UnselectedStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource UnselectedStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="SelectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Background="{StaticResource SelectedStateBorderBrush1}" Padding="0,0,1,0" Margin="0,-1,0,0">
                        <Border Background="{StaticResource SelectedStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource SelectedStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="HoveredState" Opacity="0" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource HoveredStateBorderBrush1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource HoveredStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource HoveredStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
            </Grid>
            <TextBlock Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" Focusable="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HoveredState" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Border>
            <Grid x:Name="PART_RootContainer">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource TabPanel.BorderBrush}" Padding="0,0,1,0">
                    <Grid x:Name="PART_NavButtonContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_FirstButton" Focusable="False" Grid.Column="0" Width="20" Command="{Binding FirstTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Width="9" Height="8" Margin="0,1,0,-1" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Width="9" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_PrevButton" Focusable="False" Grid.Column="1" Width="20" Command="{Binding PrevTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Width="4" Height="8" Margin="0,1,0,-1" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Width="4" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_NextButton" Focusable="False" Grid.Column="2" Width="20" Command="{Binding NextTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Width="4" Height="8" Margin="0,1,0,-1" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Width="4" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_LastButton" Focusable="False" Grid.Column="3" Width="20" Command="{Binding LastTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Width="9" Height="8" Margin="0,1,0,-1" />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Width="9" Height="8" />
                            </Grid>
                        </Button>
                    </Grid>
                </Border>
                <dxspsi:TabSelectorPanel Grid.Column="1" Grid.ColumnSpan="2" AddButtonTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}}" TabSelectorItemDefaultTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}}" TabSelectorItemColoredTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}}" />
            </Grid>
        </Border>
    </ControlTemplate>
    
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Background="{StaticResource NavButton.Background}" Margin="0,1,0,0">
                        <Grid Margin="1">
                            <Border x:Name="HoverState" Background="{StaticResource NavButton.HoverState.Border2}" BorderBrush="{StaticResource NavButton.HoverState.Border1}" BorderThickness="1" Opacity="0">
                                <Border Background="{StaticResource NavButton.HoverState.Border3}" Margin="1" />
                            </Border>
                            <Border x:Name="PressedState" Background="{StaticResource NavButton.PressedState.Border2}" BorderBrush="{StaticResource NavButton.PressedState.Border1}" BorderThickness="1" Opacity="0">
                                <Border Background="{StaticResource NavButton.PressedState.Border3}" Margin="1" />
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" MinHeight="16" Margin="0,1,0,0">
                        <Grid x:Name="DefaultState">
                            <Border Background="{StaticResource AddButton.DefaultState.Border1}" Padding="0,0,1,0">
                                <Border Background="{StaticResource AddButton.DefaultState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.DefaultState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="HoverState" Opacity="0">
                            <Border Background="{StaticResource AddButton.HoverState.Border1}" Padding="0,0,1,0">
                                <Border Background="{StaticResource AddButton.HoverState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.HoverState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="PressedState" Opacity="0">
                            <Border Background="{StaticResource AddButton.PressedState.Border1}" Padding="0,0,1,0">
                                <Border Background="{StaticResource AddButton.PressedState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.PressedState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid>
                            <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Width="8" Height="8" Margin="0,1,0,-1" />
                            <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Width="8" Height="8" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}">
        <Button Focusable="False" Content="+" Width="32" Command="{Binding}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}}" />
    </DataTemplate>

    <!--Spreadsheet-->
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorPanelStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource TabPanel.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabPanel.BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BottomRightCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ScrollBar.Corner.Background}" />
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetSelectionControlStyle}" TargetType="{x:Type dxspsi:WorksheetSelectionControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SelectionBorderBrush" Value="{StaticResource Selection.BorderBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Background}" />
    </Style>
    
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TopLeftCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Header.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Header.BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Margin" Value="0,0,-1,-1" />
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=ResizeThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" Background="Transparent">
                        <Border Background="{StaticResource TabPanel.Background}" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,1,0" />
                        <Grid Width="2" Height="14" Cursor="SizeWE">
                            <Path x:Name="Path" Stretch="Fill" Fill="{StaticResource ResizeThumb.GlyphBrush}" Data="F1 M 538,357L 540,357L 540,359L 538,359L 538,357 Z M 538,361L 540,361L 540,363L 538,363L 538,361 Z M 538,365L 540,365L 540,367L 538,367L 538,365 Z M 538,369L 540,369L 540,371L 538,371L 538,369 Z " />
                            <Path Stretch="Fill" Fill="#3FFFFFFF" Margin="1,1,-1,-1" Data="F1 M 539,358L 541,358L 541,360L 539,360L 539,358 Z M 539,362L 541,362L 541,364L 539,364L 539,362 Z M 539,366L 541,366L 541,368L 539,368L 539,366 Z M 539,370L 541,370L 541,372L 539,372L 539,370 Z " />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource ResizeThumb.GlyphBrush.IsMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=Template}" TargetType="{x:Type dxsps:SpreadsheetControl}">
        <Border x:Name="rootBorder" BorderThickness="1" BorderBrush="{StaticResource Spreadsheet.BorderBrush}" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
            <dxspsi:SpreadsheetViewControl Focusable="False" IsTabStop="False" ShowTabSelector="{TemplateBinding ShowTabSelector}" />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type dxspsi:XpfCellInplaceEditor}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" IsTabStop="False" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>