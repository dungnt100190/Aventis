<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dx:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="{x:Type ProgressBar}">
        <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation RepeatBehavior="Forever" Duration="00:00:2" To="360" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="borderLoading" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="128">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF9AA4AF" Offset="0" />
                        <GradientStop Color="#FF68738F" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border CornerRadius="128" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF8F8F9" Offset="0" />
                            <GradientStop Color="#FFEAEDEF" Offset="1" />
                            <GradientStop Color="#FFD9DCE3" Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid Margin="1">
                        <Border CornerRadius="128">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFEAECF0" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#FFB0B8C6" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderLoading" CornerRadius="128">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" />
                                            <SkewTransform CenterY="0.5" CenterX="0.5" />
                                            <RotateTransform CenterY="0.5" CenterX="0.5" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#BFFFFFFF" Offset="0" />
                                    <GradientStop Offset="0.5" />
                                    <GradientStop Color="Transparent" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="128" Margin="{TemplateBinding Padding}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF8F8F9" Offset="0" />
                                    <GradientStop Color="#FFEAEDEF" Offset="1" />
                                    <GradientStop Color="#FFD9DCE3" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="128" Margin="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF9AA4AF" Offset="1" />
                                        <GradientStop Color="#FF68738F" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border CornerRadius="128" Background="{TemplateBinding Background}" Margin="1" />
                            </Border>
                        </Border>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ColumnWaitIndicator}" TargetType="{x:Type dx:ColumnWaitIndicator}">
        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible, FallbackValue=true, TargetNullValue=true}" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="#FFF0F1F2" />
        <Setter Property="Margin" Value="25" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="MinHeight" Value="8" />
        <Setter Property="Template" Value="{StaticResource DefaultWaitIndicator}" />
    </Style>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border CornerRadius="8" Visibility="{Binding ShowShadow, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=dx:WaitIndicator}}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#0C000000" Offset="0" />
                        <GradientStop Color="#19000000" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border BorderThickness="0" CornerRadius="8" Background="#FF6F7074" Margin="1">
                <Border BorderThickness="0" Margin="1" Background="#FFF0F1F2" CornerRadius="7">
                    <ContentPresenter />
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid x:Name="root" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding ContentPadding}" Opacity="0.9" Visibility="Collapsed">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" From="1" To="0" BeginTime="0:0:0.1" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:WaitIndicatorContainer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar" Width="31" Template="{StaticResource DefaultWaitIndicator}" Background="#FFF0F1F2" IsIndeterminate="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="31" Padding="4" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="12,12,8,12" MinWidth="8" MinHeight="8" />
                    <ContentPresenter Grid.Column="1" Content="{TemplateBinding ActualContent}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" />
                </Grid>
            </dx:WaitIndicatorContainer>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}">
        <TextBlock Text="{Binding}" VerticalAlignment="Center" TextWrapping="Wrap" />
    </DataTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicatorContainer}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}}" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicator}" TargetType="{x:Type dx:WaitIndicator}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}}" />
        <Setter Property="Padding" Value="0,0,12,0" />
        <Setter Property="ContentPadding" Value="25" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}}" />
    </Style>
</ResourceDictionary>