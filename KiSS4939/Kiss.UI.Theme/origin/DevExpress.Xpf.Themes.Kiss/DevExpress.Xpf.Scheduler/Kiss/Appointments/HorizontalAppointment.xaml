<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler" xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys" xmlns:dxschcore="clr-namespace:DevExpress.XtraScheduler;assembly=DevExpress.XtraScheduler.v14.1.Core" xmlns:dxschd="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dxschd:ToolTipVisibilityToVisibilityConverter x:Key="ToolTipVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxschd:ColorResourcesConverter x:Key="colorResourcesConverter" />
    <dxschd:BrushResourcesConverter x:Key="brushResourcesConverter" />

    <DataTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=AppointmentToolTipContentTemplate}">
        <TextBlock Text="{Binding ToolTipText}" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=HorizontalAppointmentTemplate}" TargetType="{x:Type dxschd:VisualHorizontalAppointmentControl}">
        <dxschd:AppointmentColorConvertControl x:Name="clrConvCtrl" SnapsToDevicePixels="True" ControlColor="{Binding ViewInfo.LabelColor, RelativeSource={RelativeSource TemplatedParent} }">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DraggedStates">
                    <VisualState x:Name="NotDragged">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AppointmentRoundedBorder" To="1" Duration="0:0:0.15" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Dragged">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AppointmentRoundedBorder" To="0.2" Duration="0:0:0.15" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dxschd:AppointmentColorConvertControl.BaseColors>
                <dxschd:ColorCollection>
                    <dxschd:ColorDefinition Value="#FFFAFAFA" Name="ColorDefinition_AppointmentBackgroundGradientStart" />
                    <dxschd:ColorDefinition Value="#FFF0F0F0" Name="ColorDefinition_AppointmentBackgroundGradientEnd" />
                </dxschd:ColorCollection>
            </dxschd:AppointmentColorConvertControl.BaseColors>
            <dxschd:AppointmentColorConvertControl.BaseBrushColors>
                <dxschd:ColorCollection>
                    <dxschd:ColorDefinition Value="#FFC0C0C0" Name="ColorDefinition_MainBorderBrush" />
                </dxschd:ColorCollection>
            </dxschd:AppointmentColorConvertControl.BaseBrushColors>
            <Grid x:Name="PART_ToolTipContainer" dxsch:SchedulerControl.HitTestType="AppointmentContent" dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}">
                <Grid.Resources>
                    <dxschd:BoolToThicknessConverter x:Key="selectionBoolToThicknessConverter" ThicknessWhenTrue="2" ThicknessWhenFalse="1" />
                </Grid.Resources>
                <!--AppointmentToolTip-->
                <ToolTipService.ToolTip>
                    <ToolTip Content="{TemplateBinding ViewInfo}" ContentTemplate="{Binding ViewInfo.View.AppointmentToolTipContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ViewInfo.View.AppointmentToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToolTipVisibilityConverter}}">
                    </ToolTip>
                </ToolTipService.ToolTip>
                
                <dxschd:AppointmentRoundedBorder x:Name="AppointmentRoundedBorder" ViewInfo="{TemplateBinding ViewInfo}" BorderBrush="{Binding ElementName=clrConvCtrl, Path=Container, Converter={StaticResource brushResourcesConverter}, ConverterParameter=ColorDefinition_MainBorderBrush}" Padding="0" DefaultCornerRadius="3" DefaultRoundBorderThickness="{Binding ViewInfo.Selected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource selectionBoolToThicknessConverter}}">
                    <Grid>
                        <Grid.Resources>
                            <dxschd:AppointmentStatusDisplayTypeToDoubleConverter x:Key="StatusDisplayTypeToDoubleConverter" DefaultValue="5" />
                            <dxschd:AppointmentStatusDisplayTypeToVisibilityConverter x:Key="AppointmentStatusDisplayTypeToVisibilityConverter" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="ContentContainerStatusRow" Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="Status" BorderBrush="{Binding ElementName=clrConvCtrl, Path=Container, Converter={StaticResource brushResourcesConverter}, ConverterParameter=ColorDefinition_MainBorderBrush}" BorderThickness="0,0,0,1" Background="White" Visibility="{Binding StatusDisplayType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AppointmentStatusDisplayTypeToVisibilityConverter}}" Height="{Binding StatusDisplayType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StatusDisplayTypeToDoubleConverter}}">
                            <dxsch:AppointmentStatusControl ViewInfo="{TemplateBinding ViewInfo}" Orientation="Horizontal" Background="White">
                                <Border Background="{Binding ViewInfo.Status.Brush, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding ElementName=clrConvCtrl, Path=Container, Converter={StaticResource brushResourcesConverter}, ConverterParameter=ColorDefinition_MainBorderBrush}" BorderThickness="1,0,1,0" />
                            </dxsch:AppointmentStatusControl>
                        </Border>
                        <Border x:Name="border1" Grid.Row="1">
                            <dxschd:LinearGradientBrushSetter.Info>
                                <dxschd:LinearGradientBrushInfo TargetProperty="Background" EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop dxschd:LinearGradientBrushInfo.GradientStopColorId="ColorDefinition_AppointmentBackgroundGradientStart" Offset="0" />
                                    <GradientStop dxschd:LinearGradientBrushInfo.GradientStopColorId="ColorDefinition_AppointmentBackgroundGradientEnd" Offset="1" />
                                </dxschd:LinearGradientBrushInfo>
                            </dxschd:LinearGradientBrushSetter.Info>
                        </Border>
                        <ContentPresenter Grid.Row="1" x:Name="PART_Content" Margin="6,3,6,3" Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </dxschd:AppointmentRoundedBorder>
                <!--ResizingHitTest-->
                <Rectangle Fill="Transparent" Width="5" HorizontalAlignment="Left" Visibility="{Binding ViewInfo.CanResizeStart, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" IsHitTestVisible="True" dxsch:SchedulerControl.HitTestType="AppointmentResizingLeftEdge" dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}" Cursor="SizeWE">
                </Rectangle>
                <Rectangle Fill="Transparent" Width="5" HorizontalAlignment="Right" IsHitTestVisible="True" Visibility="{Binding Path=ViewInfo.CanResizeEnd, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" dxsch:SchedulerControl.HitTestType="AppointmentResizingRightEdge" dxsch:SchedulerControl.SelectableIntervalViewInfo="{TemplateBinding ViewInfo}" Cursor="SizeWE">
                </Rectangle>
            </Grid>
        </dxschd:AppointmentColorConvertControl>
       
    </ControlTemplate>

</ResourceDictionary>
