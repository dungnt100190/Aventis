<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <LinearGradientBrush x:Key="hottrack-item" EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
        <GradientStop Color="#FF6488BC" Offset="0" />
        <GradientStop Color="#FF759BD2" Offset="1" />
    </LinearGradientBrush>

	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
		<Grid Background="Transparent">
			<Border x:Name="hover" Visibility="Hidden" BorderBrush="#FFFFBD69">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFFFFFDC" Offset="0" />
						<GradientStop Color="#FFF7C15E" Offset="1" />
					</LinearGradientBrush>
				</Border.Background>
			</Border>
			<Border x:Name="pressed" Visibility="Hidden" BorderBrush="#FFFFBD69">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFE87F08" Offset="0" />
						<GradientStop Color="#FFF7D879" Offset="1" />
					</LinearGradientBrush>
				</Border.Background>
			</Border>
			<Viewbox HorizontalAlignment="Center" Margin="1,2,1,1" x:Name="glyph_open" VerticalAlignment="Center" Width="14" Height="11" Visibility="Hidden">
				<Canvas Width="14.0001" Height="11.0002">
                    <Path Fill="#5AFFFFFF" Stretch="Fill" Width="14" Height="7" Data="F1 M 0.000244141,4.00018L 7,11.0002L 6.99976,11.0002L 14,4.00018L 10,4.00018L 6.99976,7.00018L 7.00012,7.00024L 4.00012,4.00024L 0.000244141,4.00018 Z " Canvas.Left="0" Canvas.Top="4" />
                    <Path Fill="#FF5B5C60" Stretch="Fill" x:Name="path" Width="10" Height="5" Data="F1 M 6.99963,9.99988L 6.99951,9.99976L 11.9996,4.99976L 10,5L 6.99951,7.99988L 6.99976,7.99994L 4.00012,5.00012L 2,5L 6.99963,9.99988 Z " Canvas.Left="2" Canvas.Top="5" />
                    <Path Fill="#5AFFFFFF" Stretch="Fill" Width="14" Height="7" Data="F1 M 0,0.00012207L 7,6.99988L 6.99976,6.99988L 14,0L 10,0L 6.99976,2.99988L 7.00012,2.99994L 4,0L 0,0.00012207 Z " Canvas.Left="0" Canvas.Top="0" />
                    <Path Fill="#FF5B5C60" Stretch="Fill" x:Name="path1" Width="10" Height="5" Data="F1 M 6.99963,5.99988L 6.99951,5.99976L 11.9996,0.999939L 10,1.00024L 6.99951,3.99988L 6.99976,3.99994L 4,1.00024L 1.99988,1.00012L 6.99963,5.99988 Z " Canvas.Left="2" Canvas.Top="1" />
				</Canvas>
			</Viewbox>
			<Viewbox HorizontalAlignment="Center" Margin="1,1,1,2" x:Name="glyph_close" VerticalAlignment="Center" Width="14" Height="11">
				<Canvas Width="13.9999" Height="11.0001">
                    <Path Fill="#5AFFFFFF" Stretch="Fill" Width="14" Height="7" Data="F1 M 13.9999,7L 7,0L 7.00024,0L 0,7L 4,7L 7.00024,4L 6.99988,3.99988L 9.99988,6.99988L 13.9999,7 Z " Canvas.Left="0" Canvas.Top="0" />
                    <Path Fill="#FF5B5C60" Stretch="Fill" x:Name="path2" Width="10" Height="5" Data="F1 M 7.00037,1.00031L 7.00049,1.00037L 2.00037,6.00037L 4,6.00012L 7.00049,3.00031L 7.00024,3.00024L 9.99988,6.00006L 12,6.00012L 7.00037,1.00031 Z " Canvas.Left="2" Canvas.Top="1" />
                    <Path Fill="#5AFFFFFF" Stretch="Fill" Width="14" Height="7" Data="F1 M 14,11.0001L 7,4.00031L 7.00024,4.00031L 0,11.0001L 4,11.0001L 7.00024,8.00031L 6.99988,8.00024L 10,11.0001L 14,11.0001 Z " Canvas.Left="0" Canvas.Top="4" />
                    <Path Fill="#FF5B5C60" Stretch="Fill" x:Name="path3" Width="10" Height="5" Data="F1 M 7.00037,5.00031L 7.00049,5.00037L 2.00037,10.0002L 4,9.99988L 7.00049,7.00031L 7.00024,7.00024L 10,9.99988L 12.0002,10.0001L 7.00037,5.00031 Z " Canvas.Left="2" Canvas.Top="5" />
				</Canvas>
			</Viewbox>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Fill" TargetName="path" Value="#FF313431" />
				<Setter Property="Fill" TargetName="path1" Value="#FF313431" />
				<Setter Property="Fill" TargetName="path2" Value="#FF313431" />
				<Setter Property="Fill" TargetName="path3" Value="#FF313431" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Fill" TargetName="path" Value="#FF000000" />
				<Setter Property="Fill" TargetName="path1" Value="#FF000000" />
				<Setter Property="Fill" TargetName="path2" Value="#FF000000" />
				<Setter Property="Fill" TargetName="path3" Value="#FF000000" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter Property="Visibility" TargetName="glyph_close" Value="Hidden" />
				<Setter Property="Visibility" TargetName="glyph_open" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    
    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
		</Style.Triggers>
	</Style>
    
	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
		<Grid>
			<Border Margin="5,5,0,0" x:Name="shadow" Opacity="0.15" Background="#FF000000" CornerRadius="2" />
			<Border Margin="3" x:Name="border" Grid.RowSpan="1" Padding="1" Background="#FF6F7074">
				<ContentPresenter />
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}"> 
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="TextBlock.Foreground" Value="#FF4c535c" />
	</Style>

	<Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,0,3,0" />
	</Style>
	
	<Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
		<Setter Property="Margin" Value="11" />
	</Style>

	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
		<ContentPresenter Margin="11,0" />
	</ControlTemplate>
	
	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
		<ContentPresenter />
	</ControlTemplate>
	
	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
		<Border x:Name="border" Background="#FFF1F2F4" BorderThickness="0,1,0,0">
			<ContentPresenter />
		</Border>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
			<Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
			<DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Background="White">
            <Border BorderBrush="{x:Null}" x:Name="border" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE7EAF6" Offset="0" />
                        <GradientStop Color="#FFD3D7E1" Offset="1" />
                        <GradientStop Color="#FFD8DCE6" Offset="0.3" />
                        <GradientStop Color="#FFC5C7D1" Offset="0.3" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
				<Setter Property="Background" TargetName="border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFFFD39F" Offset="0" />
							<GradientStop Color="#FFFEDE77" Offset="1" />
							<GradientStop Color="#FFFFBE73" Offset="0.3" />
							<GradientStop Color="#FFFFAB3F" Offset="0.3" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
				<Setter Property="Background" TargetName="border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFFFEFBE" Offset="0" />
							<GradientStop Color="#FFFFE9D0" Offset="1" />
							<GradientStop Color="#FFFFE1BE" Offset="0.3" />
							<GradientStop Color="#FFFFD9A7" Offset="0.3" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="dxg:FadeSelectionHelper.Opacity" TargetName="border" Value="1" />
            </DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
		<ContentControl x:Name="card" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
                            </ContentControl>
                            <ContentControl Grid.Column="1" Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse" Value="True" TargetName="gridCardPanel" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>