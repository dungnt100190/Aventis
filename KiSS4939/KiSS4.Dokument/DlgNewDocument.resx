<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryXDocTemplate.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>16, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>173, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACc
        CgAAAk1TRnQBSQFMAgEBBAEAAdwBAAHcAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8AGQACBwLv
        CPcDAAMHAu8I9yMAAc8L/wH3AgAB7Qz/AfcSAA2SAW0DrgHPC/8B9wFPAUkB7QX/BPYD/wH3EQAOMAFt
        AYsBCQG1Ac8L/wH3AUkBmAEIBP8C9gGYAigB9AL/AfcDAAn/BQABMAHDAZoBoAGaAaABmgGgAZoBoAOa
        ATABbQGLAQkCzwP/AQkB/wHzAbUE/wH3AUkBBwHtAf8BmAF4ApcBcgIoAnIBmAH/AfcDAAn/BQABMAHD
        A6ABmgGgAZoBoAGaAaACmgEwAW0BiwEJAYsBzwL/AfQBrQH0AfMBrQHdA/8B9wFJAQgBSQL/AQgClwFJ
        ASgEcgH/AfcDAAn/BQABMAHDBqABmgGgAZoBoAGaATABbQGLAQkBhgHPA/8BhgHPAfIBhgHPA/8B9wFJ
        AQgBSQP/AfIBUAEoAUkBCAH/AvYB/wH3AwAJ/wUAATABwwWgAZoBoAGaAaABmgGgATABbQGLAQkBhgHP
        A/8BhgG0AbUBhgG7AbUC/wH3AUkBCAFJA/8BCAIoAXIBlwGYA/8B9wMACf8FAAEwAcMIoAGaAaABmgEw
        AW0BiwEJAYYBzwH0Av8BiwHdAa0BhgH/AYsBGQH/Ae8BSQEIAUkC/wH0AigBHAHzApcBmAH0Af8B7wMA
        Cf8FAAEwAcMHoAGaAaABmgGgATABbQGuAbwBtAHPAfAB/wG0Ac8BtAHyAYsB/wG0Ac8B/wHvAU8B8AFy
        Av8BUAFPAXID/wKXAZgB/wHvAwAJ/wUAATABwwqgAZoBMAFtAa4B3QG1Ac8BvAL/ARkH/wEHAU8B8AGY
        DP8BBwMACf8FAAEwC8MBoAEwAW0BzwHwAbUBzwEHCv8BBwFPAQgBmAz/AQcDAAb/CAAOMAEAAbUBuwEZ
        Ac8Buwr/AQcBcgGYAfMJmAH0AU8FAAb/AQAB/wcAATABkgLDAqABMAgAAa4BvAEZCbUBtAMAAU8BCAH0
        AQgHmAH0AU8FAAb/CgAFMAoAAa4BuwnzAbQEAAFPAZgB8Qj0AXElAAG1AbQDzwGuBM8BtAUAAZcJTwFx
        EgABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EAAv8B8AEAAeABAAT/AeABAAHA
        AQAC/wHABQABwAEHAYAFAAHAAQcBgAUAAcABBwGABQABwAEHAYAFAAHAAQcBgAUAAcABBwGABQABwAEH
        AYAFAAHAAQcBgAUAAcABBwGABQABwAEHAYABAQMAAQMBwAEPAcABPwGAAQMBgAEDAcABHwHgAX8BwAED
        AcABAwHAAT8C/wHgAQMB4AEDAv8L
</value>
  </data>
  <data name="qryXDocTemplate.SelectStatement" xml:space="preserve">
    <value>-- declare vars
DECLARE @DocContextName VARCHAR(255);
DECLARE @XProfileID INT;
DECLARE @DocTypeFilter INT;
DECLARE @UserID INT;
DECLARE @LanguageCode INT;

-- set vars
SET @DocContextName  = {0};
SET @XProfileID      = {1};
SET @DocTypeFilter   = {2};
SET @UserID          = {3};
SET @LanguageCode    = {4};

-- get data
SELECT DISTINCT
       CDO.*,
       ProfileTags = dbo.fnXProfileTagsTextListe(DOC.XProfileID, @LanguageCode),
       DOC.DocTemplateName, 
       DOC.DateCreation, 
       DOC.DateLastSave, 
       DOC.DocFormatCode, 
       DOC.FileExtension,
       ItemName = ISNULL(CDO.FolderName, DOC.DocTemplateName),
       IconID   = CASE 
                    WHEN CDO.FolderName IS NULL THEN DOC.DocFormatCode 
                    ELSE 0 
                  END
FROM dbo.XDocContext CON WITH (READUNCOMMITTED)
  INNER JOIN dbo.XDocContext_Template  CDO WITH (READUNCOMMITTED) ON CDO.DocContextID  = CON.DocContextID
  LEFT  JOIN dbo.XOrgUnit_XDocTemplate ODO WITH (READUNCOMMITTED) ON ODO.DocTemplateID = CDO.DocTemplateID  
  LEFT  JOIN dbo.XUser_XDocTemplate    UDO WITH (READUNCOMMITTED) ON UDO.DocTemplateID = CDO.DocTemplateID 
  LEFT  JOIN dbo.XDocTemplate          DOC WITH (READUNCOMMITTED) ON DOC.DocTemplateID = CDO.DocTemplateID
  LEFT  JOIN dbo.XProfile_XProfileTag  PT1 WITH (READUNCOMMITTED) ON PT1.XProfileID = DOC.XProfileID
  LEFT  JOIN dbo.XProfile_XProfileTag  PT2 WITH (READUNCOMMITTED) ON PT2.XProfileID = @XProfileID

WHERE CON.DocContextName = @DocContextName 
  AND (-- Profilfilter
       @XProfileID &lt; 1 OR 
       @XProfileID IS NULL OR                            
       PT1.XProfileTagID = PT2.XProfileTagID OR
       CDO.FolderName IS NOT NULL)          -- allow folders everytime
  
  AND (CDO.FolderName IS NOT NULL OR        -- allow folders everytime
       @DocTypeFilter = 0 OR                -- if showing all, show all
       @DocTypeFilter = DOC.DocFormatCode)  -- otherwise just show the matching docformatcode
       AND (-- Berechtigungen
            ODO.OrgUnitID IN (SELECT OrgUnitID 
                              FROM dbo.fnXOrgUnitsOfUser(@UserID)) OR 
            UDO.UserID = @UserID OR 
            (ODO.OrgUnitID IS NULL AND UDO.UserID IS NULL))       
ORDER BY ParentID, ParentPosition;</value>
  </data>
</root>