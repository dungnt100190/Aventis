<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="qryBaPerson.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>43, 14</value>
  </metadata>
  <metadata name="qryFaLeistung.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>163, 14</value>
  </metadata>
  <data name="qryFaLeistung.SelectStatement" xml:space="preserve">
    <value>SELECT FLE.*,
  ARC.CheckIn,
  Person  = PRS.NameVorname, 
  SAR     = USR.LastName + IsNull(', ' + FirstName,''), 
  USR.Phone,
  USR.EMail,
  Abteilung  = ORG.ItemName,
  IconID     = CASE
                 WHEN ARC.FaLeistungID IS NOT NULL  THEN FLE.ModulID * 100 + 1003  -- Archiviert
                 WHEN FLE.DatumBis IS NOT NULL      THEN FLE.ModulID * 100 + 1002  -- Abgeschlossen
                 ELSE FLE.ModulID * 100 + 1001
               END
FROM dbo.FaLeistung                FLE WITH (READUNCOMMITTED)
  INNER JOIN dbo.vwPerson          PRS ON PRS.BaPersonID = FLE.BaPersonID 
  INNER JOIN dbo.XUser             USR WITH (READUNCOMMITTED) ON USR.UserID = FLE.UserID
  LEFT  JOIN dbo.XOrgUnit_User     OUU WITH (READUNCOMMITTED) ON OUU.UserID = USR.UserID
                                  AND OUU.OrgUnitMemberCode = 2
  LEFT  JOIN dbo.XOrgUnit          ORG WITH (READUNCOMMITTED) ON ORG.OrgUnitID = OUU.OrgUnitID
  LEFT  JOIN dbo.FaLeistungArchiv  ARC WITH (READUNCOMMITTED) ON ARC.FaLeistungID = FLE.FaLeistungID
                                  AND ARC.CheckOut is null
WHERE FLE.BaPersonID = {0}
ORDER BY FLE.DatumVon DESC;</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edtSterbedatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtGeburtsdatum.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryFaLeistungArchiv.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>440, 14</value>
  </metadata>
  <data name="qryFaLeistungArchiv.SelectStatement" xml:space="preserve">
    <value>SELECT FAA.*,
  Standort         = ARC.Name,
  CheckInUserName  = USR1.Lastname + IsNull(', ' + USR1.Firstname, ''),
  CheckOutUserName = USR2.Lastname + IsNull(', ' + USR2.Firstname, '')
FROM dbo.FaLeistungArchiv  FAA WITH (READUNCOMMITTED)
  INNER JOIN dbo.XUser     USR1 WITH (READUNCOMMITTED) ON USR1.UserID = FAA.CheckInUserID
  LEFT  JOIN dbo.XUser     USR2 WITH (READUNCOMMITTED) ON USR2.UserID = FAA.CheckOutUserID
  LEFT  JOIN dbo.XArchive  ARC  WITH (READUNCOMMITTED) ON ARC.ArchiveID = FAA.ArchiveID
WHERE FAA.FaLeistungID = {0}
ORDER BY CheckIn</value>
  </data>
  <data name="edtCheckOut.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="edtCheckIn.Properties.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAYAAAAiYZ4HAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABRSURBVDhPY2AAAmNj4//EYJBaMAApRqbhErjkiDEdZiiK
        Dcgmo7NxamhoYAA7DwSQ2Vg1gBTAFKHT1NGA7AyibBhuGoiKB5Jimpj0hM9AnHIA7aiPJlUTWpwAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="qryZustaendigkeit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>290, 14</value>
  </metadata>
  <data name="qryZustaendigkeit.SelectStatement" xml:space="preserve">
    <value>SELECT
  IconID    = CASE
                WHEN TMP.ArcFaLeistungID IS NOT NULL THEN TMP.ModulID * 100 + 1003  -- Archiviert
                WHEN TMP.LeiDatumBis IS NOT NULL  THEN TMP.ModulID * 100 + 1002  -- Abgeschlossen
                ELSE TMP.ModulID * 100 + 1001
              END,
  SAR       = TMP.SAR,
  DatumVon  = TMP.DatumVon,
  DatumBis  = TMP.DatumBis,
  IsHistory = TMP.IsHistory
FROM (SELECT -- History
        FaLeistungID    = LEI.FaLeistungID,
        ArcFaLeistungID = ARC.FaLeistungID,
        ModulID         = LEI.ModulID,
        SAR             = USR.NameVorname,
        DatumVon        = LUH.DatumVon,
        DatumBis        = LUH.DatumBis,
        LeiDatumBis     = LEI.DatumBis,
        IsHistory       = 1
      FROM dbo.FaLeistungUserHist       LUH WITH(READUNCOMMITTED)
        INNER JOIN dbo.vwUser           USR WITH(READUNCOMMITTED) ON USR.UserID = LUH.UserID
        INNER JOIN dbo.FaLeistung       LEI WITH(READUNCOMMITTED) ON LEI.FaLeistungID = LUH.FaLeistungID
        LEFT  JOIN dbo.FaLeistungArchiv ARC WITH(READUNCOMMITTED) ON ARC.FaLeistungID = LEI.FaLeistungID
                                                                 AND ARC.CheckOut IS NULL
      WHERE LEI.FaLeistungID = {0}

      UNION ALL

      SELECT -- Aktueller Benutzer
        FaLeistungID    = LEI.FaLeistungID,
        ArcFaLeistungID = ARC.FaLeistungID,
        ModulID         = LEI.ModulID,
        SAR             = USR.NameVorname,
        DatumVon        = ISNULL(DATEADD(DAY, 1, LUH.DatumBis), LEI.DatumVon),
        DatumBis        = NULL,
        LeiDatumBis     = LEI.DatumBis,
        IsHistory       = 0
      FROM dbo.FaLeistung               LEI WITH(READUNCOMMITTED)
        INNER JOIN dbo.vwUser           USR WITH(READUNCOMMITTED) ON USR.UserID = LEI.UserID
        LEFT  JOIN dbo.FaLeistungArchiv ARC WITH(READUNCOMMITTED) ON ARC.FaLeistungID = LEI.FaLeistungID
                                                                 AND ARC.CheckOut IS NULL
        OUTER APPLY (SELECT TOP 1
                       DatumBis
                     FROM dbo.FaLeistungUserHist WITH(READUNCOMMITTED)
                     WHERE FaLeistungID = LEI.FaLeistungID
                     ORDER BY DatumVon DESC, DatumBis DESC) LUH
      WHERE LEI.FaLeistungID = {0}) TMP
ORDER BY DatumVon DESC, DatumBis DESC;
</value>
  </data>
  <metadata name="qryGastrecht.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>594, 17</value>
  </metadata>
  <data name="qryGastrecht.SelectStatement" xml:space="preserve">
    <value>SELECT
  IconID       = CASE
                   WHEN TMP.ArcFaLeistungID IS NOT NULL THEN TMP.ModulID * 100 + 1003  -- Archiviert
                   WHEN TMP.LeiDatumBis IS NOT NULL  THEN TMP.ModulID * 100 + 1002  -- Abgeschlossen
                   ELSE TMP.ModulID * 100 + 1001
                 END,
  SAR          = TMP.SAR,
  DatumVon     = TMP.DatumVon,
  DatumBis     = TMP.DatumBis,
  DarfMutieren = TMP.DarfMutieren
FROM (SELECT 
        FaLeistungID    = LEI.FaLeistungID,
        ArcFaLeistungID = ARC.FaLeistungID,
        ModulID         = LEI.ModulID,
        SAR             = USR.NameVorname,
        DatumVon        = LEZ.DatumVon,
        DatumBis        = LEZ.Datumbis,
        DarfMutieren    = LEZ.DarfMutieren,
        LeiDatumBis     = LEI.DatumBis
      FROM dbo.FaLeistung                LEI WITH(READUNCOMMITTED)
        INNER JOIN dbo.FaLeistungZugriff LEZ WITH(READUNCOMMITTED) ON LEI.FaLeistungID = LEZ.FaLeistungID
        INNER JOIN dbo.vwUser            USR WITH(READUNCOMMITTED) ON USR.UserID = LEZ.UserID
        LEFT  JOIN dbo.FaLeistungArchiv  ARC WITH(READUNCOMMITTED) ON ARC.FaLeistungID = LEI.FaLeistungID
                                                                  AND ARC.CheckOut IS NULL
        
      WHERE LEI.FaLeistungID = {0} ) TMP
ORDER BY DatumVon DESC, DatumBis DESC;</value>
  </data>
</root>