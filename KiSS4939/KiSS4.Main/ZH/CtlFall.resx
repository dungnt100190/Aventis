<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgModulIcons.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA+VJREFUSEutlW9M
        k1cUxvvVZV9MtmRjEUIUKBJLh4pOJwws4h+YgEUiUQEFpELXooJoihZJC3ZB7MBCDYJOEgdk2kVR/BOI
        wixIGYGBLAMTIVnD5geSDTfDBx57jr4dpcVY401Obvvm7fM75znn3opEXq4YWTRkMhm8/NmbXydRCq1I
        6wyCvDcQiUdEdLGgLdvGQbDGxkZ+9s4gIXPaJZITkEot8PX9BRmbjqPiSAVojY2NoavrFdwr2wTx5MQY
        TE2lYHw8HFVVWxEVtQ/d3X0YGhrG1asWR1yDTqdH54MHWOn3IcpixTgRGrAwbG7W56XnUflxJZJWJUFz
        MNkBOYAXLwZQUlLCMTAwiMnJPxEZGYnSUj2J4vSOJbBWyHEsZrFnCAGCZOMICNBDEV2J2l21qBPXwRRr
        gtFo5Iynp6dht9shl8uh0RQjPHyNE6CN98HPxr04HvuRK2Bu5nGan7BWDYgjbA7PW1CceApNhibOtq3t
        NsxmM8NoT03dDbE4GGr1IawO/ASDTSfxQ0E0VF8ucgeItCJQ+CtDEK84im2lPdhSBTzs6YPFYoHJZOLM
        e3t7ERQkZlEBUJCvdIrXZoV5BrTduwGzLZshFOtyoyHfm8le07RYrd08Lf39/fD390d6+n7+HhIciF+v
        aHAx7wuQuBvgZNyn2L9Zgo6ODh69Z88nGERBq7CwEOXl5ei2dvKBo4YSgLLfuX0zZ16fu9YpbsoMwzfr
        X1tE4j3f7UZabChaW1sxOzvLovPX6OgoioqKHD3xZYCPjw/yFRksfuVIlIu4Tr4Uqq9XvOoBAZ62FKK9
        Ohe/32vAs8k/FoQ0NzezsEqlxvJlS1i8pSjGTTw/8fP/G0yA3hqHzxcOYvhCNv55dAl/D7dxM+dXIwBy
        DmS5ZU6+65MD4CIuVGAzZ+NhVTruV6SCPj+uz8F/1hr8NdSOiSe/YWZmhoPGcqnfZ26ek3h5ihjKuOXu
        h4sqINHqDAnUGz7gGb5ZmoBH1Wls3dQdPewjVjwd6YPRYGDxy+oNLrZQ5sptHsTnVkAAQ8oyEFCX5MdT
        cadMzgMwca0YP36bizMFClxUbnT3fLtk4btHqODW4a9w/agMdYpwroYgnWf3YLAhj/eavI2cfcPrWadR
        9Oj5/CuVAO1libA5emA7tw/261oMf6/iLEca8/H4spoB1ZmrXGadPFfHh7zdFU0QOoUE6jmXwcLT98/g
        386zDCOAMV3qtOb0rmAotwa+nbhQEWVMoLqsULQbdvKNSM2nEACCLV6Lz7VNANXnhOGuLoErIkBlmpQ9
        P5TwhoZ685cmgMi6G5pNoOP/3sQ9VfSutrwEnRKJJX547H0AAAAASUVORK5CYII=
</value>
  </data>
</root>