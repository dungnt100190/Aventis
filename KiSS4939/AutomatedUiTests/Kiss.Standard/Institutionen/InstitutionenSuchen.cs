///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedUiTests.Institutionen
{
    /// <summary>
    /// The InstitutionenSuchen recording.
    /// </summary>
    [TestModule("54e3c3f0-6633-46fe-966f-5eb0951ad4fb", ModuleType.Recording, 1)]
    public partial class InstitutionenSuchen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AutomatedUiTests.AutomatedUiTestsRepository repository.
        /// </summary>
        public static AutomatedUiTests.AutomatedUiTestsRepository repo = AutomatedUiTests.AutomatedUiTestsRepository.Instance;

        static InstitutionenSuchen instance = new InstitutionenSuchen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InstitutionenSuchen()
        {
            SearchInstitutionName = "";
            SearchPLZ = "";
            SearchOrt = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InstitutionenSuchen Instance
        {
            get { return instance; }
        }

#region Variables

        string _SearchInstitutionName;

        /// <summary>
        /// Gets or sets the value of variable SearchInstitutionName.
        /// </summary>
        [TestVariable("8c09788d-f9af-43da-b02a-cae77d29f098")]
        public string SearchInstitutionName
        {
            get { return _SearchInstitutionName; }
            set { _SearchInstitutionName = value; }
        }

        string _SearchPLZ;

        /// <summary>
        /// Gets or sets the value of variable SearchPLZ.
        /// </summary>
        [TestVariable("2f7fdf1c-295f-4662-b6a3-010654790138")]
        public string SearchPLZ
        {
            get { return _SearchPLZ; }
            set { _SearchPLZ = value; }
        }

        string _SearchOrt;

        /// <summary>
        /// Gets or sets the value of variable SearchOrt.
        /// </summary>
        [TestVariable("eda43a3b-d122-4cc9-9033-d25d6c2f65d4")]
        public string SearchOrt
        {
            get { return _SearchOrt; }
            set { _SearchOrt = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "4.1.4")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "4.1.4")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            SelectTabSuche();
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameX' at Center.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameXInfo, new RecordItemIndex(1));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameX.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable $SearchInstitutionName with focus on 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameX'.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameXInfo, new RecordItemIndex(2));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtNameX.PressKeys(SearchInstitutionName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZX' at Center.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZXInfo, new RecordItemIndex(3));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZX.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable $SearchPLZ with focus on 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZX'.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZXInfo, new RecordItemIndex(4));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtPLZX.PressKeys(SearchPLZ);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtX' at Center.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtXInfo, new RecordItemIndex(5));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtX.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable $SearchOrt with focus on 'KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtX'.", repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtXInfo, new RecordItemIndex(6));
            repo.KiSS.FrmInstitutionenStamm.ContainerSearch.edtOrtX.PressKeys(SearchOrt);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{F3}' with focus on 'KiSS.FrmInstitutionenStamm'.", repo.KiSS.FrmInstitutionenStamm.SelfInfo, new RecordItemIndex(7));
            repo.KiSS.FrmInstitutionenStamm.Self.PressKeys("{F3}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'KiSS.FrmInstitutionenStamm.Row1'.", repo.KiSS.FrmInstitutionenStamm.Row1Info, new RecordItemIndex(8));
            Validate.Exists(repo.KiSS.FrmInstitutionenStamm.Row1Info);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
}
