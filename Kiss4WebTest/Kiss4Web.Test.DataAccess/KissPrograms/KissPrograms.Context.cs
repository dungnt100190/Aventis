//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kiss4Web.Test.DataAccess.KissPrograms
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KissProgramContext : DbContext
    {
        public KissProgramContext()
            : base("name=KissProgramContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spFaDeleteFaFall(Nullable<int> faFallID)
        {
            var faFallIDParameter = faFallID.HasValue ?
                new ObjectParameter("FaFallID", faFallID) :
                new ObjectParameter("FaFallID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFaDeleteFaFall", faFallIDParameter);
        }
    
        public virtual int spFaInsertFaFall(Nullable<int> userID, Nullable<int> baPersonID, Nullable<System.DateTime> datumVon, Nullable<System.DateTime> datumBis)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var baPersonIDParameter = baPersonID.HasValue ?
                new ObjectParameter("BaPersonID", baPersonID) :
                new ObjectParameter("BaPersonID", typeof(int));
    
            var datumVonParameter = datumVon.HasValue ?
                new ObjectParameter("DatumVon", datumVon) :
                new ObjectParameter("DatumVon", typeof(System.DateTime));
    
            var datumBisParameter = datumBis.HasValue ?
                new ObjectParameter("DatumBis", datumBis) :
                new ObjectParameter("DatumBis", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFaInsertFaFall", userIDParameter, baPersonIDParameter, datumVonParameter, datumBisParameter);
        }
    
        public virtual int spFaUpdateFaFall(Nullable<int> faFallID, Nullable<int> userID, Nullable<int> baPersonID, Nullable<System.DateTime> datumVon, Nullable<System.DateTime> datumBis)
        {
            var faFallIDParameter = faFallID.HasValue ?
                new ObjectParameter("FaFallID", faFallID) :
                new ObjectParameter("FaFallID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var baPersonIDParameter = baPersonID.HasValue ?
                new ObjectParameter("BaPersonID", baPersonID) :
                new ObjectParameter("BaPersonID", typeof(int));
    
            var datumVonParameter = datumVon.HasValue ?
                new ObjectParameter("DatumVon", datumVon) :
                new ObjectParameter("DatumVon", typeof(System.DateTime));
    
            var datumBisParameter = datumBis.HasValue ?
                new ObjectParameter("DatumBis", datumBis) :
                new ObjectParameter("DatumBis", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFaUpdateFaFall", faFallIDParameter, userIDParameter, baPersonIDParameter, datumVonParameter, datumBisParameter);
        }
    }
}
