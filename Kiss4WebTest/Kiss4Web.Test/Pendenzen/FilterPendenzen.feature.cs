// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kiss4Web.Test.Pendenzen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Filter Pendenzen", SourceFile="Pendenzen\\FilterPendenzen.feature", SourceLine=0)]
    public partial class FilterPendenzenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FilterPendenzen.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Filter Pendenzen", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 2
 #line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserID",
                        "PermissionGroupID",
                        "GrantPermGroupID",
                        "LogonName",
                        "PasswordHash",
                        "FirstName",
                        "LastName",
                        "ShortName",
                        "IsLocked",
                        "IsUserAdmin",
                        "IsUserBIAGAdmin",
                        "IsMandatsTraeger",
                        "GenderCode",
                        "KeinBDEExport",
                        "MigUserFix",
                        "VerID"});
            table1.AddRow(new string[] {
                        "USR1",
                        "9",
                        "9",
                        "test_admin_1",
                        "kR9Y+JkxEwo=",
                        "CMC",
                        "Global",
                        "cg",
                        "0",
                        "1",
                        "1",
                        "0",
                        "1",
                        "0",
                        "0",
                        "257000"});
            table1.AddRow(new string[] {
                        "USR2",
                        "9",
                        "9",
                        "test_admin_2",
                        "kR9Y+JkxEwo=",
                        "CMC",
                        "Soft",
                        "cs",
                        "0",
                        "1",
                        "1",
                        "0",
                        "1",
                        "0",
                        "0",
                        "258000"});
#line 3
 testRunner.Given("these XUsers", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "BaPersonID",
                        "Name",
                        "Vorname"});
            table2.AddRow(new string[] {
                        "BPS1",
                        "Person test-1",
                        "NT"});
            table2.AddRow(new string[] {
                        "BPS2",
                        "Person test-2",
                        "NULL"});
#line 8
 testRunner.And("these BaPersons", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "FaLeistungID",
                        "BaPersonID",
                        "FaFallID",
                        "ModulID",
                        "UserID",
                        "IkHatUnterstuetzung",
                        "IkIstRentenbezueger",
                        "IkSchuldnerMahnen",
                        "WiederholteSpezifischeErmittlungEAF",
                        "DatumVon"});
            table3.AddRow(new string[] {
                        "LEI1",
                        "BPS1",
                        "BPS1",
                        "2",
                        "USR1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2018-01-10 00:00:00.000"});
            table3.AddRow(new string[] {
                        "LEI2",
                        "BPS1",
                        "BPS2",
                        "7",
                        "USR1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2018-02-10 00:00:00.000"});
            table3.AddRow(new string[] {
                        "LEI3",
                        "BPS2",
                        "BPS1",
                        "7",
                        "USR2",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2018-03-10 00:00:00.000"});
            table3.AddRow(new string[] {
                        "LEI4",
                        "BPS2",
                        "BPS2",
                        "2",
                        "USR2",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2018-04-10 00:00:00.000"});
#line 25
 testRunner.And("these FaLeistungs", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "XTaskID",
                        "BaPersonID",
                        "TaskStatusCode",
                        "TaskTypeCode",
                        "Subject",
                        "SenderID",
                        "ReceiverID",
                        "FaFallID",
                        "FaLeistungID",
                        "CreateDate",
                        "ExpirationDate",
                        "StartDate",
                        "DoneDate",
                        "TaskDescription",
                        "ResponseText",
                        "TaskReceiverCode",
                        "TaskSenderCode"});
            table4.AddRow(new string[] {
                        "TSK1",
                        "BPS1",
                        "1",
                        "4",
                        "Task 20180817-01",
                        "USR2",
                        "USR1",
                        "BPS1",
                        "LEI1",
                        "2018-01-10 00:00:00.000",
                        "2020-01-10 00:00:00.000",
                        "",
                        "NULL",
                        "Task 20180817-1 autotest",
                        "Task 20180817-1 text",
                        "1",
                        ""});
            table4.AddRow(new string[] {
                        "TSK2",
                        "BPS1",
                        "2",
                        "4",
                        "Task 20180817-08",
                        "USR1",
                        "USR1",
                        "BPS1",
                        "LEI3",
                        "2018-01-10 00:00:00.000",
                        "2018-10-10 00:00:00.000",
                        "2018-05-10 00:00:00.000",
                        "NULL",
                        "Task 20180817-8 autotest",
                        "Task 20180817-8 text",
                        "1",
                        "1"});
#line 32
 testRunner.And("these XTasks", ((string)(null)), table4, "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 Check Filter by \'Fällig\' field", new string[] {
                "FilterPendenzen"}, SourceLine=37)]
        public virtual void _01CheckFilterByFalligField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Check Filter by \'Fällig\' field", null, new string[] {
                        "FilterPendenzen"});
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 2
 this.FeatureBackground();
#line 39
 testRunner.Given("logon with username is test_admin_1, password is 123456", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And("go to page Pendenzen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("on grid Pendenzen: click button search in Fällig field, choose option Ist nicht gleich" +
                    " and input 10.01.2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Fällig",
                        "Betreff",
                        "Leistung",
                        "Fallträger",
                        "Fallnummer",
                        "Person",
                        "Ersteller",
                        "Empfänger",
                        "Status",
                        "Erfasst",
                        "Bearbeitung",
                        "Erledigt",
                        "Antwort"});
            table5.AddRow(new string[] {
                        "10.10.2018",
                        "Task 20180817-08",
                        "K",
                        "Person test-2 (BPS1)",
                        "BPS1",
                        "Person test-1, NT",
                        "test_admin_1 - Global, CMC",
                        "test_admin_1 - Global, CMC",
                        "in Bearbeitung",
                        "10.01.2018",
                        "10.05.2018",
                        "NULL",
                        "Task 20180817-8 text"});
#line 42
 testRunner.Then("data of grid Pendenzen should be", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 Check Filter by \'Fällig\' field", new string[] {
                "FilterPendenzen"}, SourceLine=46)]
        public virtual void _02CheckFilterByFalligField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Check Filter by \'Fällig\' field", null, new string[] {
                        "FilterPendenzen"});
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 2
 this.FeatureBackground();
#line 48
 testRunner.Given("logon with username is test_admin_1, password is 123456", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("go to page Pendenzen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("on grid Pendenzen: click button search in Fällig field, choose option Kleiner als and " +
                    "input 10.10.2018", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("grid Pendenzen does not have data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 Check Filter by \'Fällig\' field", new string[] {
                "FilterPendenzen"}, SourceLine=53)]
        public virtual void _03CheckFilterByFalligField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Check Filter by \'Fällig\' field", null, new string[] {
                        "FilterPendenzen"});
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 2
 this.FeatureBackground();
#line 55
 testRunner.Given("logon with username is test_admin_1, password is 123456", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("go to page Pendenzen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.When("on grid Pendenzen: click button search in Fällig field, choose option Größer als and i" +
                    "nput 10.10.2018", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Fällig",
                        "Betreff",
                        "Leistung",
                        "Fallträger",
                        "Fallnummer",
                        "Person",
                        "Ersteller",
                        "Empfänger",
                        "Status",
                        "Erfasst",
                        "Bearbeitung",
                        "Erledigt",
                        "Antwort"});
            table6.AddRow(new string[] {
                        "10.01.2020",
                        "Task 20180817-01",
                        "F",
                        "Person test-1, NT (BPS1)",
                        "BPS1",
                        "Person test-1, NT",
                        "NULL",
                        "test_admin_1 - Global, CMC",
                        "Pendent",
                        "10.01.2018",
                        "NULL",
                        "NULL",
                        "Task 20180817-1 text"});
#line 58
 testRunner.Then("data of grid Pendenzen should be", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04 Check Filter by \'Fällig\' field", new string[] {
                "FilterPendenzen"}, SourceLine=62)]
        public virtual void _04CheckFilterByFalligField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Check Filter by \'Fällig\' field", null, new string[] {
                        "FilterPendenzen"});
#line 63
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 2
 this.FeatureBackground();
#line 64
 testRunner.Given("logon with username is test_admin_1, password is 123456", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.And("go to page Pendenzen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When("on grid Pendenzen: click button search in Fällig field, choose option Ist gleich and i" +
                    "nput 10.10.2018", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Fällig",
                        "Betreff",
                        "Leistung",
                        "Fallträger",
                        "Fallnummer",
                        "Person",
                        "Ersteller",
                        "Empfänger",
                        "Status",
                        "Erfasst",
                        "Bearbeitung",
                        "Erledigt",
                        "Antwort"});
            table7.AddRow(new string[] {
                        "10.10.2018",
                        "Task 20180817-08",
                        "K",
                        "Person test-2 (BPS1)",
                        "BPS1",
                        "Person test-1, NT",
                        "test_admin_1 - Global, CMC",
                        "test_admin_1 - Global, CMC",
                        "in Bearbeitung",
                        "10.01.2018",
                        "10.05.2018",
                        "NULL",
                        "Task 20180817-8 text"});
#line 67
 testRunner.Then("data of grid Pendenzen should be", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
